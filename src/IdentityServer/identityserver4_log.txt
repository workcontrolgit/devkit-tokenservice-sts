2020-08-24 23:42:02.787 -04:00 [INF] Starting host...
2020-08-24 23:42:04.139 -04:00 [INF] Starting IdentityServer4 version 3.1.0.0
2020-08-24 23:42:04.303 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-24 23:42:04.303 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-24 23:42:04.303 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-24 23:42:04.303 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-24 23:42:04.303 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-24 23:42:04.303 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-24 23:42:04.434 -04:00 [DBG] Login Url: /Account/Login
2020-08-24 23:42:04.435 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-24 23:42:04.435 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-24 23:42:04.435 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-24 23:42:04.435 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-24 23:42:04.435 -04:00 [DBG] Error Url: /home/error
2020-08-24 23:42:04.435 -04:00 [DBG] Error Id Parameter: errorId
2020-08-24 23:42:04.444 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-24 23:42:04.448 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-24 23:42:08.806 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-24 23:42:08.807 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-24 23:42:08.815 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-24 23:42:08.820 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-24 23:42:08.821 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-24 23:42:43.158 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-24 23:42:43.159 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-24 23:42:43.159 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-24 23:42:44.025 -04:00 [ERR] Failed executing DbCommand (47ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2020-08-24 23:42:44.077 -04:00 [ERR] An exception occurred while iterating over the results of a query for context type 'IdentityServer.Data.IdentityDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'AspNetUsers'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:d30d795f-7312-4dbc-b4d2-f45de2b8b26e
Error Number:208,State:1,Class:16
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'AspNetUsers'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:d30d795f-7312-4dbc-b4d2-f45de2b8b26e
Error Number:208,State:1,Class:16
2020-08-24 23:42:44.148 -04:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'AspNetUsers'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(String userName)
   at Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(String userName, String password, Boolean isPersistent, Boolean lockoutOnFailure)
   at IdentityServer.AccountController.Login(LoginInputModel model, String button) in C:\apps\oidc\IdentityServer4Demos.NETCore31\04. PART-3 IdentityServer4 ASP.NET Core Identity\src\IdentityServer\Quickstart\Account\AccountController.cs:line 112
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
ClientConnectionId:d30d795f-7312-4dbc-b4d2-f45de2b8b26e
Error Number:208,State:1,Class:16
2020-08-24 23:42:55.248 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-24 23:42:55.249 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-24 23:47:57.660 -04:00 [INF] Starting host...
2020-08-24 23:47:58.512 -04:00 [INF] Starting IdentityServer4 version 3.1.0.0
2020-08-24 23:47:58.592 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-24 23:47:58.592 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-24 23:47:58.592 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-24 23:47:58.592 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-24 23:47:58.592 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-24 23:47:58.592 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-24 23:47:58.721 -04:00 [DBG] Login Url: /Account/Login
2020-08-24 23:47:58.722 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-24 23:47:58.722 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-24 23:47:58.722 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-24 23:47:58.722 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-24 23:47:58.722 -04:00 [DBG] Error Url: /home/error
2020-08-24 23:47:58.722 -04:00 [DBG] Error Id Parameter: errorId
2020-08-24 23:47:58.731 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-24 23:47:58.735 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-24 23:48:01.836 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-24 23:48:01.837 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-24 23:48:01.844 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-24 23:48:01.850 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-24 23:48:01.850 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-24 23:48:12.878 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-24 23:48:12.879 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-24 23:48:12.879 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-24 23:48:13.746 -04:00 [DBG] Augmenting SignInContext
2020-08-24 23:48:13.746 -04:00 [DBG] Adding idp claim with value: local
2020-08-24 23:48:13.746 -04:00 [DBG] Adding auth_time claim with value: 1598327293
2020-08-24 23:48:13.753 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-24 23:48:13.758 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-24 23:48:13.768 -04:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"1","DisplayName":"alice","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"8000008c-0000-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-25T03:48:13.0000000Z","ProcessId":6568,"LocalIpAddress":"::1:44345","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-24 23:48:13.830 -04:00 [DBG] 0 persisted grants found for 1
2020-08-24 23:48:18.545 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-24 23:48:18.561 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-24 23:48:18.562 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-24 23:48:18.562 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-24 23:48:18.562 -04:00 [INF] {"SubjectId":"1","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"800000c6-0008-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-25T03:48:18.0000000Z","ProcessId":6568,"LocalIpAddress":"::1:44345","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-25 07:54:14.775 -04:00 [INF] Starting host...
2020-08-25 07:54:16.688 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-25 07:54:16.904 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-25 07:54:16.904 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-25 07:54:16.904 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-25 07:54:16.904 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-25 07:54:16.904 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-25 07:54:16.904 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-25 07:54:17.132 -04:00 [DBG] Login Url: /Account/Login
2020-08-25 07:54:17.133 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-25 07:54:17.133 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-25 07:54:17.133 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-25 07:54:17.133 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-25 07:54:17.133 -04:00 [DBG] Error Url: /home/error
2020-08-25 07:54:17.133 -04:00 [DBG] Error Id Parameter: errorId
2020-08-25 07:54:19.887 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-25 07:54:23.513 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-25 07:54:25.274 -04:00 [DBG] Augmenting SignInContext
2020-08-25 07:54:25.274 -04:00 [DBG] Adding idp claim with value: local
2020-08-25 07:54:25.274 -04:00 [DBG] Adding auth_time claim with value: 1598356465
2020-08-25 07:54:25.311 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-25 07:54:25.322 -04:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"1","DisplayName":"alice","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000042-0005-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-25T11:54:25.0000000Z","ProcessId":27184,"LocalIpAddress":"::1:44345","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-25 07:54:25.387 -04:00 [DBG] 0 persisted grants found for 1
2020-08-25 07:54:30.661 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-25 07:54:30.678 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-25 07:54:30.679 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-25 07:54:30.679 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-25 07:54:30.679 -04:00 [INF] {"SubjectId":"1","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000067-0006-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-25T11:54:30.0000000Z","ProcessId":27184,"LocalIpAddress":"::1:44345","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-25 08:08:25.415 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-25 08:08:25.418 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-25 08:08:25.418 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-25 08:08:25.419 -04:00 [DBG] Start discovery request
2020-08-25 08:08:26.591 -04:00 [DBG] Found ["openid","profile","web_api"] as all scopes in database
2020-08-25 08:11:02.601 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-25 08:11:02.604 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-25 08:11:02.604 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-25 08:11:02.606 -04:00 [DBG] Start token request.
2020-08-25 08:11:02.607 -04:00 [DBG] Start client validation
2020-08-25 08:11:02.609 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-25 08:11:02.610 -04:00 [DBG] Start parsing for secret in post body
2020-08-25 08:11:02.610 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-25 08:11:02.610 -04:00 [DBG] Secret id found: client
2020-08-25 08:11:02.773 -04:00 [DBG] client found in database: true
2020-08-25 08:11:02.777 -04:00 [DBG] client configuration validation for client client succeeded.
2020-08-25 08:11:02.784 -04:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-08-25 08:11:02.784 -04:00 [DBG] Client validation success
2020-08-25 08:11:02.785 -04:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000069-0006-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-25T12:11:02.0000000Z","ProcessId":27184,"LocalIpAddress":"::1:44345","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-25 08:11:02.787 -04:00 [DBG] Start token request validation
2020-08-25 08:11:02.789 -04:00 [DBG] Start client credentials token request validation
2020-08-25 08:11:02.822 -04:00 [DBG] Found [] identity scopes in database
2020-08-25 08:11:02.855 -04:00 [DBG] Found [] API scopes in database
2020-08-25 08:11:02.856 -04:00 [ERR] Requested scope not allowed: app.api.whatever.read
2020-08-25 08:11:02.860 -04:00 [ERR] {"ClientId":"client","ClientName":null,"GrantType":"client_credentials","Scopes":null,"AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"client","client_secret":"***REDACTED***","grant_type":"client_credentials","scope":"app.api.whatever.read app.api.whatever.write"},"$type":"TokenRequestValidationLog"}
2020-08-25 08:11:02.863 -04:00 [INF] {"ClientId":"client","ClientName":null,"RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":null,"GrantType":"client_credentials","Error":"invalid_scope","ErrorDescription":null,"Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000069-0006-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-25T12:11:02.0000000Z","ProcessId":27184,"LocalIpAddress":"::1:44345","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-25 08:12:15.241 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-25 08:12:15.245 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-25 08:12:15.246 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-25 08:12:15.246 -04:00 [DBG] Start token request.
2020-08-25 08:12:15.246 -04:00 [DBG] Start client validation
2020-08-25 08:12:15.246 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-25 08:12:15.246 -04:00 [DBG] Start parsing for secret in post body
2020-08-25 08:12:15.246 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-25 08:12:15.246 -04:00 [DBG] Secret id found: client
2020-08-25 08:12:15.262 -04:00 [DBG] client found in database: true
2020-08-25 08:12:15.262 -04:00 [DBG] client configuration validation for client client succeeded.
2020-08-25 08:12:15.263 -04:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-08-25 08:12:15.263 -04:00 [DBG] Client validation success
2020-08-25 08:12:15.263 -04:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000006a-0006-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-25T12:12:15.0000000Z","ProcessId":27184,"LocalIpAddress":"::1:44345","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-25 08:12:15.263 -04:00 [DBG] Start token request validation
2020-08-25 08:12:15.263 -04:00 [DBG] Start client credentials token request validation
2020-08-25 08:12:15.267 -04:00 [DBG] Found [] identity scopes in database
2020-08-25 08:12:15.274 -04:00 [DBG] Found ["web_api"] API scopes in database
2020-08-25 08:12:15.279 -04:00 [DBG] Found [] identity scopes in database
2020-08-25 08:12:15.280 -04:00 [DBG] Found ["web_api"] API scopes in database
2020-08-25 08:12:15.282 -04:00 [DBG] client credentials token request validation success
2020-08-25 08:12:15.283 -04:00 [INF] Token request validation success, {"ClientId":"client","ClientName":null,"GrantType":"client_credentials","Scopes":"web_api","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"client","client_secret":"***REDACTED***","grant_type":"client_credentials","scope":"web_api"},"$type":"TokenRequestValidationLog"}
2020-08-25 08:12:15.292 -04:00 [DBG] Getting claims for access token for client: client
2020-08-25 08:12:15.412 -04:00 [INF] {"ClientId":"client","ClientName":null,"RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"web_api","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****ME-g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000006a-0006-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-25T12:12:15.0000000Z","ProcessId":27184,"LocalIpAddress":"::1:44345","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-25 08:12:15.412 -04:00 [DBG] Token request success.
2020-08-25 08:13:50.071 -04:00 [INF] Starting host...
2020-08-25 08:13:50.941 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-25 08:13:51.023 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-25 08:13:51.023 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-25 08:13:51.023 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-25 08:13:51.023 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-25 08:13:51.023 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-25 08:13:51.023 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-25 08:13:51.154 -04:00 [DBG] Login Url: /Account/Login
2020-08-25 08:13:51.155 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-25 08:13:51.155 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-25 08:13:51.155 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-25 08:13:51.155 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-25 08:13:51.155 -04:00 [DBG] Error Url: /home/error
2020-08-25 08:13:51.155 -04:00 [DBG] Error Id Parameter: errorId
2020-08-25 08:13:54.783 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-25 09:13:52.357 -04:00 [INF] Removing 0 grants
2020-08-25 09:13:52.369 -04:00 [INF] Removing 0 device flow codes
2020-08-25 10:13:53.128 -04:00 [INF] Removing 0 grants
2020-08-25 10:13:53.133 -04:00 [INF] Removing 0 device flow codes
2020-08-25 11:13:53.851 -04:00 [INF] Removing 0 grants
2020-08-25 11:13:53.856 -04:00 [INF] Removing 0 device flow codes
2020-08-25 14:35:09.304 -04:00 [INF] Starting host...
2020-08-25 14:35:10.511 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-25 14:35:10.606 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-25 14:35:10.607 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-25 14:35:10.607 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-25 14:35:10.607 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-25 14:35:10.607 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-25 14:35:10.607 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-25 14:35:10.749 -04:00 [DBG] Login Url: /Account/Login
2020-08-25 14:35:10.750 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-25 14:35:10.750 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-25 14:35:10.750 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-25 14:35:10.750 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-25 14:35:10.750 -04:00 [DBG] Error Url: /home/error
2020-08-25 14:35:10.750 -04:00 [DBG] Error Id Parameter: errorId
2020-08-25 14:35:13.008 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-25 15:45:57.430 -04:00 [INF] Starting host...
2020-08-25 15:45:58.403 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-25 15:45:58.488 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-25 15:45:58.489 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-25 15:45:58.489 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-25 15:45:58.489 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-25 15:45:58.489 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-25 15:45:58.489 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-25 15:45:58.632 -04:00 [DBG] Login Url: /Account/Login
2020-08-25 15:45:58.633 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-25 15:45:58.633 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-25 15:45:58.633 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-25 15:45:58.633 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-25 15:45:58.633 -04:00 [DBG] Error Url: /home/error
2020-08-25 15:45:58.633 -04:00 [DBG] Error Id Parameter: errorId
2020-08-25 15:46:02.226 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-25 15:46:02.241 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-25 15:46:02.242 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-25 15:46:02.244 -04:00 [DBG] Start token request.
2020-08-25 15:46:02.245 -04:00 [DBG] Start client validation
2020-08-25 15:46:02.248 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-25 15:46:02.249 -04:00 [DBG] Start parsing for secret in post body
2020-08-25 15:46:02.255 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-25 15:46:02.255 -04:00 [DBG] Secret id found: client
2020-08-25 15:46:04.273 -04:00 [DBG] client found in database: true
2020-08-25 15:46:04.279 -04:00 [DBG] client configuration validation for client client succeeded.
2020-08-25 15:46:04.284 -04:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-08-25 15:46:04.284 -04:00 [DBG] Client validation success
2020-08-25 15:46:04.291 -04:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000039-0004-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-25T19:46:04.0000000Z","ProcessId":400,"LocalIpAddress":"::1:44345","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-25 15:46:04.302 -04:00 [DBG] Start token request validation
2020-08-25 15:46:04.304 -04:00 [DBG] Start client credentials token request validation
2020-08-25 15:46:04.369 -04:00 [DBG] Found [] identity scopes in database
2020-08-25 15:46:04.446 -04:00 [DBG] Found ["web_api"] API scopes in database
2020-08-25 15:46:04.456 -04:00 [DBG] Found [] identity scopes in database
2020-08-25 15:46:04.458 -04:00 [DBG] Found ["web_api"] API scopes in database
2020-08-25 15:46:04.460 -04:00 [DBG] client credentials token request validation success
2020-08-25 15:46:04.465 -04:00 [INF] Token request validation success, {"ClientId":"client","ClientName":null,"GrantType":"client_credentials","Scopes":"web_api","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"client","client_secret":"***REDACTED***","grant_type":"client_credentials","scope":"web_api"},"$type":"TokenRequestValidationLog"}
2020-08-25 15:46:04.477 -04:00 [DBG] Getting claims for access token for client: client
2020-08-25 15:46:04.548 -04:00 [INF] {"ClientId":"client","ClientName":null,"RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"web_api","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****kwJg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000039-0004-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-25T19:46:04.0000000Z","ProcessId":400,"LocalIpAddress":"::1:44345","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-25 15:46:04.548 -04:00 [DBG] Token request success.
2020-08-25 15:46:06.858 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-25 15:46:06.863 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-25 15:46:06.863 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-25 15:46:06.864 -04:00 [DBG] Start token request.
2020-08-25 15:46:06.864 -04:00 [DBG] Start client validation
2020-08-25 15:46:06.864 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-25 15:46:06.864 -04:00 [DBG] Start parsing for secret in post body
2020-08-25 15:46:06.864 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-25 15:46:06.864 -04:00 [DBG] Secret id found: client
2020-08-25 15:46:06.894 -04:00 [DBG] client found in database: true
2020-08-25 15:46:06.895 -04:00 [DBG] client configuration validation for client client succeeded.
2020-08-25 15:46:06.895 -04:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-08-25 15:46:06.895 -04:00 [DBG] Client validation success
2020-08-25 15:46:06.895 -04:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000003a-0004-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-25T19:46:06.0000000Z","ProcessId":400,"LocalIpAddress":"::1:44345","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-25 15:46:06.895 -04:00 [DBG] Start token request validation
2020-08-25 15:46:06.895 -04:00 [DBG] Start client credentials token request validation
2020-08-25 15:46:06.898 -04:00 [DBG] Found [] identity scopes in database
2020-08-25 15:46:06.899 -04:00 [DBG] Found ["web_api"] API scopes in database
2020-08-25 15:46:06.901 -04:00 [DBG] Found [] identity scopes in database
2020-08-25 15:46:06.902 -04:00 [DBG] Found ["web_api"] API scopes in database
2020-08-25 15:46:06.902 -04:00 [DBG] client credentials token request validation success
2020-08-25 15:46:06.902 -04:00 [INF] Token request validation success, {"ClientId":"client","ClientName":null,"GrantType":"client_credentials","Scopes":"web_api","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"client","client_secret":"***REDACTED***","grant_type":"client_credentials","scope":"web_api"},"$type":"TokenRequestValidationLog"}
2020-08-25 15:46:06.902 -04:00 [DBG] Getting claims for access token for client: client
2020-08-25 15:46:06.904 -04:00 [INF] {"ClientId":"client","ClientName":null,"RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"web_api","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****CuYA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000003a-0004-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-25T19:46:06.0000000Z","ProcessId":400,"LocalIpAddress":"::1:44345","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-25 15:46:06.904 -04:00 [DBG] Token request success.
2020-08-25 16:50:36.433 -04:00 [INF] Starting host...
2020-08-25 16:50:37.405 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-25 16:50:37.493 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-25 16:50:37.493 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-25 16:50:37.493 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-25 16:50:37.493 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-25 16:50:37.493 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-25 16:50:37.493 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-25 16:50:37.636 -04:00 [DBG] Login Url: /Account/Login
2020-08-25 16:50:37.636 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-25 16:50:37.636 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-25 16:50:37.637 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-25 16:50:37.637 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-25 16:50:37.637 -04:00 [DBG] Error Url: /home/error
2020-08-25 16:50:37.637 -04:00 [DBG] Error Id Parameter: errorId
2020-08-25 16:50:51.262 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-25 16:50:51.274 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-25 16:50:51.274 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-25 16:50:51.275 -04:00 [DBG] Start discovery request
2020-08-25 16:50:53.112 -04:00 [DBG] Found ["openid","profile","web_api"] as all scopes in database
2020-08-25 16:50:57.580 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-25 16:50:57.584 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-25 16:50:57.584 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-25 16:50:57.586 -04:00 [DBG] Start token request.
2020-08-25 16:50:57.587 -04:00 [DBG] Start client validation
2020-08-25 16:50:57.589 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-25 16:50:57.590 -04:00 [DBG] Start parsing for secret in post body
2020-08-25 16:50:57.596 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-25 16:50:57.596 -04:00 [DBG] Secret id found: client
2020-08-25 16:50:57.822 -04:00 [DBG] client found in database: true
2020-08-25 16:50:57.827 -04:00 [DBG] client configuration validation for client client succeeded.
2020-08-25 16:50:57.832 -04:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-08-25 16:50:57.832 -04:00 [DBG] Client validation success
2020-08-25 16:50:57.839 -04:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000006f-000b-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-25T20:50:57.0000000Z","ProcessId":17904,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-25 16:50:57.843 -04:00 [DBG] Start token request validation
2020-08-25 16:50:57.845 -04:00 [DBG] Start client credentials token request validation
2020-08-25 16:50:57.885 -04:00 [DBG] Found [] identity scopes in database
2020-08-25 16:50:57.918 -04:00 [DBG] Found ["web_api"] API scopes in database
2020-08-25 16:50:57.926 -04:00 [DBG] Found [] identity scopes in database
2020-08-25 16:50:57.927 -04:00 [DBG] Found ["web_api"] API scopes in database
2020-08-25 16:50:57.929 -04:00 [DBG] client credentials token request validation success
2020-08-25 16:50:57.934 -04:00 [INF] Token request validation success, {"ClientId":"client","ClientName":null,"GrantType":"client_credentials","Scopes":"web_api","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"client","client_secret":"***REDACTED***","grant_type":"client_credentials","scope":"web_api"},"$type":"TokenRequestValidationLog"}
2020-08-25 16:50:57.944 -04:00 [DBG] Getting claims for access token for client: client
2020-08-25 16:50:57.989 -04:00 [INF] {"ClientId":"client","ClientName":null,"RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"web_api","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****iYxA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000006f-000b-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-25T20:50:57.0000000Z","ProcessId":17904,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-25 16:50:57.989 -04:00 [DBG] Token request success.
2020-08-25 22:09:18.208 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-25 22:09:27.135 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-25 22:20:46.969 -04:00 [INF] Starting host...
2020-08-25 22:20:48.275 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-25 22:20:48.384 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-25 22:20:48.384 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-25 22:20:48.384 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-25 22:20:48.384 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-25 22:20:48.384 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-25 22:20:48.384 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-25 22:20:48.661 -04:00 [DBG] Login Url: /Account/Login
2020-08-25 22:20:48.662 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-25 22:20:48.662 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-25 22:20:48.662 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-25 22:20:48.662 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-25 22:20:48.662 -04:00 [DBG] Error Url: /home/error
2020-08-25 22:20:48.662 -04:00 [DBG] Error Id Parameter: errorId
2020-08-25 22:20:51.075 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-25 22:22:07.440 -04:00 [INF] Starting host...
2020-08-25 22:22:08.372 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-25 22:22:08.457 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-25 22:22:08.458 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-25 22:22:08.458 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-25 22:22:08.458 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-25 22:22:08.458 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-25 22:22:08.458 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-25 22:22:08.635 -04:00 [DBG] Login Url: /Account/Login
2020-08-25 22:22:08.636 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-25 22:22:08.636 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-25 22:22:08.636 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-25 22:22:08.636 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-25 22:22:08.636 -04:00 [DBG] Error Url: /home/error
2020-08-25 22:22:08.636 -04:00 [DBG] Error Id Parameter: errorId
2020-08-25 22:22:11.662 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-25 22:22:13.491 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-25 22:22:13.768 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-25 22:22:13.881 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-08-25 22:22:15.185 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"94f73c8d-121f-4932-9ccc-f8d7e726c231","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000a0-0000-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-26T02:22:15.0000000Z","ProcessId":18652,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-25 22:22:15.246 -04:00 [DBG] Augmenting SignInContext
2020-08-25 22:22:15.247 -04:00 [DBG] Adding amr claim with value: external
2020-08-25 22:22:15.249 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-25 22:22:15.250 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-25 22:22:15.308 -04:00 [DBG] 0 persisted grants found for 94f73c8d-121f-4932-9ccc-f8d7e726c231
2020-08-25 22:22:19.999 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-25 22:22:20.015 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-25 22:22:20.015 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-25 22:22:20.015 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-25 22:22:20.016 -04:00 [INF] {"SubjectId":"94f73c8d-121f-4932-9ccc-f8d7e726c231","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000076-0006-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-26T02:22:20.0000000Z","ProcessId":18652,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-25 22:22:23.051 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-25 22:22:45.233 -04:00 [INF] Starting host...
2020-08-25 22:22:46.118 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-25 22:22:46.197 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-25 22:22:46.197 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-25 22:22:46.197 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-25 22:22:46.197 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-25 22:22:46.197 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-25 22:22:46.197 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-25 22:22:46.371 -04:00 [DBG] Login Url: /Account/Login
2020-08-25 22:22:46.371 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-25 22:22:46.371 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-25 22:22:46.371 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-25 22:22:46.372 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-25 22:22:46.372 -04:00 [DBG] Error Url: /home/error
2020-08-25 22:22:46.372 -04:00 [DBG] Error Id Parameter: errorId
2020-08-25 22:22:49.516 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-25 22:22:51.314 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-25 22:22:51.503 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-25 22:22:51.604 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-08-25 22:22:52.481 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"94f73c8d-121f-4932-9ccc-f8d7e726c231","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000af-000a-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-26T02:22:52.0000000Z","ProcessId":16388,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-25 22:22:52.496 -04:00 [DBG] Augmenting SignInContext
2020-08-25 22:22:52.497 -04:00 [DBG] Adding amr claim with value: external
2020-08-25 22:22:52.499 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-25 22:22:52.501 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-25 22:22:52.551 -04:00 [DBG] 0 persisted grants found for 94f73c8d-121f-4932-9ccc-f8d7e726c231
2020-08-25 22:23:21.366 -04:00 [INF] Starting host...
2020-08-25 22:23:22.217 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-25 22:23:22.296 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-25 22:23:22.296 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-25 22:23:22.296 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-25 22:23:22.296 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-25 22:23:22.296 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-25 22:23:22.297 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-25 22:23:22.470 -04:00 [DBG] Login Url: /Account/Login
2020-08-25 22:23:22.471 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-25 22:23:22.471 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-25 22:23:22.471 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-25 22:23:22.471 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-25 22:23:22.471 -04:00 [DBG] Error Url: /home/error
2020-08-25 22:23:22.471 -04:00 [DBG] Error Id Parameter: errorId
2020-08-25 22:23:24.846 -04:00 [DBG] 0 persisted grants found for 94f73c8d-121f-4932-9ccc-f8d7e726c231
2020-08-25 22:23:29.281 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-25 22:23:29.309 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-25 22:23:29.309 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-25 22:23:29.309 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-25 22:23:29.315 -04:00 [INF] {"SubjectId":"94f73c8d-121f-4932-9ccc-f8d7e726c231","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"800000b1-000a-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-26T02:23:29.0000000Z","ProcessId":19856,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-25 22:23:32.653 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-25 22:23:33.875 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-25 22:23:34.097 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-25 22:23:34.186 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-08-25 22:23:34.460 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"94f73c8d-121f-4932-9ccc-f8d7e726c231","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000a7-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-26T02:23:34.0000000Z","ProcessId":19856,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-25 22:23:34.464 -04:00 [DBG] Augmenting SignInContext
2020-08-25 22:23:34.464 -04:00 [DBG] Adding amr claim with value: external
2020-08-25 22:23:34.465 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-25 22:23:34.466 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-25 22:23:34.478 -04:00 [DBG] 0 persisted grants found for 94f73c8d-121f-4932-9ccc-f8d7e726c231
2020-08-25 22:24:16.136 -04:00 [INF] Starting host...
2020-08-25 22:24:17.021 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-25 22:24:17.107 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-25 22:24:17.107 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-25 22:24:17.107 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-25 22:24:17.107 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-25 22:24:17.108 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-25 22:24:17.108 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-25 22:24:17.291 -04:00 [DBG] Login Url: /Account/Login
2020-08-25 22:24:17.292 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-25 22:24:17.292 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-25 22:24:17.292 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-25 22:24:17.292 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-25 22:24:17.292 -04:00 [DBG] Error Url: /home/error
2020-08-25 22:24:17.292 -04:00 [DBG] Error Id Parameter: errorId
2020-08-25 22:24:24.034 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-25 22:24:24.073 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-25 22:24:24.073 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-25 22:24:24.074 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-25 22:24:24.084 -04:00 [INF] {"SubjectId":"94f73c8d-121f-4932-9ccc-f8d7e726c231","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000082-0006-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-26T02:24:24.0000000Z","ProcessId":20992,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-25 22:24:27.573 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-25 22:24:29.441 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-25 22:24:29.671 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-25 22:24:29.758 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-08-25 22:24:30.626 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"94f73c8d-121f-4932-9ccc-f8d7e726c231","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000a9-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-26T02:24:30.0000000Z","ProcessId":20992,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-25 22:24:30.630 -04:00 [DBG] Augmenting SignInContext
2020-08-25 22:24:30.630 -04:00 [DBG] Adding amr claim with value: external
2020-08-25 22:24:30.631 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-25 22:24:30.631 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-25 22:24:30.677 -04:00 [DBG] 0 persisted grants found for 94f73c8d-121f-4932-9ccc-f8d7e726c231
2020-08-25 22:24:43.676 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-25 22:24:43.678 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-25 22:24:43.678 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-25 22:24:43.679 -04:00 [DBG] Start discovery request
2020-08-25 22:24:44.103 -04:00 [DBG] Found ["openid","profile","web_api"] as all scopes in database
2020-08-25 22:24:48.026 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-25 22:24:48.030 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-25 22:24:48.030 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-25 22:24:48.032 -04:00 [DBG] Start token request.
2020-08-25 22:24:48.033 -04:00 [DBG] Start client validation
2020-08-25 22:24:48.036 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-25 22:24:48.036 -04:00 [DBG] Start parsing for secret in post body
2020-08-25 22:24:48.037 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-25 22:24:48.037 -04:00 [DBG] Secret id found: client
2020-08-25 22:24:48.205 -04:00 [DBG] client found in database: true
2020-08-25 22:24:48.209 -04:00 [DBG] client configuration validation for client client succeeded.
2020-08-25 22:24:48.215 -04:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-08-25 22:24:48.215 -04:00 [DBG] Client validation success
2020-08-25 22:24:48.216 -04:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"800000ac-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-26T02:24:48.0000000Z","ProcessId":20992,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-25 22:24:48.218 -04:00 [DBG] Start token request validation
2020-08-25 22:24:48.220 -04:00 [DBG] Start client credentials token request validation
2020-08-25 22:24:48.254 -04:00 [DBG] Found [] identity scopes in database
2020-08-25 22:24:48.289 -04:00 [DBG] Found ["web_api"] API scopes in database
2020-08-25 22:24:48.297 -04:00 [DBG] Found [] identity scopes in database
2020-08-25 22:24:48.298 -04:00 [DBG] Found ["web_api"] API scopes in database
2020-08-25 22:24:48.300 -04:00 [DBG] client credentials token request validation success
2020-08-25 22:24:48.305 -04:00 [INF] Token request validation success, {"ClientId":"client","ClientName":null,"GrantType":"client_credentials","Scopes":"web_api","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"client","client_secret":"***REDACTED***","grant_type":"client_credentials","scope":"web_api"},"$type":"TokenRequestValidationLog"}
2020-08-25 22:24:48.317 -04:00 [DBG] Getting claims for access token for client: client
2020-08-25 22:24:48.335 -04:00 [INF] {"ClientId":"client","ClientName":null,"RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"web_api","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****fVvg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000ac-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-26T02:24:48.0000000Z","ProcessId":20992,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-25 22:24:48.335 -04:00 [DBG] Token request success.
2020-08-25 22:41:02.419 -04:00 [INF] Starting host...
2020-08-25 22:41:03.398 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-25 22:41:03.484 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-25 22:41:03.484 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-25 22:41:03.484 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-25 22:41:03.484 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-25 22:41:03.484 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-25 22:41:03.484 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-25 22:41:03.665 -04:00 [DBG] Login Url: /Account/Login
2020-08-25 22:41:03.666 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-25 22:41:03.666 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-25 22:41:03.666 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-25 22:41:03.666 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-25 22:41:03.666 -04:00 [DBG] Error Url: /home/error
2020-08-25 22:41:03.666 -04:00 [DBG] Error Id Parameter: errorId
2020-08-25 22:41:06.654 -04:00 [DBG] 0 persisted grants found for 94f73c8d-121f-4932-9ccc-f8d7e726c231
2020-08-25 22:41:11.190 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-25 22:41:11.221 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-25 22:41:11.223 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-25 22:41:11.223 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-25 22:41:11.229 -04:00 [INF] {"SubjectId":"94f73c8d-121f-4932-9ccc-f8d7e726c231","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000073-000b-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-26T02:41:11.0000000Z","ProcessId":9240,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-25 23:11:47.238 -04:00 [INF] Starting host...
2020-08-25 23:11:48.156 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-25 23:11:48.237 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-25 23:11:48.237 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-25 23:11:48.238 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-25 23:11:48.238 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-25 23:11:48.238 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-25 23:11:48.238 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-25 23:11:48.423 -04:00 [DBG] Login Url: /Account/Login
2020-08-25 23:11:48.424 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-25 23:11:48.424 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-25 23:11:48.424 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-25 23:11:48.424 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-25 23:11:48.424 -04:00 [DBG] Error Url: /home/error
2020-08-25 23:11:48.424 -04:00 [DBG] Error Id Parameter: errorId
2020-08-25 23:13:03.705 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-25 23:13:03.718 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-25 23:13:03.718 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-25 23:13:03.719 -04:00 [DBG] Start discovery request
2020-08-25 23:13:04.768 -04:00 [DBG] Found ["openid","profile","web_api"] as all scopes in database
2020-08-25 23:13:04.849 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-25 23:13:04.853 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-25 23:13:04.853 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-25 23:13:04.854 -04:00 [DBG] Start key discovery request
2020-08-25 23:22:18.720 -04:00 [INF] Starting host...
2020-08-25 23:22:19.630 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-25 23:22:19.714 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-25 23:22:19.715 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-25 23:22:19.715 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-25 23:22:19.715 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-25 23:22:19.715 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-25 23:22:19.715 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-25 23:22:19.896 -04:00 [DBG] Login Url: /Account/Login
2020-08-25 23:22:19.897 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-25 23:22:19.897 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-25 23:22:19.897 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-25 23:22:19.897 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-25 23:22:19.897 -04:00 [DBG] Error Url: /home/error
2020-08-25 23:22:19.897 -04:00 [DBG] Error Id Parameter: errorId
2020-08-25 23:22:25.359 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-25 23:22:25.373 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-25 23:22:25.373 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-25 23:22:25.374 -04:00 [DBG] Start discovery request
2020-08-25 23:22:26.431 -04:00 [DBG] Found ["openid","profile","web_api"] as all scopes in database
2020-08-25 23:22:26.511 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-25 23:22:26.511 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-25 23:22:26.511 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-25 23:22:26.512 -04:00 [DBG] Start key discovery request
2020-08-25 23:31:05.131 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-25 23:31:05.132 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-25 23:31:05.133 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-25 23:31:05.134 -04:00 [DBG] Start discovery request
2020-08-25 23:31:05.175 -04:00 [DBG] Found ["openid","profile","web_api"] as all scopes in database
2020-08-25 23:31:05.203 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-25 23:31:05.204 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-25 23:31:05.204 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-25 23:31:05.204 -04:00 [DBG] Start key discovery request
2020-08-25 23:31:21.321 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-25 23:31:21.324 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-25 23:31:21.324 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-25 23:31:21.326 -04:00 [DBG] Start token request.
2020-08-25 23:31:21.327 -04:00 [DBG] Start client validation
2020-08-25 23:31:21.330 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-25 23:31:21.331 -04:00 [DBG] Start parsing for secret in post body
2020-08-25 23:31:21.336 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-25 23:31:21.336 -04:00 [DBG] Secret id found: client
2020-08-25 23:31:21.538 -04:00 [DBG] client found in database: true
2020-08-25 23:31:21.542 -04:00 [DBG] client configuration validation for client client succeeded.
2020-08-25 23:31:21.548 -04:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-08-25 23:31:21.548 -04:00 [DBG] Client validation success
2020-08-25 23:31:21.554 -04:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000110-0006-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-26T03:31:21.0000000Z","ProcessId":30368,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-25 23:31:21.558 -04:00 [DBG] Start token request validation
2020-08-25 23:31:21.560 -04:00 [DBG] Start client credentials token request validation
2020-08-25 23:31:21.598 -04:00 [DBG] Found [] identity scopes in database
2020-08-25 23:31:21.631 -04:00 [DBG] Found ["web_api"] API scopes in database
2020-08-25 23:31:21.637 -04:00 [DBG] Found [] identity scopes in database
2020-08-25 23:31:21.638 -04:00 [DBG] Found ["web_api"] API scopes in database
2020-08-25 23:31:21.640 -04:00 [DBG] client credentials token request validation success
2020-08-25 23:31:21.644 -04:00 [INF] Token request validation success, {"ClientId":"client","ClientName":null,"GrantType":"client_credentials","Scopes":"web_api","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"client","client_secret":"***REDACTED***","grant_type":"client_credentials","scope":"web_api"},"$type":"TokenRequestValidationLog"}
2020-08-25 23:31:21.655 -04:00 [DBG] Getting claims for access token for client: client
2020-08-25 23:31:21.690 -04:00 [INF] {"ClientId":"client","ClientName":null,"RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"web_api","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****cS_A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000110-0006-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-26T03:31:21.0000000Z","ProcessId":30368,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-25 23:31:21.690 -04:00 [DBG] Token request success.
2020-08-25 23:37:26.508 -04:00 [INF] Starting host...
2020-08-25 23:37:27.456 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-25 23:37:27.543 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-25 23:37:27.543 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-25 23:37:27.543 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-25 23:37:27.543 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-25 23:37:27.543 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-25 23:37:27.543 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-25 23:37:27.677 -04:00 [DBG] Login Url: /Account/Login
2020-08-25 23:37:27.678 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-25 23:37:27.678 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-25 23:37:27.678 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-25 23:37:27.678 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-25 23:37:27.678 -04:00 [DBG] Error Url: /home/error
2020-08-25 23:37:27.678 -04:00 [DBG] Error Id Parameter: errorId
2020-08-25 23:37:31.259 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-25 23:40:41.067 -04:00 [INF] Starting host...
2020-08-25 23:40:41.419 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-25 23:40:41.486 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-25 23:40:41.486 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-25 23:40:41.486 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-25 23:40:41.486 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-25 23:40:41.486 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-25 23:40:41.486 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-25 23:40:41.591 -04:00 [DBG] Login Url: /Account/Login
2020-08-25 23:40:41.592 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-25 23:40:41.592 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-25 23:40:41.592 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-25 23:40:41.592 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-25 23:40:41.592 -04:00 [DBG] Error Url: /home/error
2020-08-25 23:40:41.592 -04:00 [DBG] Error Id Parameter: errorId
2020-08-25 23:40:44.391 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-25 23:40:47.511 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-25 23:40:48.126 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-25 23:40:48.216 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-08-25 23:40:49.083 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"94f73c8d-121f-4932-9ccc-f8d7e726c231","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000a2-0006-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-26T03:40:49.0000000Z","ProcessId":18628,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-25 23:40:49.101 -04:00 [DBG] Augmenting SignInContext
2020-08-25 23:40:49.102 -04:00 [DBG] Adding amr claim with value: external
2020-08-25 23:40:49.104 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-25 23:40:49.106 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-25 23:40:49.154 -04:00 [DBG] 0 persisted grants found for 94f73c8d-121f-4932-9ccc-f8d7e726c231
2020-08-25 23:40:55.548 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-25 23:40:55.563 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-25 23:40:55.563 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-25 23:40:55.564 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-25 23:40:55.564 -04:00 [INF] {"SubjectId":"94f73c8d-121f-4932-9ccc-f8d7e726c231","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"800000d0-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-26T03:40:55.0000000Z","ProcessId":18628,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-25 23:44:54.993 -04:00 [INF] Starting host...
2020-08-25 23:44:56.008 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-25 23:44:56.092 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-25 23:44:56.092 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-25 23:44:56.092 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-25 23:44:56.092 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-25 23:44:56.092 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-25 23:44:56.092 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-25 23:44:56.285 -04:00 [DBG] Login Url: /Account/Login
2020-08-25 23:44:56.285 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-25 23:44:56.285 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-25 23:44:56.286 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-25 23:44:56.286 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-25 23:44:56.286 -04:00 [DBG] Error Url: /home/error
2020-08-25 23:44:56.286 -04:00 [DBG] Error Id Parameter: errorId
2020-08-25 23:44:59.283 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-25 23:45:01.139 -04:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
 ---> System.IO.IOException: IDX20807: Unable to retrieve document from: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. HttpResponseMessage: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]', HttpResponseMessage.Content: '[PII is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
   at Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(String address, CancellationToken cancel)
   at Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfigurationRetriever.GetAsync(String address, IDocumentRetriever retriever, CancellationToken cancel)
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   --- End of inner exception stack trace ---
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleChallengeAsyncInternal(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectHandler.HandleChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Mvc.ChallengeResult.ExecuteResultAsync(ActionContext context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|29_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeResultFilters>g__Awaited|27_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-08-25 23:45:34.840 -04:00 [INF] Starting host...
2020-08-25 23:45:35.733 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-25 23:45:35.819 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-25 23:45:35.819 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-25 23:45:35.819 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-25 23:45:35.819 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-25 23:45:35.819 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-25 23:45:35.819 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-25 23:45:36.007 -04:00 [DBG] Login Url: /Account/Login
2020-08-25 23:45:36.008 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-25 23:45:36.008 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-25 23:45:36.008 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-25 23:45:36.008 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-25 23:45:36.008 -04:00 [DBG] Error Url: /home/error
2020-08-25 23:45:36.008 -04:00 [DBG] Error Id Parameter: errorId
2020-08-25 23:45:38.096 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-25 23:45:39.870 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-25 23:45:40.341 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-25 23:45:40.445 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-08-25 23:45:41.332 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"94f73c8d-121f-4932-9ccc-f8d7e726c231","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000bc-0004-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-26T03:45:41.0000000Z","ProcessId":25892,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-25 23:45:41.351 -04:00 [DBG] Augmenting SignInContext
2020-08-25 23:45:41.352 -04:00 [DBG] Adding amr claim with value: external
2020-08-25 23:45:41.354 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-25 23:45:41.356 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-25 23:45:41.404 -04:00 [DBG] 0 persisted grants found for 94f73c8d-121f-4932-9ccc-f8d7e726c231
2020-08-25 23:45:45.461 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-25 23:45:45.476 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-25 23:45:45.477 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-25 23:45:45.477 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-25 23:45:45.477 -04:00 [INF] {"SubjectId":"94f73c8d-121f-4932-9ccc-f8d7e726c231","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"800000c0-0004-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-26T03:45:45.0000000Z","ProcessId":25892,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-25 23:46:20.733 -04:00 [INF] Starting host...
2020-08-25 23:46:21.663 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-25 23:46:21.751 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-25 23:46:21.751 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-25 23:46:21.751 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-25 23:46:21.751 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-25 23:46:21.751 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-25 23:46:21.752 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-25 23:46:21.929 -04:00 [DBG] Login Url: /Account/Login
2020-08-25 23:46:21.930 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-25 23:46:21.930 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-25 23:46:21.930 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-25 23:46:21.930 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-25 23:46:21.930 -04:00 [DBG] Error Url: /home/error
2020-08-25 23:46:21.930 -04:00 [DBG] Error Id Parameter: errorId
2020-08-25 23:46:23.928 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-25 23:46:25.558 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-25 23:46:25.884 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-25 23:46:25.980 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-08-25 23:46:26.882 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"94f73c8d-121f-4932-9ccc-f8d7e726c231","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000fe-0008-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-26T03:46:26.0000000Z","ProcessId":14184,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-25 23:46:26.899 -04:00 [DBG] Augmenting SignInContext
2020-08-25 23:46:26.899 -04:00 [DBG] Adding amr claim with value: external
2020-08-25 23:46:26.901 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-25 23:46:26.903 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-25 23:46:26.952 -04:00 [DBG] 0 persisted grants found for 94f73c8d-121f-4932-9ccc-f8d7e726c231
2020-08-25 23:47:38.520 -04:00 [INF] Starting host...
2020-08-25 23:47:39.292 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-25 23:47:39.379 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-25 23:47:39.379 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-25 23:47:39.379 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-25 23:47:39.379 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-25 23:47:39.379 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-25 23:47:39.379 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-25 23:47:39.564 -04:00 [DBG] Login Url: /Account/Login
2020-08-25 23:47:39.565 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-25 23:47:39.565 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-25 23:47:39.565 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-25 23:47:39.565 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-25 23:47:39.565 -04:00 [DBG] Error Url: /home/error
2020-08-25 23:47:39.565 -04:00 [DBG] Error Id Parameter: errorId
2020-08-25 23:47:43.131 -04:00 [DBG] 0 persisted grants found for 94f73c8d-121f-4932-9ccc-f8d7e726c231
2020-08-25 23:47:47.888 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-25 23:47:47.915 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-25 23:47:47.917 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-25 23:47:47.917 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-25 23:47:47.923 -04:00 [INF] {"SubjectId":"94f73c8d-121f-4932-9ccc-f8d7e726c231","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"800000d7-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-26T03:47:47.0000000Z","ProcessId":25800,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-25 23:47:51.629 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-25 23:47:52.987 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-25 23:47:53.303 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-25 23:47:53.397 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-08-25 23:47:53.695 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"94f73c8d-121f-4932-9ccc-f8d7e726c231","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000058-000a-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-26T03:47:53.0000000Z","ProcessId":25800,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-25 23:47:53.699 -04:00 [DBG] Augmenting SignInContext
2020-08-25 23:47:53.700 -04:00 [DBG] Adding amr claim with value: external
2020-08-25 23:47:53.701 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-25 23:47:53.701 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-25 23:47:53.714 -04:00 [DBG] 0 persisted grants found for 94f73c8d-121f-4932-9ccc-f8d7e726c231
2020-08-25 23:49:05.219 -04:00 [INF] Starting host...
2020-08-25 23:49:06.106 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-25 23:49:06.187 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-25 23:49:06.187 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-25 23:49:06.187 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-25 23:49:06.187 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-25 23:49:06.187 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-25 23:49:06.187 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-25 23:49:06.364 -04:00 [DBG] Login Url: /Account/Login
2020-08-25 23:49:06.365 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-25 23:49:06.365 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-25 23:49:06.365 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-25 23:49:06.365 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-25 23:49:06.365 -04:00 [DBG] Error Url: /home/error
2020-08-25 23:49:06.365 -04:00 [DBG] Error Id Parameter: errorId
2020-08-25 23:49:10.049 -04:00 [DBG] 0 persisted grants found for 94f73c8d-121f-4932-9ccc-f8d7e726c231
2020-08-25 23:49:14.696 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-25 23:49:14.725 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-25 23:49:14.726 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-25 23:49:14.726 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-25 23:49:14.733 -04:00 [INF] {"SubjectId":"94f73c8d-121f-4932-9ccc-f8d7e726c231","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"800000a5-0000-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-26T03:49:14.0000000Z","ProcessId":16892,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-25 23:49:19.324 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-25 23:49:20.535 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-25 23:49:20.822 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-25 23:49:20.921 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-08-25 23:49:21.202 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"94f73c8d-121f-4932-9ccc-f8d7e726c231","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000015-000a-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-26T03:49:21.0000000Z","ProcessId":16892,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-25 23:49:21.207 -04:00 [DBG] Augmenting SignInContext
2020-08-25 23:49:21.207 -04:00 [DBG] Adding amr claim with value: external
2020-08-25 23:49:21.209 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-25 23:49:21.209 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-25 23:49:21.222 -04:00 [DBG] 0 persisted grants found for 94f73c8d-121f-4932-9ccc-f8d7e726c231
2020-08-25 23:49:47.870 -04:00 [INF] Starting host...
2020-08-25 23:49:48.765 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-25 23:49:48.848 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-25 23:49:48.848 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-25 23:49:48.848 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-25 23:49:48.849 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-25 23:49:48.849 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-25 23:49:48.849 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-25 23:49:49.023 -04:00 [DBG] Login Url: /Account/Login
2020-08-25 23:49:49.024 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-25 23:49:49.024 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-25 23:49:49.024 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-25 23:49:49.024 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-25 23:49:49.024 -04:00 [DBG] Error Url: /home/error
2020-08-25 23:49:49.024 -04:00 [DBG] Error Id Parameter: errorId
2020-08-25 23:49:51.664 -04:00 [DBG] 0 persisted grants found for 94f73c8d-121f-4932-9ccc-f8d7e726c231
2020-08-26 07:13:13.456 -04:00 [INF] Starting host...
2020-08-26 07:13:14.491 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-26 07:13:14.577 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-26 07:13:14.577 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-26 07:13:14.577 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-26 07:13:14.577 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-26 07:13:14.577 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-26 07:13:14.577 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-26 07:13:14.845 -04:00 [DBG] Login Url: /Account/Login
2020-08-26 07:13:14.846 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-26 07:13:14.846 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-26 07:13:14.846 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-26 07:13:14.846 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-26 07:13:14.846 -04:00 [DBG] Error Url: /home/error
2020-08-26 07:13:14.846 -04:00 [DBG] Error Id Parameter: errorId
2020-08-26 07:13:17.418 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-26 07:13:26.435 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-26 07:13:28.026 -04:00 [WRN] Invalid password for user 1.
2020-08-26 07:13:28.027 -04:00 [WRN] User 1 failed to provide the correct password.
2020-08-26 07:13:28.142 -04:00 [INF] {"Username":"alice","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"800000d3-0004-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-26T11:13:28.0000000Z","ProcessId":14560,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2020-08-26 07:13:32.318 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-26 07:13:33.294 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-26 07:13:33.397 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-08-26 07:13:33.511 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"94f73c8d-121f-4932-9ccc-f8d7e726c231","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000d7-0004-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-26T11:13:33.0000000Z","ProcessId":14560,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-26 07:13:33.549 -04:00 [DBG] Augmenting SignInContext
2020-08-26 07:13:33.549 -04:00 [DBG] Adding amr claim with value: external
2020-08-26 07:13:33.551 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-26 07:13:33.553 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-26 07:13:33.586 -04:00 [DBG] 0 persisted grants found for 94f73c8d-121f-4932-9ccc-f8d7e726c231
2020-08-26 07:13:38.261 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-26 07:13:38.272 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-26 07:13:38.272 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-26 07:13:38.272 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-26 07:13:38.273 -04:00 [INF] {"SubjectId":"94f73c8d-121f-4932-9ccc-f8d7e726c231","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000095-000b-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-26T11:13:38.0000000Z","ProcessId":14560,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-26 07:14:34.241 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-26 07:14:40.522 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-26 07:14:40.542 -04:00 [DBG] Augmenting SignInContext
2020-08-26 07:14:40.543 -04:00 [DBG] Adding idp claim with value: local
2020-08-26 07:14:40.543 -04:00 [DBG] Adding auth_time claim with value: 1598440480
2020-08-26 07:14:40.543 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-26 07:14:40.545 -04:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"1","DisplayName":"alice","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000e2-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-26T11:14:40.0000000Z","ProcessId":14560,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-26 07:14:40.550 -04:00 [DBG] 0 persisted grants found for 1
2020-08-26 07:14:46.912 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-26 07:14:46.914 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-26 07:14:46.915 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-26 07:14:46.915 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-26 07:14:46.915 -04:00 [INF] {"SubjectId":"1","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"800000e4-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-26T11:14:46.0000000Z","ProcessId":14560,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-26 07:16:37.866 -04:00 [INF] Starting host...
2020-08-26 07:16:38.761 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-26 07:16:38.841 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-26 07:16:38.841 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-26 07:16:38.841 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-26 07:16:38.841 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-26 07:16:38.841 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-26 07:16:38.841 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-26 07:16:39.012 -04:00 [DBG] Login Url: /Account/Login
2020-08-26 07:16:39.013 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-26 07:16:39.013 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-26 07:16:39.013 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-26 07:16:39.013 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-26 07:16:39.013 -04:00 [DBG] Error Url: /home/error
2020-08-26 07:16:39.013 -04:00 [DBG] Error Id Parameter: errorId
2020-08-26 07:19:40.226 -04:00 [INF] Starting host...
2020-08-26 07:19:41.121 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-26 07:19:41.203 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-26 07:19:41.203 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-26 07:19:41.203 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-26 07:19:41.203 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-26 07:19:41.203 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-26 07:19:41.203 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-26 07:19:41.375 -04:00 [DBG] Login Url: /Account/Login
2020-08-26 07:19:41.376 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-26 07:19:41.376 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-26 07:19:41.376 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-26 07:19:41.376 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-26 07:19:41.376 -04:00 [DBG] Error Url: /home/error
2020-08-26 07:19:41.376 -04:00 [DBG] Error Id Parameter: errorId
2020-08-26 07:21:32.628 -04:00 [INF] Starting host...
2020-08-26 07:21:33.563 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-26 07:21:33.643 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-26 07:21:33.643 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-26 07:21:33.643 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-26 07:21:33.643 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-26 07:21:33.643 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-26 07:21:33.643 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-26 07:21:33.814 -04:00 [DBG] Login Url: /Account/Login
2020-08-26 07:21:33.815 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-26 07:21:33.815 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-26 07:21:33.815 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-26 07:21:33.815 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-26 07:21:33.815 -04:00 [DBG] Error Url: /home/error
2020-08-26 07:21:33.815 -04:00 [DBG] Error Id Parameter: errorId
2020-08-26 07:22:10.855 -04:00 [INF] Starting host...
2020-08-26 07:22:11.775 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-26 07:22:11.856 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-26 07:22:11.856 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-26 07:22:11.856 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-26 07:22:11.856 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-26 07:22:11.856 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-26 07:22:11.856 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-26 07:22:12.030 -04:00 [DBG] Login Url: /Account/Login
2020-08-26 07:22:12.031 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-26 07:22:12.031 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-26 07:22:12.031 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-26 07:22:12.031 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-26 07:22:12.031 -04:00 [DBG] Error Url: /home/error
2020-08-26 07:22:12.031 -04:00 [DBG] Error Id Parameter: errorId
2020-08-26 07:22:23.682 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-26 07:22:26.239 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-26 07:22:26.973 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-26 07:22:27.065 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-08-26 07:22:28.713 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"94f73c8d-121f-4932-9ccc-f8d7e726c231","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000110-0008-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-26T11:22:28.0000000Z","ProcessId":30368,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-26 07:22:28.731 -04:00 [DBG] Augmenting SignInContext
2020-08-26 07:22:28.732 -04:00 [DBG] Adding amr claim with value: external
2020-08-26 07:22:28.734 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-26 07:22:28.736 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-26 07:22:28.787 -04:00 [DBG] 0 persisted grants found for 94f73c8d-121f-4932-9ccc-f8d7e726c231
2020-08-26 07:22:34.606 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-26 07:22:34.621 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-26 07:22:34.621 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-26 07:22:34.621 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-26 07:22:34.622 -04:00 [INF] {"SubjectId":"94f73c8d-121f-4932-9ccc-f8d7e726c231","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"800000dd-0004-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-26T11:22:34.0000000Z","ProcessId":30368,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-26 10:00:00.134 -04:00 [INF] Starting host...
2020-08-26 10:00:01.035 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-26 10:00:01.117 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-26 10:00:01.117 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-26 10:00:01.117 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-26 10:00:01.117 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-26 10:00:01.117 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-26 10:00:01.117 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-26 10:00:01.291 -04:00 [DBG] Login Url: /Account/Login
2020-08-26 10:00:01.292 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-26 10:00:01.292 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-26 10:00:01.292 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-26 10:00:01.292 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-26 10:00:01.292 -04:00 [DBG] Error Url: /home/error
2020-08-26 10:00:01.292 -04:00 [DBG] Error Id Parameter: errorId
2020-08-26 11:45:25.276 -04:00 [INF] Starting host...
2020-08-26 11:45:40.442 -04:00 [INF] Starting host...
2020-08-26 11:45:41.492 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-26 11:45:41.605 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-26 11:45:41.605 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-26 11:45:41.605 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-26 11:45:41.605 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-26 11:45:41.605 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-26 11:45:41.605 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-26 11:45:41.837 -04:00 [DBG] Login Url: /Account/Login
2020-08-26 11:45:41.838 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-26 11:45:41.838 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-26 11:45:41.838 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-26 11:45:41.838 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-26 11:45:41.838 -04:00 [DBG] Error Url: /home/error
2020-08-26 11:45:41.838 -04:00 [DBG] Error Id Parameter: errorId
2020-08-26 11:45:45.067 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-26 11:45:47.527 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-26 11:47:38.409 -04:00 [INF] Starting host...
2020-08-26 11:47:39.229 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-26 11:47:39.308 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-26 11:47:39.308 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-26 11:47:39.308 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-26 11:47:39.308 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-26 11:47:39.308 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-26 11:47:39.308 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-26 11:47:39.469 -04:00 [DBG] Login Url: /Account/Login
2020-08-26 11:47:39.470 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-26 11:47:39.470 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-26 11:47:39.470 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-26 11:47:39.470 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-26 11:47:39.470 -04:00 [DBG] Error Url: /home/error
2020-08-26 11:47:39.470 -04:00 [DBG] Error Id Parameter: errorId
2020-08-26 11:47:44.092 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-26 11:47:46.032 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-26 11:48:30.737 -04:00 [INF] Starting host...
2020-08-26 11:48:31.555 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-26 11:48:31.637 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-26 11:48:31.637 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-26 11:48:31.638 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-26 11:48:31.638 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-26 11:48:31.638 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-26 11:48:31.638 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-26 11:48:31.807 -04:00 [DBG] Login Url: /Account/Login
2020-08-26 11:48:31.808 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-26 11:48:31.808 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-26 11:48:31.808 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-26 11:48:31.808 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-26 11:48:31.808 -04:00 [DBG] Error Url: /home/error
2020-08-26 11:48:31.808 -04:00 [DBG] Error Id Parameter: errorId
2020-08-26 11:48:34.939 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-26 11:48:36.907 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-26 11:49:55.649 -04:00 [INF] Starting host...
2020-08-26 11:49:55.942 -04:00 [FTL] Host terminated unexpectedly.
System.FormatException: Could not parse the JSON file.
 ---> System.Text.Json.JsonReaderException: '"' is invalid after a value. Expected either ',', '}', or ']'. LineNumber: 2 | BytePositionInLine: 2.
   at System.Text.Json.ThrowHelper.ThrowJsonReaderException(Utf8JsonReader& json, ExceptionResource resource, Byte nextByte, ReadOnlySpan`1 bytes)
   at System.Text.Json.Utf8JsonReader.ConsumeNextTokenUntilAfterAllCommentsAreSkipped(Byte marker)
   at System.Text.Json.Utf8JsonReader.ConsumeNextToken(Byte marker)
   at System.Text.Json.Utf8JsonReader.ConsumeNextTokenOrRollback(Byte marker)
   at System.Text.Json.Utf8JsonReader.ReadSingleSegment()
   at System.Text.Json.Utf8JsonReader.Read()
   at System.Text.Json.JsonDocument.Parse(ReadOnlySpan`1 utf8JsonSpan, Utf8JsonReader reader, MetadataDb& database, StackRowStack& stack)
   at System.Text.Json.JsonDocument.Parse(ReadOnlyMemory`1 utf8Json, JsonReaderOptions readerOptions, Byte[] extraRentedBytes)
   at System.Text.Json.JsonDocument.Parse(ReadOnlyMemory`1 json, JsonDocumentOptions options)
   at System.Text.Json.JsonDocument.Parse(String json, JsonDocumentOptions options)
   at Microsoft.Extensions.Configuration.Json.JsonConfigurationFileParser.ParseStream(Stream input)
   at Microsoft.Extensions.Configuration.Json.JsonConfigurationProvider.Load(Stream stream)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.Configuration.Json.JsonConfigurationProvider.Load(Stream stream)
   at Microsoft.Extensions.Configuration.FileConfigurationProvider.Load(Boolean reload)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.Extensions.Configuration.FileConfigurationProvider.HandleException(ExceptionDispatchInfo info)
   at Microsoft.Extensions.Configuration.FileConfigurationProvider.Load(Boolean reload)
   at Microsoft.Extensions.Configuration.FileConfigurationProvider.Load()
   at Microsoft.Extensions.Configuration.ConfigurationRoot..ctor(IList`1 providers)
   at Microsoft.Extensions.Configuration.ConfigurationBuilder.Build()
   at Microsoft.Extensions.Hosting.HostBuilder.BuildAppConfiguration()
   at Microsoft.Extensions.Hosting.HostBuilder.Build()
   at IdentityServer.Program.Main(String[] args) in C:\apps\oidc\IdentityServer4Demos.NETCore31\04. PART-3 IdentityServer4 ASP.NET Core Identity\src\IdentityServer\Program.cs:line 38
2020-08-26 11:50:11.850 -04:00 [INF] Starting host...
2020-08-26 11:50:12.093 -04:00 [FTL] Host terminated unexpectedly.
System.FormatException: Could not parse the JSON file.
 ---> System.Text.Json.JsonReaderException: '"' is invalid after a value. Expected either ',', '}', or ']'. LineNumber: 2 | BytePositionInLine: 2.
   at System.Text.Json.ThrowHelper.ThrowJsonReaderException(Utf8JsonReader& json, ExceptionResource resource, Byte nextByte, ReadOnlySpan`1 bytes)
   at System.Text.Json.Utf8JsonReader.ConsumeNextTokenUntilAfterAllCommentsAreSkipped(Byte marker)
   at System.Text.Json.Utf8JsonReader.ConsumeNextToken(Byte marker)
   at System.Text.Json.Utf8JsonReader.ConsumeNextTokenOrRollback(Byte marker)
   at System.Text.Json.Utf8JsonReader.ReadSingleSegment()
   at System.Text.Json.Utf8JsonReader.Read()
   at System.Text.Json.JsonDocument.Parse(ReadOnlySpan`1 utf8JsonSpan, Utf8JsonReader reader, MetadataDb& database, StackRowStack& stack)
   at System.Text.Json.JsonDocument.Parse(ReadOnlyMemory`1 utf8Json, JsonReaderOptions readerOptions, Byte[] extraRentedBytes)
   at System.Text.Json.JsonDocument.Parse(ReadOnlyMemory`1 json, JsonDocumentOptions options)
   at System.Text.Json.JsonDocument.Parse(String json, JsonDocumentOptions options)
   at Microsoft.Extensions.Configuration.Json.JsonConfigurationFileParser.ParseStream(Stream input)
   at Microsoft.Extensions.Configuration.Json.JsonConfigurationProvider.Load(Stream stream)
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.Configuration.Json.JsonConfigurationProvider.Load(Stream stream)
   at Microsoft.Extensions.Configuration.FileConfigurationProvider.Load(Boolean reload)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.Extensions.Configuration.FileConfigurationProvider.HandleException(ExceptionDispatchInfo info)
   at Microsoft.Extensions.Configuration.FileConfigurationProvider.Load(Boolean reload)
   at Microsoft.Extensions.Configuration.FileConfigurationProvider.Load()
   at Microsoft.Extensions.Configuration.ConfigurationRoot..ctor(IList`1 providers)
   at Microsoft.Extensions.Configuration.ConfigurationBuilder.Build()
   at Microsoft.Extensions.Hosting.HostBuilder.BuildAppConfiguration()
   at Microsoft.Extensions.Hosting.HostBuilder.Build()
   at IdentityServer.Program.Main(String[] args) in C:\apps\oidc\IdentityServer4Demos.NETCore31\04. PART-3 IdentityServer4 ASP.NET Core Identity\src\IdentityServer\Program.cs:line 38
2020-08-26 11:50:28.670 -04:00 [INF] Starting host...
2020-08-26 11:50:29.513 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-26 11:50:29.595 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-26 11:50:29.595 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-26 11:50:29.595 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-26 11:50:29.595 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-26 11:50:29.595 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-26 11:50:29.595 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-26 11:50:29.764 -04:00 [DBG] Login Url: /Account/Login
2020-08-26 11:50:29.765 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-26 11:50:29.765 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-26 11:50:29.765 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-26 11:50:29.765 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-26 11:50:29.765 -04:00 [DBG] Error Url: /home/error
2020-08-26 11:50:29.765 -04:00 [DBG] Error Id Parameter: errorId
2020-08-26 11:51:07.384 -04:00 [INF] Starting host...
2020-08-26 11:51:08.213 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-26 11:51:08.294 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-26 11:51:08.294 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-26 11:51:08.294 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-26 11:51:08.294 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-26 11:51:08.294 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-26 11:51:08.294 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-26 11:51:08.458 -04:00 [DBG] Login Url: /Account/Login
2020-08-26 11:51:08.459 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-26 11:51:08.459 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-26 11:51:08.459 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-26 11:51:08.459 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-26 11:51:08.459 -04:00 [DBG] Error Url: /home/error
2020-08-26 11:51:08.459 -04:00 [DBG] Error Id Parameter: errorId
2020-08-26 11:51:11.280 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-26 11:51:13.066 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-26 11:51:14.342 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-26 11:51:14.444 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-08-26 11:51:16.119 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"94f73c8d-121f-4932-9ccc-f8d7e726c231","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000006-000a-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-26T15:51:16.0000000Z","ProcessId":7652,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-26 11:51:16.167 -04:00 [DBG] Augmenting SignInContext
2020-08-26 11:51:16.167 -04:00 [DBG] Adding amr claim with value: external
2020-08-26 11:51:16.170 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-26 11:51:16.171 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-26 11:51:16.223 -04:00 [DBG] 0 persisted grants found for 94f73c8d-121f-4932-9ccc-f8d7e726c231
2020-08-26 11:51:20.772 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-26 11:51:20.789 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-26 11:51:20.790 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-26 11:51:20.790 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-26 11:51:20.790 -04:00 [INF] {"SubjectId":"94f73c8d-121f-4932-9ccc-f8d7e726c231","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000007-0000-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-26T15:51:20.0000000Z","ProcessId":7652,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-26 11:51:53.378 -04:00 [INF] Starting host...
2020-08-26 11:51:54.200 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-26 11:51:54.281 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-26 11:51:54.281 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-26 11:51:54.281 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-26 11:51:54.281 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-26 11:51:54.281 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-26 11:51:54.281 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-26 11:51:54.447 -04:00 [DBG] Login Url: /Account/Login
2020-08-26 11:51:54.447 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-26 11:51:54.447 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-26 11:51:54.448 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-26 11:51:54.448 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-26 11:51:54.448 -04:00 [DBG] Error Url: /home/error
2020-08-26 11:51:54.448 -04:00 [DBG] Error Id Parameter: errorId
2020-08-26 11:51:56.502 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-26 11:51:58.344 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-26 11:51:58.673 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.com but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-26 11:51:58.699 -04:00 [ERR] Message contains error: 'unsupported_response_type', error_description: 'AADSTS700054: response_type 'id_token' is not enabled for the application.
Trace ID: 74963a1c-e0fa-4b75-8b59-17d7c893e800
Correlation ID: d45423ac-5c3b-486d-b285-7ff2c33923b8
Timestamp: 2020-08-26 15:51:57Z', error_uri: 'https://login.microsoftonline.com/error?code=700054'.
2020-08-26 11:51:58.700 -04:00 [INF] Error from RemoteAuthentication: Message contains error: 'unsupported_response_type', error_description: 'AADSTS700054: response_type 'id_token' is not enabled for the application.
Trace ID: 74963a1c-e0fa-4b75-8b59-17d7c893e800
Correlation ID: d45423ac-5c3b-486d-b285-7ff2c33923b8
Timestamp: 2020-08-26 15:51:57Z', error_uri: 'https://login.microsoftonline.com/error?code=700054'..
2020-08-26 11:51:58.705 -04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: An error was encountered while handling the remote login.
 ---> Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolException: Message contains error: 'unsupported_response_type', error_description: 'AADSTS700054: response_type 'id_token' is not enabled for the application.
Trace ID: 74963a1c-e0fa-4b75-8b59-17d7c893e800
Correlation ID: d45423ac-5c3b-486d-b285-7ff2c33923b8
Timestamp: 2020-08-26 15:51:57Z', error_uri: 'https://login.microsoftonline.com/error?code=700054'.
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync()
   at IdentityServer4.Hosting.FederatedSignOut.AuthenticationRequestHandlerWrapper.HandleRequestAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-08-26 11:52:51.648 -04:00 [INF] Starting host...
2020-08-26 11:52:52.446 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-26 11:52:52.524 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-26 11:52:52.524 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-26 11:52:52.524 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-26 11:52:52.524 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-26 11:52:52.524 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-26 11:52:52.524 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-26 11:52:52.690 -04:00 [DBG] Login Url: /Account/Login
2020-08-26 11:52:52.691 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-26 11:52:52.691 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-26 11:52:52.691 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-26 11:52:52.691 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-26 11:52:52.691 -04:00 [DBG] Error Url: /home/error
2020-08-26 11:52:52.691 -04:00 [DBG] Error Id Parameter: errorId
2020-08-26 11:52:54.597 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-26 11:52:56.558 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-26 11:52:56.841 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.com but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-26 11:52:56.863 -04:00 [ERR] Message contains error: 'unsupported_response_type', error_description: 'AADSTS700054: response_type 'id_token' is not enabled for the application.
Trace ID: 91c27183-7cda-4216-87b1-6178a49acf00
Correlation ID: e0885a43-eb7f-4fd9-8d93-dae3f26ef6bf
Timestamp: 2020-08-26 15:52:55Z', error_uri: 'https://login.microsoftonline.com/error?code=700054'.
2020-08-26 11:52:56.864 -04:00 [INF] Error from RemoteAuthentication: Message contains error: 'unsupported_response_type', error_description: 'AADSTS700054: response_type 'id_token' is not enabled for the application.
Trace ID: 91c27183-7cda-4216-87b1-6178a49acf00
Correlation ID: e0885a43-eb7f-4fd9-8d93-dae3f26ef6bf
Timestamp: 2020-08-26 15:52:55Z', error_uri: 'https://login.microsoftonline.com/error?code=700054'..
2020-08-26 11:52:56.868 -04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: An error was encountered while handling the remote login.
 ---> Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolException: Message contains error: 'unsupported_response_type', error_description: 'AADSTS700054: response_type 'id_token' is not enabled for the application.
Trace ID: 91c27183-7cda-4216-87b1-6178a49acf00
Correlation ID: e0885a43-eb7f-4fd9-8d93-dae3f26ef6bf
Timestamp: 2020-08-26 15:52:55Z', error_uri: 'https://login.microsoftonline.com/error?code=700054'.
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync()
   at IdentityServer4.Hosting.FederatedSignOut.AuthenticationRequestHandlerWrapper.HandleRequestAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-08-26 12:05:11.999 -04:00 [INF] Starting host...
2020-08-26 12:05:12.903 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-26 12:05:12.987 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-26 12:05:12.987 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-26 12:05:12.987 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-26 12:05:12.987 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-26 12:05:12.988 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-26 12:05:12.988 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-26 12:05:13.158 -04:00 [DBG] Login Url: /Account/Login
2020-08-26 12:05:13.159 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-26 12:05:13.159 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-26 12:05:13.159 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-26 12:05:13.159 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-26 12:05:13.159 -04:00 [DBG] Error Url: /home/error
2020-08-26 12:05:13.159 -04:00 [DBG] Error Id Parameter: errorId
2020-08-26 12:05:16.922 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-26 12:05:16.935 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-26 12:05:16.935 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-26 12:05:16.936 -04:00 [DBG] Start discovery request
2020-08-26 12:05:18.735 -04:00 [DBG] Found ["openid","profile","web_api"] as all scopes in database
2020-08-26 12:25:40.105 -04:00 [INF] Starting host...
2020-08-26 12:25:40.964 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-26 12:25:41.045 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-26 12:25:41.045 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-26 12:25:41.045 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-26 12:25:41.045 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-26 12:25:41.045 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-26 12:25:41.045 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-26 12:25:41.216 -04:00 [DBG] Login Url: /Account/Login
2020-08-26 12:25:41.217 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-26 12:25:41.217 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-26 12:25:41.217 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-26 12:25:41.217 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-26 12:25:41.217 -04:00 [DBG] Error Url: /home/error
2020-08-26 12:25:41.217 -04:00 [DBG] Error Id Parameter: errorId
2020-08-26 12:25:43.205 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-26 12:25:44.948 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-26 12:25:45.311 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.com but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-26 12:25:45.344 -04:00 [ERR] Message contains error: 'unsupported_response_type', error_description: 'AADSTS700054: response_type 'id_token' is not enabled for the application.
Trace ID: 4dccbb79-cec7-46ed-ac15-4fd928a8be00
Correlation ID: 711d5132-b832-47e5-be40-74c68c275c72
Timestamp: 2020-08-26 16:25:43Z', error_uri: 'https://login.microsoftonline.com/error?code=700054'.
2020-08-26 12:25:45.345 -04:00 [INF] Error from RemoteAuthentication: Message contains error: 'unsupported_response_type', error_description: 'AADSTS700054: response_type 'id_token' is not enabled for the application.
Trace ID: 4dccbb79-cec7-46ed-ac15-4fd928a8be00
Correlation ID: 711d5132-b832-47e5-be40-74c68c275c72
Timestamp: 2020-08-26 16:25:43Z', error_uri: 'https://login.microsoftonline.com/error?code=700054'..
2020-08-26 12:25:45.348 -04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: An error was encountered while handling the remote login.
 ---> Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolException: Message contains error: 'unsupported_response_type', error_description: 'AADSTS700054: response_type 'id_token' is not enabled for the application.
Trace ID: 4dccbb79-cec7-46ed-ac15-4fd928a8be00
Correlation ID: 711d5132-b832-47e5-be40-74c68c275c72
Timestamp: 2020-08-26 16:25:43Z', error_uri: 'https://login.microsoftonline.com/error?code=700054'.
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync()
   at IdentityServer4.Hosting.FederatedSignOut.AuthenticationRequestHandlerWrapper.HandleRequestAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-08-26 13:06:35.961 -04:00 [INF] Starting host...
2020-08-26 13:06:36.995 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-26 13:06:37.076 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-26 13:06:37.076 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-26 13:06:37.076 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-26 13:06:37.076 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-26 13:06:37.076 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-26 13:06:37.076 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-26 13:06:37.252 -04:00 [DBG] Login Url: /Account/Login
2020-08-26 13:06:37.253 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-26 13:06:37.253 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-26 13:06:37.253 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-26 13:06:37.253 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-26 13:06:37.253 -04:00 [DBG] Error Url: /home/error
2020-08-26 13:06:37.253 -04:00 [DBG] Error Id Parameter: errorId
2020-08-26 13:07:04.582 -04:00 [INF] Starting host...
2020-08-26 13:07:05.461 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-26 13:07:05.541 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-26 13:07:05.541 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-26 13:07:05.541 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-26 13:07:05.541 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-26 13:07:05.541 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-26 13:07:05.541 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-26 13:07:05.712 -04:00 [DBG] Login Url: /Account/Login
2020-08-26 13:07:05.713 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-26 13:07:05.713 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-26 13:07:05.713 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-26 13:07:05.713 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-26 13:07:05.713 -04:00 [DBG] Error Url: /home/error
2020-08-26 13:07:05.713 -04:00 [DBG] Error Id Parameter: errorId
2020-08-26 13:07:08.929 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-26 13:07:11.039 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-26 13:07:12.101 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-26 13:07:12.194 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-08-26 13:07:13.849 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"94f73c8d-121f-4932-9ccc-f8d7e726c231","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"8000000c-0006-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-26T17:07:13.0000000Z","ProcessId":19876,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-26 13:07:13.892 -04:00 [DBG] Augmenting SignInContext
2020-08-26 13:07:13.893 -04:00 [DBG] Adding amr claim with value: external
2020-08-26 13:07:13.895 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-26 13:07:13.897 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-26 13:07:13.948 -04:00 [DBG] 0 persisted grants found for 94f73c8d-121f-4932-9ccc-f8d7e726c231
2020-08-26 13:07:40.222 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-26 13:07:40.224 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-26 13:07:40.224 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-26 13:07:40.225 -04:00 [DBG] Start discovery request
2020-08-26 13:07:40.632 -04:00 [DBG] Found ["openid","profile","web_api"] as all scopes in database
2020-08-26 13:08:13.507 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-26 13:08:13.510 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-26 13:08:13.511 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-26 13:08:13.513 -04:00 [DBG] Start token request.
2020-08-26 13:08:13.514 -04:00 [DBG] Start client validation
2020-08-26 13:08:13.517 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-26 13:08:13.518 -04:00 [DBG] Start parsing for secret in post body
2020-08-26 13:08:13.518 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-26 13:08:13.518 -04:00 [DBG] Secret id found: client
2020-08-26 13:08:13.695 -04:00 [DBG] client found in database: true
2020-08-26 13:08:13.699 -04:00 [DBG] client configuration validation for client client succeeded.
2020-08-26 13:08:13.705 -04:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-08-26 13:08:13.705 -04:00 [DBG] Client validation success
2020-08-26 13:08:13.706 -04:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000000f-0006-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-26T17:08:13.0000000Z","ProcessId":19876,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-26 13:08:13.708 -04:00 [DBG] Start token request validation
2020-08-26 13:08:13.710 -04:00 [DBG] Start client credentials token request validation
2020-08-26 13:08:13.746 -04:00 [DBG] Found [] identity scopes in database
2020-08-26 13:08:13.777 -04:00 [DBG] Found ["web_api"] API scopes in database
2020-08-26 13:08:13.785 -04:00 [DBG] Found [] identity scopes in database
2020-08-26 13:08:13.787 -04:00 [DBG] Found ["web_api"] API scopes in database
2020-08-26 13:08:13.791 -04:00 [DBG] client credentials token request validation success
2020-08-26 13:08:13.795 -04:00 [INF] Token request validation success, {"ClientId":"client","ClientName":null,"GrantType":"client_credentials","Scopes":"web_api","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"client","client_secret":"***REDACTED***","grant_type":"client_credentials","scope":"web_api"},"$type":"TokenRequestValidationLog"}
2020-08-26 13:08:13.806 -04:00 [DBG] Getting claims for access token for client: client
2020-08-26 13:08:13.826 -04:00 [INF] {"ClientId":"client","ClientName":null,"RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"web_api","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****m4sQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000000f-0006-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-26T17:08:13.0000000Z","ProcessId":19876,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-26 13:08:13.826 -04:00 [DBG] Token request success.
2020-08-26 13:08:47.634 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-26 13:08:47.638 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-26 13:08:47.638 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-26 13:08:47.639 -04:00 [DBG] Start discovery request
2020-08-26 13:08:47.647 -04:00 [DBG] Found ["openid","profile","web_api"] as all scopes in database
2020-08-26 13:08:47.677 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-26 13:08:47.678 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-26 13:08:47.678 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-26 13:08:47.679 -04:00 [DBG] Start key discovery request
2020-08-26 13:31:48.829 -04:00 [INF] Starting host...
2020-08-26 13:31:49.148 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-26 13:31:49.217 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-26 13:31:49.231 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-26 13:31:49.578 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-26 13:31:49.578 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-26 13:31:49.578 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-26 13:31:49.578 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-26 13:31:49.772 -04:00 [DBG] Login Url: /Account/Login
2020-08-26 13:31:49.773 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-26 13:31:49.773 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-26 13:31:49.773 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-26 13:31:49.773 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-26 13:31:49.773 -04:00 [DBG] Error Url: /home/error
2020-08-26 13:31:49.773 -04:00 [DBG] Error Id Parameter: errorId
2020-08-26 13:32:16.280 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-26 13:32:16.282 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-26 13:32:16.282 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-26 13:32:16.283 -04:00 [DBG] Start discovery request
2020-08-26 13:32:17.358 -04:00 [DBG] Found ["openid","profile","web_api"] as all scopes in database
2020-08-26 13:32:33.623 -04:00 [DBG] 0 persisted grants found for 94f73c8d-121f-4932-9ccc-f8d7e726c231
2020-08-26 13:32:38.591 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-26 13:32:38.618 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-26 13:32:38.619 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-26 13:32:38.619 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-26 13:32:38.625 -04:00 [INF] {"SubjectId":"94f73c8d-121f-4932-9ccc-f8d7e726c231","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000007-0008-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-26T17:32:38.0000000Z","ProcessId":23596,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-26 13:32:42.011 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-26 13:33:40.086 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-26 13:33:40.088 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-26 13:33:40.088 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-26 13:33:40.088 -04:00 [DBG] Start discovery request
2020-08-26 13:33:40.101 -04:00 [DBG] Found ["openid","profile","web_api"] as all scopes in database
2020-08-26 13:33:57.941 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-26 13:33:57.944 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-26 13:33:57.944 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-26 13:33:57.944 -04:00 [DBG] Start discovery request
2020-08-26 13:33:57.957 -04:00 [DBG] Found ["openid","profile","web_api"] as all scopes in database
2020-08-26 13:36:51.572 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-26 13:36:51.576 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-26 13:36:51.577 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-26 13:36:51.580 -04:00 [DBG] Start token request.
2020-08-26 13:36:51.582 -04:00 [DBG] Start client validation
2020-08-26 13:36:51.586 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-26 13:36:51.588 -04:00 [DBG] Start parsing for secret in post body
2020-08-26 13:36:51.589 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-26 13:36:51.589 -04:00 [DBG] Secret id found: client
2020-08-26 13:36:51.768 -04:00 [DBG] client found in database: true
2020-08-26 13:36:51.772 -04:00 [DBG] client configuration validation for client client succeeded.
2020-08-26 13:36:51.778 -04:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-08-26 13:36:51.778 -04:00 [DBG] Client validation success
2020-08-26 13:36:51.779 -04:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000002a-0006-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-26T17:36:51.0000000Z","ProcessId":23596,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-26 13:36:51.781 -04:00 [DBG] Start token request validation
2020-08-26 13:36:51.784 -04:00 [DBG] Start client credentials token request validation
2020-08-26 13:36:51.825 -04:00 [DBG] Found [] identity scopes in database
2020-08-26 13:36:51.851 -04:00 [DBG] Found ["web_api"] API scopes in database
2020-08-26 13:36:51.858 -04:00 [DBG] Found [] identity scopes in database
2020-08-26 13:36:51.859 -04:00 [DBG] Found ["web_api"] API scopes in database
2020-08-26 13:36:51.861 -04:00 [DBG] client credentials token request validation success
2020-08-26 13:36:51.866 -04:00 [INF] Token request validation success, {"ClientId":"client","ClientName":null,"GrantType":"client_credentials","Scopes":"web_api","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"client","client_secret":"***REDACTED***","grant_type":"client_credentials","scope":"web_api"},"$type":"TokenRequestValidationLog"}
2020-08-26 13:36:51.877 -04:00 [DBG] Getting claims for access token for client: client
2020-08-26 13:36:51.913 -04:00 [INF] {"ClientId":"client","ClientName":null,"RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"web_api","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****cldw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000002a-0006-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-26T17:36:51.0000000Z","ProcessId":23596,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-26 13:36:51.913 -04:00 [DBG] Token request success.
2020-08-26 13:40:49.195 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-26 13:40:49.196 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-26 13:40:49.196 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-26 13:40:49.196 -04:00 [DBG] Start discovery request
2020-08-26 13:40:49.211 -04:00 [DBG] Found ["openid","profile","web_api"] as all scopes in database
2020-08-26 13:40:49.242 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-26 13:40:49.243 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-26 13:40:49.243 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-26 13:40:49.244 -04:00 [DBG] Start key discovery request
2020-08-26 13:43:12.798 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-26 13:43:12.801 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-26 13:43:12.801 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-26 13:43:12.802 -04:00 [DBG] Start token request.
2020-08-26 13:43:12.802 -04:00 [DBG] Start client validation
2020-08-26 13:43:12.802 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-26 13:43:12.802 -04:00 [DBG] Start parsing for secret in post body
2020-08-26 13:43:12.803 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-26 13:43:12.803 -04:00 [DBG] Secret id found: client
2020-08-26 13:43:12.826 -04:00 [DBG] client found in database: true
2020-08-26 13:43:12.826 -04:00 [DBG] client configuration validation for client client succeeded.
2020-08-26 13:43:12.826 -04:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-08-26 13:43:12.826 -04:00 [DBG] Client validation success
2020-08-26 13:43:12.827 -04:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000002e-0006-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-26T17:43:12.0000000Z","ProcessId":23596,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-26 13:43:12.827 -04:00 [DBG] Start token request validation
2020-08-26 13:43:12.827 -04:00 [DBG] Start client credentials token request validation
2020-08-26 13:43:12.830 -04:00 [DBG] Found [] identity scopes in database
2020-08-26 13:43:12.838 -04:00 [DBG] Found ["web_api"] API scopes in database
2020-08-26 13:43:12.841 -04:00 [DBG] Found [] identity scopes in database
2020-08-26 13:43:12.845 -04:00 [DBG] Found ["web_api"] API scopes in database
2020-08-26 13:43:12.847 -04:00 [DBG] client credentials token request validation success
2020-08-26 13:43:12.848 -04:00 [INF] Token request validation success, {"ClientId":"client","ClientName":null,"GrantType":"client_credentials","Scopes":"web_api","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"client","client_secret":"***REDACTED***","grant_type":"client_credentials","scope":"web_api"},"$type":"TokenRequestValidationLog"}
2020-08-26 13:43:12.848 -04:00 [DBG] Getting claims for access token for client: client
2020-08-26 13:43:12.849 -04:00 [INF] {"ClientId":"client","ClientName":null,"RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"web_api","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****8QdA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000002e-0006-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-26T17:43:12.0000000Z","ProcessId":23596,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-26 13:43:12.849 -04:00 [DBG] Token request success.
2020-08-26 14:31:49.965 -04:00 [INF] Removing 0 grants
2020-08-26 14:31:49.976 -04:00 [INF] Removing 0 device flow codes
2020-08-26 14:35:21.480 -04:00 [INF] Starting host...
2020-08-26 14:35:22.398 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-26 14:35:22.496 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-26 14:35:22.496 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-26 14:35:22.496 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-26 14:35:22.496 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-26 14:35:22.496 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-26 14:35:22.496 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-26 14:35:22.704 -04:00 [DBG] Login Url: /Account/Login
2020-08-26 14:35:22.705 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-26 14:35:22.705 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-26 14:35:22.705 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-26 14:35:22.705 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-26 14:35:22.705 -04:00 [DBG] Error Url: /home/error
2020-08-26 14:35:22.705 -04:00 [DBG] Error Id Parameter: errorId
2020-08-26 14:35:37.409 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-26 14:35:57.137 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-26 14:35:57.140 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-26 14:35:57.140 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-26 14:35:57.141 -04:00 [DBG] Start discovery request
2020-08-26 14:35:58.233 -04:00 [DBG] Found ["openid","profile","web_api"] as all scopes in database
2020-08-26 14:37:25.056 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-26 14:37:25.061 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-26 14:37:25.062 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-26 14:37:25.062 -04:00 [DBG] Start discovery request
2020-08-26 14:37:25.095 -04:00 [DBG] Found ["openid","profile","web_api"] as all scopes in database
2020-08-26 14:39:09.891 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-26 14:39:09.894 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-26 14:39:09.894 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-26 14:39:09.896 -04:00 [DBG] Start token request.
2020-08-26 14:39:09.898 -04:00 [DBG] Start client validation
2020-08-26 14:39:09.901 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-26 14:39:09.902 -04:00 [DBG] Start parsing for secret in post body
2020-08-26 14:39:09.911 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-26 14:39:09.911 -04:00 [DBG] Secret id found: client
2020-08-26 14:39:10.125 -04:00 [DBG] client found in database: true
2020-08-26 14:39:10.129 -04:00 [DBG] client configuration validation for client client succeeded.
2020-08-26 14:39:10.134 -04:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-08-26 14:39:10.134 -04:00 [DBG] Client validation success
2020-08-26 14:39:10.141 -04:00 [INF] {"ClientId":"client","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000010-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-26T18:39:10.0000000Z","ProcessId":15056,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-26 14:39:10.144 -04:00 [DBG] Start token request validation
2020-08-26 14:39:10.147 -04:00 [DBG] Start client credentials token request validation
2020-08-26 14:39:10.188 -04:00 [DBG] Found [] identity scopes in database
2020-08-26 14:39:10.222 -04:00 [DBG] Found ["web_api"] API scopes in database
2020-08-26 14:39:10.228 -04:00 [DBG] Found [] identity scopes in database
2020-08-26 14:39:10.229 -04:00 [DBG] Found ["web_api"] API scopes in database
2020-08-26 14:39:10.231 -04:00 [DBG] client credentials token request validation success
2020-08-26 14:39:10.236 -04:00 [INF] Token request validation success, {"ClientId":"client","ClientName":null,"GrantType":"client_credentials","Scopes":"web_api","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"client","client_secret":"***REDACTED***","grant_type":"client_credentials","scope":"web_api"},"$type":"TokenRequestValidationLog"}
2020-08-26 14:39:10.247 -04:00 [DBG] Getting claims for access token for client: client
2020-08-26 14:39:10.284 -04:00 [INF] {"ClientId":"client","ClientName":null,"RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"web_api","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****JGuQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000010-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-26T18:39:10.0000000Z","ProcessId":15056,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-26 14:39:10.284 -04:00 [DBG] Token request success.
2020-08-26 14:41:47.975 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-26 14:41:47.983 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-26 14:41:47.983 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-26 14:41:47.983 -04:00 [DBG] Start discovery request
2020-08-26 14:41:47.995 -04:00 [DBG] Found ["openid","profile","web_api"] as all scopes in database
2020-08-26 14:41:48.027 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-26 14:41:48.028 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-26 14:41:48.028 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-26 14:41:48.029 -04:00 [DBG] Start key discovery request
2020-08-26 15:35:22.436 -04:00 [INF] Removing 0 grants
2020-08-26 15:35:22.445 -04:00 [INF] Removing 0 device flow codes
2020-08-26 16:35:22.469 -04:00 [INF] Removing 0 grants
2020-08-26 16:35:22.471 -04:00 [INF] Removing 0 device flow codes
2020-08-26 17:35:23.329 -04:00 [INF] Removing 0 grants
2020-08-26 17:35:23.333 -04:00 [INF] Removing 0 device flow codes
2020-08-27 00:10:31.698 -04:00 [INF] Removing 0 grants
2020-08-27 00:10:31.701 -04:00 [INF] Removing 0 device flow codes
2020-08-28 07:03:24.909 -04:00 [INF] Starting host...
2020-08-28 07:03:26.505 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-28 07:03:26.679 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-28 07:03:26.679 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-28 07:03:26.679 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-28 07:03:26.679 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-28 07:03:26.679 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-28 07:03:26.680 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-28 07:03:27.046 -04:00 [DBG] Login Url: /Account/Login
2020-08-28 07:03:27.048 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-28 07:03:27.048 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-28 07:03:27.048 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-28 07:03:27.048 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-28 07:03:27.048 -04:00 [DBG] Error Url: /home/error
2020-08-28 07:03:27.048 -04:00 [DBG] Error Id Parameter: errorId
2020-08-28 07:03:27.078 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 07:03:27.084 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 07:03:29.829 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 07:03:29.832 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 07:03:29.842 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-28 07:03:29.849 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 07:03:29.849 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 07:03:39.572 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 07:03:39.574 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 07:03:39.574 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 07:03:41.131 -04:00 [ERR] Failed executing DbCommand (55ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2020-08-28 07:03:41.196 -04:00 [ERR] An exception occurred while iterating over the results of a query for context type 'IdentityServer.Data.IdentityDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'AspNetUsers'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:269c9d32-27ad-4a07-9869-ff9055f559d6
Error Number:208,State:1,Class:16
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'AspNetUsers'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:269c9d32-27ad-4a07-9869-ff9055f559d6
Error Number:208,State:1,Class:16
2020-08-28 07:03:41.280 -04:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'AspNetUsers'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(String userName)
   at Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(String userName, String password, Boolean isPersistent, Boolean lockoutOnFailure)
   at IdentityServer.AccountController.Login(LoginInputModel model, String button) in C:\apps\oidc\IdentityServer4Demos.NETCore31\04. PART-3 IdentityServer4 ASP.NET Core Identity\src\IdentityServer\Quickstart\Account\AccountController.cs:line 112
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
ClientConnectionId:269c9d32-27ad-4a07-9869-ff9055f559d6
Error Number:208,State:1,Class:16
2020-08-28 07:16:40.347 -04:00 [INF] Starting host...
2020-08-28 07:16:41.175 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-28 07:16:41.260 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-28 07:16:41.261 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-28 07:16:41.261 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-28 07:16:41.261 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-28 07:16:41.261 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-28 07:16:41.261 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-28 07:16:41.437 -04:00 [DBG] Login Url: /Account/Login
2020-08-28 07:16:41.438 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-28 07:16:41.438 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-28 07:16:41.438 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-28 07:16:41.438 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-28 07:16:41.438 -04:00 [DBG] Error Url: /home/error
2020-08-28 07:16:41.438 -04:00 [DBG] Error Id Parameter: errorId
2020-08-28 07:16:41.450 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 07:16:41.454 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 07:16:43.440 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 07:16:43.440 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 07:16:43.450 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-28 07:16:43.457 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 07:16:43.458 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 07:16:47.108 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 07:16:47.110 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 07:16:47.111 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 07:16:47.941 -04:00 [ERR] Failed executing DbCommand (48ms) [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[NormalizedUserName] = @__normalizedUserName_0
2020-08-28 07:16:47.981 -04:00 [ERR] An exception occurred while iterating over the results of a query for context type 'IdentityServer.Data.IdentityDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'AspNetUsers'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:23ddd543-2518-45fa-8fbf-95a1c2994964
Error Number:208,State:1,Class:16
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'AspNetUsers'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:23ddd543-2518-45fa-8fbf-95a1c2994964
Error Number:208,State:1,Class:16
2020-08-28 07:16:48.037 -04:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'AspNetUsers'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(String userName)
   at Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(String userName, String password, Boolean isPersistent, Boolean lockoutOnFailure)
   at IdentityServer.AccountController.Login(LoginInputModel model, String button) in C:\apps\oidc\IdentityServer4Demos.NETCore31\04. PART-3 IdentityServer4 ASP.NET Core Identity\src\IdentityServer\Quickstart\Account\AccountController.cs:line 112
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
ClientConnectionId:23ddd543-2518-45fa-8fbf-95a1c2994964
Error Number:208,State:1,Class:16
2020-08-28 09:48:15.392 -04:00 [INF] Removing 2 grants
2020-08-28 09:48:15.486 -04:00 [INF] Removing 0 device flow codes
2020-08-28 10:10:48.570 -04:00 [INF] Starting host...
2020-08-28 10:10:49.490 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-28 10:10:49.576 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-28 10:10:49.576 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-28 10:10:49.576 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-28 10:10:49.576 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-28 10:10:49.576 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-28 10:10:49.576 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-28 10:10:49.750 -04:00 [DBG] Login Url: /Account/Login
2020-08-28 10:10:49.751 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-28 10:10:49.751 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-28 10:10:49.751 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-28 10:10:49.751 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-28 10:10:49.751 -04:00 [DBG] Error Url: /home/error
2020-08-28 10:10:49.751 -04:00 [DBG] Error Id Parameter: errorId
2020-08-28 10:10:49.762 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 10:10:49.766 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 10:10:51.899 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 10:10:51.900 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 10:10:51.911 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-28 10:10:51.917 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 10:10:51.918 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 10:10:55.159 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 10:10:55.162 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 10:10:55.162 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 10:10:56.077 -04:00 [DBG] Augmenting SignInContext
2020-08-28 10:10:56.078 -04:00 [DBG] Adding idp claim with value: local
2020-08-28 10:10:56.078 -04:00 [DBG] Adding auth_time claim with value: 1598623856
2020-08-28 10:10:56.083 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 10:10:56.088 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 10:10:56.099 -04:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"1","DisplayName":"alice","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000211-0008-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-28T14:10:56.0000000Z","ProcessId":13400,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-28 10:10:56.161 -04:00 [DBG] 0 persisted grants found for 1
2020-08-28 10:11:24.604 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 10:11:24.621 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-28 10:11:24.621 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-28 10:11:24.621 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-28 10:11:24.622 -04:00 [INF] {"SubjectId":"1","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000022-0009-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-28T14:11:24.0000000Z","ProcessId":13400,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-28 12:17:33.414 -04:00 [INF] Starting host...
2020-08-28 12:17:34.433 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-28 12:17:34.520 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-28 12:17:34.520 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-28 12:17:34.520 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-28 12:17:34.520 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-28 12:17:34.520 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-28 12:17:34.520 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-28 12:17:34.711 -04:00 [DBG] Login Url: /Account/Login
2020-08-28 12:17:34.712 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-28 12:17:34.712 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-28 12:17:34.712 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-28 12:17:34.712 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-28 12:17:34.712 -04:00 [DBG] Error Url: /home/error
2020-08-28 12:17:34.712 -04:00 [DBG] Error Id Parameter: errorId
2020-08-28 12:17:36.855 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-28 12:17:38.439 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 12:17:40.066 -04:00 [DBG] Augmenting SignInContext
2020-08-28 12:17:40.067 -04:00 [DBG] Adding idp claim with value: local
2020-08-28 12:17:40.067 -04:00 [DBG] Adding auth_time claim with value: 1598631460
2020-08-28 12:17:40.078 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 12:17:40.092 -04:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"1","DisplayName":"alice","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000bf-0000-fa00-b63f-84710c7967bb","TimeStamp":"2020-08-28T16:17:40.0000000Z","ProcessId":28780,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-28 12:17:40.163 -04:00 [ERR] Failed executing DbCommand (4ms) [Parameters=[@__subjectId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Key], [p].[ClientId], [p].[CreationTime], [p].[Data], [p].[Expiration], [p].[SubjectId], [p].[Type]
FROM [PersistedGrants] AS [p]
WHERE [p].[SubjectId] = @__subjectId_0
2020-08-28 12:17:40.190 -04:00 [ERR] An exception occurred while iterating over the results of a query for context type 'IdentityServer4.EntityFramework.DbContexts.PersistedGrantDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'PersistedGrants'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:bdb347b4-42e6-4779-9a71-f2cb4bdf1d17
Error Number:208,State:1,Class:16
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'PersistedGrants'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:bdb347b4-42e6-4779-9a71-f2cb4bdf1d17
Error Number:208,State:1,Class:16
2020-08-28 12:17:40.273 -04:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'PersistedGrants'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at IdentityServer4.EntityFramework.Stores.PersistedGrantStore.GetAllAsync(String subjectId)
   at IdentityServer4.Services.DefaultPersistedGrantService.GetAllGrantsAsync(String subjectId)
   at IdentityServer4.Services.DefaultIdentityServerInteractionService.GetAllUserConsentsAsync()
   at IdentityServer.GrantsController.BuildViewModelAsync() in C:\apps\oidc\IdentityServer4Demos.NETCore31\04. PART-3 IdentityServer4 ASP.NET Core Identity\src\IdentityServer\Quickstart\Grants\GrantsController.cs:line 64
   at IdentityServer.GrantsController.Index() in C:\apps\oidc\IdentityServer4Demos.NETCore31\04. PART-3 IdentityServer4 ASP.NET Core Identity\src\IdentityServer\Quickstart\Grants\GrantsController.cs:line 46
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
ClientConnectionId:bdb347b4-42e6-4779-9a71-f2cb4bdf1d17
Error Number:208,State:1,Class:16
2020-08-28 13:01:44.629 -04:00 [INF] Starting host...
2020-08-28 13:01:45.734 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-28 13:01:45.816 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-28 13:01:45.816 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-28 13:01:45.816 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-28 13:01:45.816 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-28 13:01:45.816 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-28 13:01:45.816 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-28 13:01:45.995 -04:00 [DBG] Login Url: /Account/Login
2020-08-28 13:01:45.995 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-28 13:01:45.995 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-28 13:01:45.995 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-28 13:01:45.996 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-28 13:01:45.996 -04:00 [DBG] Error Url: /home/error
2020-08-28 13:01:45.996 -04:00 [DBG] Error Id Parameter: errorId
2020-08-28 13:01:59.399 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-28 13:02:00.983 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 13:02:01.869 -04:00 [DBG] Augmenting SignInContext
2020-08-28 13:02:01.870 -04:00 [DBG] Adding idp claim with value: local
2020-08-28 13:02:01.870 -04:00 [DBG] Adding auth_time claim with value: 1598634121
2020-08-28 13:02:01.906 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 13:02:01.916 -04:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"1","DisplayName":"alice","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000221-0008-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-28T17:02:01.0000000Z","ProcessId":7564,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-28 13:02:01.986 -04:00 [ERR] Failed executing DbCommand (7ms) [Parameters=[@__subjectId_0='?' (Size = 200)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Key], [p].[ClientId], [p].[CreationTime], [p].[Data], [p].[Expiration], [p].[SubjectId], [p].[Type]
FROM [PersistedGrants] AS [p]
WHERE [p].[SubjectId] = @__subjectId_0
2020-08-28 13:02:02.012 -04:00 [ERR] An exception occurred while iterating over the results of a query for context type 'IdentityServer4.EntityFramework.DbContexts.PersistedGrantDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'PersistedGrants'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:44972a34-445b-4db6-bb8c-1e2c8ee5f2dc
Error Number:208,State:1,Class:16
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'PersistedGrants'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:44972a34-445b-4db6-bb8c-1e2c8ee5f2dc
Error Number:208,State:1,Class:16
2020-08-28 13:02:02.091 -04:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'PersistedGrants'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__274_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at IdentityServer4.EntityFramework.Stores.PersistedGrantStore.GetAllAsync(String subjectId)
   at IdentityServer4.Services.DefaultPersistedGrantService.GetAllGrantsAsync(String subjectId)
   at IdentityServer4.Services.DefaultIdentityServerInteractionService.GetAllUserConsentsAsync()
   at IdentityServer.GrantsController.BuildViewModelAsync() in C:\apps\oidc\IdentityServer4Demos.NETCore31\04. PART-3 IdentityServer4 ASP.NET Core Identity\src\IdentityServer\Quickstart\Grants\GrantsController.cs:line 64
   at IdentityServer.GrantsController.Index() in C:\apps\oidc\IdentityServer4Demos.NETCore31\04. PART-3 IdentityServer4 ASP.NET Core Identity\src\IdentityServer\Quickstart\Grants\GrantsController.cs:line 46
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
ClientConnectionId:44972a34-445b-4db6-bb8c-1e2c8ee5f2dc
Error Number:208,State:1,Class:16
2020-08-28 13:05:38.595 -04:00 [INF] Starting host...
2020-08-28 13:05:39.458 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-28 13:05:39.550 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-28 13:05:39.550 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-28 13:05:39.550 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-28 13:05:39.550 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-28 13:05:39.550 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-28 13:05:39.550 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-28 13:05:39.723 -04:00 [DBG] Login Url: /Account/Login
2020-08-28 13:05:39.724 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-28 13:05:39.724 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-28 13:05:39.724 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-28 13:05:39.724 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-28 13:05:39.724 -04:00 [DBG] Error Url: /home/error
2020-08-28 13:05:39.724 -04:00 [DBG] Error Id Parameter: errorId
2020-08-28 13:05:42.009 -04:00 [DBG] 0 persisted grants found for 1
2020-08-28 13:10:02.279 -04:00 [INF] Starting host...
2020-08-28 13:10:03.203 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-28 13:10:03.286 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-28 13:10:03.286 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-28 13:10:03.286 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-28 13:10:03.286 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-28 13:10:03.286 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-28 13:10:03.286 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-28 13:10:03.458 -04:00 [DBG] Login Url: /Account/Login
2020-08-28 13:10:03.459 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-28 13:10:03.459 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-28 13:10:03.459 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-28 13:10:03.459 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-28 13:10:03.459 -04:00 [DBG] Error Url: /home/error
2020-08-28 13:10:03.459 -04:00 [DBG] Error Id Parameter: errorId
2020-08-28 13:10:05.796 -04:00 [DBG] 0 persisted grants found for 1
2020-08-28 14:01:12.884 -04:00 [INF] Starting host...
2020-08-28 14:01:13.819 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-28 14:01:13.907 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-28 14:01:13.907 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-28 14:01:13.907 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-28 14:01:13.907 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-28 14:01:13.907 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-28 14:01:13.907 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-28 14:01:14.107 -04:00 [DBG] Login Url: /Account/Login
2020-08-28 14:01:14.108 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-28 14:01:14.108 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-28 14:01:14.108 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-28 14:01:14.108 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-28 14:01:14.108 -04:00 [DBG] Error Url: /home/error
2020-08-28 14:01:14.108 -04:00 [DBG] Error Id Parameter: errorId
2020-08-28 14:13:03.295 -04:00 [INF] Starting host...
2020-08-28 14:13:04.272 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-28 14:13:04.359 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-28 14:13:04.359 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-28 14:13:04.359 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-28 14:13:04.359 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-28 14:13:04.359 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-28 14:13:04.359 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-28 14:13:04.585 -04:00 [DBG] Login Url: /Account/Login
2020-08-28 14:13:04.586 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-28 14:13:04.586 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-28 14:13:04.586 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-28 14:13:04.586 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-28 14:13:04.586 -04:00 [DBG] Error Url: /home/error
2020-08-28 14:13:04.586 -04:00 [DBG] Error Id Parameter: errorId
2020-08-28 14:13:06.747 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-28 14:13:08.334 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 14:13:09.262 -04:00 [DBG] Augmenting SignInContext
2020-08-28 14:13:09.263 -04:00 [DBG] Adding idp claim with value: local
2020-08-28 14:13:09.263 -04:00 [DBG] Adding auth_time claim with value: 1598638389
2020-08-28 14:13:09.272 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 14:13:09.283 -04:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"1","DisplayName":"alice","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000006-0006-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-28T18:13:09.0000000Z","ProcessId":12012,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-28 14:13:09.342 -04:00 [DBG] 0 persisted grants found for 1
2020-08-28 14:13:20.354 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 14:13:20.372 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-28 14:13:20.372 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-28 14:13:20.372 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-28 14:13:20.373 -04:00 [INF] {"SubjectId":"1","DisplayName":"Alice Smith","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000004-0000-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-28T18:13:20.0000000Z","ProcessId":12012,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-28 14:14:35.804 -04:00 [INF] Starting host...
2020-08-28 14:14:36.611 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-28 14:14:36.693 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-28 14:14:36.693 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-28 14:14:36.693 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-28 14:14:36.694 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-28 14:14:36.694 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-28 14:14:36.694 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-28 14:14:36.868 -04:00 [DBG] Login Url: /Account/Login
2020-08-28 14:14:36.868 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-28 14:14:36.868 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-28 14:14:36.869 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-28 14:14:36.869 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-28 14:14:36.869 -04:00 [DBG] Error Url: /home/error
2020-08-28 14:14:36.869 -04:00 [DBG] Error Id Parameter: errorId
2020-08-28 14:14:38.772 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-28 14:15:26.460 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 14:15:27.169 -04:00 [ERR] An error occurred using the connection to database 'IdentityServer4Admin' on server '(localdb)\MSSQLLocalDB'.
2020-08-28 14:15:27.217 -04:00 [ERR] An exception occurred while iterating over the results of a query for context type 'IdentityServer.Data.IdentityDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database "IdentityServer4Admin" requested by the login. The login failed.
Login failed for user 'DESKTOP-JP30Q7T\fujin'.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool, SqlAuthenticationProviderManager sqlAuthProviderManager)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:dba6fea1-17ca-457b-bffd-d673b320a26f
Error Number:4060,State:1,Class:11
Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database "IdentityServer4Admin" requested by the login. The login failed.
Login failed for user 'DESKTOP-JP30Q7T\fujin'.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool, SqlAuthenticationProviderManager sqlAuthProviderManager)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:dba6fea1-17ca-457b-bffd-d673b320a26f
Error Number:4060,State:1,Class:11
2020-08-28 14:15:27.309 -04:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database "IdentityServer4Admin" requested by the login. The login failed.
Login failed for user 'DESKTOP-JP30Q7T\fujin'.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool, SqlAuthenticationProviderManager sqlAuthProviderManager)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(String userName)
   at Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(String userName, String password, Boolean isPersistent, Boolean lockoutOnFailure)
   at IdentityServer.AccountController.Login(LoginInputModel model, String button) in C:\apps\oidc\IdentityServer4Demos.NETCore31\04. PART-3 IdentityServer4 ASP.NET Core Identity\src\IdentityServer\Quickstart\Account\AccountController.cs:line 112
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
ClientConnectionId:dba6fea1-17ca-457b-bffd-d673b320a26f
Error Number:4060,State:1,Class:11
2020-08-28 14:16:29.912 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 14:16:35.110 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 14:16:35.142 -04:00 [ERR] An error occurred using the connection to database 'IdentityServer4Admin' on server '(localdb)\MSSQLLocalDB'.
2020-08-28 14:16:35.144 -04:00 [ERR] An exception occurred while iterating over the results of a query for context type 'IdentityServer.Data.IdentityDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database "IdentityServer4Admin" requested by the login. The login failed.
Login failed for user 'DESKTOP-JP30Q7T\fujin'.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool, SqlAuthenticationProviderManager sqlAuthProviderManager)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:3ed2e34a-451d-4642-bb1a-8f9f8c45a658
Error Number:4060,State:1,Class:11
Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database "IdentityServer4Admin" requested by the login. The login failed.
Login failed for user 'DESKTOP-JP30Q7T\fujin'.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool, SqlAuthenticationProviderManager sqlAuthProviderManager)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:3ed2e34a-451d-4642-bb1a-8f9f8c45a658
Error Number:4060,State:1,Class:11
2020-08-28 14:16:35.175 -04:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.Data.SqlClient.SqlException (0x80131904): Cannot open database "IdentityServer4Admin" requested by the login. The login failed.
Login failed for user 'DESKTOP-JP30Q7T\fujin'.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool, SqlAuthenticationProviderManager sqlAuthProviderManager)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnectionAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(DbContext _, Boolean result, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(String userName)
   at Microsoft.AspNetCore.Identity.SignInManager`1.PasswordSignInAsync(String userName, String password, Boolean isPersistent, Boolean lockoutOnFailure)
   at IdentityServer.AccountController.Login(LoginInputModel model, String button) in C:\apps\oidc\IdentityServer4Demos.NETCore31\04. PART-3 IdentityServer4 ASP.NET Core Identity\src\IdentityServer\Quickstart\Account\AccountController.cs:line 112
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
ClientConnectionId:3ed2e34a-451d-4642-bb1a-8f9f8c45a658
Error Number:4060,State:1,Class:11
2020-08-28 14:18:10.826 -04:00 [INF] Starting host...
2020-08-28 14:18:11.662 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-28 14:18:11.743 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-28 14:18:11.743 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-28 14:18:11.743 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-28 14:18:11.743 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-28 14:18:11.743 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-28 14:18:11.743 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-28 14:18:11.909 -04:00 [DBG] Login Url: /Account/Login
2020-08-28 14:18:11.910 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-28 14:18:11.910 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-28 14:18:11.910 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-28 14:18:11.910 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-28 14:18:11.910 -04:00 [DBG] Error Url: /home/error
2020-08-28 14:18:11.910 -04:00 [DBG] Error Id Parameter: errorId
2020-08-28 14:18:14.202 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-28 14:18:17.093 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 14:18:17.903 -04:00 [INF] {"Username":"alice","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"80000006-000a-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-28T18:18:17.0000000Z","ProcessId":5528,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2020-08-28 14:18:43.954 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 14:18:44.114 -04:00 [DBG] Augmenting SignInContext
2020-08-28 14:18:44.115 -04:00 [DBG] Adding idp claim with value: local
2020-08-28 14:18:44.115 -04:00 [DBG] Adding auth_time claim with value: 1598638724
2020-08-28 14:18:44.125 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 14:18:44.127 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"206657c1-9c8e-4a8a-919e-dd024fac5c21","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000006-0003-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-28T18:18:44.0000000Z","ProcessId":5528,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-28 14:18:44.158 -04:00 [DBG] 0 persisted grants found for 206657c1-9c8e-4a8a-919e-dd024fac5c21
2020-08-28 14:19:05.406 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 14:19:05.423 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-28 14:19:05.424 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-28 14:19:05.424 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-28 14:19:05.424 -04:00 [INF] {"SubjectId":"206657c1-9c8e-4a8a-919e-dd024fac5c21","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000012-0006-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-28T18:19:05.0000000Z","ProcessId":5528,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-28 14:19:09.203 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-28 14:19:11.098 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-28 14:19:12.077 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 14:19:12.174 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-08-28 14:19:12.361 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"c6f40667-088d-4ab8-bba8-97f3f5e7f57a","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000008-000a-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-28T18:19:12.0000000Z","ProcessId":5528,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-28 14:19:12.365 -04:00 [DBG] Augmenting SignInContext
2020-08-28 14:19:12.365 -04:00 [DBG] Adding amr claim with value: external
2020-08-28 14:19:12.366 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 14:19:12.366 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-28 14:19:12.371 -04:00 [DBG] 0 persisted grants found for c6f40667-088d-4ab8-bba8-97f3f5e7f57a
2020-08-28 14:33:04.143 -04:00 [INF] Starting host...
2020-08-28 14:33:04.967 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-28 14:33:05.047 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-28 14:33:05.047 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-28 14:33:05.047 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-28 14:33:05.047 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-28 14:33:05.047 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-28 14:33:05.047 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-28 14:33:05.219 -04:00 [DBG] Login Url: /Account/Login
2020-08-28 14:33:05.220 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-28 14:33:05.220 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-28 14:33:05.220 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-28 14:33:05.220 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-28 14:33:05.220 -04:00 [DBG] Error Url: /home/error
2020-08-28 14:33:05.220 -04:00 [DBG] Error Id Parameter: errorId
2020-08-28 14:33:05.231 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 14:33:05.235 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 14:33:07.897 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 14:33:07.897 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 14:33:07.906 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-28 14:33:07.913 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 14:33:07.914 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 14:33:09.719 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 14:33:09.722 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 14:33:09.722 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 14:33:10.603 -04:00 [DBG] Augmenting SignInContext
2020-08-28 14:33:10.604 -04:00 [DBG] Adding idp claim with value: local
2020-08-28 14:33:10.604 -04:00 [DBG] Adding auth_time claim with value: 1598639590
2020-08-28 14:33:10.610 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 14:33:10.613 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 14:33:10.623 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000014-0008-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-28T18:33:10.0000000Z","ProcessId":2136,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-28 14:33:10.684 -04:00 [DBG] 1 persisted grants found for 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 14:33:11.090 -04:00 [DBG] STSClientId found in database: true
2020-08-28 14:33:11.095 -04:00 [DBG] client configuration validation for client STSClientId succeeded.
2020-08-28 14:33:11.141 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-08-28 14:33:11.187 -04:00 [DBG] Found [] API scopes in database
2020-08-28 14:33:27.716 -04:00 [DBG] 1 persisted grants found for 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 14:33:27.724 -04:00 [DBG] STSClientId found in database: true
2020-08-28 14:33:27.725 -04:00 [DBG] client configuration validation for client STSClientId succeeded.
2020-08-28 14:33:27.726 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-08-28 14:33:27.727 -04:00 [DBG] Found [] API scopes in database
2020-08-28 14:33:34.158 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 14:33:34.170 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-28 14:33:34.171 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-28 14:33:34.171 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-28 14:33:34.171 -04:00 [INF] {"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"8000000f-0000-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-28T18:33:34.0000000Z","ProcessId":2136,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-28 14:33:37.066 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-28 14:33:38.716 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-28 14:33:39.003 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 14:33:39.100 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-08-28 14:33:39.291 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"8000001c-0004-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-28T18:33:39.0000000Z","ProcessId":2136,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-28 14:33:39.295 -04:00 [DBG] Augmenting SignInContext
2020-08-28 14:33:39.295 -04:00 [DBG] Adding amr claim with value: external
2020-08-28 14:33:39.295 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 14:33:39.295 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-28 14:33:39.302 -04:00 [DBG] 0 persisted grants found for 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-28 14:33:53.868 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 14:33:53.872 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-28 14:33:53.872 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-28 14:33:53.872 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-28 14:33:53.872 -04:00 [INF] {"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"8000001e-0008-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-28T18:33:53.0000000Z","ProcessId":2136,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-28 14:33:57.014 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-28 14:33:59.255 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 14:33:59.267 -04:00 [DBG] Augmenting SignInContext
2020-08-28 14:33:59.267 -04:00 [DBG] Adding idp claim with value: local
2020-08-28 14:33:59.267 -04:00 [DBG] Adding auth_time claim with value: 1598639639
2020-08-28 14:33:59.268 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 14:33:59.269 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000032-0006-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-28T18:33:59.0000000Z","ProcessId":2136,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-28 14:33:59.273 -04:00 [DBG] 1 persisted grants found for 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 14:33:59.282 -04:00 [DBG] STSClientId found in database: true
2020-08-28 14:33:59.282 -04:00 [DBG] client configuration validation for client STSClientId succeeded.
2020-08-28 14:33:59.283 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-08-28 14:33:59.284 -04:00 [DBG] Found [] API scopes in database
2020-08-28 15:33:05.035 -04:00 [INF] Removing 2 grants
2020-08-28 15:33:05.057 -04:00 [INF] Removing 0 device flow codes
2020-08-28 16:56:44.151 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 16:56:44.151 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 16:56:44.153 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-08-28 16:56:44.160 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 16:56:44.160 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 16:56:46.482 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 16:56:46.484 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 16:56:46.484 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 16:56:46.518 -04:00 [DBG] Augmenting SignInContext
2020-08-28 16:56:46.519 -04:00 [DBG] Adding idp claim with value: local
2020-08-28 16:56:46.519 -04:00 [DBG] Adding auth_time claim with value: 1598648206
2020-08-28 16:56:46.519 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-28 16:56:46.520 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 16:56:46.522 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000046-0008-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-28T20:56:46.0000000Z","ProcessId":2136,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-28 16:56:46.529 -04:00 [DBG] 1 persisted grants found for 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 16:56:46.560 -04:00 [DBG] STSClientId found in database: true
2020-08-28 16:56:46.561 -04:00 [DBG] client configuration validation for client STSClientId succeeded.
2020-08-28 16:56:46.565 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-08-28 16:56:46.574 -04:00 [DBG] Found [] API scopes in database
2020-08-28 16:56:53.292 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 16:56:53.294 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-28 16:56:53.295 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-28 16:56:53.295 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-28 16:56:53.295 -04:00 [INF] {"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000077-0006-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-28T20:56:53.0000000Z","ProcessId":2136,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-28 16:57:09.443 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 16:57:09.455 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 16:57:09.456 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 16:57:09.458 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 16:57:09.460 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 16:57:09.460 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 16:57:09.462 -04:00 [DBG] Start discovery request
2020-08-28 16:57:09.576 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 16:57:09.647 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 16:57:09.650 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 16:57:09.650 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 16:57:09.652 -04:00 [DBG] Start authorize request
2020-08-28 16:57:09.654 -04:00 [DBG] No user present in authorize request
2020-08-28 16:57:09.656 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 16:57:09.671 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:57:09.671 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:57:09.679 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 16:57:09.687 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:57:09.696 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 16:57:09.704 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:57:09.705 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 16:57:09.709 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 16:57:09.714 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile app.api.employeeprofile.read","State":"64f68be30c004478aa46f9b3dd4565a6","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"client_id":"angular_spa","redirect_uri":"https://localhost:4200/auth-callback","response_type":"code","scope":"openid profile app.api.employeeprofile.read","state":"64f68be30c004478aa46f9b3dd4565a6","code_challenge":"H-axnwTzdvzs65EoGw2rutRBJuwVOiyQbGW3ZyW0ZC8","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 16:57:09.718 -04:00 [INF] Showing login: User is not authenticated
2020-08-28 16:57:09.727 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 16:57:09.736 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:57:09.736 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:57:09.736 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 16:57:09.738 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:57:09.739 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 16:57:09.744 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:57:09.746 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 16:57:09.746 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 16:57:09.756 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:57:09.756 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:58:11.914 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 16:58:11.925 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 16:58:11.925 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 16:58:11.926 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 16:58:11.926 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 16:58:11.926 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 16:58:11.926 -04:00 [DBG] Start discovery request
2020-08-28 16:58:11.933 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 16:58:11.942 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 16:58:11.942 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 16:58:11.942 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 16:58:11.942 -04:00 [DBG] Start authorize request
2020-08-28 16:58:11.942 -04:00 [DBG] No user present in authorize request
2020-08-28 16:58:11.942 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 16:58:11.957 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:58:11.957 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:58:11.958 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 16:58:11.960 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:58:11.968 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 16:58:11.970 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:58:11.971 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 16:58:11.971 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 16:58:11.971 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile app.api.employeeprofile.read","State":"f026ff87460240f6b3e93182d0f4a634","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"client_id":"angular_spa","redirect_uri":"https://localhost:4200/auth-callback","response_type":"code","scope":"openid profile app.api.employeeprofile.read","state":"f026ff87460240f6b3e93182d0f4a634","code_challenge":"IlvFTRuo07nCiZp3p9ygubcNJyX0u9e4j5yM-Smqhl0","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 16:58:11.971 -04:00 [INF] Showing login: User is not authenticated
2020-08-28 16:58:11.975 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 16:58:11.983 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:58:11.984 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:58:11.984 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 16:58:11.985 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:58:11.986 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 16:58:11.988 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:58:11.989 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 16:58:11.989 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 16:58:11.997 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:58:11.997 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:58:16.990 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-28 16:58:18.255 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 16:58:18.259 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-08-28 16:58:18.288 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000062-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-28T20:58:18.0000000Z","ProcessId":2136,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-28 16:58:18.289 -04:00 [DBG] Augmenting SignInContext
2020-08-28 16:58:18.289 -04:00 [DBG] Adding amr claim with value: external
2020-08-28 16:58:18.289 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 16:58:18.289 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-28 16:58:18.293 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-28 16:58:18.294 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-28 16:58:18.294 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-28 16:58:18.296 -04:00 [DBG] Start authorize callback request
2020-08-28 16:58:18.298 -04:00 [DBG] User in authorize request: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-28 16:58:18.298 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 16:58:18.316 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:58:18.316 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:58:18.316 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 16:58:18.320 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:58:18.328 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 16:58:18.330 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:58:18.331 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 16:58:18.331 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 16:58:18.331 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile app.api.employeeprofile.read","State":"f026ff87460240f6b3e93182d0f4a634","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"N69VNPzdNgpV5RsvUQP5hA","Raw":{"client_id":"angular_spa","redirect_uri":"https://localhost:4200/auth-callback","response_type":"code","scope":"openid profile app.api.employeeprofile.read","state":"f026ff87460240f6b3e93182d0f4a634","code_challenge":"IlvFTRuo07nCiZp3p9ygubcNJyX0u9e4j5yM-Smqhl0","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 16:58:18.345 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-28 16:58:18.347 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-28 16:58:18.371 -04:00 [DBG] NVpE9JNSsktcYfIta5nos7sEcPYCzI87LqJaw8gUaSE= not found in database
2020-08-28 16:58:18.383 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****c4iY","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000064-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-28T20:58:18.0000000Z","ProcessId":2136,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 16:58:18.384 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ClientId":"angular_spa","RedirectUri":"https://localhost:4200/auth-callback","State":"f026ff87460240f6b3e93182d0f4a634","Scope":"openid profile app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-28 16:58:18.388 -04:00 [DBG] Augmenting SignInContext
2020-08-28 16:58:18.388 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 16:58:18.639 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 16:58:18.642 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 16:58:18.642 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 16:58:18.642 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 16:58:18.643 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 16:58:18.643 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 16:58:18.643 -04:00 [DBG] Start discovery request
2020-08-28 16:58:18.655 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 16:58:18.685 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-28 16:58:18.687 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 16:58:18.687 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 16:58:18.688 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-28 16:58:18.690 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-28 16:58:18.690 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-28 16:58:18.692 -04:00 [DBG] Start token request.
2020-08-28 16:58:18.693 -04:00 [DBG] Start client validation
2020-08-28 16:58:18.696 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-28 16:58:18.696 -04:00 [DBG] Start parsing for secret in post body
2020-08-28 16:58:18.697 -04:00 [DBG] client id without secret found
2020-08-28 16:58:18.697 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-28 16:58:18.697 -04:00 [DBG] Secret id found: angular_spa
2020-08-28 16:58:18.714 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:58:18.714 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:58:18.714 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-28 16:58:18.714 -04:00 [DBG] Client validation success
2020-08-28 16:58:18.715 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000000a-0007-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-28T20:58:18.0000000Z","ProcessId":2136,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-28 16:58:18.718 -04:00 [DBG] Start token request validation
2020-08-28 16:58:18.720 -04:00 [DBG] Start validation of authorization code token request
2020-08-28 16:58:18.727 -04:00 [DBG] NVpE9JNSsktcYfIta5nos7sEcPYCzI87LqJaw8gUaSE= found in database: true
2020-08-28 16:58:18.740 -04:00 [DBG] removing NVpE9JNSsktcYfIta5nos7sEcPYCzI87LqJaw8gUaSE= persisted grant from database
2020-08-28 16:58:18.744 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-28 16:58:18.746 -04:00 [DBG] Validation of authorization code token request success
2020-08-28 16:58:18.749 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"l2PKA4FKvAdOPCWiWlzNv8X-PeQNXK8dk4cZGwZc4iY","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"angular_spa","code":"l2PKA4FKvAdOPCWiWlzNv8X-PeQNXK8dk4cZGwZc4iY","redirect_uri":"https://localhost:4200/auth-callback","code_verifier":"8b09691c728e41a28cd9919ca7d2ece3ff9f6ecdae2d4a0192bc2230db73bbd2e68e964133a049199b1e058abdf71a4a","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-08-28 16:58:18.759 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:58:18.759 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:58:18.762 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:58:18.771 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 16:58:18.778 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-28 16:58:18.778 -04:00 [DBG] Getting claims for access token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-28 16:58:18.808 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:58:18.808 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:58:18.809 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:58:18.811 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 16:58:18.814 -04:00 [DBG] Getting claims for identity token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188 and client: angular_spa
2020-08-28 16:58:18.814 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-28 16:58:18.817 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****f_aA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****NkNw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000000a-0007-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-28T20:58:18.0000000Z","ProcessId":2136,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 16:58:18.817 -04:00 [DBG] Token request success.
2020-08-28 16:58:18.844 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 16:58:18.846 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 16:58:18.846 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 16:58:18.848 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 16:58:18.850 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 16:58:18.850 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 16:58:18.851 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-28 16:58:18.852 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-28 16:58:18.852 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-28 16:58:18.854 -04:00 [DBG] Start userinfo request
2020-08-28 16:58:18.855 -04:00 [DBG] Bearer token found in header
2020-08-28 16:58:18.874 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:58:18.874 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:58:18.886 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:58:18.887 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:58:18.889 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 16:58:18.889 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598648298,"exp":1598651898,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1598648298,"idp":"azuread","scope":["openid","profile","app.api.employeeprofile.read"],"amr":"external"},"$type":"TokenValidationLog"}
2020-08-28 16:58:18.892 -04:00 [DBG] Creating userinfo response
2020-08-28 16:58:18.894 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 16:58:18.894 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 16:58:18.896 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:58:18.900 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile
2020-08-28 16:58:18.900 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 16:58:18.902 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:58:18.905 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username
2020-08-28 16:58:18.905 -04:00 [DBG] End userinfo request
2020-08-28 16:58:18.913 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 16:58:18.913 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 16:58:18.913 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 16:58:18.913 -04:00 [DBG] Rendering check session result
2020-08-28 16:58:44.063 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 16:58:44.067 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 16:58:44.067 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 16:58:44.067 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 16:58:44.067 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 16:58:44.067 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 16:58:44.067 -04:00 [DBG] Start discovery request
2020-08-28 16:58:44.082 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 16:58:44.085 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 16:58:44.087 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 16:58:44.087 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 16:58:44.090 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 16:58:44.090 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 16:58:44.090 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 16:58:44.090 -04:00 [DBG] Start discovery request
2020-08-28 16:58:44.093 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 16:58:44.279 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 16:58:44.281 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 16:58:44.281 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 16:58:44.281 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 16:58:44.281 -04:00 [DBG] Rendering check session result
2020-08-28 16:58:44.284 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 16:58:44.284 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 16:58:44.284 -04:00 [DBG] Start authorize request
2020-08-28 16:58:44.284 -04:00 [DBG] User in authorize request: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-28 16:58:44.284 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 16:58:44.301 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:58:44.301 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:58:44.301 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 16:58:44.304 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:58:44.312 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 16:58:44.314 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:58:44.316 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 16:58:44.316 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 16:58:44.316 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile app.api.employeeprofile.read","State":"02a73dfef19949b7acb76358748e0e85","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"N69VNPzdNgpV5RsvUQP5hA","Raw":{"client_id":"angular_spa","redirect_uri":"https://localhost:4200/auth-callback","response_type":"code","scope":"openid profile app.api.employeeprofile.read","state":"02a73dfef19949b7acb76358748e0e85","code_challenge":"7d8p2NmDER8TBrTwQnd8RitkKXokGwQlH26UzTQ3ORc","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 16:58:44.319 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-28 16:58:44.319 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-28 16:58:44.321 -04:00 [DBG] 6ylwGSmbB6IZIdZhgEhNjgvX5RBnghBeMQS9Iqi+1As= not found in database
2020-08-28 16:58:44.323 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****RJhQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000033-0008-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-28T20:58:44.0000000Z","ProcessId":2136,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 16:58:44.323 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ClientId":"angular_spa","RedirectUri":"https://localhost:4200/auth-callback","State":"02a73dfef19949b7acb76358748e0e85","Scope":"openid profile app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-28 16:58:44.748 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 16:58:44.750 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 16:58:44.750 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 16:58:44.751 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 16:58:44.751 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 16:58:44.751 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 16:58:44.751 -04:00 [DBG] Start discovery request
2020-08-28 16:58:44.754 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 16:58:44.756 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 16:58:44.757 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 16:58:44.757 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 16:58:44.758 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 16:58:44.758 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 16:58:44.758 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 16:58:44.758 -04:00 [DBG] Start discovery request
2020-08-28 16:58:44.761 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 16:58:44.770 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 16:58:44.770 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 16:58:44.770 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 16:58:44.770 -04:00 [DBG] Rendering check session result
2020-08-28 16:58:44.952 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-28 16:58:44.955 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 16:58:44.955 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 16:58:44.955 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-28 16:58:44.955 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-28 16:58:44.955 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-28 16:58:44.955 -04:00 [DBG] Start token request.
2020-08-28 16:58:44.956 -04:00 [DBG] Start client validation
2020-08-28 16:58:44.956 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-28 16:58:44.956 -04:00 [DBG] Start parsing for secret in post body
2020-08-28 16:58:44.956 -04:00 [DBG] client id without secret found
2020-08-28 16:58:44.956 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-28 16:58:44.956 -04:00 [DBG] Secret id found: angular_spa
2020-08-28 16:58:44.964 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:58:44.964 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:58:44.964 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-28 16:58:44.964 -04:00 [DBG] Client validation success
2020-08-28 16:58:44.965 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000002c-0004-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-28T20:58:44.0000000Z","ProcessId":2136,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-28 16:58:44.965 -04:00 [DBG] Start token request validation
2020-08-28 16:58:44.965 -04:00 [DBG] Start validation of authorization code token request
2020-08-28 16:58:44.967 -04:00 [DBG] 6ylwGSmbB6IZIdZhgEhNjgvX5RBnghBeMQS9Iqi+1As= found in database: true
2020-08-28 16:58:44.969 -04:00 [DBG] removing 6ylwGSmbB6IZIdZhgEhNjgvX5RBnghBeMQS9Iqi+1As= persisted grant from database
2020-08-28 16:58:44.973 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-28 16:58:44.975 -04:00 [DBG] Validation of authorization code token request success
2020-08-28 16:58:44.975 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"HMW_u8LbhqGxX-yG5dmg5sqF67FGZhpGBSU2VuARJhQ","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"angular_spa","code":"HMW_u8LbhqGxX-yG5dmg5sqF67FGZhpGBSU2VuARJhQ","redirect_uri":"https://localhost:4200/auth-callback","code_verifier":"b6f71706756d4e9ca690362ecd79ad9b9ce854fd76f7495c8986cfde8cef885fd40fbec3c1b04529bf7ecbcaa93d5d83","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-08-28 16:58:44.982 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:58:44.982 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:58:44.984 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:58:44.986 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 16:58:44.987 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-28 16:58:44.987 -04:00 [DBG] Getting claims for access token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-28 16:58:44.998 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:58:44.998 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:58:45.000 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:58:45.002 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 16:58:45.002 -04:00 [DBG] Getting claims for identity token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188 and client: angular_spa
2020-08-28 16:58:45.002 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-28 16:58:45.003 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****9SEw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****AxGg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000002c-0004-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-28T20:58:45.0000000Z","ProcessId":2136,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 16:58:45.003 -04:00 [DBG] Token request success.
2020-08-28 16:58:45.174 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 16:58:45.175 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 16:58:45.175 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 16:58:45.177 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 16:58:45.178 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 16:58:45.178 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 16:58:45.179 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-28 16:58:45.179 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-28 16:58:45.179 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-28 16:58:45.179 -04:00 [DBG] Start userinfo request
2020-08-28 16:58:45.179 -04:00 [DBG] Bearer token found in header
2020-08-28 16:58:45.188 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:58:45.188 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:58:45.195 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:58:45.195 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:58:45.197 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 16:58:45.197 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598648324,"exp":1598651924,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1598648298,"idp":"azuread","scope":["openid","profile","app.api.employeeprofile.read"],"amr":"external"},"$type":"TokenValidationLog"}
2020-08-28 16:58:45.197 -04:00 [DBG] Creating userinfo response
2020-08-28 16:58:45.197 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 16:58:45.197 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 16:58:45.199 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:58:45.199 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile
2020-08-28 16:58:45.199 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 16:58:45.200 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:58:45.203 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username
2020-08-28 16:58:45.203 -04:00 [DBG] End userinfo request
2020-08-28 16:59:20.553 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 16:59:20.561 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-28 16:59:20.561 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-28 16:59:20.561 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-28 16:59:20.561 -04:00 [INF] {"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000029-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-28T20:59:20.0000000Z","ProcessId":2136,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-28 16:59:29.297 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 16:59:29.300 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 16:59:29.300 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 16:59:29.300 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 16:59:29.300 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 16:59:29.300 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 16:59:29.300 -04:00 [DBG] Start discovery request
2020-08-28 16:59:29.315 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 16:59:29.318 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 16:59:29.319 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 16:59:29.320 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 16:59:29.320 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 16:59:29.320 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 16:59:29.320 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 16:59:29.320 -04:00 [DBG] Start discovery request
2020-08-28 16:59:29.326 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 16:59:29.507 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 16:59:29.507 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 16:59:29.507 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 16:59:29.507 -04:00 [DBG] Start authorize request
2020-08-28 16:59:29.508 -04:00 [DBG] No user present in authorize request
2020-08-28 16:59:29.508 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 16:59:29.517 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 16:59:29.517 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 16:59:29.517 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 16:59:29.517 -04:00 [DBG] Rendering check session result
2020-08-28 16:59:29.531 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:59:29.531 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:59:29.531 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 16:59:29.534 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:59:29.543 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 16:59:29.544 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:59:29.546 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 16:59:29.546 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 16:59:29.547 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile app.api.employeeprofile.read","State":"510c63cd7aa14c43bb6cccc102ea5ddd","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"client_id":"angular_spa","redirect_uri":"https://localhost:4200/auth-callback","response_type":"code","scope":"openid profile app.api.employeeprofile.read","state":"510c63cd7aa14c43bb6cccc102ea5ddd","code_challenge":"Jpa2LVOvE6BVf9ez2e0F5PcM8gg4YravTPRtt5eMf7Q","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 16:59:29.547 -04:00 [INF] Showing login: User is not authenticated
2020-08-28 16:59:29.552 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 16:59:29.561 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:59:29.561 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:59:29.561 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 16:59:29.563 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:59:29.564 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 16:59:29.565 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:59:29.567 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 16:59:29.567 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 16:59:29.574 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:59:29.574 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:59:34.581 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 16:59:34.583 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 16:59:34.593 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:59:34.593 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:59:34.593 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 16:59:34.594 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:59:34.595 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 16:59:34.596 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:59:34.597 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 16:59:34.598 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 16:59:34.606 -04:00 [DBG] Augmenting SignInContext
2020-08-28 16:59:34.606 -04:00 [DBG] Adding idp claim with value: local
2020-08-28 16:59:34.606 -04:00 [DBG] Adding auth_time claim with value: 1598648374
2020-08-28 16:59:34.606 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 16:59:34.607 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000037-0008-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-28T20:59:34.0000000Z","ProcessId":2136,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-28 16:59:34.614 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:59:34.614 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:59:34.623 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-28 16:59:34.623 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-28 16:59:34.623 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-28 16:59:34.623 -04:00 [DBG] Start authorize callback request
2020-08-28 16:59:34.623 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 16:59:34.623 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 16:59:34.630 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:59:34.630 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:59:34.630 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 16:59:34.659 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:59:34.660 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 16:59:34.661 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:59:34.662 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 16:59:34.663 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 16:59:34.663 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile app.api.employeeprofile.read","State":"510c63cd7aa14c43bb6cccc102ea5ddd","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"mHVhVDJpMfsXxZy8i-sgdA","Raw":{"client_id":"angular_spa","redirect_uri":"https://localhost:4200/auth-callback","response_type":"code","scope":"openid profile app.api.employeeprofile.read","state":"510c63cd7aa14c43bb6cccc102ea5ddd","code_challenge":"Jpa2LVOvE6BVf9ez2e0F5PcM8gg4YravTPRtt5eMf7Q","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 16:59:34.665 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-28 16:59:34.665 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-28 16:59:34.666 -04:00 [DBG] W2+zgapkQOFnD+HZKPWveKYsIpDp4G1aZ3FutxU2Q0c= not found in database
2020-08-28 16:59:34.668 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****w_Gc","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000038-0004-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-28T20:59:34.0000000Z","ProcessId":2136,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 16:59:34.668 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200/auth-callback","State":"510c63cd7aa14c43bb6cccc102ea5ddd","Scope":"openid profile app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-28 16:59:34.669 -04:00 [DBG] Augmenting SignInContext
2020-08-28 16:59:34.669 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 16:59:34.960 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 16:59:34.962 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 16:59:34.962 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 16:59:34.962 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 16:59:34.962 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 16:59:34.962 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 16:59:34.962 -04:00 [DBG] Start discovery request
2020-08-28 16:59:34.965 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 16:59:34.967 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 16:59:34.968 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 16:59:34.968 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 16:59:34.969 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 16:59:34.969 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 16:59:34.969 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 16:59:34.969 -04:00 [DBG] Start discovery request
2020-08-28 16:59:34.971 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 16:59:34.984 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 16:59:34.984 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 16:59:34.984 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 16:59:34.984 -04:00 [DBG] Rendering check session result
2020-08-28 16:59:35.174 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-28 16:59:35.176 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 16:59:35.176 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 16:59:35.177 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-28 16:59:35.184 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-28 16:59:35.184 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-28 16:59:35.184 -04:00 [DBG] Start token request.
2020-08-28 16:59:35.184 -04:00 [DBG] Start client validation
2020-08-28 16:59:35.184 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-28 16:59:35.184 -04:00 [DBG] Start parsing for secret in post body
2020-08-28 16:59:35.184 -04:00 [DBG] client id without secret found
2020-08-28 16:59:35.184 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-28 16:59:35.184 -04:00 [DBG] Secret id found: angular_spa
2020-08-28 16:59:35.192 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:59:35.193 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:59:35.193 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-28 16:59:35.193 -04:00 [DBG] Client validation success
2020-08-28 16:59:35.193 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000003d-0008-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-28T20:59:35.0000000Z","ProcessId":2136,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-28 16:59:35.193 -04:00 [DBG] Start token request validation
2020-08-28 16:59:35.193 -04:00 [DBG] Start validation of authorization code token request
2020-08-28 16:59:35.194 -04:00 [DBG] W2+zgapkQOFnD+HZKPWveKYsIpDp4G1aZ3FutxU2Q0c= found in database: true
2020-08-28 16:59:35.196 -04:00 [DBG] removing W2+zgapkQOFnD+HZKPWveKYsIpDp4G1aZ3FutxU2Q0c= persisted grant from database
2020-08-28 16:59:35.200 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-28 16:59:35.201 -04:00 [DBG] Validation of authorization code token request success
2020-08-28 16:59:35.201 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"VbgoXC_v6h8XyHu77zgtKr9IFWUqTReNhXmjqRNw_Gc","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"angular_spa","code":"VbgoXC_v6h8XyHu77zgtKr9IFWUqTReNhXmjqRNw_Gc","redirect_uri":"https://localhost:4200/auth-callback","code_verifier":"9486515f85ca4b3abf4e8e595fcac524e5e8a1a6ecd643fc9ebbe507f59c7820b1f87c2c80a94b898861f60f42b9b936","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-08-28 16:59:35.208 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:59:35.208 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:59:35.210 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:59:35.211 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 16:59:35.211 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-28 16:59:35.211 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 16:59:35.224 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:59:35.224 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:59:35.226 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:59:35.227 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 16:59:35.227 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-28 16:59:35.227 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-28 16:59:35.228 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****X9gQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****aDDA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000003d-0008-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-28T20:59:35.0000000Z","ProcessId":2136,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 16:59:35.228 -04:00 [DBG] Token request success.
2020-08-28 16:59:35.388 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 16:59:35.389 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 16:59:35.389 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 16:59:35.391 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 16:59:35.393 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 16:59:35.393 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 16:59:35.393 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-28 16:59:35.396 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-28 16:59:35.396 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-28 16:59:35.396 -04:00 [DBG] Start userinfo request
2020-08-28 16:59:35.396 -04:00 [DBG] Bearer token found in header
2020-08-28 16:59:35.406 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:59:35.406 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:59:35.422 -04:00 [DBG] angular_spa found in database: true
2020-08-28 16:59:35.422 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 16:59:35.424 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 16:59:35.424 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598648375,"exp":1598651975,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598648374,"idp":"local","scope":["openid","profile","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-28 16:59:35.424 -04:00 [DBG] Creating userinfo response
2020-08-28 16:59:35.425 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 16:59:35.425 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 16:59:35.426 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:59:35.426 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile
2020-08-28 16:59:35.426 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 16:59:35.427 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 16:59:35.431 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username
2020-08-28 16:59:35.431 -04:00 [DBG] End userinfo request
2020-08-28 17:01:04.360 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 17:01:04.370 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 17:01:04.370 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 17:01:04.370 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 17:01:04.370 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 17:01:04.370 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 17:01:04.370 -04:00 [DBG] Start discovery request
2020-08-28 17:01:04.377 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 17:01:04.387 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 17:01:04.387 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 17:01:04.387 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 17:01:04.387 -04:00 [DBG] Start authorize request
2020-08-28 17:01:04.387 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 17:01:04.387 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 17:01:04.407 -04:00 [DBG] angular_spa found in database: true
2020-08-28 17:01:04.407 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 17:01:04.407 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 17:01:04.416 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 17:01:04.427 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 17:01:04.428 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 17:01:04.429 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 17:01:04.429 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 17:01:04.430 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile app.api.employeeprofile.read","State":"c6c666df1e8f43a790ae397becfb2315","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"mHVhVDJpMfsXxZy8i-sgdA","Raw":{"client_id":"angular_spa","redirect_uri":"https://localhost:4200/auth-callback","response_type":"code","scope":"openid profile app.api.employeeprofile.read","state":"c6c666df1e8f43a790ae397becfb2315","code_challenge":"XJ-3SSGQFpnFGNiYVUVTja3dwfzVPigC9JaUtgUro5Q","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 17:01:04.431 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-28 17:01:04.431 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-28 17:01:04.433 -04:00 [DBG] NRi1CGixdh08e174jB3yM6bq0IW/V7zHTzsWNGq6mME= not found in database
2020-08-28 17:01:04.436 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****0qvU","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000004d-000a-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-28T21:01:04.0000000Z","ProcessId":2136,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 17:01:04.436 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200/auth-callback","State":"c6c666df1e8f43a790ae397becfb2315","Scope":"openid profile app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-28 17:01:04.702 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 17:01:04.704 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 17:01:04.704 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 17:01:04.704 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 17:01:04.704 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 17:01:04.704 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 17:01:04.704 -04:00 [DBG] Start discovery request
2020-08-28 17:01:04.707 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 17:01:04.722 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-28 17:01:04.723 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 17:01:04.723 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 17:01:04.723 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-28 17:01:04.724 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-28 17:01:04.724 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-28 17:01:04.724 -04:00 [DBG] Start token request.
2020-08-28 17:01:04.724 -04:00 [DBG] Start client validation
2020-08-28 17:01:04.724 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-28 17:01:04.724 -04:00 [DBG] Start parsing for secret in post body
2020-08-28 17:01:04.724 -04:00 [DBG] client id without secret found
2020-08-28 17:01:04.724 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-28 17:01:04.724 -04:00 [DBG] Secret id found: angular_spa
2020-08-28 17:01:04.731 -04:00 [DBG] angular_spa found in database: true
2020-08-28 17:01:04.731 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 17:01:04.731 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-28 17:01:04.731 -04:00 [DBG] Client validation success
2020-08-28 17:01:04.731 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000009b-0004-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-28T21:01:04.0000000Z","ProcessId":2136,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-28 17:01:04.731 -04:00 [DBG] Start token request validation
2020-08-28 17:01:04.731 -04:00 [DBG] Start validation of authorization code token request
2020-08-28 17:01:04.733 -04:00 [DBG] NRi1CGixdh08e174jB3yM6bq0IW/V7zHTzsWNGq6mME= found in database: true
2020-08-28 17:01:04.734 -04:00 [DBG] removing NRi1CGixdh08e174jB3yM6bq0IW/V7zHTzsWNGq6mME= persisted grant from database
2020-08-28 17:01:04.737 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-28 17:01:04.738 -04:00 [DBG] Validation of authorization code token request success
2020-08-28 17:01:04.738 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"5hHeIpJbgTqoTP1Bhtb1AhKVlRuap9DZVR3iCqL0qvU","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"angular_spa","code":"5hHeIpJbgTqoTP1Bhtb1AhKVlRuap9DZVR3iCqL0qvU","redirect_uri":"https://localhost:4200/auth-callback","code_verifier":"f58e1ee9cce340db914566112484d87dffae51bc056d4b51ae7a2f8112c1b8081417b3b9147a4e3f93bad7cd16f6098d","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-08-28 17:01:04.745 -04:00 [DBG] angular_spa found in database: true
2020-08-28 17:01:04.745 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 17:01:04.746 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 17:01:04.748 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 17:01:04.748 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-28 17:01:04.748 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 17:01:04.765 -04:00 [DBG] angular_spa found in database: true
2020-08-28 17:01:04.765 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 17:01:04.766 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 17:01:04.767 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 17:01:04.768 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-28 17:01:04.768 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-28 17:01:04.769 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****R9Xw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****qLmQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000009b-0004-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-28T21:01:04.0000000Z","ProcessId":2136,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 17:01:04.769 -04:00 [DBG] Token request success.
2020-08-28 17:01:04.913 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 17:01:04.915 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 17:01:04.915 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 17:01:04.918 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 17:01:04.919 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 17:01:04.919 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 17:01:04.919 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-28 17:01:04.919 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-28 17:01:04.920 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-28 17:01:04.920 -04:00 [DBG] Start userinfo request
2020-08-28 17:01:04.920 -04:00 [DBG] Bearer token found in header
2020-08-28 17:01:04.928 -04:00 [DBG] angular_spa found in database: true
2020-08-28 17:01:04.928 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 17:01:04.934 -04:00 [DBG] angular_spa found in database: true
2020-08-28 17:01:04.934 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 17:01:04.935 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 17:01:04.936 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598648464,"exp":1598652064,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598648374,"idp":"local","scope":["openid","profile","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-28 17:01:04.936 -04:00 [DBG] Creating userinfo response
2020-08-28 17:01:04.936 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 17:01:04.936 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 17:01:04.937 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 17:01:04.937 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile
2020-08-28 17:01:04.937 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 17:01:04.938 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 17:01:04.942 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username
2020-08-28 17:01:04.942 -04:00 [DBG] End userinfo request
2020-08-28 17:01:04.950 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 17:01:04.950 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 17:01:04.950 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 17:01:04.950 -04:00 [DBG] Rendering check session result
2020-08-28 17:04:18.039 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 17:04:18.041 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 17:04:18.041 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 17:04:18.041 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 17:04:18.041 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 17:04:18.041 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 17:04:18.041 -04:00 [DBG] Start discovery request
2020-08-28 17:04:18.050 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 17:04:18.056 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 17:04:18.060 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 17:04:18.061 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 17:04:18.061 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 17:04:18.061 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 17:04:18.061 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 17:04:18.061 -04:00 [DBG] Start discovery request
2020-08-28 17:04:18.064 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 17:04:18.252 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 17:04:18.253 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 17:04:18.253 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 17:04:18.253 -04:00 [DBG] Start authorize request
2020-08-28 17:04:18.253 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 17:04:18.253 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 17:04:18.253 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 17:04:18.254 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 17:04:18.254 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 17:04:18.254 -04:00 [DBG] Rendering check session result
2020-08-28 17:04:18.272 -04:00 [DBG] angular_spa found in database: true
2020-08-28 17:04:18.272 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 17:04:18.272 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 17:04:18.275 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 17:04:18.283 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 17:04:18.285 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 17:04:18.286 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 17:04:18.287 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 17:04:18.287 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile app.api.employeeprofile.read","State":"146aaf22cae644e881c43fe67e30b8a0","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"mHVhVDJpMfsXxZy8i-sgdA","Raw":{"client_id":"angular_spa","redirect_uri":"https://localhost:4200/auth-callback","response_type":"code","scope":"openid profile app.api.employeeprofile.read","state":"146aaf22cae644e881c43fe67e30b8a0","code_challenge":"I3icAS_c8keNmLeZHDOaGRe29DqMORMI1Xd-VxEHBzo","code_challenge_method":"S256"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 17:04:18.289 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-28 17:04:18.289 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-28 17:04:18.291 -04:00 [DBG] vOsOBpLPfHbKjlxRTtIT8EBPe9kMlwMVNMP/4auo7l8= not found in database
2020-08-28 17:04:18.292 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****ZdYE","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000030-0001-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-28T21:04:18.0000000Z","ProcessId":2136,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 17:04:18.292 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200/auth-callback","State":"146aaf22cae644e881c43fe67e30b8a0","Scope":"openid profile app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-28 17:04:18.736 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 17:04:18.737 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 17:04:18.737 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 17:04:18.737 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 17:04:18.737 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 17:04:18.737 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 17:04:18.738 -04:00 [DBG] Start discovery request
2020-08-28 17:04:18.740 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 17:04:18.742 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 17:04:18.743 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 17:04:18.743 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 17:04:18.744 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 17:04:18.744 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 17:04:18.744 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 17:04:18.744 -04:00 [DBG] Start discovery request
2020-08-28 17:04:18.747 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 17:04:18.761 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 17:04:18.761 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 17:04:18.761 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 17:04:18.761 -04:00 [DBG] Rendering check session result
2020-08-28 17:04:18.947 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-28 17:04:18.949 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 17:04:18.949 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 17:04:18.949 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-28 17:04:18.950 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-28 17:04:18.950 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-28 17:04:18.950 -04:00 [DBG] Start token request.
2020-08-28 17:04:18.950 -04:00 [DBG] Start client validation
2020-08-28 17:04:18.950 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-28 17:04:18.950 -04:00 [DBG] Start parsing for secret in post body
2020-08-28 17:04:18.950 -04:00 [DBG] client id without secret found
2020-08-28 17:04:18.950 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-28 17:04:18.950 -04:00 [DBG] Secret id found: angular_spa
2020-08-28 17:04:18.957 -04:00 [DBG] angular_spa found in database: true
2020-08-28 17:04:18.957 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 17:04:18.957 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-28 17:04:18.957 -04:00 [DBG] Client validation success
2020-08-28 17:04:18.958 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000007e-0006-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-28T21:04:18.0000000Z","ProcessId":2136,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-28 17:04:18.958 -04:00 [DBG] Start token request validation
2020-08-28 17:04:18.958 -04:00 [DBG] Start validation of authorization code token request
2020-08-28 17:04:18.959 -04:00 [DBG] vOsOBpLPfHbKjlxRTtIT8EBPe9kMlwMVNMP/4auo7l8= found in database: true
2020-08-28 17:04:18.961 -04:00 [DBG] removing vOsOBpLPfHbKjlxRTtIT8EBPe9kMlwMVNMP/4auo7l8= persisted grant from database
2020-08-28 17:04:18.964 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-28 17:04:18.965 -04:00 [DBG] Validation of authorization code token request success
2020-08-28 17:04:18.965 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"gLVPuhETrLHlSjkV8rHWn6STkG56YtIPsLVxbEkZdYE","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"angular_spa","code":"gLVPuhETrLHlSjkV8rHWn6STkG56YtIPsLVxbEkZdYE","redirect_uri":"https://localhost:4200/auth-callback","code_verifier":"b84390aa8c79470583ba9f66a5f524fdf876b3256f954941af995c8a9b9f288794f8704178d34f91b7a032cc34a1a050","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-08-28 17:04:18.972 -04:00 [DBG] angular_spa found in database: true
2020-08-28 17:04:18.972 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 17:04:18.973 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 17:04:18.975 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 17:04:18.975 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-28 17:04:18.975 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 17:04:18.990 -04:00 [DBG] angular_spa found in database: true
2020-08-28 17:04:18.991 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 17:04:18.997 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 17:04:18.998 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 17:04:18.999 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-28 17:04:18.999 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-28 17:04:19.000 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****l1fg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****cnlA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000007e-0006-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-28T21:04:19.0000000Z","ProcessId":2136,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 17:04:19.000 -04:00 [DBG] Token request success.
2020-08-28 17:04:19.166 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 17:04:19.167 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 17:04:19.167 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 17:04:19.169 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 17:04:19.170 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 17:04:19.170 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 17:04:19.170 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-28 17:04:19.171 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-28 17:04:19.171 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-28 17:04:19.171 -04:00 [DBG] Start userinfo request
2020-08-28 17:04:19.171 -04:00 [DBG] Bearer token found in header
2020-08-28 17:04:19.179 -04:00 [DBG] angular_spa found in database: true
2020-08-28 17:04:19.179 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 17:04:19.186 -04:00 [DBG] angular_spa found in database: true
2020-08-28 17:04:19.186 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 17:04:19.187 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 17:04:19.187 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598648658,"exp":1598652258,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598648374,"idp":"local","scope":["openid","profile","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-28 17:04:19.187 -04:00 [DBG] Creating userinfo response
2020-08-28 17:04:19.187 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 17:04:19.187 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 17:04:19.189 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 17:04:19.189 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile
2020-08-28 17:04:19.189 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 17:04:19.190 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 17:04:19.194 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username
2020-08-28 17:04:19.194 -04:00 [DBG] End userinfo request
2020-08-28 17:04:23.073 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 17:04:23.073 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 17:04:23.073 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 17:04:23.073 -04:00 [DBG] Start discovery request
2020-08-28 17:04:23.076 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 17:04:23.103 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-28 17:04:23.104 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-28 17:04:23.104 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-28 17:04:23.105 -04:00 [DBG] Start key discovery request
2020-08-28 17:09:26.826 -04:00 [INF] Starting host...
2020-08-28 17:09:27.138 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-28 17:09:27.201 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-28 17:09:27.201 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-28 17:09:27.201 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-28 17:09:27.201 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-28 17:09:27.201 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-28 17:09:27.201 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-28 17:09:27.309 -04:00 [DBG] Login Url: /Account/Login
2020-08-28 17:09:27.309 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-28 17:09:27.309 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-28 17:09:27.310 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-28 17:09:27.310 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-28 17:09:27.310 -04:00 [DBG] Error Url: /home/error
2020-08-28 17:09:27.310 -04:00 [DBG] Error Id Parameter: errorId
2020-08-28 17:09:40.761 -04:00 [DBG] 1 persisted grants found for 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 17:09:41.288 -04:00 [DBG] STSClientId found in database: true
2020-08-28 17:09:41.292 -04:00 [DBG] client configuration validation for client STSClientId succeeded.
2020-08-28 17:09:41.347 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-08-28 17:09:41.406 -04:00 [DBG] Found [] API scopes in database
2020-08-28 17:09:51.466 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 17:09:51.492 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-28 17:09:51.493 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-28 17:09:51.493 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-28 17:09:51.500 -04:00 [INF] {"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"8000000a-0009-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-28T21:09:51.0000000Z","ProcessId":26976,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-28 17:09:51.523 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-08-28 17:09:51.526 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-08-28 17:09:51.526 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-08-28 17:09:51.527 -04:00 [DBG] Processing signout callback request
2020-08-28 17:09:51.557 -04:00 [DBG] angular_spa found in database: true
2020-08-28 17:09:51.557 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 17:09:51.558 -04:00 [DBG] Client front-channel logout URLs: https://localhost:4200/signout-oidc?sid=mHVhVDJpMfsXxZy8i-sgdA&iss=https%3A%2F%2Flocalhost%3A44354
2020-08-28 17:09:51.558 -04:00 [DBG] No client back-channel logout URLs
2020-08-28 17:09:51.559 -04:00 [INF] Successful signout callback.
2020-08-28 17:09:51.559 -04:00 [DBG] Client front-channel iframe urls: ["https://localhost:4200/signout-oidc?sid=mHVhVDJpMfsXxZy8i-sgdA&iss=https%3A%2F%2Flocalhost%3A44354"]
2020-08-28 17:09:51.560 -04:00 [DBG] No client back-channel iframe urls
2020-08-28 18:38:38.029 -04:00 [INF] Starting host...
2020-08-28 18:38:39.139 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-28 18:38:39.277 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-28 18:38:39.277 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-28 18:38:39.277 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-28 18:38:39.277 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-28 18:38:39.277 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-28 18:38:39.277 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-28 18:38:39.518 -04:00 [DBG] Login Url: /Account/Login
2020-08-28 18:38:39.519 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-28 18:38:39.519 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-28 18:38:39.519 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-28 18:38:39.519 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-28 18:38:39.519 -04:00 [DBG] Error Url: /home/error
2020-08-28 18:38:39.519 -04:00 [DBG] Error Id Parameter: errorId
2020-08-28 18:39:11.568 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 18:39:12.386 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 18:39:12.388 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 18:39:12.394 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 18:39:12.408 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 18:39:12.408 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 18:39:12.409 -04:00 [DBG] Start discovery request
2020-08-28 18:39:12.746 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 18:39:12.807 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 18:39:12.811 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 18:39:12.811 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 18:39:12.812 -04:00 [DBG] Start authorize request
2020-08-28 18:39:12.815 -04:00 [DBG] No user present in authorize request
2020-08-28 18:39:12.846 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 18:39:13.053 -04:00 [DBG] angular_spa found in database: true
2020-08-28 18:39:13.058 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 18:39:13.064 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 18:39:13.105 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 18:39:13.142 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 18:39:13.151 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 18:39:13.152 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 18:39:13.156 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 18:39:13.163 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile app.api.employeeprofile.read","State":"acb1aea180694c6c9ad14199d5c8d56e","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"client_id":"angular_spa","redirect_uri":"https://localhost:4200/auth-callback","response_type":"code","scope":"openid profile app.api.employeeprofile.read","state":"acb1aea180694c6c9ad14199d5c8d56e","code_challenge":"qtLpwmwyFsUY9cyi-NvYbPBbHoUB3NfMTAevYrykfIg","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 18:39:13.167 -04:00 [INF] Showing login: User is not authenticated
2020-08-28 18:39:13.200 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 18:39:13.215 -04:00 [DBG] angular_spa found in database: true
2020-08-28 18:39:13.216 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 18:39:13.216 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 18:39:13.217 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 18:39:13.219 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 18:39:13.221 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 18:39:13.222 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 18:39:13.222 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 18:39:13.233 -04:00 [DBG] angular_spa found in database: true
2020-08-28 18:39:13.233 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 18:39:17.865 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 18:39:17.894 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 18:39:17.904 -04:00 [DBG] angular_spa found in database: true
2020-08-28 18:39:17.904 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 18:39:17.904 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 18:39:17.907 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 18:39:17.908 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 18:39:17.910 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 18:39:17.911 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 18:39:17.911 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 18:39:18.062 -04:00 [DBG] Augmenting SignInContext
2020-08-28 18:39:18.063 -04:00 [DBG] Adding idp claim with value: local
2020-08-28 18:39:18.063 -04:00 [DBG] Adding auth_time claim with value: 1598654358
2020-08-28 18:39:18.072 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 18:39:18.078 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000002-000a-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-28T22:39:18.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-28 18:39:18.085 -04:00 [DBG] angular_spa found in database: true
2020-08-28 18:39:18.085 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 18:39:18.096 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-28 18:39:18.096 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-28 18:39:18.096 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-28 18:39:18.098 -04:00 [DBG] Start authorize callback request
2020-08-28 18:39:18.099 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 18:39:18.099 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 18:39:18.107 -04:00 [DBG] angular_spa found in database: true
2020-08-28 18:39:18.107 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 18:39:18.107 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 18:39:18.108 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 18:39:18.110 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 18:39:18.111 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 18:39:18.112 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 18:39:18.112 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 18:39:18.113 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile app.api.employeeprofile.read","State":"acb1aea180694c6c9ad14199d5c8d56e","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5mFZA9WfDQ0R2RStS0mqZg","Raw":{"client_id":"angular_spa","redirect_uri":"https://localhost:4200/auth-callback","response_type":"code","scope":"openid profile app.api.employeeprofile.read","state":"acb1aea180694c6c9ad14199d5c8d56e","code_challenge":"qtLpwmwyFsUY9cyi-NvYbPBbHoUB3NfMTAevYrykfIg","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 18:39:18.126 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-28 18:39:18.128 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-28 18:39:18.158 -04:00 [DBG] BEPnDaG0PDnVSRGyse/OJc+gajKhLtXwYyVTVBLQ8E8= not found in database
2020-08-28 18:39:18.249 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****0W1o","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000002-0008-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-28T22:39:18.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 18:39:18.250 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200/auth-callback","State":"acb1aea180694c6c9ad14199d5c8d56e","Scope":"openid profile app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-28 18:39:18.254 -04:00 [DBG] Augmenting SignInContext
2020-08-28 18:39:18.254 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 18:39:18.398 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 18:39:18.400 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 18:39:18.400 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 18:39:18.400 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 18:39:18.401 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 18:39:18.401 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 18:39:18.401 -04:00 [DBG] Start discovery request
2020-08-28 18:39:18.403 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 18:39:18.416 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-28 18:39:18.418 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 18:39:18.418 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 18:39:18.418 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-28 18:39:18.420 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-28 18:39:18.420 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-28 18:39:18.422 -04:00 [DBG] Start token request.
2020-08-28 18:39:18.424 -04:00 [DBG] Start client validation
2020-08-28 18:39:18.426 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-28 18:39:18.427 -04:00 [DBG] Start parsing for secret in post body
2020-08-28 18:39:18.427 -04:00 [DBG] client id without secret found
2020-08-28 18:39:18.427 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-28 18:39:18.427 -04:00 [DBG] Secret id found: angular_spa
2020-08-28 18:39:18.435 -04:00 [DBG] angular_spa found in database: true
2020-08-28 18:39:18.435 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 18:39:18.436 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-28 18:39:18.436 -04:00 [DBG] Client validation success
2020-08-28 18:39:18.436 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000006-0000-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-28T22:39:18.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-28 18:39:18.438 -04:00 [DBG] Start token request validation
2020-08-28 18:39:18.441 -04:00 [DBG] Start validation of authorization code token request
2020-08-28 18:39:18.450 -04:00 [DBG] BEPnDaG0PDnVSRGyse/OJc+gajKhLtXwYyVTVBLQ8E8= found in database: true
2020-08-28 18:39:18.472 -04:00 [DBG] removing BEPnDaG0PDnVSRGyse/OJc+gajKhLtXwYyVTVBLQ8E8= persisted grant from database
2020-08-28 18:39:18.481 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-28 18:39:18.483 -04:00 [DBG] Validation of authorization code token request success
2020-08-28 18:39:18.485 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"C69qpl64Ud3DGR9OD8kOjosYH5RkbLIPkjVpoXn0W1o","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"angular_spa","code":"C69qpl64Ud3DGR9OD8kOjosYH5RkbLIPkjVpoXn0W1o","redirect_uri":"https://localhost:4200/auth-callback","code_verifier":"f0aa6a9b2b7941a988c28326a046eeac6d3bd2f08bfd4ef4a624a66a4584b7d29938d765a4ef4036a27771c6db3f3860","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-08-28 18:39:18.495 -04:00 [DBG] angular_spa found in database: true
2020-08-28 18:39:18.495 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 18:39:18.497 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 18:39:18.498 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 18:39:18.505 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-28 18:39:18.505 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 18:39:18.559 -04:00 [DBG] angular_spa found in database: true
2020-08-28 18:39:18.559 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 18:39:18.560 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 18:39:18.562 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 18:39:18.565 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-28 18:39:18.565 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-28 18:39:18.567 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****nkpg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****1IpA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000006-0000-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-28T22:39:18.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 18:39:18.568 -04:00 [DBG] Token request success.
2020-08-28 18:39:18.576 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 18:39:18.578 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 18:39:18.578 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 18:39:18.580 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 18:39:18.581 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 18:39:18.581 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 18:39:18.582 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-28 18:39:18.582 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-28 18:39:18.582 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-28 18:39:18.584 -04:00 [DBG] Start userinfo request
2020-08-28 18:39:18.585 -04:00 [DBG] Bearer token found in header
2020-08-28 18:39:18.621 -04:00 [DBG] angular_spa found in database: true
2020-08-28 18:39:18.621 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 18:39:18.630 -04:00 [DBG] angular_spa found in database: true
2020-08-28 18:39:18.630 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 18:39:18.632 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 18:39:18.633 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598654358,"exp":1598657958,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598654358,"idp":"local","scope":["openid","profile","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-28 18:39:18.635 -04:00 [DBG] Creating userinfo response
2020-08-28 18:39:18.637 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 18:39:18.638 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 18:39:18.640 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 18:39:18.643 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile
2020-08-28 18:39:18.643 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 18:39:18.644 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 18:39:18.647 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username
2020-08-28 18:39:18.648 -04:00 [DBG] End userinfo request
2020-08-28 18:39:18.656 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 18:39:18.656 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 18:39:18.656 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 18:39:18.656 -04:00 [DBG] Rendering check session result
2020-08-28 18:39:19.874 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 18:39:19.882 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 18:39:19.882 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 18:39:19.882 -04:00 [DBG] Start discovery request
2020-08-28 18:39:19.887 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 18:39:19.914 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-28 18:39:19.914 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-28 18:39:19.914 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-28 18:39:19.915 -04:00 [DBG] Start key discovery request
2020-08-28 18:55:56.138 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 18:55:56.188 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 18:55:56.188 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 18:55:56.189 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 18:55:56.189 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 18:55:56.189 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 18:55:56.189 -04:00 [DBG] Start discovery request
2020-08-28 18:55:56.206 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 18:55:56.212 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 18:55:56.216 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 18:55:56.216 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 18:55:56.216 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 18:55:56.217 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 18:55:56.217 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 18:55:56.217 -04:00 [DBG] Start discovery request
2020-08-28 18:55:56.224 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 18:55:56.225 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 18:55:56.227 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 18:55:56.227 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 18:55:56.228 -04:00 [DBG] Start authorize request
2020-08-28 18:55:56.228 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 18:55:56.228 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 18:55:56.256 -04:00 [DBG] angular_spa found in database: true
2020-08-28 18:55:56.256 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 18:55:56.256 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 18:55:56.260 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 18:55:56.268 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 18:55:56.270 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 18:55:56.271 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 18:55:56.271 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 18:55:56.271 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile app.api.employeeprofile.read","State":"321f839343a14c4696b1a5b7cda396cf","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5mFZA9WfDQ0R2RStS0mqZg","Raw":{"client_id":"angular_spa","redirect_uri":"https://localhost:4200/auth-callback","response_type":"code","scope":"openid profile app.api.employeeprofile.read","state":"321f839343a14c4696b1a5b7cda396cf","code_challenge":"dtROusKR1KIu-AnG3AzNetlSup5oakv5-9pWL0zY4Pk","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 18:55:56.275 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-28 18:55:56.275 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-28 18:55:56.278 -04:00 [DBG] vSkjdlxnHHgtMosv9kEZa0+xTvdwIYeODuoXQ6Js2PU= not found in database
2020-08-28 18:55:56.281 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****vA5I","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000012-0006-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-28T22:55:56.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 18:55:56.281 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200/auth-callback","State":"321f839343a14c4696b1a5b7cda396cf","Scope":"openid profile app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-28 18:55:56.445 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 18:55:56.445 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 18:55:56.445 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 18:55:56.445 -04:00 [DBG] Rendering check session result
2020-08-28 18:55:56.710 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 18:55:56.713 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 18:55:56.713 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 18:55:56.713 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 18:55:56.714 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 18:55:56.714 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 18:55:56.714 -04:00 [DBG] Start discovery request
2020-08-28 18:55:56.719 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 18:55:56.722 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 18:55:56.725 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 18:55:56.725 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 18:55:56.725 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 18:55:56.725 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 18:55:56.725 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 18:55:56.725 -04:00 [DBG] Start discovery request
2020-08-28 18:55:56.729 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 18:55:56.751 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-28 18:55:56.751 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 18:55:56.751 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 18:55:56.751 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 18:55:56.751 -04:00 [DBG] Rendering check session result
2020-08-28 18:55:56.754 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 18:55:56.754 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 18:55:56.754 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-28 18:55:56.755 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-28 18:55:56.755 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-28 18:55:56.755 -04:00 [DBG] Start token request.
2020-08-28 18:55:56.755 -04:00 [DBG] Start client validation
2020-08-28 18:55:56.755 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-28 18:55:56.755 -04:00 [DBG] Start parsing for secret in post body
2020-08-28 18:55:56.756 -04:00 [DBG] client id without secret found
2020-08-28 18:55:56.756 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-28 18:55:56.756 -04:00 [DBG] Secret id found: angular_spa
2020-08-28 18:55:56.769 -04:00 [DBG] angular_spa found in database: true
2020-08-28 18:55:56.770 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 18:55:56.770 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-28 18:55:56.770 -04:00 [DBG] Client validation success
2020-08-28 18:55:56.770 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000002f-0001-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-28T22:55:56.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-28 18:55:56.770 -04:00 [DBG] Start token request validation
2020-08-28 18:55:56.770 -04:00 [DBG] Start validation of authorization code token request
2020-08-28 18:55:56.772 -04:00 [DBG] vSkjdlxnHHgtMosv9kEZa0+xTvdwIYeODuoXQ6Js2PU= found in database: true
2020-08-28 18:55:56.774 -04:00 [DBG] removing vSkjdlxnHHgtMosv9kEZa0+xTvdwIYeODuoXQ6Js2PU= persisted grant from database
2020-08-28 18:55:56.777 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-28 18:55:56.779 -04:00 [DBG] Validation of authorization code token request success
2020-08-28 18:55:56.779 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"wxhsDDms6kyr6O16_0zRIwzEe10txmmGa14erH4vA5I","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"angular_spa","code":"wxhsDDms6kyr6O16_0zRIwzEe10txmmGa14erH4vA5I","redirect_uri":"https://localhost:4200/auth-callback","code_verifier":"010301cac01a421e9a0d0220c3d46a06fa4973136e47463f83b6a9294e3251bb4fa662e8aed942d1b717549bbfe81c3f","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-08-28 18:55:56.788 -04:00 [DBG] angular_spa found in database: true
2020-08-28 18:55:56.788 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 18:55:56.790 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 18:55:56.791 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 18:55:56.792 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-28 18:55:56.792 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 18:55:56.811 -04:00 [DBG] angular_spa found in database: true
2020-08-28 18:55:56.811 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 18:55:56.813 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 18:55:56.815 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 18:55:56.815 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-28 18:55:56.815 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-28 18:55:56.816 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****-brw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****k_Rg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000002f-0001-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-28T22:55:56.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 18:55:56.817 -04:00 [DBG] Token request success.
2020-08-28 18:55:56.824 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 18:55:56.826 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 18:55:56.826 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 18:55:56.828 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 18:55:56.830 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 18:55:56.830 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 18:55:56.830 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-28 18:55:56.830 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-28 18:55:56.831 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-28 18:55:56.831 -04:00 [DBG] Start userinfo request
2020-08-28 18:55:56.831 -04:00 [DBG] Bearer token found in header
2020-08-28 18:55:56.840 -04:00 [DBG] angular_spa found in database: true
2020-08-28 18:55:56.841 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 18:55:56.849 -04:00 [DBG] angular_spa found in database: true
2020-08-28 18:55:56.849 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 18:55:56.850 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 18:55:56.850 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598655356,"exp":1598658956,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598654358,"idp":"local","scope":["openid","profile","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-28 18:55:56.851 -04:00 [DBG] Creating userinfo response
2020-08-28 18:55:56.851 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 18:55:56.851 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 18:55:56.852 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 18:55:56.852 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile
2020-08-28 18:55:56.852 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 18:55:56.854 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 18:55:56.858 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username
2020-08-28 18:55:56.858 -04:00 [DBG] End userinfo request
2020-08-28 18:56:01.525 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 18:56:01.527 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 18:56:01.527 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 18:56:01.527 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 18:56:01.527 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 18:56:01.527 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 18:56:01.527 -04:00 [DBG] Start discovery request
2020-08-28 18:56:01.530 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 18:56:01.550 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 18:56:01.550 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 18:56:01.550 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 18:56:01.550 -04:00 [DBG] Rendering check session result
2020-08-28 18:56:07.569 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 18:56:07.571 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 18:56:07.571 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 18:56:07.572 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 18:56:07.572 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 18:56:07.572 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 18:56:07.572 -04:00 [DBG] Start discovery request
2020-08-28 18:56:07.575 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 18:56:07.594 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 18:56:07.594 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 18:56:07.594 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 18:56:07.594 -04:00 [DBG] Rendering check session result
2020-08-28 18:59:05.400 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 18:59:05.402 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 18:59:05.402 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 18:59:05.402 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 18:59:05.402 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 18:59:05.402 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 18:59:05.403 -04:00 [DBG] Start discovery request
2020-08-28 18:59:05.412 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 18:59:05.425 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 18:59:05.425 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 18:59:05.425 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 18:59:05.425 -04:00 [DBG] Rendering check session result
2020-08-28 18:59:44.321 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 18:59:44.324 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 18:59:44.331 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 18:59:44.331 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 18:59:44.331 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 18:59:44.331 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 18:59:44.331 -04:00 [DBG] Start discovery request
2020-08-28 18:59:44.339 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 18:59:44.341 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 18:59:44.345 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 18:59:44.345 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 18:59:44.345 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 18:59:44.345 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 18:59:44.345 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 18:59:44.345 -04:00 [DBG] Start discovery request
2020-08-28 18:59:44.349 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 18:59:44.528 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 18:59:44.530 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 18:59:44.530 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 18:59:44.530 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 18:59:44.530 -04:00 [DBG] Rendering check session result
2020-08-28 18:59:44.531 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 18:59:44.532 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 18:59:44.532 -04:00 [DBG] Start authorize request
2020-08-28 18:59:44.532 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 18:59:44.532 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 18:59:44.550 -04:00 [DBG] angular_spa found in database: true
2020-08-28 18:59:44.550 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 18:59:44.550 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 18:59:44.553 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 18:59:44.561 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 18:59:44.562 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 18:59:44.564 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 18:59:44.564 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 18:59:44.564 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile app.api.employeeprofile.read","State":"b842a03757bd45aa9406ac0f38db5664","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5mFZA9WfDQ0R2RStS0mqZg","Raw":{"client_id":"angular_spa","redirect_uri":"https://localhost:4200/auth-callback","response_type":"code","scope":"openid profile app.api.employeeprofile.read","state":"b842a03757bd45aa9406ac0f38db5664","code_challenge":"ZTEAnGcQ7PPyX6dDT6bxtWhvMYulOvJs_PenD-UUstI","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 18:59:44.567 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-28 18:59:44.567 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-28 18:59:44.569 -04:00 [DBG] MT7WBPUpGswjJpc5wEl8TINopwYzvRiV3TPNhW+axI8= not found in database
2020-08-28 18:59:44.572 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****6hOA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000023-0009-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-28T22:59:44.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 18:59:44.572 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200/auth-callback","State":"b842a03757bd45aa9406ac0f38db5664","Scope":"openid profile app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-28 18:59:44.989 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 18:59:44.991 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 18:59:44.991 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 18:59:44.992 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 18:59:44.992 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 18:59:44.992 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 18:59:44.992 -04:00 [DBG] Start discovery request
2020-08-28 18:59:44.995 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 18:59:44.997 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 18:59:44.998 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 18:59:44.998 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 18:59:44.999 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 18:59:44.999 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 18:59:44.999 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 18:59:44.999 -04:00 [DBG] Start discovery request
2020-08-28 18:59:45.002 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 18:59:45.016 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 18:59:45.016 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 18:59:45.016 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 18:59:45.016 -04:00 [DBG] Rendering check session result
2020-08-28 18:59:45.191 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-28 18:59:45.193 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 18:59:45.193 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 18:59:45.193 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-28 18:59:45.199 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-28 18:59:45.199 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-28 18:59:45.199 -04:00 [DBG] Start token request.
2020-08-28 18:59:45.199 -04:00 [DBG] Start client validation
2020-08-28 18:59:45.199 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-28 18:59:45.199 -04:00 [DBG] Start parsing for secret in post body
2020-08-28 18:59:45.200 -04:00 [DBG] client id without secret found
2020-08-28 18:59:45.200 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-28 18:59:45.200 -04:00 [DBG] Secret id found: angular_spa
2020-08-28 18:59:45.210 -04:00 [DBG] angular_spa found in database: true
2020-08-28 18:59:45.210 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 18:59:45.210 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-28 18:59:45.210 -04:00 [DBG] Client validation success
2020-08-28 18:59:45.210 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000015-0002-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-28T22:59:45.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-28 18:59:45.211 -04:00 [DBG] Start token request validation
2020-08-28 18:59:45.211 -04:00 [DBG] Start validation of authorization code token request
2020-08-28 18:59:45.212 -04:00 [DBG] MT7WBPUpGswjJpc5wEl8TINopwYzvRiV3TPNhW+axI8= found in database: true
2020-08-28 18:59:45.214 -04:00 [DBG] removing MT7WBPUpGswjJpc5wEl8TINopwYzvRiV3TPNhW+axI8= persisted grant from database
2020-08-28 18:59:45.216 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-28 18:59:45.218 -04:00 [DBG] Validation of authorization code token request success
2020-08-28 18:59:45.218 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"jh5GGlOlqEOkgBA54MeryszsOjruJF1OaocxzPB6hOA","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"angular_spa","code":"jh5GGlOlqEOkgBA54MeryszsOjruJF1OaocxzPB6hOA","redirect_uri":"https://localhost:4200/auth-callback","code_verifier":"3413a722f757415988548f1762cc5ab07158c066d9bc42df8a0f07f79ad2e0063cc2a782043e4e25a432b97171e3a6a2","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-08-28 18:59:45.226 -04:00 [DBG] angular_spa found in database: true
2020-08-28 18:59:45.226 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 18:59:45.228 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 18:59:45.230 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 18:59:45.230 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-28 18:59:45.230 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 18:59:45.243 -04:00 [DBG] angular_spa found in database: true
2020-08-28 18:59:45.243 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 18:59:45.244 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 18:59:45.245 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 18:59:45.245 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-28 18:59:45.246 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-28 18:59:45.247 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****qF9g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****pYxg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000015-0002-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-28T22:59:45.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 18:59:45.247 -04:00 [DBG] Token request success.
2020-08-28 18:59:45.408 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 18:59:45.410 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 18:59:45.410 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 18:59:45.412 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 18:59:45.413 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 18:59:45.413 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 18:59:45.413 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-28 18:59:45.415 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-28 18:59:45.415 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-28 18:59:45.415 -04:00 [DBG] Start userinfo request
2020-08-28 18:59:45.415 -04:00 [DBG] Bearer token found in header
2020-08-28 18:59:45.424 -04:00 [DBG] angular_spa found in database: true
2020-08-28 18:59:45.424 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 18:59:45.430 -04:00 [DBG] angular_spa found in database: true
2020-08-28 18:59:45.430 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 18:59:45.432 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 18:59:45.432 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598655585,"exp":1598659185,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598654358,"idp":"local","scope":["openid","profile","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-28 18:59:45.432 -04:00 [DBG] Creating userinfo response
2020-08-28 18:59:45.432 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 18:59:45.432 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 18:59:45.433 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 18:59:45.433 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile
2020-08-28 18:59:45.433 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 18:59:45.434 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 18:59:45.438 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username
2020-08-28 18:59:45.438 -04:00 [DBG] End userinfo request
2020-08-28 19:00:40.603 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:00:40.606 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:00:40.606 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:00:40.606 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:00:40.606 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:00:40.606 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:00:40.606 -04:00 [DBG] Start discovery request
2020-08-28 19:00:40.616 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:00:40.618 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:00:40.620 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:00:40.620 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:00:40.620 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:00:40.620 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:00:40.620 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:00:40.620 -04:00 [DBG] Start discovery request
2020-08-28 19:00:40.623 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:00:40.629 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 19:00:40.629 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 19:00:40.629 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 19:00:40.629 -04:00 [DBG] Start authorize request
2020-08-28 19:00:40.629 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 19:00:40.629 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 19:00:40.648 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:00:40.648 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:00:40.648 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 19:00:40.651 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:00:40.660 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 19:00:40.661 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:00:40.662 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 19:00:40.662 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 19:00:40.663 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile app.api.employeeprofile.read","State":"ce5a55cefc7f45ae922c260324cb0984","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5mFZA9WfDQ0R2RStS0mqZg","Raw":{"client_id":"angular_spa","redirect_uri":"https://localhost:4200/auth-callback","response_type":"code","scope":"openid profile app.api.employeeprofile.read","state":"ce5a55cefc7f45ae922c260324cb0984","code_challenge":"qHimyu1QdUAEgQLxzWLROTIxDjUKskJyxqB7kyHw4BU","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 19:00:40.665 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-28 19:00:40.665 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-28 19:00:40.667 -04:00 [DBG] p0BySncwTqDtIC7ks7/Qpjwqd88fX1138Ix6qLxrAHU= not found in database
2020-08-28 19:00:40.670 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****Ykvg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000033-0001-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-28T23:00:40.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 19:00:40.670 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200/auth-callback","State":"ce5a55cefc7f45ae922c260324cb0984","Scope":"openid profile app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-28 19:00:41.061 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:00:41.062 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:00:41.062 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:00:41.062 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:00:41.063 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:00:41.063 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:00:41.063 -04:00 [DBG] Start discovery request
2020-08-28 19:00:41.065 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:00:41.067 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:00:41.069 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:00:41.069 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:00:41.069 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:00:41.069 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:00:41.069 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:00:41.069 -04:00 [DBG] Start discovery request
2020-08-28 19:00:41.072 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:00:41.081 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 19:00:41.081 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 19:00:41.081 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 19:00:41.082 -04:00 [DBG] Rendering check session result
2020-08-28 19:00:41.265 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-28 19:00:41.266 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:00:41.266 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:00:41.267 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-28 19:00:41.267 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-28 19:00:41.267 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-28 19:00:41.267 -04:00 [DBG] Start token request.
2020-08-28 19:00:41.267 -04:00 [DBG] Start client validation
2020-08-28 19:00:41.267 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-28 19:00:41.267 -04:00 [DBG] Start parsing for secret in post body
2020-08-28 19:00:41.268 -04:00 [DBG] client id without secret found
2020-08-28 19:00:41.268 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-28 19:00:41.268 -04:00 [DBG] Secret id found: angular_spa
2020-08-28 19:00:41.278 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:00:41.278 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:00:41.278 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-28 19:00:41.278 -04:00 [DBG] Client validation success
2020-08-28 19:00:41.278 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000009-0002-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-28T23:00:41.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-28 19:00:41.278 -04:00 [DBG] Start token request validation
2020-08-28 19:00:41.278 -04:00 [DBG] Start validation of authorization code token request
2020-08-28 19:00:41.279 -04:00 [DBG] p0BySncwTqDtIC7ks7/Qpjwqd88fX1138Ix6qLxrAHU= found in database: true
2020-08-28 19:00:41.281 -04:00 [DBG] removing p0BySncwTqDtIC7ks7/Qpjwqd88fX1138Ix6qLxrAHU= persisted grant from database
2020-08-28 19:00:41.283 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-28 19:00:41.285 -04:00 [DBG] Validation of authorization code token request success
2020-08-28 19:00:41.285 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"BEYheal2sAIYuO9zvQCMgHYikdMbX69cfOODVsRYkvg","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"angular_spa","code":"BEYheal2sAIYuO9zvQCMgHYikdMbX69cfOODVsRYkvg","redirect_uri":"https://localhost:4200/auth-callback","code_verifier":"e4cf69ab894147c387468765a3b96fcf683aea8dfc624d99a95bb3db3514ba556c99685b33664d5db70e6713a5e177ec","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-08-28 19:00:41.292 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:00:41.292 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:00:41.293 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:00:41.294 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 19:00:41.295 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-28 19:00:41.295 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 19:00:41.307 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:00:41.307 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:00:41.308 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:00:41.310 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 19:00:41.310 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-28 19:00:41.310 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-28 19:00:41.312 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****JDog","$type":"Token"},{"TokenType":"access_token","TokenValue":"****LCZA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000009-0002-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-28T23:00:41.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 19:00:41.312 -04:00 [DBG] Token request success.
2020-08-28 19:00:41.475 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 19:00:41.477 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:00:41.477 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:00:41.479 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 19:00:41.480 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:00:41.480 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:00:41.480 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-28 19:00:41.480 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-28 19:00:41.480 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-28 19:00:41.480 -04:00 [DBG] Start userinfo request
2020-08-28 19:00:41.480 -04:00 [DBG] Bearer token found in header
2020-08-28 19:00:41.489 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:00:41.489 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:00:41.495 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:00:41.495 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:00:41.497 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 19:00:41.497 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598655641,"exp":1598659241,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598654358,"idp":"local","scope":["openid","profile","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-28 19:00:41.497 -04:00 [DBG] Creating userinfo response
2020-08-28 19:00:41.497 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 19:00:41.497 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 19:00:41.498 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:00:41.498 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile
2020-08-28 19:00:41.498 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 19:00:41.499 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:00:41.503 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username
2020-08-28 19:00:41.503 -04:00 [DBG] End userinfo request
2020-08-28 19:00:54.292 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:00:54.293 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:00:54.293 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:00:54.293 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:00:54.293 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:00:54.293 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:00:54.293 -04:00 [DBG] Start discovery request
2020-08-28 19:00:54.296 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:00:54.314 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 19:00:54.314 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 19:00:54.315 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 19:00:54.315 -04:00 [DBG] Rendering check session result
2020-08-28 19:01:03.408 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:01:03.410 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:01:03.410 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:01:03.410 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:01:03.410 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:01:03.411 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:01:03.411 -04:00 [DBG] Start discovery request
2020-08-28 19:01:03.413 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:01:03.434 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 19:01:03.434 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 19:01:03.434 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 19:01:03.434 -04:00 [DBG] Rendering check session result
2020-08-28 19:01:05.251 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:01:05.252 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:01:05.253 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:01:05.253 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:01:05.253 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:01:05.253 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:01:05.253 -04:00 [DBG] Start discovery request
2020-08-28 19:01:05.255 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:01:05.271 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 19:01:05.271 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 19:01:05.272 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 19:01:05.272 -04:00 [DBG] Rendering check session result
2020-08-28 19:01:11.685 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:01:11.687 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:01:11.687 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:01:11.687 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:01:11.688 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:01:11.688 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:01:11.688 -04:00 [DBG] Start discovery request
2020-08-28 19:01:11.695 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:01:11.712 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 19:01:11.712 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 19:01:11.712 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 19:01:11.712 -04:00 [DBG] Rendering check session result
2020-08-28 19:01:13.566 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:01:13.569 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:01:13.569 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:01:13.569 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:01:13.569 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:01:13.569 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:01:13.569 -04:00 [DBG] Start discovery request
2020-08-28 19:01:13.578 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:01:13.593 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 19:01:13.593 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 19:01:13.593 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 19:01:13.593 -04:00 [DBG] Rendering check session result
2020-08-28 19:01:33.450 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:01:33.453 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:01:33.453 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:01:33.453 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:01:33.453 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:01:33.453 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:01:33.453 -04:00 [DBG] Start discovery request
2020-08-28 19:01:33.462 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:01:33.657 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 19:01:33.657 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 19:01:33.657 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 19:01:33.657 -04:00 [DBG] Rendering check session result
2020-08-28 19:01:41.133 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:01:41.134 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:01:41.134 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:01:41.134 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:01:41.134 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:01:41.134 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:01:41.134 -04:00 [DBG] Start discovery request
2020-08-28 19:01:41.140 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:01:41.142 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:01:41.146 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:01:41.146 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:01:41.146 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:01:41.146 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:01:41.147 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:01:41.147 -04:00 [DBG] Start discovery request
2020-08-28 19:01:41.152 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:01:41.333 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 19:01:41.334 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 19:01:41.335 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 19:01:41.335 -04:00 [DBG] Start authorize request
2020-08-28 19:01:41.335 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 19:01:41.335 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 19:01:41.342 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 19:01:41.343 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 19:01:41.343 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 19:01:41.343 -04:00 [DBG] Rendering check session result
2020-08-28 19:01:41.374 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:01:41.374 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:01:41.374 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 19:01:41.377 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:01:41.385 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 19:01:41.386 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:01:41.388 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 19:01:41.388 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 19:01:41.388 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile app.api.employeeprofile.read","State":"4d1d15dad917446eba58ba635e57b810","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5mFZA9WfDQ0R2RStS0mqZg","Raw":{"client_id":"angular_spa","redirect_uri":"https://localhost:4200/auth-callback","response_type":"code","scope":"openid profile app.api.employeeprofile.read","state":"4d1d15dad917446eba58ba635e57b810","code_challenge":"MCrQSfG_saGYVDs4sWb1qwP6CihkxiGqUy_AxlErC8U","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 19:01:41.390 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-28 19:01:41.390 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-28 19:01:41.392 -04:00 [DBG] JOzE3YWI7UtpR1OWclutHUxyZ7TxwWYzs8YkhBIEoD8= not found in database
2020-08-28 19:01:41.395 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****tHe4","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000021-0008-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-28T23:01:41.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 19:01:41.395 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200/auth-callback","State":"4d1d15dad917446eba58ba635e57b810","Scope":"openid profile app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-28 19:01:41.821 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:01:41.823 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:01:41.823 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:01:41.823 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:01:41.823 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:01:41.823 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:01:41.823 -04:00 [DBG] Start discovery request
2020-08-28 19:01:41.825 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:01:41.830 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:01:41.831 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:01:41.832 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:01:41.832 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:01:41.832 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:01:41.832 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:01:41.832 -04:00 [DBG] Start discovery request
2020-08-28 19:01:41.835 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:01:41.844 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 19:01:41.844 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 19:01:41.844 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 19:01:41.844 -04:00 [DBG] Rendering check session result
2020-08-28 19:01:42.031 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-28 19:01:42.032 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:01:42.033 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:01:42.033 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-28 19:01:42.033 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-28 19:01:42.033 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-28 19:01:42.033 -04:00 [DBG] Start token request.
2020-08-28 19:01:42.033 -04:00 [DBG] Start client validation
2020-08-28 19:01:42.033 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-28 19:01:42.033 -04:00 [DBG] Start parsing for secret in post body
2020-08-28 19:01:42.033 -04:00 [DBG] client id without secret found
2020-08-28 19:01:42.033 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-28 19:01:42.033 -04:00 [DBG] Secret id found: angular_spa
2020-08-28 19:01:42.045 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:01:42.046 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:01:42.046 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-28 19:01:42.046 -04:00 [DBG] Client validation success
2020-08-28 19:01:42.046 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000000f-0002-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-28T23:01:42.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-28 19:01:42.046 -04:00 [DBG] Start token request validation
2020-08-28 19:01:42.046 -04:00 [DBG] Start validation of authorization code token request
2020-08-28 19:01:42.047 -04:00 [DBG] JOzE3YWI7UtpR1OWclutHUxyZ7TxwWYzs8YkhBIEoD8= found in database: true
2020-08-28 19:01:42.048 -04:00 [DBG] removing JOzE3YWI7UtpR1OWclutHUxyZ7TxwWYzs8YkhBIEoD8= persisted grant from database
2020-08-28 19:01:42.051 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-28 19:01:42.053 -04:00 [DBG] Validation of authorization code token request success
2020-08-28 19:01:42.053 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"YMCp2-Fup5AmTb_txGCuujzEIfYctJTECMcDHI2tHe4","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"angular_spa","code":"YMCp2-Fup5AmTb_txGCuujzEIfYctJTECMcDHI2tHe4","redirect_uri":"https://localhost:4200/auth-callback","code_verifier":"d6b4fbec53d946438dfa1f4eb123b3db250aad93cf8a4d6db422e683382986a35d58b429343b43b6a91d9528f0f98dff","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-08-28 19:01:42.060 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:01:42.060 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:01:42.061 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:01:42.062 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 19:01:42.063 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-28 19:01:42.063 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 19:01:42.075 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:01:42.076 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:01:42.077 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:01:42.078 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 19:01:42.078 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-28 19:01:42.078 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-28 19:01:42.079 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****w79A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****iDDw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000000f-0002-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-28T23:01:42.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 19:01:42.079 -04:00 [DBG] Token request success.
2020-08-28 19:01:42.250 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 19:01:42.252 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:01:42.252 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:01:42.254 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 19:01:42.255 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:01:42.256 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:01:42.256 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-28 19:01:42.256 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-28 19:01:42.256 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-28 19:01:42.256 -04:00 [DBG] Start userinfo request
2020-08-28 19:01:42.256 -04:00 [DBG] Bearer token found in header
2020-08-28 19:01:42.264 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:01:42.264 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:01:42.270 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:01:42.270 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:01:42.272 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 19:01:42.272 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598655702,"exp":1598659302,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598654358,"idp":"local","scope":["openid","profile","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-28 19:01:42.272 -04:00 [DBG] Creating userinfo response
2020-08-28 19:01:42.272 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 19:01:42.272 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 19:01:42.274 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:01:42.274 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile
2020-08-28 19:01:42.274 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 19:01:42.275 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:01:42.279 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username
2020-08-28 19:01:42.279 -04:00 [DBG] End userinfo request
2020-08-28 19:02:17.380 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:02:17.382 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:02:17.382 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:02:17.383 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:02:17.383 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:02:17.383 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:02:17.383 -04:00 [DBG] Start discovery request
2020-08-28 19:02:17.391 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:02:17.397 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:02:17.398 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:02:17.398 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:02:17.398 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:02:17.399 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:02:17.399 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:02:17.399 -04:00 [DBG] Start discovery request
2020-08-28 19:02:17.404 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:02:17.595 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 19:02:17.595 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 19:02:17.595 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 19:02:17.595 -04:00 [DBG] Start authorize request
2020-08-28 19:02:17.595 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 19:02:17.595 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 19:02:17.602 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 19:02:17.602 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 19:02:17.602 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 19:02:17.602 -04:00 [DBG] Rendering check session result
2020-08-28 19:02:17.622 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:02:17.622 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:02:17.622 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 19:02:17.626 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:02:17.635 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 19:02:17.639 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:02:17.651 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 19:02:17.651 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 19:02:17.651 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile app.api.employeeprofile.read","State":"08ace89186d84622bd4fdd57b2359b0d","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5mFZA9WfDQ0R2RStS0mqZg","Raw":{"client_id":"angular_spa","redirect_uri":"https://localhost:4200/auth-callback","response_type":"code","scope":"openid profile app.api.employeeprofile.read","state":"08ace89186d84622bd4fdd57b2359b0d","code_challenge":"_kaWc1VqdMCy8Smaz0D71fC6dlBjwp9bbavUJ_6LiXw","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 19:02:17.654 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-28 19:02:17.654 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-28 19:02:17.655 -04:00 [DBG] 8VIryXbUg/0f7ak0qH6bCLigS+N9+Etb+pdngv5Lg6g= not found in database
2020-08-28 19:02:17.659 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****7iWE","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000004-0000-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-28T23:02:17.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 19:02:17.659 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200/auth-callback","State":"08ace89186d84622bd4fdd57b2359b0d","Scope":"openid profile app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-28 19:02:18.103 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:02:18.105 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:02:18.105 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:02:18.105 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:02:18.105 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:02:18.105 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:02:18.105 -04:00 [DBG] Start discovery request
2020-08-28 19:02:18.114 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:02:18.115 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:02:18.117 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:02:18.117 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:02:18.118 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:02:18.118 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:02:18.118 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:02:18.118 -04:00 [DBG] Start discovery request
2020-08-28 19:02:18.125 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 19:02:18.126 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 19:02:18.126 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 19:02:18.126 -04:00 [DBG] Rendering check session result
2020-08-28 19:02:18.128 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:02:18.315 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-28 19:02:18.317 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:02:18.317 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:02:18.317 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-28 19:02:18.317 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-28 19:02:18.317 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-28 19:02:18.317 -04:00 [DBG] Start token request.
2020-08-28 19:02:18.317 -04:00 [DBG] Start client validation
2020-08-28 19:02:18.318 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-28 19:02:18.318 -04:00 [DBG] Start parsing for secret in post body
2020-08-28 19:02:18.318 -04:00 [DBG] client id without secret found
2020-08-28 19:02:18.318 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-28 19:02:18.318 -04:00 [DBG] Secret id found: angular_spa
2020-08-28 19:02:18.334 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:02:18.334 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:02:18.334 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-28 19:02:18.334 -04:00 [DBG] Client validation success
2020-08-28 19:02:18.334 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000000a-0005-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-28T23:02:18.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-28 19:02:18.335 -04:00 [DBG] Start token request validation
2020-08-28 19:02:18.335 -04:00 [DBG] Start validation of authorization code token request
2020-08-28 19:02:18.336 -04:00 [DBG] 8VIryXbUg/0f7ak0qH6bCLigS+N9+Etb+pdngv5Lg6g= found in database: true
2020-08-28 19:02:18.337 -04:00 [DBG] removing 8VIryXbUg/0f7ak0qH6bCLigS+N9+Etb+pdngv5Lg6g= persisted grant from database
2020-08-28 19:02:18.340 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-28 19:02:18.342 -04:00 [DBG] Validation of authorization code token request success
2020-08-28 19:02:18.342 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"8b42HNCf28blps4aTySekGzGgdEA-gj0Vuiukbj7iWE","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"angular_spa","code":"8b42HNCf28blps4aTySekGzGgdEA-gj0Vuiukbj7iWE","redirect_uri":"https://localhost:4200/auth-callback","code_verifier":"6c0971b37e374dac857427120fb6e45f3b0541c733dd4398bdf1664d67dc12748abd070d6f494ba09a83a941669ab1b7","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-08-28 19:02:18.348 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:02:18.348 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:02:18.350 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:02:18.359 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 19:02:18.359 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-28 19:02:18.359 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 19:02:18.370 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:02:18.370 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:02:18.371 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:02:18.372 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 19:02:18.373 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-28 19:02:18.373 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-28 19:02:18.374 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****obXA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****J16w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000000a-0005-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-28T23:02:18.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 19:02:18.374 -04:00 [DBG] Token request success.
2020-08-28 19:02:18.533 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 19:02:18.536 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:02:18.536 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:02:18.538 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 19:02:18.540 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:02:18.540 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:02:18.540 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-28 19:02:18.540 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-28 19:02:18.540 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-28 19:02:18.540 -04:00 [DBG] Start userinfo request
2020-08-28 19:02:18.540 -04:00 [DBG] Bearer token found in header
2020-08-28 19:02:18.557 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:02:18.557 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:02:18.563 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:02:18.563 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:02:18.565 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 19:02:18.565 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598655738,"exp":1598659338,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598654358,"idp":"local","scope":["openid","profile","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-28 19:02:18.565 -04:00 [DBG] Creating userinfo response
2020-08-28 19:02:18.565 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 19:02:18.565 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 19:02:18.567 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:02:18.568 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile
2020-08-28 19:02:18.568 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 19:02:18.569 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:02:18.573 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username
2020-08-28 19:02:18.574 -04:00 [DBG] End userinfo request
2020-08-28 19:08:30.535 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:08:30.584 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:08:30.584 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:08:30.584 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:08:30.584 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:08:30.584 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:08:30.584 -04:00 [DBG] Start discovery request
2020-08-28 19:08:30.593 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:08:30.595 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:08:30.597 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:08:30.597 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:08:30.597 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:08:30.597 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:08:30.597 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:08:30.597 -04:00 [DBG] Start discovery request
2020-08-28 19:08:30.603 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:08:30.740 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 19:08:30.740 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 19:08:30.741 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 19:08:30.741 -04:00 [DBG] Start authorize request
2020-08-28 19:08:30.741 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 19:08:30.741 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 19:08:30.743 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 19:08:30.743 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 19:08:30.743 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 19:08:30.743 -04:00 [DBG] Rendering check session result
2020-08-28 19:08:30.762 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:08:30.762 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:08:30.762 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 19:08:30.764 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:08:30.775 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 19:08:30.776 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:08:30.777 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 19:08:30.777 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 19:08:30.778 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile app.api.employeeprofile.read","State":"28cf8e9e35bf493bbb85b3710b3d98ba","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5mFZA9WfDQ0R2RStS0mqZg","Raw":{"client_id":"angular_spa","redirect_uri":"https://localhost:4200/auth-callback","response_type":"code","scope":"openid profile app.api.employeeprofile.read","state":"28cf8e9e35bf493bbb85b3710b3d98ba","code_challenge":"A7JvSjQM6Gt2ubGob7bi4kQX5zFudnwLE7NKpp7aNYk","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 19:08:30.781 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-28 19:08:30.781 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-28 19:08:30.782 -04:00 [DBG] cf2GXfRndAbHMR8umq9a/EYdJf2jkgHcmWbPC2jd1VU= not found in database
2020-08-28 19:08:30.785 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****ra6k","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000000b-0008-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-28T23:08:30.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 19:08:30.785 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200/auth-callback","State":"28cf8e9e35bf493bbb85b3710b3d98ba","Scope":"openid profile app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-28 19:08:31.226 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:08:31.228 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:08:31.228 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:08:31.228 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:08:31.228 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:08:31.228 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:08:31.228 -04:00 [DBG] Start discovery request
2020-08-28 19:08:31.231 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:08:31.233 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:08:31.234 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:08:31.234 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:08:31.234 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:08:31.234 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:08:31.234 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:08:31.234 -04:00 [DBG] Start discovery request
2020-08-28 19:08:31.237 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:08:31.260 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 19:08:31.260 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 19:08:31.260 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 19:08:31.260 -04:00 [DBG] Rendering check session result
2020-08-28 19:08:31.433 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-28 19:08:31.435 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:08:31.435 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:08:31.435 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-28 19:08:31.435 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-28 19:08:31.435 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-28 19:08:31.435 -04:00 [DBG] Start token request.
2020-08-28 19:08:31.436 -04:00 [DBG] Start client validation
2020-08-28 19:08:31.436 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-28 19:08:31.436 -04:00 [DBG] Start parsing for secret in post body
2020-08-28 19:08:31.436 -04:00 [DBG] client id without secret found
2020-08-28 19:08:31.436 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-28 19:08:31.436 -04:00 [DBG] Secret id found: angular_spa
2020-08-28 19:08:31.443 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:08:31.443 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:08:31.443 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-28 19:08:31.443 -04:00 [DBG] Client validation success
2020-08-28 19:08:31.443 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000026-0004-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-28T23:08:31.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-28 19:08:31.444 -04:00 [DBG] Start token request validation
2020-08-28 19:08:31.444 -04:00 [DBG] Start validation of authorization code token request
2020-08-28 19:08:31.445 -04:00 [DBG] cf2GXfRndAbHMR8umq9a/EYdJf2jkgHcmWbPC2jd1VU= found in database: true
2020-08-28 19:08:31.446 -04:00 [DBG] removing cf2GXfRndAbHMR8umq9a/EYdJf2jkgHcmWbPC2jd1VU= persisted grant from database
2020-08-28 19:08:31.448 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-28 19:08:31.450 -04:00 [DBG] Validation of authorization code token request success
2020-08-28 19:08:31.450 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"qLDtH9A6eehQXcbkYln4A-DUHs5jLBELmPGSTnwra6k","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"angular_spa","code":"qLDtH9A6eehQXcbkYln4A-DUHs5jLBELmPGSTnwra6k","redirect_uri":"https://localhost:4200/auth-callback","code_verifier":"78766f3586b94912a38f4954b7fb3121ee7794d6a9c642c188a1a3c670436eb1679bd3ec8f5e46ca831423f7395323a6","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-08-28 19:08:31.458 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:08:31.458 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:08:31.459 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:08:31.460 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 19:08:31.460 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-28 19:08:31.460 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 19:08:31.474 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:08:31.474 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:08:31.475 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:08:31.476 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 19:08:31.476 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-28 19:08:31.477 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-28 19:08:31.478 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****AvWA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****9FJA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000026-0004-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-28T23:08:31.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 19:08:31.478 -04:00 [DBG] Token request success.
2020-08-28 19:08:31.641 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 19:08:31.642 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:08:31.642 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:08:31.644 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 19:08:31.645 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:08:31.645 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:08:31.645 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-28 19:08:31.645 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-28 19:08:31.645 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-28 19:08:31.645 -04:00 [DBG] Start userinfo request
2020-08-28 19:08:31.645 -04:00 [DBG] Bearer token found in header
2020-08-28 19:08:31.652 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:08:31.652 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:08:31.658 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:08:31.658 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:08:31.659 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 19:08:31.659 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598656111,"exp":1598659711,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598654358,"idp":"local","scope":["openid","profile","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-28 19:08:31.660 -04:00 [DBG] Creating userinfo response
2020-08-28 19:08:31.660 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 19:08:31.660 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 19:08:31.661 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:08:31.661 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile
2020-08-28 19:08:31.661 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 19:08:31.662 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:08:31.665 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username
2020-08-28 19:08:31.665 -04:00 [DBG] End userinfo request
2020-08-28 19:08:38.705 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:08:38.706 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:08:38.706 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:08:38.707 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:08:38.707 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:08:38.707 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:08:38.707 -04:00 [DBG] Start discovery request
2020-08-28 19:08:38.709 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:08:38.730 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 19:08:38.730 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 19:08:38.730 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 19:08:38.730 -04:00 [DBG] Rendering check session result
2020-08-28 19:08:44.904 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:08:44.905 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:08:44.905 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:08:44.905 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:08:44.905 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:08:44.905 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:08:44.905 -04:00 [DBG] Start discovery request
2020-08-28 19:08:44.908 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:08:44.922 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 19:08:44.922 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 19:08:44.922 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 19:08:44.922 -04:00 [DBG] Rendering check session result
2020-08-28 19:09:00.805 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:09:00.807 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:09:00.807 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:09:00.807 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:09:00.807 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:09:00.807 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:09:00.808 -04:00 [DBG] Start discovery request
2020-08-28 19:09:00.816 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:09:00.828 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 19:09:00.828 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 19:09:00.828 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 19:09:00.828 -04:00 [DBG] Rendering check session result
2020-08-28 19:09:05.441 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:09:05.443 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:09:05.443 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:09:05.443 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:09:05.443 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:09:05.443 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:09:05.443 -04:00 [DBG] Start discovery request
2020-08-28 19:09:05.445 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:09:05.465 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 19:09:05.465 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 19:09:05.465 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 19:09:05.465 -04:00 [DBG] Rendering check session result
2020-08-28 19:09:15.137 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:09:15.139 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:09:15.139 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:09:15.139 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:09:15.139 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:09:15.139 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:09:15.139 -04:00 [DBG] Start discovery request
2020-08-28 19:09:15.141 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:09:15.143 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:09:15.143 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:09:15.143 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:09:15.144 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:09:15.144 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:09:15.144 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:09:15.144 -04:00 [DBG] Start discovery request
2020-08-28 19:09:15.146 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:09:15.151 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 19:09:15.152 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 19:09:15.152 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 19:09:15.152 -04:00 [DBG] Start authorize request
2020-08-28 19:09:15.152 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 19:09:15.152 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 19:09:15.156 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 19:09:15.156 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 19:09:15.156 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 19:09:15.156 -04:00 [DBG] Rendering check session result
2020-08-28 19:09:15.169 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:09:15.170 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:09:15.170 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 19:09:15.172 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:09:15.180 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 19:09:15.182 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:09:15.183 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 19:09:15.183 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 19:09:15.183 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile app.api.employeeprofile.read","State":"80df8fd23d4e4c51a21ccf26d7d22243","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5mFZA9WfDQ0R2RStS0mqZg","Raw":{"client_id":"angular_spa","redirect_uri":"https://localhost:4200/auth-callback","response_type":"code","scope":"openid profile app.api.employeeprofile.read","state":"80df8fd23d4e4c51a21ccf26d7d22243","code_challenge":"IvFvPCC85up9DPStPzg_RJfutmzefOfY1EKGfC8z5bk","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 19:09:15.185 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-28 19:09:15.185 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-28 19:09:15.186 -04:00 [DBG] pdHfxZwZ15GGLoQco0xjksFghcDADtMtvPElKmcauX4= not found in database
2020-08-28 19:09:15.189 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****M6lU","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000000e-0000-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-28T23:09:15.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 19:09:15.189 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200/auth-callback","State":"80df8fd23d4e4c51a21ccf26d7d22243","Scope":"openid profile app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-28 19:09:15.600 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:09:15.602 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:09:15.602 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:09:15.602 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:09:15.602 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:09:15.602 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:09:15.602 -04:00 [DBG] Start discovery request
2020-08-28 19:09:15.604 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:09:15.606 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 19:09:15.607 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:09:15.607 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:09:15.607 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 19:09:15.607 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 19:09:15.607 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 19:09:15.607 -04:00 [DBG] Start discovery request
2020-08-28 19:09:15.610 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 19:09:15.628 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 19:09:15.629 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 19:09:15.629 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 19:09:15.629 -04:00 [DBG] Rendering check session result
2020-08-28 19:09:15.811 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-28 19:09:15.813 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:09:15.813 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:09:15.813 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-28 19:09:15.813 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-28 19:09:15.813 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-28 19:09:15.813 -04:00 [DBG] Start token request.
2020-08-28 19:09:15.813 -04:00 [DBG] Start client validation
2020-08-28 19:09:15.813 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-28 19:09:15.813 -04:00 [DBG] Start parsing for secret in post body
2020-08-28 19:09:15.814 -04:00 [DBG] client id without secret found
2020-08-28 19:09:15.814 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-28 19:09:15.814 -04:00 [DBG] Secret id found: angular_spa
2020-08-28 19:09:15.821 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:09:15.821 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:09:15.821 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-28 19:09:15.821 -04:00 [DBG] Client validation success
2020-08-28 19:09:15.821 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000048-0001-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-28T23:09:15.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-28 19:09:15.821 -04:00 [DBG] Start token request validation
2020-08-28 19:09:15.821 -04:00 [DBG] Start validation of authorization code token request
2020-08-28 19:09:15.823 -04:00 [DBG] pdHfxZwZ15GGLoQco0xjksFghcDADtMtvPElKmcauX4= found in database: true
2020-08-28 19:09:15.824 -04:00 [DBG] removing pdHfxZwZ15GGLoQco0xjksFghcDADtMtvPElKmcauX4= persisted grant from database
2020-08-28 19:09:15.826 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-28 19:09:15.828 -04:00 [DBG] Validation of authorization code token request success
2020-08-28 19:09:15.828 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"gUc02_5dwI_6hbroKPIne-nQjx9iYCbaIlfyCHRM6lU","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"angular_spa","code":"gUc02_5dwI_6hbroKPIne-nQjx9iYCbaIlfyCHRM6lU","redirect_uri":"https://localhost:4200/auth-callback","code_verifier":"34b4d08e668c4560858332f79e078356fa5ac57151fc45e580a6ec5555d5e78db4f08fa3d4494ed19742774fa4e59683","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-08-28 19:09:15.836 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:09:15.836 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:09:15.837 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:09:15.838 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 19:09:15.838 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-28 19:09:15.838 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 19:09:15.849 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:09:15.849 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:09:15.850 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:09:15.851 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 19:09:15.851 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-28 19:09:15.851 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-28 19:09:15.852 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****6zbQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****f6rA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000048-0001-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-28T23:09:15.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 19:09:15.852 -04:00 [DBG] Token request success.
2020-08-28 19:09:16.018 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 19:09:16.019 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:09:16.019 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:09:16.021 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 19:09:16.022 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 19:09:16.023 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 19:09:16.023 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-28 19:09:16.023 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-28 19:09:16.023 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-28 19:09:16.023 -04:00 [DBG] Start userinfo request
2020-08-28 19:09:16.023 -04:00 [DBG] Bearer token found in header
2020-08-28 19:09:16.031 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:09:16.031 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:09:16.037 -04:00 [DBG] angular_spa found in database: true
2020-08-28 19:09:16.038 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 19:09:16.039 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 19:09:16.039 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598656155,"exp":1598659755,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598654358,"idp":"local","scope":["openid","profile","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-28 19:09:16.039 -04:00 [DBG] Creating userinfo response
2020-08-28 19:09:16.039 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 19:09:16.039 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 19:09:16.040 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:09:16.040 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile
2020-08-28 19:09:16.040 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 19:09:16.041 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 19:09:16.044 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username
2020-08-28 19:09:16.044 -04:00 [DBG] End userinfo request
2020-08-28 19:38:39.201 -04:00 [INF] Removing 0 grants
2020-08-28 19:38:39.209 -04:00 [INF] Removing 0 device flow codes
2020-08-28 20:38:39.259 -04:00 [INF] Removing 0 grants
2020-08-28 20:38:39.261 -04:00 [INF] Removing 0 device flow codes
2020-08-28 21:24:24.791 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 21:24:24.806 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 21:24:24.806 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 21:24:24.806 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 21:24:24.807 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 21:24:24.807 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 21:24:24.807 -04:00 [DBG] Start discovery request
2020-08-28 21:24:24.819 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 21:24:24.821 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 21:24:24.823 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 21:24:24.823 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 21:24:24.826 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 21:24:24.826 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 21:24:24.826 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 21:24:24.826 -04:00 [DBG] Start discovery request
2020-08-28 21:24:24.829 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 21:24:24.865 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 21:24:24.865 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 21:24:24.865 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 21:24:24.865 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 21:24:24.865 -04:00 [DBG] Rendering check session result
2020-08-28 21:24:24.865 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 21:24:24.865 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 21:24:24.865 -04:00 [DBG] Start authorize request
2020-08-28 21:24:24.865 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 21:24:24.866 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 21:24:24.886 -04:00 [DBG] angular_spa found in database: true
2020-08-28 21:24:24.886 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 21:24:24.886 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 21:24:24.889 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 21:24:24.899 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 21:24:24.901 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 21:24:24.902 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 21:24:24.902 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 21:24:24.902 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile app.api.employeeprofile.read","State":"b47160d213f341a089800109bf92a4f7","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5mFZA9WfDQ0R2RStS0mqZg","Raw":{"client_id":"angular_spa","redirect_uri":"https://localhost:4200/auth-callback","response_type":"code","scope":"openid profile app.api.employeeprofile.read","state":"b47160d213f341a089800109bf92a4f7","code_challenge":"Rb30kCfveDBuP1J08CQVcBriAERhyeYKP2hJQjHxYnQ","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 21:24:24.903 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-28 21:24:24.903 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-28 21:24:24.905 -04:00 [DBG] 9cu8sZ3rYlQ4ODUjhbEL4QzDXnkNqC3FDIdP1DmRlK8= not found in database
2020-08-28 21:24:24.908 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****mBCY","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000b2-0006-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-29T01:24:24.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 21:24:24.908 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200/auth-callback","State":"b47160d213f341a089800109bf92a4f7","Scope":"openid profile app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-28 21:24:25.114 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 21:24:25.115 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 21:24:25.116 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 21:24:25.118 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 21:24:25.118 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 21:24:25.118 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 21:24:25.118 -04:00 [DBG] Start discovery request
2020-08-28 21:24:25.121 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 21:24:25.123 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 21:24:25.124 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 21:24:25.125 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 21:24:25.125 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 21:24:25.125 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 21:24:25.125 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 21:24:25.125 -04:00 [DBG] Start discovery request
2020-08-28 21:24:25.128 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 21:24:25.157 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 21:24:25.157 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 21:24:25.157 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 21:24:25.157 -04:00 [DBG] Rendering check session result
2020-08-28 21:24:25.337 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-28 21:24:25.339 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 21:24:25.339 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 21:24:25.339 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-28 21:24:25.340 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-28 21:24:25.340 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-28 21:24:25.340 -04:00 [DBG] Start token request.
2020-08-28 21:24:25.340 -04:00 [DBG] Start client validation
2020-08-28 21:24:25.340 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-28 21:24:25.340 -04:00 [DBG] Start parsing for secret in post body
2020-08-28 21:24:25.340 -04:00 [DBG] client id without secret found
2020-08-28 21:24:25.340 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-28 21:24:25.340 -04:00 [DBG] Secret id found: angular_spa
2020-08-28 21:24:25.348 -04:00 [DBG] angular_spa found in database: true
2020-08-28 21:24:25.348 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 21:24:25.348 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-28 21:24:25.348 -04:00 [DBG] Client validation success
2020-08-28 21:24:25.348 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000005f-000a-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-29T01:24:25.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-28 21:24:25.348 -04:00 [DBG] Start token request validation
2020-08-28 21:24:25.348 -04:00 [DBG] Start validation of authorization code token request
2020-08-28 21:24:25.350 -04:00 [DBG] 9cu8sZ3rYlQ4ODUjhbEL4QzDXnkNqC3FDIdP1DmRlK8= found in database: true
2020-08-28 21:24:25.351 -04:00 [DBG] removing 9cu8sZ3rYlQ4ODUjhbEL4QzDXnkNqC3FDIdP1DmRlK8= persisted grant from database
2020-08-28 21:24:25.367 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-28 21:24:25.368 -04:00 [DBG] Validation of authorization code token request success
2020-08-28 21:24:25.369 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"FHyQ17o3JDOMna--VSL31hqseLoRIH6RnDsX0drmBCY","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"angular_spa","code":"FHyQ17o3JDOMna--VSL31hqseLoRIH6RnDsX0drmBCY","redirect_uri":"https://localhost:4200/auth-callback","code_verifier":"19481fdf4def4374b8328e77a50983c1b35555afcd024b3d9a764edb4afb6855a62b41f0de9047b7958745975b4e9f01","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-08-28 21:24:25.375 -04:00 [DBG] angular_spa found in database: true
2020-08-28 21:24:25.375 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 21:24:25.377 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 21:24:25.378 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 21:24:25.378 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-28 21:24:25.378 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 21:24:25.390 -04:00 [DBG] angular_spa found in database: true
2020-08-28 21:24:25.391 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 21:24:25.392 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 21:24:25.393 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 21:24:25.393 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-28 21:24:25.393 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-28 21:24:25.395 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****OuOg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****zdKg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000005f-000a-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-29T01:24:25.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 21:24:25.395 -04:00 [DBG] Token request success.
2020-08-28 21:24:25.401 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 21:24:25.402 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 21:24:25.402 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 21:24:25.404 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 21:24:25.405 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 21:24:25.405 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 21:24:25.405 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-28 21:24:25.405 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-28 21:24:25.405 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-28 21:24:25.405 -04:00 [DBG] Start userinfo request
2020-08-28 21:24:25.405 -04:00 [DBG] Bearer token found in header
2020-08-28 21:24:25.414 -04:00 [DBG] angular_spa found in database: true
2020-08-28 21:24:25.414 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 21:24:25.421 -04:00 [DBG] angular_spa found in database: true
2020-08-28 21:24:25.421 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 21:24:25.423 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 21:24:25.423 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598664265,"exp":1598667865,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598654358,"idp":"local","scope":["openid","profile","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-28 21:24:25.423 -04:00 [DBG] Creating userinfo response
2020-08-28 21:24:25.423 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 21:24:25.424 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 21:24:25.425 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 21:24:25.425 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile
2020-08-28 21:24:25.425 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 21:24:25.426 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 21:24:25.430 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username
2020-08-28 21:24:25.430 -04:00 [DBG] End userinfo request
2020-08-28 22:23:12.651 -04:00 [INF] Removing 0 grants
2020-08-28 22:23:12.654 -04:00 [INF] Removing 0 device flow codes
2020-08-28 22:44:56.410 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 22:44:56.460 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 22:44:56.460 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 22:44:56.460 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 22:44:56.461 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 22:44:56.461 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 22:44:56.461 -04:00 [DBG] Start discovery request
2020-08-28 22:44:56.475 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 22:44:56.625 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-28 22:44:56.627 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 22:44:56.627 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 22:44:56.627 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-28 22:44:56.632 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-28 22:44:56.632 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-28 22:44:56.632 -04:00 [DBG] Start key discovery request
2020-08-28 22:44:56.645 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 22:44:56.646 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 22:44:56.646 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 22:44:56.646 -04:00 [DBG] Rendering check session result
2020-08-28 22:44:59.639 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 22:44:59.639 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 22:44:59.639 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 22:44:59.639 -04:00 [DBG] Start authorize request
2020-08-28 22:44:59.640 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 22:44:59.640 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 22:44:59.646 -04:00 [ERR] Unknown client or not enabled: interactive.public
{"ClientId":null,"ClientName":null,"RedirectUri":null,"AllowedRedirectUris":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"interactive.public","state":"MXFFUmNydTVPU2F6dU9seFQuNU5jNjBDbDJtVzJJRkxuZlNpUDh-ZFdoekNE","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email api","code_challenge":"Cqc_M4Uc78VBkixvlK8qGLX41-CrnooeCsMPZ_PpAhI","code_challenge_method":"S256","nonce":"MXFFUmNydTVPU2F6dU9seFQuNU5jNjBDbDJtVzJJRkxuZlNpUDh-ZFdoekNE","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:44:59.647 -04:00 [ERR] Request validation failed
2020-08-28 22:44:59.647 -04:00 [INF] {"ClientId":null,"ClientName":null,"RedirectUri":null,"AllowedRedirectUris":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"interactive.public","state":"MXFFUmNydTVPU2F6dU9seFQuNU5jNjBDbDJtVzJJRkxuZlNpUDh-ZFdoekNE","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email api","code_challenge":"Cqc_M4Uc78VBkixvlK8qGLX41-CrnooeCsMPZ_PpAhI","code_challenge_method":"S256","nonce":"MXFFUmNydTVPU2F6dU9seFQuNU5jNjBDbDJtVzJJRkxuZlNpUDh-ZFdoekNE","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:44:59.649 -04:00 [INF] {"ClientId":"interactive.public","ClientName":null,"RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Unknown client or client not enabled","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000010b-0000-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T02:44:59.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 22:45:10.658 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 22:45:10.660 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 22:45:10.660 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 22:45:10.660 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 22:45:10.660 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 22:45:10.660 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 22:45:10.660 -04:00 [DBG] Start discovery request
2020-08-28 22:45:10.668 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 22:45:10.698 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-28 22:45:10.703 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 22:45:10.703 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 22:45:10.703 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-28 22:45:10.705 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-28 22:45:10.705 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-28 22:45:10.705 -04:00 [DBG] Start key discovery request
2020-08-28 22:45:11.886 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 22:45:11.886 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 22:45:11.886 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 22:45:11.886 -04:00 [DBG] Start authorize request
2020-08-28 22:45:11.886 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 22:45:11.886 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 22:45:12.024 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:45:12.024 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:45:12.024 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"QnBSTEhCcXlfS2pUb0RDR2E1VFUydmVXT3pURVNTcVpMa2RFdWZHMXF2Zktw","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email api","code_challenge":"9V-otvVd1gSjnBCHhyGfj9ix524tdy6i2bw8BuSJe4A","code_challenge_method":"S256","nonce":"QnBSTEhCcXlfS2pUb0RDR2E1VFUydmVXT3pURVNTcVpMa2RFdWZHMXF2Zktw","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:45:12.024 -04:00 [ERR] Request validation failed
2020-08-28 22:45:12.024 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"QnBSTEhCcXlfS2pUb0RDR2E1VFUydmVXT3pURVNTcVpMa2RFdWZHMXF2Zktw","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email api","code_challenge":"9V-otvVd1gSjnBCHhyGfj9ix524tdy6i2bw8BuSJe4A","code_challenge_method":"S256","nonce":"QnBSTEhCcXlfS2pUb0RDR2E1VFUydmVXT3pURVNTcVpMa2RFdWZHMXF2Zktw","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:45:12.025 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000057-000a-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T02:45:12.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 22:45:47.011 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 22:45:47.013 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 22:45:47.013 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 22:45:47.013 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 22:45:47.013 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 22:45:47.013 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 22:45:47.013 -04:00 [DBG] Start discovery request
2020-08-28 22:45:47.021 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 22:45:47.050 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-28 22:45:47.051 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 22:45:47.051 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 22:45:47.051 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-28 22:45:47.052 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-28 22:45:47.052 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-28 22:45:47.052 -04:00 [DBG] Start key discovery request
2020-08-28 22:45:48.228 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 22:45:48.228 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 22:45:48.228 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 22:45:48.228 -04:00 [DBG] Start authorize request
2020-08-28 22:45:48.228 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 22:45:48.228 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 22:45:48.251 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:45:48.251 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:45:48.251 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"dUtvWkliYjFmWGFtdWl6REhYYmQ1bnNYSlRQdVZaMkdGOWhvY3ozMXh4MnU0","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"0jtIaxEMTYNshxySYvm22gnKCdnDmxa2DjT97A1ET0E","code_challenge_method":"S256","nonce":"dUtvWkliYjFmWGFtdWl6REhYYmQ1bnNYSlRQdVZaMkdGOWhvY3ozMXh4MnU0","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:45:48.251 -04:00 [ERR] Request validation failed
2020-08-28 22:45:48.251 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"dUtvWkliYjFmWGFtdWl6REhYYmQ1bnNYSlRQdVZaMkdGOWhvY3ozMXh4MnU0","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"0jtIaxEMTYNshxySYvm22gnKCdnDmxa2DjT97A1ET0E","code_challenge_method":"S256","nonce":"dUtvWkliYjFmWGFtdWl6REhYYmQ1bnNYSlRQdVZaMkdGOWhvY3ozMXh4MnU0","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:45:48.251 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000070-0004-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T02:45:48.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 22:46:06.771 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 22:46:06.771 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 22:46:06.771 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 22:46:06.771 -04:00 [DBG] Start authorize request
2020-08-28 22:46:06.771 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 22:46:06.771 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 22:46:06.779 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:46:06.779 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:46:06.779 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/index.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"LWJRcHZWS2MxREdTSW5objB3ZG10MVZBLU00Vk5wfkh1Ml9VaGZ3YlVWakdDsemicolon%2Fshould-login","redirect_uri":"https://localhost:4200/index.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"jbtIVjFujOScX_fkJLud2CiZKInVxc0dvq3SxlJ6RS8","code_challenge_method":"S256","nonce":"LWJRcHZWS2MxREdTSW5objB3ZG10MVZBLU00Vk5wfkh1Ml9VaGZ3YlVWakdD"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:46:06.780 -04:00 [ERR] Request validation failed
2020-08-28 22:46:06.780 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"LWJRcHZWS2MxREdTSW5objB3ZG10MVZBLU00Vk5wfkh1Ml9VaGZ3YlVWakdDsemicolon%2Fshould-login","redirect_uri":"https://localhost:4200/index.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"jbtIVjFujOScX_fkJLud2CiZKInVxc0dvq3SxlJ6RS8","code_challenge_method":"S256","nonce":"LWJRcHZWS2MxREdTSW5objB3ZG10MVZBLU00Vk5wfkh1Ml9VaGZ3YlVWakdD"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:46:06.780 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000010d-0000-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T02:46:06.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 22:47:19.679 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 22:47:19.679 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 22:47:19.679 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 22:47:19.679 -04:00 [DBG] Start authorize request
2020-08-28 22:47:19.679 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 22:47:19.679 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 22:47:19.697 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:47:19.697 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:47:19.698 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"VzZJTXo0dUU5S3k1bzUxcHg1NzdJc1N-NF94ckpVYTg1bjRBZjZGc2poREk4","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"r457pNW3EOlKCchBwHuvfqUSO5rD3OMLcjwN4n7YDSg","code_challenge_method":"S256","nonce":"VzZJTXo0dUU5S3k1bzUxcHg1NzdJc1N-NF94ckpVYTg1bjRBZjZGc2poREk4","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:47:19.698 -04:00 [ERR] Request validation failed
2020-08-28 22:47:19.698 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"VzZJTXo0dUU5S3k1bzUxcHg1NzdJc1N-NF94ckpVYTg1bjRBZjZGc2poREk4","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"r457pNW3EOlKCchBwHuvfqUSO5rD3OMLcjwN4n7YDSg","code_challenge_method":"S256","nonce":"VzZJTXo0dUU5S3k1bzUxcHg1NzdJc1N-NF94ckpVYTg1bjRBZjZGc2poREk4","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:47:19.698 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000068-0009-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T02:47:19.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 22:47:24.001 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 22:47:24.003 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 22:47:24.003 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 22:47:24.003 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 22:47:24.003 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 22:47:24.003 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 22:47:24.003 -04:00 [DBG] Start discovery request
2020-08-28 22:47:24.010 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 22:47:24.041 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-28 22:47:24.043 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 22:47:24.043 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 22:47:24.043 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-28 22:47:24.043 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-28 22:47:24.043 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-28 22:47:24.043 -04:00 [DBG] Start key discovery request
2020-08-28 22:47:25.078 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 22:47:25.078 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 22:47:25.078 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 22:47:25.079 -04:00 [DBG] Start authorize request
2020-08-28 22:47:25.079 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 22:47:25.079 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 22:47:25.094 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:47:25.094 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:47:25.094 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"MXIudjFHeVMtLnFnOF92LjN6MGdpendRejd0cGFjdGt3TUtad0pCSWZldlFn","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"kDy3DFX7GlXZpeD9xREINjOHupCcj4aFj9JKD9sxfjg","code_challenge_method":"S256","nonce":"MXIudjFHeVMtLnFnOF92LjN6MGdpendRejd0cGFjdGt3TUtad0pCSWZldlFn","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:47:25.094 -04:00 [ERR] Request validation failed
2020-08-28 22:47:25.095 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"MXIudjFHeVMtLnFnOF92LjN6MGdpendRejd0cGFjdGt3TUtad0pCSWZldlFn","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"kDy3DFX7GlXZpeD9xREINjOHupCcj4aFj9JKD9sxfjg","code_challenge_method":"S256","nonce":"MXIudjFHeVMtLnFnOF92LjN6MGdpendRejd0cGFjdGt3TUtad0pCSWZldlFn","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:47:25.095 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000010f-0000-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T02:47:25.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 22:47:35.431 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 22:47:35.431 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 22:47:35.431 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 22:47:35.432 -04:00 [DBG] Start authorize request
2020-08-28 22:47:35.432 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 22:47:35.432 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 22:47:35.442 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:47:35.442 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:47:35.442 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 22:47:35.445 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 22:47:35.456 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 22:47:35.458 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 22:47:35.459 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 22:47:35.459 -04:00 [ERR] Requested scope not allowed: email
2020-08-28 22:47:35.459 -04:00 [ERR] Request validation failed
2020-08-28 22:47:35.459 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"V2RnR3dnN3A0MTVzZm5BZEY4QWFvNnBSblk4UHdOU1hNdFVHeFEubEgwdV9Jsemicolon%2Fshould-login","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"V2RnR3dnN3A0MTVzZm5BZEY4QWFvNnBSblk4UHdOU1hNdFVHeFEubEgwdV9Jsemicolon%2Fshould-login","redirect_uri":"https://localhost:4200/auth-callback","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"V1sWhvJc4ksYWlDQGZjruemY20uh24z5P73qxwNowuI","code_challenge_method":"S256","nonce":"V2RnR3dnN3A0MTVzZm5BZEY4QWFvNnBSblk4UHdOU1hNdFVHeFEubEgwdV9J"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:47:35.459 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Error":"unauthorized_client","ErrorDescription":"Invalid scope for client","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000022-0001-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T02:47:35.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 22:48:06.148 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 22:48:06.148 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 22:48:06.148 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 22:48:06.148 -04:00 [DBG] Start authorize request
2020-08-28 22:48:06.148 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 22:48:06.148 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 22:48:06.157 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:48:06.157 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:48:06.157 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"ZmRXd2VpN3NLTy1sbVE4ODNleGpYYTdzakd-NTJUZ3VFVXpFSGpMRVJNMlpF","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile app.api.employeeprofile.read","code_challenge":"vkBn1NqkGdoBX6e8CGRCQvyIEjxe-2tmiW7PBTSlLQQ","code_challenge_method":"S256","nonce":"ZmRXd2VpN3NLTy1sbVE4ODNleGpYYTdzakd-NTJUZ3VFVXpFSGpMRVJNMlpF","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:48:06.157 -04:00 [ERR] Request validation failed
2020-08-28 22:48:06.157 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"ZmRXd2VpN3NLTy1sbVE4ODNleGpYYTdzakd-NTJUZ3VFVXpFSGpMRVJNMlpF","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile app.api.employeeprofile.read","code_challenge":"vkBn1NqkGdoBX6e8CGRCQvyIEjxe-2tmiW7PBTSlLQQ","code_challenge_method":"S256","nonce":"ZmRXd2VpN3NLTy1sbVE4ODNleGpYYTdzakd-NTJUZ3VFVXpFSGpMRVJNMlpF","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:48:06.157 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000063-000a-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-29T02:48:06.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 22:48:15.419 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 22:48:15.421 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 22:48:15.421 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 22:48:15.421 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 22:48:15.421 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 22:48:15.421 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 22:48:15.421 -04:00 [DBG] Start discovery request
2020-08-28 22:48:15.429 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 22:48:15.478 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-28 22:48:15.479 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 22:48:15.479 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 22:48:15.479 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-28 22:48:15.480 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-28 22:48:15.480 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-28 22:48:15.480 -04:00 [DBG] Start key discovery request
2020-08-28 22:48:16.682 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 22:48:16.682 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 22:48:16.682 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 22:48:16.682 -04:00 [DBG] Start authorize request
2020-08-28 22:48:16.682 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 22:48:16.683 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 22:48:16.690 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:48:16.690 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:48:16.691 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"bTBXejI2R1BlTXFtVzRHQUVIdTV1UXZKLWJxU2kzek5JZVR6WU9ha0tYLUNF","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile app.api.employeeprofile.read","code_challenge":"GyNuB-sktfviMh0Od1IjO9yyR_LqMclixD88vZ9ykj8","code_challenge_method":"S256","nonce":"bTBXejI2R1BlTXFtVzRHQUVIdTV1UXZKLWJxU2kzek5JZVR6WU9ha0tYLUNF","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:48:16.691 -04:00 [ERR] Request validation failed
2020-08-28 22:48:16.691 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"bTBXejI2R1BlTXFtVzRHQUVIdTV1UXZKLWJxU2kzek5JZVR6WU9ha0tYLUNF","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile app.api.employeeprofile.read","code_challenge":"GyNuB-sktfviMh0Od1IjO9yyR_LqMclixD88vZ9ykj8","code_challenge_method":"S256","nonce":"bTBXejI2R1BlTXFtVzRHQUVIdTV1UXZKLWJxU2kzek5JZVR6WU9ha0tYLUNF","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:48:16.691 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000024-0001-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T02:48:16.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 22:48:30.092 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 22:48:30.092 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 22:48:30.092 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 22:48:30.092 -04:00 [DBG] Start authorize request
2020-08-28 22:48:30.092 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 22:48:30.092 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 22:48:30.111 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:48:30.111 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:48:30.111 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 22:48:30.113 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:48:30.122 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 22:48:30.125 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:48:30.135 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 22:48:30.135 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 22:48:30.136 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile app.api.employeeprofile.read","State":"UTRVSmIweS5EV1hzYVNxSGZ1VU1UNWl4em9xZC5BX2xOcW9tVjBtWkxOflNOsemicolon%2Fshould-login","UiLocales":null,"Nonce":"UTRVSmIweS5EV1hzYVNxSGZ1VU1UNWl4em9xZC5BX2xOcW9tVjBtWkxOflNO","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"5mFZA9WfDQ0R2RStS0mqZg","Raw":{"response_type":"code","client_id":"angular_spa","state":"UTRVSmIweS5EV1hzYVNxSGZ1VU1UNWl4em9xZC5BX2xOcW9tVjBtWkxOflNOsemicolon%2Fshould-login","redirect_uri":"https://localhost:4200/auth-callback","scope":"openid profile app.api.employeeprofile.read","code_challenge":"sIBABOWUjHJT1J4JPCV229E07p5AvcxxZuxYUM4La5Y","code_challenge_method":"S256","nonce":"UTRVSmIweS5EV1hzYVNxSGZ1VU1UNWl4em9xZC5BX2xOcW9tVjBtWkxOflNO"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:48:30.138 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-28 22:48:30.138 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-28 22:48:30.151 -04:00 [DBG] T6vzfVxahn0LyZG4FaqM0XKCv29ytFUi4tQobcvYS/M= not found in database
2020-08-28 22:48:30.176 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****noMU","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000006a-0009-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T02:48:30.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 22:48:30.176 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200/auth-callback","State":"UTRVSmIweS5EV1hzYVNxSGZ1VU1UNWl4em9xZC5BX2xOcW9tVjBtWkxOflNOsemicolon%2Fshould-login","Scope":"openid profile app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-28 22:48:30.360 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 22:48:30.363 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 22:48:30.363 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 22:48:30.363 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 22:48:30.363 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 22:48:30.363 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 22:48:30.363 -04:00 [DBG] Start discovery request
2020-08-28 22:48:30.372 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 22:48:30.429 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-28 22:48:30.431 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 22:48:30.431 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 22:48:30.431 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-28 22:48:30.431 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-28 22:48:30.431 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-28 22:48:30.431 -04:00 [DBG] Start key discovery request
2020-08-28 22:48:31.624 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-28 22:48:31.626 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 22:48:31.626 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 22:48:31.626 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-28 22:48:31.627 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-28 22:48:31.627 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-28 22:48:31.627 -04:00 [DBG] Start token request.
2020-08-28 22:48:31.627 -04:00 [DBG] Start client validation
2020-08-28 22:48:31.627 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-28 22:48:31.627 -04:00 [DBG] Start parsing for secret in post body
2020-08-28 22:48:31.627 -04:00 [DBG] client id without secret found
2020-08-28 22:48:31.627 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-28 22:48:31.628 -04:00 [DBG] Secret id found: angular_spa
2020-08-28 22:48:31.648 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:48:31.648 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:48:31.648 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-28 22:48:31.648 -04:00 [DBG] Client validation success
2020-08-28 22:48:31.648 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000009b-0002-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T02:48:31.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-28 22:48:31.648 -04:00 [DBG] Start token request validation
2020-08-28 22:48:31.648 -04:00 [DBG] Start validation of authorization code token request
2020-08-28 22:48:31.649 -04:00 [DBG] T6vzfVxahn0LyZG4FaqM0XKCv29ytFUi4tQobcvYS/M= found in database: true
2020-08-28 22:48:31.650 -04:00 [DBG] removing T6vzfVxahn0LyZG4FaqM0XKCv29ytFUi4tQobcvYS/M= persisted grant from database
2020-08-28 22:48:31.653 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-28 22:48:31.655 -04:00 [DBG] Validation of authorization code token request success
2020-08-28 22:48:31.655 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"KRVn4YCu8I-6Yvqnng04LBJdNcFShkOelk5W0ulnoMU","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"KRVn4YCu8I-6Yvqnng04LBJdNcFShkOelk5W0ulnoMU","redirect_uri":"https://localhost:4200/auth-callback","code_verifier":"VEVacVJ5RFFya2Y1MnNScEIzLnlyYnpKNnZvNUlBMFhtYWhEZHRpdzR6RTl6","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-28 22:48:31.662 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:48:31.662 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:48:31.664 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:48:31.673 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 22:48:31.673 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-28 22:48:31.674 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 22:48:31.685 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:48:31.686 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:48:31.687 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:48:31.688 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 22:48:31.688 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-28 22:48:31.688 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-28 22:48:31.689 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****4IBA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****9nxQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000009b-0002-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T02:48:31.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 22:48:31.689 -04:00 [DBG] Token request success.
2020-08-28 22:48:31.698 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 22:48:31.698 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 22:48:31.698 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 22:48:31.698 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 22:48:31.698 -04:00 [DBG] Rendering check session result
2020-08-28 22:48:31.699 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 22:48:31.699 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 22:48:31.701 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 22:48:31.702 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 22:48:31.702 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 22:48:31.703 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-28 22:48:31.703 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-28 22:48:31.703 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-28 22:48:31.703 -04:00 [DBG] Start userinfo request
2020-08-28 22:48:31.703 -04:00 [DBG] Bearer token found in header
2020-08-28 22:48:31.711 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:48:31.711 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:48:31.719 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:48:31.719 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:48:31.721 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 22:48:31.721 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598669311,"exp":1598672911,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598654358,"idp":"local","scope":["openid","profile","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-28 22:48:31.721 -04:00 [DBG] Creating userinfo response
2020-08-28 22:48:31.721 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 22:48:31.721 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 22:48:31.723 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:48:31.723 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile
2020-08-28 22:48:31.723 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 22:48:31.724 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:48:31.729 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username
2020-08-28 22:48:31.729 -04:00 [DBG] End userinfo request
2020-08-28 22:48:42.649 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-28 22:48:42.650 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-28 22:48:42.650 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-28 22:48:42.652 -04:00 [DBG] Processing signout request for 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 22:48:42.654 -04:00 [DBG] Start end session request validation
2020-08-28 22:48:42.656 -04:00 [DBG] Start identity token validation
2020-08-28 22:48:42.664 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:48:42.664 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:48:42.665 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-28 22:48:42.668 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 22:48:42.668 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598669311,"exp":1598669611,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"UTRVSmIweS5EV1hzYVNxSGZ1VU1UNWl4em9xZC5BX2xOcW9tVjBtWkxOflNO","iat":1598669311,"at_hash":"rByI-KKtSyA_OdSesG1rXQ","s_hash":"tt_mpyv93o3H4BdkvqcfCw","sid":"5mFZA9WfDQ0R2RStS0mqZg","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598654358,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-28 22:48:42.669 -04:00 [WRN] Invalid PostLogoutRedirectUri: https://localhost:4200/auth-callback
2020-08-28 22:48:42.670 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2020-08-28 22:48:42.670 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-28 22:48:42.698 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-28 22:48:42.699 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-28 22:48:42.699 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-28 22:48:42.700 -04:00 [INF] {"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"8000009d-0002-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T02:48:42.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-28 22:48:42.734 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-08-28 22:48:42.736 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-08-28 22:48:42.736 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-08-28 22:48:42.738 -04:00 [DBG] Processing signout callback request
2020-08-28 22:48:42.751 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:48:42.751 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:48:42.752 -04:00 [DBG] Client front-channel logout URLs: https://localhost:4200/signout-oidc?sid=5mFZA9WfDQ0R2RStS0mqZg&iss=https%3A%2F%2Flocalhost%3A44354
2020-08-28 22:48:42.752 -04:00 [DBG] No client back-channel logout URLs
2020-08-28 22:48:42.753 -04:00 [INF] Successful signout callback.
2020-08-28 22:48:42.753 -04:00 [DBG] Client front-channel iframe urls: ["https://localhost:4200/signout-oidc?sid=5mFZA9WfDQ0R2RStS0mqZg&iss=https%3A%2F%2Flocalhost%3A44354"]
2020-08-28 22:48:42.753 -04:00 [DBG] No client back-channel iframe urls
2020-08-28 22:48:43.534 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 22:48:43.536 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 22:48:43.536 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 22:48:43.536 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 22:48:43.536 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 22:48:43.536 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 22:48:43.536 -04:00 [DBG] Start discovery request
2020-08-28 22:48:43.543 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 22:48:43.600 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-28 22:48:43.602 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 22:48:43.602 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 22:48:43.602 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-28 22:48:43.602 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-28 22:48:43.602 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-28 22:48:43.602 -04:00 [DBG] Start key discovery request
2020-08-28 22:48:44.787 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 22:48:44.787 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 22:48:44.787 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 22:48:44.787 -04:00 [DBG] Start authorize request
2020-08-28 22:48:44.788 -04:00 [DBG] No user present in authorize request
2020-08-28 22:48:44.788 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 22:48:44.796 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:48:44.796 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:48:44.796 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"OEhkS0F6clpDdDRPX2lxVmpWeXFkaH4yVXU0ZEVJSm5IMXBDeml6WlpKdVhy","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile app.api.employeeprofile.read","code_challenge":"EYX2qFu2IM3OI2aMB_S_5cJxqFTxpjBv4pI-bhdJMTA","code_challenge_method":"S256","nonce":"OEhkS0F6clpDdDRPX2lxVmpWeXFkaH4yVXU0ZEVJSm5IMXBDeml6WlpKdVhy","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:48:44.796 -04:00 [ERR] Request validation failed
2020-08-28 22:48:44.796 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"OEhkS0F6clpDdDRPX2lxVmpWeXFkaH4yVXU0ZEVJSm5IMXBDeml6WlpKdVhy","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile app.api.employeeprofile.read","code_challenge":"EYX2qFu2IM3OI2aMB_S_5cJxqFTxpjBv4pI-bhdJMTA","code_challenge_method":"S256","nonce":"OEhkS0F6clpDdDRPX2lxVmpWeXFkaH4yVXU0ZEVJSm5IMXBDeml6WlpKdVhy","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:48:44.796 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000ab-0004-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-29T02:48:44.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 22:48:54.528 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 22:48:54.528 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 22:48:54.528 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 22:48:54.528 -04:00 [DBG] Start authorize request
2020-08-28 22:48:54.528 -04:00 [DBG] No user present in authorize request
2020-08-28 22:48:54.528 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 22:48:54.536 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:48:54.536 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:48:54.536 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"ODNLSFNJTmM1TFlrWFZvTG1RZDc4M1dhcTJWWmlvWFFndEduREtHcENQWk5P","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile app.api.employeeprofile.read","code_challenge":"Mr9JpBa8-gDVSVsj4-n4A-lBNHmK7p_x4KsuuR9PaIo","code_challenge_method":"S256","nonce":"ODNLSFNJTmM1TFlrWFZvTG1RZDc4M1dhcTJWWmlvWFFndEduREtHcENQWk5P","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:48:54.536 -04:00 [ERR] Request validation failed
2020-08-28 22:48:54.536 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"ODNLSFNJTmM1TFlrWFZvTG1RZDc4M1dhcTJWWmlvWFFndEduREtHcENQWk5P","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile app.api.employeeprofile.read","code_challenge":"Mr9JpBa8-gDVSVsj4-n4A-lBNHmK7p_x4KsuuR9PaIo","code_challenge_method":"S256","nonce":"ODNLSFNJTmM1TFlrWFZvTG1RZDc4M1dhcTJWWmlvWFFndEduREtHcENQWk5P","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:48:54.536 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000009f-0002-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T02:48:54.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 22:49:06.237 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 22:49:06.237 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 22:49:06.237 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 22:49:06.237 -04:00 [DBG] Start authorize request
2020-08-28 22:49:06.237 -04:00 [DBG] No user present in authorize request
2020-08-28 22:49:06.237 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 22:49:06.248 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:49:06.248 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:49:06.248 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 22:49:06.249 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:49:06.250 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 22:49:06.251 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:49:06.252 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 22:49:06.253 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 22:49:06.253 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile app.api.employeeprofile.read","State":"aXpTWDV-MFpfWGVGNFN6TFBVLTJOd2I5bGF1Z1l1aTVXT3hOUnVTWEF6REdvsemicolon%2Fshould-login","UiLocales":null,"Nonce":"aXpTWDV-MFpfWGVGNFN6TFBVLTJOd2I5bGF1Z1l1aTVXT3hOUnVTWEF6REdv","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"aXpTWDV-MFpfWGVGNFN6TFBVLTJOd2I5bGF1Z1l1aTVXT3hOUnVTWEF6REdvsemicolon%2Fshould-login","redirect_uri":"https://localhost:4200/auth-callback","scope":"openid profile app.api.employeeprofile.read","code_challenge":"-NSEZ8F0bXJD-NTZvwLTgQ9iv1soCWVEiJQ4wfsl2DA","code_challenge_method":"S256","nonce":"aXpTWDV-MFpfWGVGNFN6TFBVLTJOd2I5bGF1Z1l1aTVXT3hOUnVTWEF6REdv"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:49:06.253 -04:00 [INF] Showing login: User is not authenticated
2020-08-28 22:49:06.257 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 22:49:06.265 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:49:06.265 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:49:06.265 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 22:49:06.266 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:49:06.268 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 22:49:06.269 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:49:06.270 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 22:49:06.270 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 22:49:06.276 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:49:06.276 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:49:10.401 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-28 22:49:10.898 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 22:49:10.949 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-08-28 22:49:10.989 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000083-0002-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-29T02:49:10.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-28 22:49:10.993 -04:00 [DBG] Augmenting SignInContext
2020-08-28 22:49:10.993 -04:00 [DBG] Adding amr claim with value: external
2020-08-28 22:49:10.993 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 22:49:10.993 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-28 22:49:10.998 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-28 22:49:10.998 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-28 22:49:10.998 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-28 22:49:10.998 -04:00 [DBG] Start authorize callback request
2020-08-28 22:49:10.998 -04:00 [DBG] User in authorize request: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-28 22:49:10.998 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 22:49:11.006 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:49:11.006 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:49:11.006 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 22:49:11.007 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:49:11.009 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 22:49:11.010 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:49:11.011 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 22:49:11.011 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 22:49:11.011 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile app.api.employeeprofile.read","State":"aXpTWDV-MFpfWGVGNFN6TFBVLTJOd2I5bGF1Z1l1aTVXT3hOUnVTWEF6REdvsemicolon%2Fshould-login","UiLocales":null,"Nonce":"aXpTWDV-MFpfWGVGNFN6TFBVLTJOd2I5bGF1Z1l1aTVXT3hOUnVTWEF6REdv","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"tUyd22eAmkVyNLC4xV-HaA","Raw":{"response_type":"code","client_id":"angular_spa","state":"aXpTWDV-MFpfWGVGNFN6TFBVLTJOd2I5bGF1Z1l1aTVXT3hOUnVTWEF6REdvsemicolon%2Fshould-login","redirect_uri":"https://localhost:4200/auth-callback","scope":"openid profile app.api.employeeprofile.read","code_challenge":"-NSEZ8F0bXJD-NTZvwLTgQ9iv1soCWVEiJQ4wfsl2DA","code_challenge_method":"S256","nonce":"aXpTWDV-MFpfWGVGNFN6TFBVLTJOd2I5bGF1Z1l1aTVXT3hOUnVTWEF6REdv"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:49:11.012 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-28 22:49:11.012 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-28 22:49:11.014 -04:00 [DBG] Db+jGoErgYtE81tJnBiG+Xe0An8TbmPxMlNR9irLZIU= not found in database
2020-08-28 22:49:11.015 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****LitA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000a6-0004-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-29T02:49:11.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 22:49:11.016 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ClientId":"angular_spa","RedirectUri":"https://localhost:4200/auth-callback","State":"aXpTWDV-MFpfWGVGNFN6TFBVLTJOd2I5bGF1Z1l1aTVXT3hOUnVTWEF6REdvsemicolon%2Fshould-login","Scope":"openid profile app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-28 22:49:11.016 -04:00 [DBG] Augmenting SignInContext
2020-08-28 22:49:11.016 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 22:49:11.856 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 22:49:11.857 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 22:49:11.857 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 22:49:11.857 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 22:49:11.858 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 22:49:11.858 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 22:49:11.858 -04:00 [DBG] Start discovery request
2020-08-28 22:49:11.860 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 22:49:11.983 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-28 22:49:11.984 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 22:49:11.985 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 22:49:11.985 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-28 22:49:11.985 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-28 22:49:11.985 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-28 22:49:11.985 -04:00 [DBG] Start key discovery request
2020-08-28 22:49:13.179 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-28 22:49:13.182 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 22:49:13.182 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 22:49:13.182 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-28 22:49:13.183 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-28 22:49:13.183 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-28 22:49:13.183 -04:00 [DBG] Start token request.
2020-08-28 22:49:13.183 -04:00 [DBG] Start client validation
2020-08-28 22:49:13.183 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-28 22:49:13.184 -04:00 [DBG] Start parsing for secret in post body
2020-08-28 22:49:13.184 -04:00 [DBG] client id without secret found
2020-08-28 22:49:13.184 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-28 22:49:13.184 -04:00 [DBG] Secret id found: angular_spa
2020-08-28 22:49:13.193 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:49:13.193 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:49:13.193 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-28 22:49:13.193 -04:00 [DBG] Client validation success
2020-08-28 22:49:13.193 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000089-0003-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-29T02:49:13.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-28 22:49:13.194 -04:00 [DBG] Start token request validation
2020-08-28 22:49:13.194 -04:00 [DBG] Start validation of authorization code token request
2020-08-28 22:49:13.195 -04:00 [DBG] Db+jGoErgYtE81tJnBiG+Xe0An8TbmPxMlNR9irLZIU= found in database: true
2020-08-28 22:49:13.196 -04:00 [DBG] removing Db+jGoErgYtE81tJnBiG+Xe0An8TbmPxMlNR9irLZIU= persisted grant from database
2020-08-28 22:49:13.198 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-28 22:49:13.199 -04:00 [DBG] Validation of authorization code token request success
2020-08-28 22:49:13.199 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"l33DT42gOh6ApifmnNMB4_fS8CL2VUQVgoN_llOLitA","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"l33DT42gOh6ApifmnNMB4_fS8CL2VUQVgoN_llOLitA","redirect_uri":"https://localhost:4200/auth-callback","code_verifier":"Wn5KWGY0OC5RTUNwLmlkaXNzdE5kaUlMTjN6eU5IQjVMbmpNTF9MM1NUNkpi","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-28 22:49:13.206 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:49:13.206 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:49:13.207 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:49:13.208 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 22:49:13.208 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-28 22:49:13.208 -04:00 [DBG] Getting claims for access token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-28 22:49:13.218 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:49:13.218 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:49:13.219 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:49:13.220 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 22:49:13.220 -04:00 [DBG] Getting claims for identity token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188 and client: angular_spa
2020-08-28 22:49:13.220 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-28 22:49:13.221 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****csBw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****E7qQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000089-0003-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-29T02:49:13.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 22:49:13.221 -04:00 [DBG] Token request success.
2020-08-28 22:49:13.230 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 22:49:13.230 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 22:49:13.230 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 22:49:13.230 -04:00 [DBG] Rendering check session result
2020-08-28 22:49:13.230 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 22:49:13.232 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 22:49:13.232 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 22:49:13.234 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 22:49:13.235 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 22:49:13.235 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 22:49:13.236 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-28 22:49:13.236 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-28 22:49:13.236 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-28 22:49:13.236 -04:00 [DBG] Start userinfo request
2020-08-28 22:49:13.236 -04:00 [DBG] Bearer token found in header
2020-08-28 22:49:13.245 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:49:13.245 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:49:13.254 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:49:13.254 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:49:13.255 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 22:49:13.255 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598669353,"exp":1598672953,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1598669350,"idp":"azuread","scope":["openid","profile","app.api.employeeprofile.read"],"amr":"external"},"$type":"TokenValidationLog"}
2020-08-28 22:49:13.256 -04:00 [DBG] Creating userinfo response
2020-08-28 22:49:13.256 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 22:49:13.256 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 22:49:13.257 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:49:13.257 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile
2020-08-28 22:49:13.258 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 22:49:13.259 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:49:13.262 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username
2020-08-28 22:49:13.262 -04:00 [DBG] End userinfo request
2020-08-28 22:49:33.837 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-28 22:49:33.837 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-28 22:49:33.837 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-28 22:49:33.837 -04:00 [DBG] Processing signout request for 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-28 22:49:33.837 -04:00 [DBG] Start end session request validation
2020-08-28 22:49:33.838 -04:00 [DBG] Start identity token validation
2020-08-28 22:49:33.857 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:49:33.857 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:49:33.857 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-28 22:49:33.860 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 22:49:33.860 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598669353,"exp":1598669653,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"aXpTWDV-MFpfWGVGNFN6TFBVLTJOd2I5bGF1Z1l1aTVXT3hOUnVTWEF6REdv","iat":1598669353,"at_hash":"jBRFqCi_d_CzmgwIfIqryw","s_hash":"oXg_uvFwbaNhOyN15X0H1A","sid":"tUyd22eAmkVyNLC4xV-HaA","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1598669350,"idp":"azuread","amr":"external"},"$type":"TokenValidationLog"}
2020-08-28 22:49:33.860 -04:00 [WRN] Invalid PostLogoutRedirectUri: https://localhost:4200/auth-callback
2020-08-28 22:49:33.860 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200/auth-callback"},"$type":"EndSessionRequestValidationLog"}
2020-08-28 22:49:33.860 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-28 22:49:33.866 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-28 22:49:33.866 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-28 22:49:33.866 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-28 22:49:33.866 -04:00 [INF] {"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"800000e9-0006-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T02:49:33.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-28 22:49:49.198 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 22:49:49.198 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 22:49:49.198 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 22:49:49.198 -04:00 [DBG] Start authorize request
2020-08-28 22:49:49.198 -04:00 [DBG] No user present in authorize request
2020-08-28 22:49:49.198 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 22:49:49.214 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:49:49.214 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:49:49.214 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"WWx1eHdHaDcuSUZBTXpyak5GbXlLMVNpYmdhYmFWWTIuLUpHRlFxVmpOR3hD","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile app.api.employeeprofile.read","code_challenge":"m4sV-4Ula4bKDf4G3d_ecpO8jj6u5ii_PRo2R0zXtwQ","code_challenge_method":"S256","nonce":"WWx1eHdHaDcuSUZBTXpyak5GbXlLMVNpYmdhYmFWWTIuLUpHRlFxVmpOR3hD","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:49:49.214 -04:00 [ERR] Request validation failed
2020-08-28 22:49:49.215 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"WWx1eHdHaDcuSUZBTXpyak5GbXlLMVNpYmdhYmFWWTIuLUpHRlFxVmpOR3hD","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile app.api.employeeprofile.read","code_challenge":"m4sV-4Ula4bKDf4G3d_ecpO8jj6u5ii_PRo2R0zXtwQ","code_challenge_method":"S256","nonce":"WWx1eHdHaDcuSUZBTXpyak5GbXlLMVNpYmdhYmFWWTIuLUpHRlFxVmpOR3hD","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:49:49.215 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000ac-0004-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-29T02:49:49.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 22:50:07.584 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 22:50:07.584 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 22:50:07.584 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 22:50:07.584 -04:00 [DBG] Start authorize request
2020-08-28 22:50:07.584 -04:00 [DBG] No user present in authorize request
2020-08-28 22:50:07.584 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 22:50:07.592 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:50:07.592 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:50:07.592 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 22:50:07.595 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:50:07.604 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 22:50:07.605 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:50:07.606 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 22:50:07.606 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 22:50:07.606 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile app.api.employeeprofile.read","State":"Qm1Tc05wfjUyNEp-QkY5a29fb35CV3puM3FyMmVFU1psc1BxZHlpZFBTdkw3semicolon%2Fshould-login","UiLocales":null,"Nonce":"Qm1Tc05wfjUyNEp-QkY5a29fb35CV3puM3FyMmVFU1psc1BxZHlpZFBTdkw3","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"Qm1Tc05wfjUyNEp-QkY5a29fb35CV3puM3FyMmVFU1psc1BxZHlpZFBTdkw3semicolon%2Fshould-login","redirect_uri":"https://localhost:4200/auth-callback","scope":"openid profile app.api.employeeprofile.read","code_challenge":"M43KfIFFsdqEOh_18hhbcNse-VqbNV4Kf5tt0Xih9sQ","code_challenge_method":"S256","nonce":"Qm1Tc05wfjUyNEp-QkY5a29fb35CV3puM3FyMmVFU1psc1BxZHlpZFBTdkw3"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:50:07.607 -04:00 [INF] Showing login: User is not authenticated
2020-08-28 22:50:07.611 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 22:50:07.621 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:50:07.621 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:50:07.621 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 22:50:07.622 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:50:07.623 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 22:50:07.625 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:50:07.625 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 22:50:07.626 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 22:50:07.632 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:50:07.632 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:50:13.553 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 22:50:13.556 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 22:50:13.565 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:50:13.565 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:50:13.565 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 22:50:13.566 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:50:13.567 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 22:50:13.568 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:50:13.569 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 22:50:13.570 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 22:50:13.578 -04:00 [DBG] Augmenting SignInContext
2020-08-28 22:50:13.578 -04:00 [DBG] Adding idp claim with value: local
2020-08-28 22:50:13.578 -04:00 [DBG] Adding auth_time claim with value: 1598669413
2020-08-28 22:50:13.578 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 22:50:13.579 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000ae-0007-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T02:50:13.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-28 22:50:13.586 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:50:13.586 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:50:13.591 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-28 22:50:13.594 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-28 22:50:13.594 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-28 22:50:13.594 -04:00 [DBG] Start authorize callback request
2020-08-28 22:50:13.594 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 22:50:13.594 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 22:50:13.602 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:50:13.602 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:50:13.602 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 22:50:13.603 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:50:13.604 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 22:50:13.605 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:50:13.607 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 22:50:13.607 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 22:50:13.607 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile app.api.employeeprofile.read","State":"Qm1Tc05wfjUyNEp-QkY5a29fb35CV3puM3FyMmVFU1psc1BxZHlpZFBTdkw3semicolon%2Fshould-login","UiLocales":null,"Nonce":"Qm1Tc05wfjUyNEp-QkY5a29fb35CV3puM3FyMmVFU1psc1BxZHlpZFBTdkw3","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ble3GsGl_E3qGKXItujpOg","Raw":{"response_type":"code","client_id":"angular_spa","state":"Qm1Tc05wfjUyNEp-QkY5a29fb35CV3puM3FyMmVFU1psc1BxZHlpZFBTdkw3semicolon%2Fshould-login","redirect_uri":"https://localhost:4200/auth-callback","scope":"openid profile app.api.employeeprofile.read","code_challenge":"M43KfIFFsdqEOh_18hhbcNse-VqbNV4Kf5tt0Xih9sQ","code_challenge_method":"S256","nonce":"Qm1Tc05wfjUyNEp-QkY5a29fb35CV3puM3FyMmVFU1psc1BxZHlpZFBTdkw3"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:50:13.609 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-28 22:50:13.609 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-28 22:50:13.610 -04:00 [DBG] VnLe/EQfvzvpHg4a6xLASNp2sfD2tjBEpVm/qwnD5PQ= not found in database
2020-08-28 22:50:13.612 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****d_nA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000d7-000a-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-29T02:50:13.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 22:50:13.612 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200/auth-callback","State":"Qm1Tc05wfjUyNEp-QkY5a29fb35CV3puM3FyMmVFU1psc1BxZHlpZFBTdkw3semicolon%2Fshould-login","Scope":"openid profile app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-28 22:50:13.612 -04:00 [DBG] Augmenting SignInContext
2020-08-28 22:50:13.612 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 22:50:14.465 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 22:50:14.467 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 22:50:14.467 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 22:50:14.467 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 22:50:14.468 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 22:50:14.468 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 22:50:14.468 -04:00 [DBG] Start discovery request
2020-08-28 22:50:14.475 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 22:50:14.519 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-28 22:50:14.521 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 22:50:14.521 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 22:50:14.521 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-28 22:50:14.522 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-28 22:50:14.522 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-28 22:50:14.522 -04:00 [DBG] Start key discovery request
2020-08-28 22:50:15.722 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-28 22:50:15.724 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 22:50:15.724 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 22:50:15.725 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-28 22:50:15.725 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-28 22:50:15.725 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-28 22:50:15.725 -04:00 [DBG] Start token request.
2020-08-28 22:50:15.725 -04:00 [DBG] Start client validation
2020-08-28 22:50:15.725 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-28 22:50:15.725 -04:00 [DBG] Start parsing for secret in post body
2020-08-28 22:50:15.725 -04:00 [DBG] client id without secret found
2020-08-28 22:50:15.725 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-28 22:50:15.725 -04:00 [DBG] Secret id found: angular_spa
2020-08-28 22:50:15.735 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:50:15.735 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:50:15.735 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-28 22:50:15.735 -04:00 [DBG] Client validation success
2020-08-28 22:50:15.735 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"800000b2-0004-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-29T02:50:15.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-28 22:50:15.735 -04:00 [DBG] Start token request validation
2020-08-28 22:50:15.735 -04:00 [DBG] Start validation of authorization code token request
2020-08-28 22:50:15.737 -04:00 [DBG] VnLe/EQfvzvpHg4a6xLASNp2sfD2tjBEpVm/qwnD5PQ= found in database: true
2020-08-28 22:50:15.738 -04:00 [DBG] removing VnLe/EQfvzvpHg4a6xLASNp2sfD2tjBEpVm/qwnD5PQ= persisted grant from database
2020-08-28 22:50:15.740 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-28 22:50:15.741 -04:00 [DBG] Validation of authorization code token request success
2020-08-28 22:50:15.742 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"tydh7AEConcJ0OawyYOy4H3p3nNRUSlzT0Pyf_sd_nA","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"tydh7AEConcJ0OawyYOy4H3p3nNRUSlzT0Pyf_sd_nA","redirect_uri":"https://localhost:4200/auth-callback","code_verifier":"VHdGc2dUcEIwQ2x3amlmY2VpU0tXUzdpRWJhTmlmcVA4Mm8yflVxY3N0WTJQ","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-28 22:50:15.748 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:50:15.748 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:50:15.749 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:50:15.750 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 22:50:15.750 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-28 22:50:15.750 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 22:50:15.761 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:50:15.761 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:50:15.762 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:50:15.764 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 22:50:15.764 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-28 22:50:15.764 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-28 22:50:15.765 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****hofw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****YaUg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000b2-0004-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-29T02:50:15.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 22:50:15.765 -04:00 [DBG] Token request success.
2020-08-28 22:50:15.774 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 22:50:15.774 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 22:50:15.774 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 22:50:15.774 -04:00 [DBG] Rendering check session result
2020-08-28 22:50:15.774 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 22:50:15.776 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 22:50:15.776 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 22:50:15.778 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 22:50:15.779 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 22:50:15.779 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 22:50:15.779 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-28 22:50:15.780 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-28 22:50:15.780 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-28 22:50:15.780 -04:00 [DBG] Start userinfo request
2020-08-28 22:50:15.780 -04:00 [DBG] Bearer token found in header
2020-08-28 22:50:15.789 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:50:15.789 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:50:15.796 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:50:15.796 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:50:15.798 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 22:50:15.798 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598669415,"exp":1598673015,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598669413,"idp":"local","scope":["openid","profile","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-28 22:50:15.798 -04:00 [DBG] Creating userinfo response
2020-08-28 22:50:15.798 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 22:50:15.798 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 22:50:15.799 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:50:15.800 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile
2020-08-28 22:50:15.800 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-08-28 22:50:15.801 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-08-28 22:50:15.807 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username
2020-08-28 22:50:15.807 -04:00 [DBG] End userinfo request
2020-08-28 22:51:31.593 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 22:51:31.593 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 22:51:31.593 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 22:51:31.593 -04:00 [DBG] Start authorize request
2020-08-28 22:51:31.594 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 22:51:31.594 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 22:51:31.613 -04:00 [DBG] angular_spa found in database: true
2020-08-28 22:51:31.613 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 22:51:31.613 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"SHNPODJBR01raUJBMzZxREUtS0M0MWNrNXlkTS1SVmI0RmkybUNFMHpDaGZR","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile app.api.employeeprofile.read","code_challenge":"O8cIgIInrykj8baAvc8pZ0sHCz8C5_DnwcAiNF3LjrA","code_challenge_method":"S256","nonce":"SHNPODJBR01raUJBMzZxREUtS0M0MWNrNXlkTS1SVmI0RmkybUNFMHpDaGZR","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:51:31.613 -04:00 [ERR] Request validation failed
2020-08-28 22:51:31.613 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"SHNPODJBR01raUJBMzZxREUtS0M0MWNrNXlkTS1SVmI0RmkybUNFMHpDaGZR","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile app.api.employeeprofile.read","code_challenge":"O8cIgIInrykj8baAvc8pZ0sHCz8C5_DnwcAiNF3LjrA","code_challenge_method":"S256","nonce":"SHNPODJBR01raUJBMzZxREUtS0M0MWNrNXlkTS1SVmI0RmkybUNFMHpDaGZR","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 22:51:31.613 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000005e-000a-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T02:51:31.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 23:05:18.064 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 23:05:18.064 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 23:05:18.064 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 23:05:18.064 -04:00 [DBG] Start authorize request
2020-08-28 23:05:18.064 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 23:05:18.064 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:05:18.126 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:05:18.126 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:05:18.126 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"WWhJMnczUjdzS3h6aVM1REZtZkFic0JVSFJHNWpTbjFraUM1RHYwR0ZRWDRB","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile app.api.employeeprofile.read","code_challenge":"ZQbZ7oNYg_yuDu4LGAJx61JHQnHmOpGE--ZJ83k6EtQ","code_challenge_method":"S256","nonce":"WWhJMnczUjdzS3h6aVM1REZtZkFic0JVSFJHNWpTbjFraUM1RHYwR0ZRWDRB","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:05:18.126 -04:00 [ERR] Request validation failed
2020-08-28 23:05:18.126 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"WWhJMnczUjdzS3h6aVM1REZtZkFic0JVSFJHNWpTbjFraUM1RHYwR0ZRWDRB","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile app.api.employeeprofile.read","code_challenge":"ZQbZ7oNYg_yuDu4LGAJx61JHQnHmOpGE--ZJ83k6EtQ","code_challenge_method":"S256","nonce":"WWhJMnczUjdzS3h6aVM1REZtZkFic0JVSFJHNWpTbjFraUM1RHYwR0ZRWDRB","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:05:18.126 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000013f-0000-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:05:18.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 23:15:58.136 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 23:15:58.146 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:15:58.146 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:15:58.146 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 23:15:58.146 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 23:15:58.146 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 23:15:58.146 -04:00 [DBG] Start discovery request
2020-08-28 23:15:58.158 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 23:15:58.198 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-28 23:15:58.200 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:15:58.200 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:15:58.200 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-28 23:15:58.201 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-28 23:15:58.201 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-28 23:15:58.201 -04:00 [DBG] Start key discovery request
2020-08-28 23:16:00.069 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 23:16:00.069 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 23:16:00.069 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 23:16:00.069 -04:00 [DBG] Start authorize request
2020-08-28 23:16:00.069 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 23:16:00.069 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:16:00.087 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:16:00.087 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:16:00.087 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"QUI5R29STW4yTmhuZFZSX3F4SDM0TTE0bnJFQldZelNySGVPZFlRa212M2l1","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"jaaAAtYTFER8a150R5kXHDWR9as_O6qcP-prZCjkYhw","code_challenge_method":"S256","nonce":"QUI5R29STW4yTmhuZFZSX3F4SDM0TTE0bnJFQldZelNySGVPZFlRa212M2l1","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:16:00.087 -04:00 [ERR] Request validation failed
2020-08-28 23:16:00.087 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"QUI5R29STW4yTmhuZFZSX3F4SDM0TTE0bnJFQldZelNySGVPZFlRa212M2l1","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"jaaAAtYTFER8a150R5kXHDWR9as_O6qcP-prZCjkYhw","code_challenge_method":"S256","nonce":"QUI5R29STW4yTmhuZFZSX3F4SDM0TTE0bnJFQldZelNySGVPZFlRa212M2l1","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:16:00.087 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000b0-0004-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:16:00.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 23:16:08.245 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 23:16:08.247 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:16:08.247 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:16:08.247 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 23:16:08.248 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 23:16:08.248 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 23:16:08.248 -04:00 [DBG] Start discovery request
2020-08-28 23:16:08.254 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 23:16:08.301 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-28 23:16:08.303 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:16:08.303 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:16:08.303 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-28 23:16:08.303 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-28 23:16:08.303 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-28 23:16:08.303 -04:00 [DBG] Start key discovery request
2020-08-28 23:16:10.067 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 23:16:10.067 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 23:16:10.067 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 23:16:10.067 -04:00 [DBG] Start authorize request
2020-08-28 23:16:10.068 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 23:16:10.068 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:16:10.075 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:16:10.075 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:16:10.075 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"dkZydEZEWkJVTWxvNUw2SVNPTnNvRWJudzYteXZjTWlyYVF2Q25XRDdGQWxv","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"1ocAYxgi6AenjSBTiJdowLRU7JN3ZcRBgnJCYLZHOEQ","code_challenge_method":"S256","nonce":"dkZydEZEWkJVTWxvNUw2SVNPTnNvRWJudzYteXZjTWlyYVF2Q25XRDdGQWxv","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:16:10.075 -04:00 [ERR] Request validation failed
2020-08-28 23:16:10.075 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"dkZydEZEWkJVTWxvNUw2SVNPTnNvRWJudzYteXZjTWlyYVF2Q25XRDdGQWxv","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"1ocAYxgi6AenjSBTiJdowLRU7JN3ZcRBgnJCYLZHOEQ","code_challenge_method":"S256","nonce":"dkZydEZEWkJVTWxvNUw2SVNPTnNvRWJudzYteXZjTWlyYVF2Q25XRDdGQWxv","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:16:10.075 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000b2-0004-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:16:10.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 23:16:21.243 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 23:16:21.245 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:16:21.245 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:16:21.245 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 23:16:21.245 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 23:16:21.245 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 23:16:21.245 -04:00 [DBG] Start discovery request
2020-08-28 23:16:21.267 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 23:16:21.324 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-28 23:16:21.325 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:16:21.325 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:16:21.326 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-28 23:16:21.326 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-28 23:16:21.326 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-28 23:16:21.326 -04:00 [DBG] Start key discovery request
2020-08-28 23:16:23.069 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 23:16:23.069 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 23:16:23.069 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 23:16:23.069 -04:00 [DBG] Start authorize request
2020-08-28 23:16:23.070 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 23:16:23.070 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:16:23.077 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:16:23.077 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:16:23.077 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"LWlLU1ZWYUpaWnJBczhBZ2lyVmlRdkNhd2tXc2VnOENFbkRGWDVqMUd5WH5T","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"weVbrGdtfy4MT-t8HIqG1CsTSNbRdON_PuwRIIDADnA","code_challenge_method":"S256","nonce":"LWlLU1ZWYUpaWnJBczhBZ2lyVmlRdkNhd2tXc2VnOENFbkRGWDVqMUd5WH5T","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:16:23.077 -04:00 [ERR] Request validation failed
2020-08-28 23:16:23.077 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"LWlLU1ZWYUpaWnJBczhBZ2lyVmlRdkNhd2tXc2VnOENFbkRGWDVqMUd5WH5T","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"weVbrGdtfy4MT-t8HIqG1CsTSNbRdON_PuwRIIDADnA","code_challenge_method":"S256","nonce":"LWlLU1ZWYUpaWnJBczhBZ2lyVmlRdkNhd2tXc2VnOENFbkRGWDVqMUd5WH5T","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:16:23.077 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000091-000a-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:16:23.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 23:16:25.257 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 23:16:25.259 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:16:25.259 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:16:25.259 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 23:16:25.259 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 23:16:25.259 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 23:16:25.259 -04:00 [DBG] Start discovery request
2020-08-28 23:16:25.262 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 23:16:25.304 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-28 23:16:25.306 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:16:25.306 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:16:25.306 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-28 23:16:25.306 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-28 23:16:25.306 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-28 23:16:25.306 -04:00 [DBG] Start key discovery request
2020-08-28 23:16:28.057 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 23:16:28.057 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 23:16:28.057 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 23:16:28.057 -04:00 [DBG] Start authorize request
2020-08-28 23:16:28.057 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 23:16:28.057 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:16:28.065 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:16:28.065 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:16:28.065 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"TU1CY3V6fjRnTUZsWUtVTS0xcU9ENWxBby1MflBKfm1Uak9helEtWFZLSjdV","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"usXm5bnSsw7-UjNer-XmEbJYkz_0NovrCmMKdX2XVl8","code_challenge_method":"S256","nonce":"TU1CY3V6fjRnTUZsWUtVTS0xcU9ENWxBby1MflBKfm1Uak9helEtWFZLSjdV","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:16:28.065 -04:00 [ERR] Request validation failed
2020-08-28 23:16:28.065 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"TU1CY3V6fjRnTUZsWUtVTS0xcU9ENWxBby1MflBKfm1Uak9helEtWFZLSjdV","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"usXm5bnSsw7-UjNer-XmEbJYkz_0NovrCmMKdX2XVl8","code_challenge_method":"S256","nonce":"TU1CY3V6fjRnTUZsWUtVTS0xcU9ENWxBby1MflBKfm1Uak9helEtWFZLSjdV","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:16:28.066 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000014a-0008-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:16:28.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 23:16:41.495 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-28 23:16:41.498 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-28 23:16:41.498 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-28 23:16:41.498 -04:00 [DBG] Processing signout request for 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 23:16:41.498 -04:00 [DBG] Start end session request validation
2020-08-28 23:16:41.498 -04:00 [DBG] Start identity token validation
2020-08-28 23:16:41.506 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:16:41.506 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:16:41.506 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-28 23:16:41.509 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 23:16:41.509 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598669415,"exp":1598669715,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"Qm1Tc05wfjUyNEp-QkY5a29fb35CV3puM3FyMmVFU1psc1BxZHlpZFBTdkw3","iat":1598669415,"at_hash":"GQrbMaO6-X3qSRwtp65OOw","s_hash":"DPAM5EZebprfDS-eNKy8Cw","sid":"ble3GsGl_E3qGKXItujpOg","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598669413,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-28 23:16:41.509 -04:00 [WRN] Invalid PostLogoutRedirectUri: https://localhost:4200/index.html
2020-08-28 23:16:41.509 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200/index.html"},"$type":"EndSessionRequestValidationLog"}
2020-08-28 23:16:41.509 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-28 23:16:41.514 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-28 23:16:41.514 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-28 23:16:41.514 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-28 23:16:41.514 -04:00 [INF] {"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000093-000a-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:16:41.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-28 23:16:41.545 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-08-28 23:16:41.546 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-08-28 23:16:41.546 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-08-28 23:16:41.546 -04:00 [DBG] Processing signout callback request
2020-08-28 23:16:41.556 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:16:41.556 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:16:41.556 -04:00 [DBG] Client front-channel logout URLs: https://localhost:4200/signout-oidc?sid=ble3GsGl_E3qGKXItujpOg&iss=https%3A%2F%2Flocalhost%3A44354
2020-08-28 23:16:41.556 -04:00 [DBG] No client back-channel logout URLs
2020-08-28 23:16:41.556 -04:00 [INF] Successful signout callback.
2020-08-28 23:16:41.556 -04:00 [DBG] Client front-channel iframe urls: ["https://localhost:4200/signout-oidc?sid=ble3GsGl_E3qGKXItujpOg&iss=https%3A%2F%2Flocalhost%3A44354"]
2020-08-28 23:16:41.556 -04:00 [DBG] No client back-channel iframe urls
2020-08-28 23:16:42.340 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 23:16:42.341 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:16:42.341 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:16:42.341 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 23:16:42.342 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 23:16:42.342 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 23:16:42.342 -04:00 [DBG] Start discovery request
2020-08-28 23:16:42.344 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 23:16:42.409 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-28 23:16:42.411 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:16:42.411 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:16:42.411 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-28 23:16:42.411 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-28 23:16:42.411 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-28 23:16:42.411 -04:00 [DBG] Start key discovery request
2020-08-28 23:16:43.603 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 23:16:43.603 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 23:16:43.603 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 23:16:43.603 -04:00 [DBG] Start authorize request
2020-08-28 23:16:43.603 -04:00 [DBG] No user present in authorize request
2020-08-28 23:16:43.603 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:16:43.611 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:16:43.611 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:16:43.611 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"TmpNRExFVjFPS1lHcWpLeFBPZHBjS09Dd3J1MEhCWm1QQUtBdGlJcXE1X3ZZ","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"Q7PrbsTfY59jRzYfFwCIVXEAbqLD7ItWH1AkMgamf2U","code_challenge_method":"S256","nonce":"TmpNRExFVjFPS1lHcWpLeFBPZHBjS09Dd3J1MEhCWm1QQUtBdGlJcXE1X3ZZ","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:16:43.611 -04:00 [ERR] Request validation failed
2020-08-28 23:16:43.611 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"TmpNRExFVjFPS1lHcWpLeFBPZHBjS09Dd3J1MEhCWm1QQUtBdGlJcXE1X3ZZ","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"Q7PrbsTfY59jRzYfFwCIVXEAbqLD7ItWH1AkMgamf2U","code_challenge_method":"S256","nonce":"TmpNRExFVjFPS1lHcWpLeFBPZHBjS09Dd3J1MEhCWm1QQUtBdGlJcXE1X3ZZ","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:16:43.611 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000c6-0002-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:16:43.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 23:17:01.818 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 23:17:01.818 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 23:17:01.818 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 23:17:01.818 -04:00 [DBG] Start authorize request
2020-08-28 23:17:01.819 -04:00 [DBG] No user present in authorize request
2020-08-28 23:17:01.819 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:17:01.836 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:17:01.836 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:17:01.836 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"RlEyTVNGeDRKbGZRMmhVdFlfY0RaeE1mRGFDLlk4bURrSHBBa05jWHV3dlNJ","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"xLQfEI5B6uejQEWhGgQwyioafTe_8mMMnKbOs8TD9r8","code_challenge_method":"S256","nonce":"RlEyTVNGeDRKbGZRMmhVdFlfY0RaeE1mRGFDLlk4bURrSHBBa05jWHV3dlNJ","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:17:01.836 -04:00 [ERR] Request validation failed
2020-08-28 23:17:01.836 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"RlEyTVNGeDRKbGZRMmhVdFlfY0RaeE1mRGFDLlk4bURrSHBBa05jWHV3dlNJ","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"xLQfEI5B6uejQEWhGgQwyioafTe_8mMMnKbOs8TD9r8","code_challenge_method":"S256","nonce":"RlEyTVNGeDRKbGZRMmhVdFlfY0RaeE1mRGFDLlk4bURrSHBBa05jWHV3dlNJ","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:17:01.836 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000000a-0003-f900-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:17:01.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 23:17:05.960 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 23:17:05.962 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:17:05.962 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:17:05.962 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 23:17:05.962 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 23:17:05.962 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 23:17:05.962 -04:00 [DBG] Start discovery request
2020-08-28 23:17:05.970 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 23:17:06.015 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-28 23:17:06.016 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:17:06.016 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:17:06.017 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-28 23:17:06.017 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-28 23:17:06.017 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-28 23:17:06.017 -04:00 [DBG] Start key discovery request
2020-08-28 23:17:07.071 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 23:17:07.071 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 23:17:07.071 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 23:17:07.071 -04:00 [DBG] Start authorize request
2020-08-28 23:17:07.071 -04:00 [DBG] No user present in authorize request
2020-08-28 23:17:07.071 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:17:07.078 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:17:07.078 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:17:07.078 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"flVLSG55RWh0UFFWUTh5Z2h3UlhBMlk3blJhSTdvT0E0SHZhaDIuX0xWcUlw","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"ywLBaxyAyyezSxkOPp5AsSuWokiOdD_Bpio7-0Alxk8","code_challenge_method":"S256","nonce":"flVLSG55RWh0UFFWUTh5Z2h3UlhBMlk3blJhSTdvT0E0SHZhaDIuX0xWcUlw","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:17:07.079 -04:00 [ERR] Request validation failed
2020-08-28 23:17:07.079 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"flVLSG55RWh0UFFWUTh5Z2h3UlhBMlk3blJhSTdvT0E0SHZhaDIuX0xWcUlw","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"ywLBaxyAyyezSxkOPp5AsSuWokiOdD_Bpio7-0Alxk8","code_challenge_method":"S256","nonce":"flVLSG55RWh0UFFWUTh5Z2h3UlhBMlk3blJhSTdvT0E0SHZhaDIuX0xWcUlw","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:17:07.079 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000149-0000-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:17:07.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 23:17:12.978 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 23:17:12.980 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:17:12.980 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:17:12.980 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 23:17:12.980 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 23:17:12.980 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 23:17:12.980 -04:00 [DBG] Start discovery request
2020-08-28 23:17:12.983 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 23:17:13.011 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-28 23:17:13.012 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:17:13.012 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:17:13.013 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-28 23:17:13.013 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-28 23:17:13.013 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-28 23:17:13.013 -04:00 [DBG] Start key discovery request
2020-08-28 23:17:14.029 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 23:17:14.029 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 23:17:14.029 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 23:17:14.029 -04:00 [DBG] Start authorize request
2020-08-28 23:17:14.029 -04:00 [DBG] No user present in authorize request
2020-08-28 23:17:14.029 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:17:14.037 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:17:14.037 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:17:14.037 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"cUZBRUFCYUExR0h2cGpyWjk3Qn5XU1VCN2pMRTJ2TmZpN2dkdkh0dzdMa2xl","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"9iGet5cqrFKifYHKr9m2eoSVeQmHrDYH6TurLDoDAjk","code_challenge_method":"S256","nonce":"cUZBRUFCYUExR0h2cGpyWjk3Qn5XU1VCN2pMRTJ2TmZpN2dkdkh0dzdMa2xl","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:17:14.037 -04:00 [ERR] Request validation failed
2020-08-28 23:17:14.037 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"cUZBRUFCYUExR0h2cGpyWjk3Qn5XU1VCN2pMRTJ2TmZpN2dkdkh0dzdMa2xl","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"9iGet5cqrFKifYHKr9m2eoSVeQmHrDYH6TurLDoDAjk","code_challenge_method":"S256","nonce":"cUZBRUFCYUExR0h2cGpyWjk3Qn5XU1VCN2pMRTJ2TmZpN2dkdkh0dzdMa2xl","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:17:14.037 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000c9-0008-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:17:14.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 23:17:24.120 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 23:17:24.120 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 23:17:24.120 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 23:17:24.120 -04:00 [DBG] Start authorize request
2020-08-28 23:17:24.120 -04:00 [DBG] No user present in authorize request
2020-08-28 23:17:24.120 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:17:24.127 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:17:24.128 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:17:24.128 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 23:17:24.130 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:17:24.138 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:17:24.140 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:17:24.142 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:17:24.143 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 23:17:24.143 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/index.html","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"UDBTbmdnMlM5U2R1LmNzMy5OUU1abDk5VVRxRFQycEI1M2NZZXhIYjRWMlJasemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"UDBTbmdnMlM5U2R1LmNzMy5OUU1abDk5VVRxRFQycEI1M2NZZXhIYjRWMlJa","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"UDBTbmdnMlM5U2R1LmNzMy5OUU1abDk5VVRxRFQycEI1M2NZZXhIYjRWMlJasemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200/index.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"U7NNSsdJfnPv3WL3TZi4QPoLeHONCLcg4AkB2Sf7Bj8","code_challenge_method":"S256","nonce":"UDBTbmdnMlM5U2R1LmNzMy5OUU1abDk5VVRxRFQycEI1M2NZZXhIYjRWMlJa"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:17:24.143 -04:00 [INF] Showing login: User is not authenticated
2020-08-28 23:17:24.146 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:17:24.154 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:17:24.154 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:17:24.154 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 23:17:24.155 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:17:24.156 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:17:24.157 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:17:24.158 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:17:24.158 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 23:17:24.164 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:17:24.164 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:17:27.981 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 23:17:27.983 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:17:27.991 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:17:27.991 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:17:27.991 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 23:17:27.992 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:17:27.993 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:17:27.994 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:17:27.995 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:17:27.995 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 23:17:28.003 -04:00 [DBG] Augmenting SignInContext
2020-08-28 23:17:28.004 -04:00 [DBG] Adding idp claim with value: local
2020-08-28 23:17:28.004 -04:00 [DBG] Adding auth_time claim with value: 1598671048
2020-08-28 23:17:28.004 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 23:17:28.005 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000092-0004-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:17:28.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-28 23:17:28.011 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:17:28.011 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:17:28.016 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-28 23:17:28.016 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-28 23:17:28.016 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-28 23:17:28.016 -04:00 [DBG] Start authorize callback request
2020-08-28 23:17:28.016 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 23:17:28.016 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:17:28.023 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:17:28.023 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:17:28.023 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 23:17:28.024 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:17:28.025 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:17:28.026 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:17:28.027 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:17:28.027 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 23:17:28.027 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/index.html","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"UDBTbmdnMlM5U2R1LmNzMy5OUU1abDk5VVRxRFQycEI1M2NZZXhIYjRWMlJasemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"UDBTbmdnMlM5U2R1LmNzMy5OUU1abDk5VVRxRFQycEI1M2NZZXhIYjRWMlJa","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"7IIDMZuCkWHSXxyg7BGjqg","Raw":{"response_type":"code","client_id":"angular_spa","state":"UDBTbmdnMlM5U2R1LmNzMy5OUU1abDk5VVRxRFQycEI1M2NZZXhIYjRWMlJasemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200/index.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"U7NNSsdJfnPv3WL3TZi4QPoLeHONCLcg4AkB2Sf7Bj8","code_challenge_method":"S256","nonce":"UDBTbmdnMlM5U2R1LmNzMy5OUU1abDk5VVRxRFQycEI1M2NZZXhIYjRWMlJa"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:17:28.029 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-28 23:17:28.029 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-28 23:17:28.030 -04:00 [DBG] 1O41tWFs/2bVWMclz/zLf39ld7TPW/DRbPMJ5SAD1ws= not found in database
2020-08-28 23:17:28.033 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/index.html","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****B0wE","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000c8-0002-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:17:28.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 23:17:28.033 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200/index.html","State":"UDBTbmdnMlM5U2R1LmNzMy5OUU1abDk5VVRxRFQycEI1M2NZZXhIYjRWMlJasemicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-28 23:17:28.033 -04:00 [DBG] Augmenting SignInContext
2020-08-28 23:17:28.033 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 23:17:28.799 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 23:17:28.800 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:17:28.800 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:17:28.800 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 23:17:28.800 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 23:17:28.800 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 23:17:28.800 -04:00 [DBG] Start discovery request
2020-08-28 23:17:28.802 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 23:17:28.859 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-28 23:17:28.861 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:17:28.861 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:17:28.861 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-28 23:17:28.861 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-28 23:17:28.861 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-28 23:17:28.861 -04:00 [DBG] Start key discovery request
2020-08-28 23:17:30.075 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-28 23:17:30.077 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:17:30.077 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:17:30.077 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-28 23:17:30.077 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-28 23:17:30.077 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-28 23:17:30.077 -04:00 [DBG] Start token request.
2020-08-28 23:17:30.077 -04:00 [DBG] Start client validation
2020-08-28 23:17:30.077 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-28 23:17:30.077 -04:00 [DBG] Start parsing for secret in post body
2020-08-28 23:17:30.078 -04:00 [DBG] client id without secret found
2020-08-28 23:17:30.078 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-28 23:17:30.078 -04:00 [DBG] Secret id found: angular_spa
2020-08-28 23:17:30.086 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:17:30.086 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:17:30.086 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-28 23:17:30.086 -04:00 [DBG] Client validation success
2020-08-28 23:17:30.086 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000000e-0003-f900-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:17:30.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-28 23:17:30.086 -04:00 [DBG] Start token request validation
2020-08-28 23:17:30.086 -04:00 [DBG] Start validation of authorization code token request
2020-08-28 23:17:30.087 -04:00 [DBG] 1O41tWFs/2bVWMclz/zLf39ld7TPW/DRbPMJ5SAD1ws= found in database: true
2020-08-28 23:17:30.088 -04:00 [DBG] removing 1O41tWFs/2bVWMclz/zLf39ld7TPW/DRbPMJ5SAD1ws= persisted grant from database
2020-08-28 23:17:30.090 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-28 23:17:30.091 -04:00 [DBG] Validation of authorization code token request success
2020-08-28 23:17:30.091 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"yxOxgpFg1nM6Uau8f1TeXlSeDQ_Tz-T1OgNTDOQB0wE","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"yxOxgpFg1nM6Uau8f1TeXlSeDQ_Tz-T1OgNTDOQB0wE","redirect_uri":"https://localhost:4200/index.html","code_verifier":"Rmh5b1hEVFlySXVCdi5hUXVPVElhMTRfM21WSFZCVlNqU0RRd3dhaUxqejBy","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-28 23:17:30.098 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:17:30.098 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:17:30.099 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:17:30.100 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:17:30.100 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-28 23:17:30.100 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 23:17:30.110 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:17:30.110 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:17:30.111 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:17:30.112 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:17:30.112 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-28 23:17:30.112 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-28 23:17:30.113 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****iuqg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****2WEw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000000e-0003-f900-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:17:30.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 23:17:30.113 -04:00 [DBG] Token request success.
2020-08-28 23:17:30.122 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 23:17:30.122 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 23:17:30.122 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 23:17:30.122 -04:00 [DBG] Rendering check session result
2020-08-28 23:17:30.123 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 23:17:30.124 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:17:30.125 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:17:30.126 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 23:17:30.127 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:17:30.128 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:17:30.128 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-28 23:17:30.128 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-28 23:17:30.128 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-28 23:17:30.128 -04:00 [DBG] Start userinfo request
2020-08-28 23:17:30.128 -04:00 [DBG] Bearer token found in header
2020-08-28 23:17:30.137 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:17:30.137 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:17:30.143 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:17:30.143 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:17:30.146 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 23:17:30.146 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598671050,"exp":1598674650,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598671048,"idp":"local","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-28 23:17:30.146 -04:00 [DBG] Creating userinfo response
2020-08-28 23:17:30.146 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-28 23:17:30.146 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-28 23:17:30.150 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:17:30.150 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-28 23:17:30.150 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-28 23:17:30.152 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:17:30.155 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-28 23:17:30.155 -04:00 [DBG] End userinfo request
2020-08-28 23:17:47.792 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-28 23:17:47.792 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-28 23:17:47.793 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-28 23:17:47.793 -04:00 [DBG] Processing signout request for 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-28 23:17:47.793 -04:00 [DBG] Start end session request validation
2020-08-28 23:17:47.793 -04:00 [DBG] Start identity token validation
2020-08-28 23:17:47.801 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:17:47.801 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:17:47.801 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-28 23:17:47.803 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 23:17:47.803 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598671050,"exp":1598671350,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"UDBTbmdnMlM5U2R1LmNzMy5OUU1abDk5VVRxRFQycEI1M2NZZXhIYjRWMlJa","iat":1598671050,"at_hash":"KP0pU7O58C49VDWy873L-g","s_hash":"ipQsjZr4M4jwJVA2dqbI7A","sid":"7IIDMZuCkWHSXxyg7BGjqg","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598671048,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-28 23:17:47.803 -04:00 [WRN] Invalid PostLogoutRedirectUri: https://localhost:4200/index.html
2020-08-28 23:17:47.803 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200/index.html"},"$type":"EndSessionRequestValidationLog"}
2020-08-28 23:17:47.803 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-28 23:17:47.808 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-28 23:17:47.808 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-28 23:17:47.808 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-28 23:17:47.808 -04:00 [INF] {"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000010-0003-f900-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:17:47.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-28 23:17:47.848 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-08-28 23:17:47.852 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-08-28 23:17:47.852 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-08-28 23:17:47.852 -04:00 [DBG] Processing signout callback request
2020-08-28 23:17:47.859 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:17:47.859 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:17:47.859 -04:00 [DBG] Client front-channel logout URLs: https://localhost:4200/signout-oidc?sid=7IIDMZuCkWHSXxyg7BGjqg&iss=https%3A%2F%2Flocalhost%3A44354
2020-08-28 23:17:47.859 -04:00 [DBG] No client back-channel logout URLs
2020-08-28 23:17:47.859 -04:00 [INF] Successful signout callback.
2020-08-28 23:17:47.859 -04:00 [DBG] Client front-channel iframe urls: ["https://localhost:4200/signout-oidc?sid=7IIDMZuCkWHSXxyg7BGjqg&iss=https%3A%2F%2Flocalhost%3A44354"]
2020-08-28 23:17:47.859 -04:00 [DBG] No client back-channel iframe urls
2020-08-28 23:17:48.642 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 23:17:48.643 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:17:48.643 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:17:48.644 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 23:17:48.644 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 23:17:48.644 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 23:17:48.644 -04:00 [DBG] Start discovery request
2020-08-28 23:17:48.649 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 23:17:48.700 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-28 23:17:48.701 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:17:48.701 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:17:48.701 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-28 23:17:48.701 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-28 23:17:48.702 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-28 23:17:48.702 -04:00 [DBG] Start key discovery request
2020-08-28 23:17:49.887 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 23:17:49.887 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 23:17:49.887 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 23:17:49.887 -04:00 [DBG] Start authorize request
2020-08-28 23:17:49.887 -04:00 [DBG] No user present in authorize request
2020-08-28 23:17:49.887 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:17:49.894 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:17:49.894 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:17:49.894 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"WDVkanBpQkE0MEpPM1JWM0xPSnp3WVEzWXVEVTVNaUZ0WlgwZVE3SFBHYkJK","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"eTpGZp_Ux0iDvzrz0n4xuBiDqs7czegwI-eckn2Nj18","code_challenge_method":"S256","nonce":"WDVkanBpQkE0MEpPM1JWM0xPSnp3WVEzWXVEVTVNaUZ0WlgwZVE3SFBHYkJK","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:17:49.894 -04:00 [ERR] Request validation failed
2020-08-28 23:17:49.894 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"WDVkanBpQkE0MEpPM1JWM0xPSnp3WVEzWXVEVTVNaUZ0WlgwZVE3SFBHYkJK","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"eTpGZp_Ux0iDvzrz0n4xuBiDqs7czegwI-eckn2Nj18","code_challenge_method":"S256","nonce":"WDVkanBpQkE0MEpPM1JWM0xPSnp3WVEzWXVEVTVNaUZ0WlgwZVE3SFBHYkJK","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:17:49.895 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000098-0004-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:17:49.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 23:18:04.940 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 23:18:04.940 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 23:18:04.940 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 23:18:04.940 -04:00 [DBG] Start authorize request
2020-08-28 23:18:04.940 -04:00 [DBG] No user present in authorize request
2020-08-28 23:18:04.940 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:18:04.956 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:18:04.956 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:18:04.956 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"ck1VdlhMUTZTLlNEUjBvRmlMbWZLRUplQXNtT2lNYk5pbWtrMEppVHdmbFVx","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"bDR1P5b1Q8MZc9P_ZAzNe-oCtDxv8g05RLhcLFk_u6s","code_challenge_method":"S256","nonce":"ck1VdlhMUTZTLlNEUjBvRmlMbWZLRUplQXNtT2lNYk5pbWtrMEppVHdmbFVx","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:18:04.956 -04:00 [ERR] Request validation failed
2020-08-28 23:18:04.956 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"ck1VdlhMUTZTLlNEUjBvRmlMbWZLRUplQXNtT2lNYk5pbWtrMEppVHdmbFVx","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"bDR1P5b1Q8MZc9P_ZAzNe-oCtDxv8g05RLhcLFk_u6s","code_challenge_method":"S256","nonce":"ck1VdlhMUTZTLlNEUjBvRmlMbWZLRUplQXNtT2lNYk5pbWtrMEppVHdmbFVx","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:18:04.956 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000cc-0002-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:18:04.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 23:18:17.067 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 23:18:17.067 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 23:18:17.067 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 23:18:17.067 -04:00 [DBG] Start authorize request
2020-08-28 23:18:17.067 -04:00 [DBG] No user present in authorize request
2020-08-28 23:18:17.067 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:18:17.083 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:18:17.083 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:18:17.083 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 23:18:17.085 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:18:17.094 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:18:17.095 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:18:17.096 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:18:17.096 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 23:18:17.096 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/index.html","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"VE1LSl9uVGZYT0l4VnBWUEo4TXRFUnhaRHUtaEtSVm9XQmozZEVEVlM5ZWpWsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"VE1LSl9uVGZYT0l4VnBWUEo4TXRFUnhaRHUtaEtSVm9XQmozZEVEVlM5ZWpW","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"VE1LSl9uVGZYT0l4VnBWUEo4TXRFUnhaRHUtaEtSVm9XQmozZEVEVlM5ZWpWsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200/index.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"57VvK4qfGa2w28H_HslZ2w_FEl7Puzu3qpCiycyM75s","code_challenge_method":"S256","nonce":"VE1LSl9uVGZYT0l4VnBWUEo4TXRFUnhaRHUtaEtSVm9XQmozZEVEVlM5ZWpW"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:18:17.096 -04:00 [INF] Showing login: User is not authenticated
2020-08-28 23:18:17.100 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:18:17.108 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:18:17.108 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:18:17.108 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 23:18:17.109 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:18:17.110 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:18:17.112 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:18:17.113 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:18:17.113 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 23:18:17.119 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:18:17.119 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:18:18.458 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-28 23:18:20.987 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 23:18:20.989 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-08-28 23:18:21.008 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000071-000a-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:18:21.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-28 23:18:21.008 -04:00 [DBG] Augmenting SignInContext
2020-08-28 23:18:21.008 -04:00 [DBG] Adding amr claim with value: external
2020-08-28 23:18:21.009 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 23:18:21.009 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-28 23:18:21.013 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-28 23:18:21.013 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-28 23:18:21.013 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-28 23:18:21.013 -04:00 [DBG] Start authorize callback request
2020-08-28 23:18:21.013 -04:00 [DBG] User in authorize request: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-28 23:18:21.014 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:18:21.022 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:18:21.022 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:18:21.022 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 23:18:21.024 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:18:21.025 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:18:21.026 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:18:21.027 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:18:21.028 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 23:18:21.028 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/index.html","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"VE1LSl9uVGZYT0l4VnBWUEo4TXRFUnhaRHUtaEtSVm9XQmozZEVEVlM5ZWpWsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"VE1LSl9uVGZYT0l4VnBWUEo4TXRFUnhaRHUtaEtSVm9XQmozZEVEVlM5ZWpW","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"mah3VK5j71OYMbV7JkcYEQ","Raw":{"response_type":"code","client_id":"angular_spa","state":"VE1LSl9uVGZYT0l4VnBWUEo4TXRFUnhaRHUtaEtSVm9XQmozZEVEVlM5ZWpWsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200/index.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"57VvK4qfGa2w28H_HslZ2w_FEl7Puzu3qpCiycyM75s","code_challenge_method":"S256","nonce":"VE1LSl9uVGZYT0l4VnBWUEo4TXRFUnhaRHUtaEtSVm9XQmozZEVEVlM5ZWpW"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:18:21.030 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-28 23:18:21.030 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-28 23:18:21.032 -04:00 [DBG] e22JD0tPnhtJjwOTdzbPus61RfatMpAq74KmMvlMWfg= not found in database
2020-08-28 23:18:21.034 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/index.html","Endpoint":"Authorize","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****tobM","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000d0-0002-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:18:21.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 23:18:21.034 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ClientId":"angular_spa","RedirectUri":"https://localhost:4200/index.html","State":"VE1LSl9uVGZYT0l4VnBWUEo4TXRFUnhaRHUtaEtSVm9XQmozZEVEVlM5ZWpWsemicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-28 23:18:21.034 -04:00 [DBG] Augmenting SignInContext
2020-08-28 23:18:21.034 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 23:18:21.879 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 23:18:21.880 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:18:21.881 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:18:21.881 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 23:18:21.881 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 23:18:21.881 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 23:18:21.881 -04:00 [DBG] Start discovery request
2020-08-28 23:18:21.887 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 23:18:22.003 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-28 23:18:22.004 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:18:22.004 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:18:22.004 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-28 23:18:22.005 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-28 23:18:22.005 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-28 23:18:22.005 -04:00 [DBG] Start key discovery request
2020-08-28 23:18:23.190 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-28 23:18:23.192 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:18:23.192 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:18:23.192 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-28 23:18:23.193 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-28 23:18:23.193 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-28 23:18:23.193 -04:00 [DBG] Start token request.
2020-08-28 23:18:23.193 -04:00 [DBG] Start client validation
2020-08-28 23:18:23.193 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-28 23:18:23.193 -04:00 [DBG] Start parsing for secret in post body
2020-08-28 23:18:23.193 -04:00 [DBG] client id without secret found
2020-08-28 23:18:23.193 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-28 23:18:23.193 -04:00 [DBG] Secret id found: angular_spa
2020-08-28 23:18:23.200 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:18:23.201 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:18:23.201 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-28 23:18:23.201 -04:00 [DBG] Client validation success
2020-08-28 23:18:23.201 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000012-0003-f900-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:18:23.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-28 23:18:23.201 -04:00 [DBG] Start token request validation
2020-08-28 23:18:23.201 -04:00 [DBG] Start validation of authorization code token request
2020-08-28 23:18:23.202 -04:00 [DBG] e22JD0tPnhtJjwOTdzbPus61RfatMpAq74KmMvlMWfg= found in database: true
2020-08-28 23:18:23.203 -04:00 [DBG] removing e22JD0tPnhtJjwOTdzbPus61RfatMpAq74KmMvlMWfg= persisted grant from database
2020-08-28 23:18:23.205 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-28 23:18:23.207 -04:00 [DBG] Validation of authorization code token request success
2020-08-28 23:18:23.207 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"eT-oVAmLT7kmLUJgCGLKhzNiLgtSLvwHXRJLOLNtobM","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"eT-oVAmLT7kmLUJgCGLKhzNiLgtSLvwHXRJLOLNtobM","redirect_uri":"https://localhost:4200/index.html","code_verifier":"dFVwLkZTaHdpbnlCV2o2VXJDeUFqeGFUNUxISFZyQmdvM245T0FNNV91Rlll","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-28 23:18:23.213 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:18:23.213 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:18:23.215 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:18:23.216 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:18:23.216 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-28 23:18:23.216 -04:00 [DBG] Getting claims for access token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-28 23:18:23.225 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:18:23.226 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:18:23.227 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:18:23.228 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:18:23.228 -04:00 [DBG] Getting claims for identity token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188 and client: angular_spa
2020-08-28 23:18:23.228 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-28 23:18:23.229 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****juTQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****s3Ag","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000012-0003-f900-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:18:23.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 23:18:23.229 -04:00 [DBG] Token request success.
2020-08-28 23:18:23.237 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 23:18:23.237 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 23:18:23.237 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 23:18:23.237 -04:00 [DBG] Rendering check session result
2020-08-28 23:18:23.238 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 23:18:23.240 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:18:23.240 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:18:23.241 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 23:18:23.242 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:18:23.243 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:18:23.243 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-28 23:18:23.243 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-28 23:18:23.243 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-28 23:18:23.243 -04:00 [DBG] Start userinfo request
2020-08-28 23:18:23.243 -04:00 [DBG] Bearer token found in header
2020-08-28 23:18:23.252 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:18:23.252 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:18:23.258 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:18:23.258 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:18:23.260 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 23:18:23.260 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598671103,"exp":1598674703,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1598671101,"idp":"azuread","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"external"},"$type":"TokenValidationLog"}
2020-08-28 23:18:23.260 -04:00 [DBG] Creating userinfo response
2020-08-28 23:18:23.260 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-28 23:18:23.260 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-28 23:18:23.261 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:18:23.261 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-28 23:18:23.261 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-28 23:18:23.262 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:18:23.265 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username
2020-08-28 23:18:23.265 -04:00 [DBG] End userinfo request
2020-08-28 23:19:12.499 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-28 23:19:12.499 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-28 23:19:12.499 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-28 23:19:12.499 -04:00 [DBG] Processing signout request for 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-28 23:19:12.499 -04:00 [DBG] Start end session request validation
2020-08-28 23:19:12.499 -04:00 [DBG] Start identity token validation
2020-08-28 23:19:12.517 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:19:12.517 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:19:12.517 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-28 23:19:12.518 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 23:19:12.519 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598671103,"exp":1598671403,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"VE1LSl9uVGZYT0l4VnBWUEo4TXRFUnhaRHUtaEtSVm9XQmozZEVEVlM5ZWpW","iat":1598671103,"at_hash":"KbWBxSrmveoaSscbtdEYXA","s_hash":"tZk3m0qLXTH7xzhAvcMYLw","sid":"mah3VK5j71OYMbV7JkcYEQ","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1598671101,"idp":"azuread","amr":"external"},"$type":"TokenValidationLog"}
2020-08-28 23:19:12.519 -04:00 [WRN] Invalid PostLogoutRedirectUri: https://localhost:4200/index.html
2020-08-28 23:19:12.519 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200/index.html"},"$type":"EndSessionRequestValidationLog"}
2020-08-28 23:19:12.519 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-28 23:19:12.523 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-28 23:19:12.523 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-28 23:19:12.523 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-28 23:19:12.523 -04:00 [INF] {"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"800000d1-0008-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:19:12.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-28 23:19:27.591 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 23:19:27.591 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 23:19:27.591 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 23:19:27.591 -04:00 [DBG] Start authorize request
2020-08-28 23:19:27.591 -04:00 [DBG] No user present in authorize request
2020-08-28 23:19:27.591 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:19:27.600 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:19:27.600 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:19:27.602 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"TWplQ2tUZ2UxT3pwc2FVbkNzSlJ-Wi01NldiLmhnU01lRWRyTmR3Y3F3MVls","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"jlQyYesSXfRFx4ltgCMwbz1Vuc0tuWY71hO7LedNdmw","code_challenge_method":"S256","nonce":"TWplQ2tUZ2UxT3pwc2FVbkNzSlJ-Wi01NldiLmhnU01lRWRyTmR3Y3F3MVls","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:19:27.602 -04:00 [ERR] Request validation failed
2020-08-28 23:19:27.602 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"TWplQ2tUZ2UxT3pwc2FVbkNzSlJ-Wi01NldiLmhnU01lRWRyTmR3Y3F3MVls","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"jlQyYesSXfRFx4ltgCMwbz1Vuc0tuWY71hO7LedNdmw","code_challenge_method":"S256","nonce":"TWplQ2tUZ2UxT3pwc2FVbkNzSlJ-Wi01NldiLmhnU01lRWRyTmR3Y3F3MVls","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:19:27.602 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000d5-0008-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:19:27.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 23:22:46.177 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 23:22:46.177 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 23:22:46.177 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 23:22:46.177 -04:00 [DBG] Start authorize request
2020-08-28 23:22:46.177 -04:00 [DBG] No user present in authorize request
2020-08-28 23:22:46.178 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:22:46.195 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:22:46.195 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:22:46.195 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 23:22:46.198 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:22:46.206 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:22:46.208 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:22:46.209 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:22:46.209 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 23:22:46.209 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/index.html","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"RmhRY3RlaVg3SGxGRmlZVFQxYi5DTllaSmtGUVVaemE3bWFCazNZel9ISEhisemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"RmhRY3RlaVg3SGxGRmlZVFQxYi5DTllaSmtGUVVaemE3bWFCazNZel9ISEhi","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"RmhRY3RlaVg3SGxGRmlZVFQxYi5DTllaSmtGUVVaemE3bWFCazNZel9ISEhisemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200/index.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"dNWC0M4pc5G7tKkf6lUX7qs1ZOrW8wT8Z0MVqLeNEQs","code_challenge_method":"S256","nonce":"RmhRY3RlaVg3SGxGRmlZVFQxYi5DTllaSmtGUVVaemE3bWFCazNZel9ISEhi"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:22:46.209 -04:00 [INF] Showing login: User is not authenticated
2020-08-28 23:22:46.212 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:22:46.229 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:22:46.230 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:22:46.230 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 23:22:46.233 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:22:46.234 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:22:46.236 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:22:46.237 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:22:46.237 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 23:22:46.243 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:22:46.244 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:22:46.250 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-28 23:22:46.587 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 23:22:46.588 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-08-28 23:22:46.600 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000d9-0008-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:22:46.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-28 23:22:46.600 -04:00 [DBG] Augmenting SignInContext
2020-08-28 23:22:46.600 -04:00 [DBG] Adding amr claim with value: external
2020-08-28 23:22:46.600 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 23:22:46.600 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-28 23:22:46.605 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-28 23:22:46.605 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-28 23:22:46.605 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-28 23:22:46.605 -04:00 [DBG] Start authorize callback request
2020-08-28 23:22:46.605 -04:00 [DBG] User in authorize request: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-28 23:22:46.605 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:22:46.615 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:22:46.615 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:22:46.615 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 23:22:46.617 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:22:46.619 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:22:46.620 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:22:46.622 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:22:46.622 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 23:22:46.622 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/index.html","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"RmhRY3RlaVg3SGxGRmlZVFQxYi5DTllaSmtGUVVaemE3bWFCazNZel9ISEhisemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"RmhRY3RlaVg3SGxGRmlZVFQxYi5DTllaSmtGUVVaemE3bWFCazNZel9ISEhi","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"LsUIqyCPF_SW2C-Pg5dH8A","Raw":{"response_type":"code","client_id":"angular_spa","state":"RmhRY3RlaVg3SGxGRmlZVFQxYi5DTllaSmtGUVVaemE3bWFCazNZel9ISEhisemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200/index.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"dNWC0M4pc5G7tKkf6lUX7qs1ZOrW8wT8Z0MVqLeNEQs","code_challenge_method":"S256","nonce":"RmhRY3RlaVg3SGxGRmlZVFQxYi5DTllaSmtGUVVaemE3bWFCazNZel9ISEhi"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:22:46.625 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-28 23:22:46.625 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-28 23:22:46.628 -04:00 [DBG] 0PTtSKPKkGNIdH5rjN82kSaaamGMETUnmCaE8iNFleI= not found in database
2020-08-28 23:22:46.631 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/index.html","Endpoint":"Authorize","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****RGL8","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000009d-0004-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:22:46.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 23:22:46.631 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ClientId":"angular_spa","RedirectUri":"https://localhost:4200/index.html","State":"RmhRY3RlaVg3SGxGRmlZVFQxYi5DTllaSmtGUVVaemE3bWFCazNZel9ISEhisemicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-28 23:22:46.631 -04:00 [DBG] Augmenting SignInContext
2020-08-28 23:22:46.631 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 23:22:47.484 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 23:22:47.486 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:22:47.486 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:22:47.486 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 23:22:47.486 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 23:22:47.486 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 23:22:47.486 -04:00 [DBG] Start discovery request
2020-08-28 23:22:47.494 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 23:22:47.599 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-28 23:22:47.601 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:22:47.601 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:22:47.601 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-28 23:22:47.601 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-28 23:22:47.601 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-28 23:22:47.601 -04:00 [DBG] Start key discovery request
2020-08-28 23:22:48.793 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-28 23:22:48.795 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:22:48.795 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:22:48.795 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-28 23:22:48.795 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-28 23:22:48.795 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-28 23:22:48.795 -04:00 [DBG] Start token request.
2020-08-28 23:22:48.795 -04:00 [DBG] Start client validation
2020-08-28 23:22:48.795 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-28 23:22:48.795 -04:00 [DBG] Start parsing for secret in post body
2020-08-28 23:22:48.796 -04:00 [DBG] client id without secret found
2020-08-28 23:22:48.796 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-28 23:22:48.796 -04:00 [DBG] Secret id found: angular_spa
2020-08-28 23:22:48.805 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:22:48.805 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:22:48.805 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-28 23:22:48.805 -04:00 [DBG] Client validation success
2020-08-28 23:22:48.805 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000007e-0009-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:22:48.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-28 23:22:48.805 -04:00 [DBG] Start token request validation
2020-08-28 23:22:48.805 -04:00 [DBG] Start validation of authorization code token request
2020-08-28 23:22:48.807 -04:00 [DBG] 0PTtSKPKkGNIdH5rjN82kSaaamGMETUnmCaE8iNFleI= found in database: true
2020-08-28 23:22:48.808 -04:00 [DBG] removing 0PTtSKPKkGNIdH5rjN82kSaaamGMETUnmCaE8iNFleI= persisted grant from database
2020-08-28 23:22:48.811 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-28 23:22:48.812 -04:00 [DBG] Validation of authorization code token request success
2020-08-28 23:22:48.812 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"B9Nl2McfVZHf-QDUJ5xaBIOrt2jUmUdla7nOMz5RGL8","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"B9Nl2McfVZHf-QDUJ5xaBIOrt2jUmUdla7nOMz5RGL8","redirect_uri":"https://localhost:4200/index.html","code_verifier":"QjM3RDZBakRDa3JVcVVrWmlPNkVESmZuSERtV09TUkV5QmM0SW9WUHl5dTJV","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-28 23:22:48.820 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:22:48.820 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:22:48.821 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:22:48.822 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:22:48.822 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-28 23:22:48.822 -04:00 [DBG] Getting claims for access token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-28 23:22:48.831 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:22:48.831 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:22:48.832 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:22:48.833 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:22:48.834 -04:00 [DBG] Getting claims for identity token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188 and client: angular_spa
2020-08-28 23:22:48.834 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-28 23:22:48.834 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****gnHw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****AdOA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000007e-0009-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:22:48.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 23:22:48.835 -04:00 [DBG] Token request success.
2020-08-28 23:22:48.843 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 23:22:48.843 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 23:22:48.843 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 23:22:48.843 -04:00 [DBG] Rendering check session result
2020-08-28 23:22:48.843 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 23:22:48.845 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:22:48.845 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:22:48.846 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 23:22:48.848 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:22:48.848 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:22:48.848 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-28 23:22:48.848 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-28 23:22:48.848 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-28 23:22:48.848 -04:00 [DBG] Start userinfo request
2020-08-28 23:22:48.848 -04:00 [DBG] Bearer token found in header
2020-08-28 23:22:48.857 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:22:48.857 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:22:48.864 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:22:48.864 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:22:48.865 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 23:22:48.865 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598671368,"exp":1598674968,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1598671366,"idp":"azuread","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"external"},"$type":"TokenValidationLog"}
2020-08-28 23:22:48.866 -04:00 [DBG] Creating userinfo response
2020-08-28 23:22:48.866 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-28 23:22:48.866 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-28 23:22:48.867 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:22:48.867 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-28 23:22:48.867 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-28 23:22:48.868 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:22:48.871 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username
2020-08-28 23:22:48.871 -04:00 [DBG] End userinfo request
2020-08-28 23:23:01.367 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-28 23:23:01.367 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-28 23:23:01.368 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-28 23:23:01.368 -04:00 [DBG] Processing signout request for 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-28 23:23:01.368 -04:00 [DBG] Start end session request validation
2020-08-28 23:23:01.368 -04:00 [DBG] Start identity token validation
2020-08-28 23:23:01.376 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:23:01.376 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:23:01.376 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-28 23:23:01.378 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 23:23:01.378 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598671368,"exp":1598671668,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"RmhRY3RlaVg3SGxGRmlZVFQxYi5DTllaSmtGUVVaemE3bWFCazNZel9ISEhi","iat":1598671368,"at_hash":"Me8XnB6knHjeA_DoCigrQw","s_hash":"JWzUJmx0aw4c9zeTByyG5g","sid":"LsUIqyCPF_SW2C-Pg5dH8A","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1598671366,"idp":"azuread","amr":"external"},"$type":"TokenValidationLog"}
2020-08-28 23:23:01.378 -04:00 [WRN] Invalid PostLogoutRedirectUri: https://localhost:4200/index.html
2020-08-28 23:23:01.379 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200/index.html"},"$type":"EndSessionRequestValidationLog"}
2020-08-28 23:23:01.379 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-28 23:23:01.384 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-28 23:23:01.384 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-28 23:23:01.384 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-28 23:23:01.384 -04:00 [INF] {"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"800000df-0008-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:23:01.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-28 23:23:09.585 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 23:23:09.585 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 23:23:09.585 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 23:23:09.585 -04:00 [DBG] Start authorize request
2020-08-28 23:23:09.585 -04:00 [DBG] No user present in authorize request
2020-08-28 23:23:09.585 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:23:09.593 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:23:09.593 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:23:09.593 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"VHNnME10eko0WVhNNG5UR095LkNkWXBJcVFZSndRYkZGeC5SQVZ0Mkdzc3Y2","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"nZYVkv7UucPK9eh8g0aITGkyj4ioFhs-K4O12Ne03JI","code_challenge_method":"S256","nonce":"VHNnME10eko0WVhNNG5UR095LkNkWXBJcVFZSndRYkZGeC5SQVZ0Mkdzc3Y2","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:23:09.593 -04:00 [ERR] Request validation failed
2020-08-28 23:23:09.593 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"VHNnME10eko0WVhNNG5UR095LkNkWXBJcVFZSndRYkZGeC5SQVZ0Mkdzc3Y2","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"nZYVkv7UucPK9eh8g0aITGkyj4ioFhs-K4O12Ne03JI","code_challenge_method":"S256","nonce":"VHNnME10eko0WVhNNG5UR095LkNkWXBJcVFZSndRYkZGeC5SQVZ0Mkdzc3Y2","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:23:09.593 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000010b-0006-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:23:09.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 23:23:12.656 -04:00 [INF] Removing 0 grants
2020-08-28 23:23:12.657 -04:00 [INF] Removing 0 device flow codes
2020-08-28 23:23:17.605 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 23:23:17.605 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 23:23:17.605 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 23:23:17.605 -04:00 [DBG] Start authorize request
2020-08-28 23:23:17.605 -04:00 [DBG] No user present in authorize request
2020-08-28 23:23:17.606 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:23:17.619 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:23:17.619 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:23:17.620 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 23:23:17.621 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:23:17.622 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:23:17.624 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:23:17.624 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:23:17.625 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 23:23:17.625 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/index.html","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"aDJVa3JjYjFHV2JnLkxqUXJjV3dXTW93b0tZRTVGVHlCb3pPVGhWOGZJVnp2semicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"aDJVa3JjYjFHV2JnLkxqUXJjV3dXTW93b0tZRTVGVHlCb3pPVGhWOGZJVnp2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"aDJVa3JjYjFHV2JnLkxqUXJjV3dXTW93b0tZRTVGVHlCb3pPVGhWOGZJVnp2semicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200/index.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"iFxEDASiGTr5gKGKq7ExDrfbzisZp3MQNfzlvvGRk7Y","code_challenge_method":"S256","nonce":"aDJVa3JjYjFHV2JnLkxqUXJjV3dXTW93b0tZRTVGVHlCb3pPVGhWOGZJVnp2"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:23:17.625 -04:00 [INF] Showing login: User is not authenticated
2020-08-28 23:23:17.628 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:23:17.637 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:23:17.637 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:23:17.637 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 23:23:17.638 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:23:17.639 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:23:17.640 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:23:17.641 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:23:17.641 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 23:23:17.648 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:23:17.648 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:23:17.652 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-28 23:23:17.881 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 23:23:17.883 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-08-28 23:23:17.894 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000f9-0005-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:23:17.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-28 23:23:17.894 -04:00 [DBG] Augmenting SignInContext
2020-08-28 23:23:17.894 -04:00 [DBG] Adding amr claim with value: external
2020-08-28 23:23:17.895 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 23:23:17.895 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-28 23:23:17.900 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-28 23:23:17.900 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-28 23:23:17.901 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-28 23:23:17.901 -04:00 [DBG] Start authorize callback request
2020-08-28 23:23:17.901 -04:00 [DBG] User in authorize request: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-28 23:23:17.901 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:23:17.911 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:23:17.911 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:23:17.911 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 23:23:17.912 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:23:17.913 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:23:17.915 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:23:17.916 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:23:17.916 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 23:23:17.916 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/index.html","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"aDJVa3JjYjFHV2JnLkxqUXJjV3dXTW93b0tZRTVGVHlCb3pPVGhWOGZJVnp2semicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"aDJVa3JjYjFHV2JnLkxqUXJjV3dXTW93b0tZRTVGVHlCb3pPVGhWOGZJVnp2","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"OduanrT6MKWDMdDLHGSTog","Raw":{"response_type":"code","client_id":"angular_spa","state":"aDJVa3JjYjFHV2JnLkxqUXJjV3dXTW93b0tZRTVGVHlCb3pPVGhWOGZJVnp2semicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200/index.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"iFxEDASiGTr5gKGKq7ExDrfbzisZp3MQNfzlvvGRk7Y","code_challenge_method":"S256","nonce":"aDJVa3JjYjFHV2JnLkxqUXJjV3dXTW93b0tZRTVGVHlCb3pPVGhWOGZJVnp2"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:23:17.918 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-28 23:23:17.918 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-28 23:23:17.920 -04:00 [DBG] NyppkThdD5a3yqGKF+y/6294Yv54UxIGPsh7NMntx1Y= not found in database
2020-08-28 23:23:17.922 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/index.html","Endpoint":"Authorize","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****jPOo","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000021-0007-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:23:17.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 23:23:17.922 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ClientId":"angular_spa","RedirectUri":"https://localhost:4200/index.html","State":"aDJVa3JjYjFHV2JnLkxqUXJjV3dXTW93b0tZRTVGVHlCb3pPVGhWOGZJVnp2semicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-28 23:23:17.922 -04:00 [DBG] Augmenting SignInContext
2020-08-28 23:23:17.922 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 23:23:18.166 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 23:23:18.167 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:23:18.168 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:23:18.168 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 23:23:18.168 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 23:23:18.168 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 23:23:18.168 -04:00 [DBG] Start discovery request
2020-08-28 23:23:18.170 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 23:23:18.283 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-28 23:23:18.284 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:23:18.285 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:23:18.285 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-28 23:23:18.285 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-28 23:23:18.285 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-28 23:23:18.285 -04:00 [DBG] Start key discovery request
2020-08-28 23:23:19.481 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-28 23:23:19.483 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:23:19.483 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:23:19.484 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-28 23:23:19.484 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-28 23:23:19.484 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-28 23:23:19.484 -04:00 [DBG] Start token request.
2020-08-28 23:23:19.484 -04:00 [DBG] Start client validation
2020-08-28 23:23:19.484 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-28 23:23:19.484 -04:00 [DBG] Start parsing for secret in post body
2020-08-28 23:23:19.484 -04:00 [DBG] client id without secret found
2020-08-28 23:23:19.484 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-28 23:23:19.484 -04:00 [DBG] Secret id found: angular_spa
2020-08-28 23:23:19.492 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:23:19.493 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:23:19.493 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-28 23:23:19.493 -04:00 [DBG] Client validation success
2020-08-28 23:23:19.493 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000004-0002-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:23:19.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-28 23:23:19.493 -04:00 [DBG] Start token request validation
2020-08-28 23:23:19.493 -04:00 [DBG] Start validation of authorization code token request
2020-08-28 23:23:19.494 -04:00 [DBG] NyppkThdD5a3yqGKF+y/6294Yv54UxIGPsh7NMntx1Y= found in database: true
2020-08-28 23:23:19.495 -04:00 [DBG] removing NyppkThdD5a3yqGKF+y/6294Yv54UxIGPsh7NMntx1Y= persisted grant from database
2020-08-28 23:23:19.496 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-28 23:23:19.497 -04:00 [DBG] Validation of authorization code token request success
2020-08-28 23:23:19.498 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"v9Ub9lPX_mBN-OvTBaLKiUdB6NSsWScSfZMH-0IjPOo","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"v9Ub9lPX_mBN-OvTBaLKiUdB6NSsWScSfZMH-0IjPOo","redirect_uri":"https://localhost:4200/index.html","code_verifier":"OGFOSVdGQTNjRjJSZ1RVVnJnVlY3YnZ5bDkxblFnTTQ2RllzT3hXZ2h-YThY","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-28 23:23:19.505 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:23:19.505 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:23:19.506 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:23:19.508 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:23:19.508 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-28 23:23:19.508 -04:00 [DBG] Getting claims for access token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-28 23:23:19.518 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:23:19.518 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:23:19.519 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:23:19.520 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:23:19.520 -04:00 [DBG] Getting claims for identity token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188 and client: angular_spa
2020-08-28 23:23:19.520 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-28 23:23:19.521 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****oLjw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****PU0Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000004-0002-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:23:19.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 23:23:19.521 -04:00 [DBG] Token request success.
2020-08-28 23:23:19.530 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 23:23:19.530 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 23:23:19.530 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 23:23:19.530 -04:00 [DBG] Rendering check session result
2020-08-28 23:23:19.531 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 23:23:19.533 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:23:19.533 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:23:19.535 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 23:23:19.536 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:23:19.536 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:23:19.536 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-28 23:23:19.537 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-28 23:23:19.537 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-28 23:23:19.537 -04:00 [DBG] Start userinfo request
2020-08-28 23:23:19.537 -04:00 [DBG] Bearer token found in header
2020-08-28 23:23:19.545 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:23:19.545 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:23:19.552 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:23:19.552 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:23:19.553 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 23:23:19.553 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598671399,"exp":1598674999,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1598671397,"idp":"azuread","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"external"},"$type":"TokenValidationLog"}
2020-08-28 23:23:19.553 -04:00 [DBG] Creating userinfo response
2020-08-28 23:23:19.553 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-28 23:23:19.553 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-28 23:23:19.555 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:23:19.555 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-28 23:23:19.555 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-28 23:23:19.556 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:23:19.558 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username
2020-08-28 23:23:19.558 -04:00 [DBG] End userinfo request
2020-08-28 23:23:26.522 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-28 23:23:26.522 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-28 23:23:26.523 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-28 23:23:26.523 -04:00 [DBG] Processing signout request for 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-28 23:23:26.523 -04:00 [DBG] Start end session request validation
2020-08-28 23:23:26.523 -04:00 [DBG] Start identity token validation
2020-08-28 23:23:26.532 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:23:26.532 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:23:26.532 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-28 23:23:26.534 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 23:23:26.534 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598671399,"exp":1598671699,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"aDJVa3JjYjFHV2JnLkxqUXJjV3dXTW93b0tZRTVGVHlCb3pPVGhWOGZJVnp2","iat":1598671399,"at_hash":"s14cErsKyhZwJ1DNTL8G5Q","s_hash":"oEL5X3iY5-jqnHivuA6w1Q","sid":"OduanrT6MKWDMdDLHGSTog","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1598671397,"idp":"azuread","amr":"external"},"$type":"TokenValidationLog"}
2020-08-28 23:23:26.534 -04:00 [WRN] Invalid PostLogoutRedirectUri: https://localhost:4200/index.html
2020-08-28 23:23:26.534 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200/index.html"},"$type":"EndSessionRequestValidationLog"}
2020-08-28 23:23:26.534 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-28 23:23:26.539 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-28 23:23:26.539 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-28 23:23:26.539 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-28 23:23:26.539 -04:00 [INF] {"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"800000fb-0001-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:23:26.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-28 23:23:31.425 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 23:23:31.426 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 23:23:31.426 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 23:23:31.426 -04:00 [DBG] Start authorize request
2020-08-28 23:23:31.426 -04:00 [DBG] No user present in authorize request
2020-08-28 23:23:31.426 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:23:31.445 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:23:31.445 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:23:31.445 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"UHZPank3azdpTC04RTAwNGlrZFRTRFFxdUFSY1pXZ2xQRFhCaDdHRzV3NG1B","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"bOjGc_NMj5ax-XbcYq1Pzg9dwAIZQA1QwwxgczJIQnU","code_challenge_method":"S256","nonce":"UHZPank3azdpTC04RTAwNGlrZFRTRFFxdUFSY1pXZ2xQRFhCaDdHRzV3NG1B","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:23:31.445 -04:00 [ERR] Request validation failed
2020-08-28 23:23:31.445 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"UHZPank3azdpTC04RTAwNGlrZFRTRFFxdUFSY1pXZ2xQRFhCaDdHRzV3NG1B","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"bOjGc_NMj5ax-XbcYq1Pzg9dwAIZQA1QwwxgczJIQnU","code_challenge_method":"S256","nonce":"UHZPank3azdpTC04RTAwNGlrZFRTRFFxdUFSY1pXZ2xQRFhCaDdHRzV3NG1B","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:23:31.445 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000010f-0006-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:23:31.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 23:24:00.525 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 23:24:00.526 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 23:24:00.526 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 23:24:00.526 -04:00 [DBG] Start authorize request
2020-08-28 23:24:00.526 -04:00 [DBG] No user present in authorize request
2020-08-28 23:24:00.526 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:24:00.541 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:24:00.541 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:24:00.541 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 23:24:00.544 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:24:00.553 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:24:00.555 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:24:00.558 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:24:00.558 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 23:24:00.558 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/index.html","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"cExpMWlEWjN0TC1ldHNKYmtiQUo4OWV3eUxsLm1sTTBkR2tJQ20yaWFScktGsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"cExpMWlEWjN0TC1ldHNKYmtiQUo4OWV3eUxsLm1sTTBkR2tJQ20yaWFScktG","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"cExpMWlEWjN0TC1ldHNKYmtiQUo4OWV3eUxsLm1sTTBkR2tJQ20yaWFScktGsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200/index.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"w1FMWpAWYRmTtjsSqm8geCaljsOlW6kRDOMak4BFzF8","code_challenge_method":"S256","nonce":"cExpMWlEWjN0TC1ldHNKYmtiQUo4OWV3eUxsLm1sTTBkR2tJQ20yaWFScktG"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:24:00.558 -04:00 [INF] Showing login: User is not authenticated
2020-08-28 23:24:00.563 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:24:00.573 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:24:00.573 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:24:00.573 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 23:24:00.574 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:24:00.576 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:24:00.578 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:24:00.580 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:24:00.580 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 23:24:00.586 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:24:00.587 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:24:00.591 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-28 23:24:00.823 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 23:24:00.824 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-08-28 23:24:00.838 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000e5-0008-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:24:00.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-28 23:24:00.838 -04:00 [DBG] Augmenting SignInContext
2020-08-28 23:24:00.838 -04:00 [DBG] Adding amr claim with value: external
2020-08-28 23:24:00.839 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 23:24:00.839 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-28 23:24:00.844 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-28 23:24:00.844 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-28 23:24:00.844 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-28 23:24:00.844 -04:00 [DBG] Start authorize callback request
2020-08-28 23:24:00.844 -04:00 [DBG] User in authorize request: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-28 23:24:00.844 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:24:00.854 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:24:00.854 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:24:00.854 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 23:24:00.855 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:24:00.857 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:24:00.858 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:24:00.859 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:24:00.859 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 23:24:00.859 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/index.html","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"cExpMWlEWjN0TC1ldHNKYmtiQUo4OWV3eUxsLm1sTTBkR2tJQ20yaWFScktGsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"cExpMWlEWjN0TC1ldHNKYmtiQUo4OWV3eUxsLm1sTTBkR2tJQ20yaWFScktG","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"7xFoe5EeyjiQz0IdEIqDcg","Raw":{"response_type":"code","client_id":"angular_spa","state":"cExpMWlEWjN0TC1ldHNKYmtiQUo4OWV3eUxsLm1sTTBkR2tJQ20yaWFScktGsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200/index.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"w1FMWpAWYRmTtjsSqm8geCaljsOlW6kRDOMak4BFzF8","code_challenge_method":"S256","nonce":"cExpMWlEWjN0TC1ldHNKYmtiQUo4OWV3eUxsLm1sTTBkR2tJQ20yaWFScktG"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:24:00.861 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-28 23:24:00.861 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-28 23:24:00.863 -04:00 [DBG] gkRbffwM4SqT+VMIik6PIjS/5ToRKTek4h9lTaxRKR0= not found in database
2020-08-28 23:24:00.864 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/index.html","Endpoint":"Authorize","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****7WLc","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000015a-0000-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:24:00.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 23:24:00.865 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ClientId":"angular_spa","RedirectUri":"https://localhost:4200/index.html","State":"cExpMWlEWjN0TC1ldHNKYmtiQUo4OWV3eUxsLm1sTTBkR2tJQ20yaWFScktGsemicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-28 23:24:00.865 -04:00 [DBG] Augmenting SignInContext
2020-08-28 23:24:00.865 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 23:24:01.713 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 23:24:01.715 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:24:01.715 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:24:01.715 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 23:24:01.716 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 23:24:01.716 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 23:24:01.716 -04:00 [DBG] Start discovery request
2020-08-28 23:24:01.723 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 23:24:01.836 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-28 23:24:01.838 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:24:01.838 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:24:01.838 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-28 23:24:01.838 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-28 23:24:01.838 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-28 23:24:01.838 -04:00 [DBG] Start key discovery request
2020-08-28 23:24:03.028 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-28 23:24:03.030 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:24:03.030 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:24:03.031 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-28 23:24:03.031 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-28 23:24:03.031 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-28 23:24:03.031 -04:00 [DBG] Start token request.
2020-08-28 23:24:03.031 -04:00 [DBG] Start client validation
2020-08-28 23:24:03.031 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-28 23:24:03.031 -04:00 [DBG] Start parsing for secret in post body
2020-08-28 23:24:03.032 -04:00 [DBG] client id without secret found
2020-08-28 23:24:03.032 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-28 23:24:03.032 -04:00 [DBG] Secret id found: angular_spa
2020-08-28 23:24:03.041 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:24:03.041 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:24:03.041 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-28 23:24:03.041 -04:00 [DBG] Client validation success
2020-08-28 23:24:03.041 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"800000fb-0005-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:24:03.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-28 23:24:03.041 -04:00 [DBG] Start token request validation
2020-08-28 23:24:03.041 -04:00 [DBG] Start validation of authorization code token request
2020-08-28 23:24:03.042 -04:00 [DBG] gkRbffwM4SqT+VMIik6PIjS/5ToRKTek4h9lTaxRKR0= found in database: true
2020-08-28 23:24:03.044 -04:00 [DBG] removing gkRbffwM4SqT+VMIik6PIjS/5ToRKTek4h9lTaxRKR0= persisted grant from database
2020-08-28 23:24:03.045 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-28 23:24:03.046 -04:00 [DBG] Validation of authorization code token request success
2020-08-28 23:24:03.047 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"863xAoxIfdDPLK72p06hbqEnOlNltbcINDrDqGn7WLc","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"863xAoxIfdDPLK72p06hbqEnOlNltbcINDrDqGn7WLc","redirect_uri":"https://localhost:4200/index.html","code_verifier":"dmFJWVltc0duMFJMaTAwT1JJWnp6VnkyRlN4SUFnUlFZUUVWcXN0OWpERzBv","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-28 23:24:03.055 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:24:03.055 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:24:03.056 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:24:03.057 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:24:03.057 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-28 23:24:03.057 -04:00 [DBG] Getting claims for access token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-28 23:24:03.066 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:24:03.066 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:24:03.067 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:24:03.068 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:24:03.068 -04:00 [DBG] Getting claims for identity token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188 and client: angular_spa
2020-08-28 23:24:03.068 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-28 23:24:03.069 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****IUGw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****rylQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000fb-0005-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:24:03.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 23:24:03.069 -04:00 [DBG] Token request success.
2020-08-28 23:24:03.078 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 23:24:03.078 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 23:24:03.078 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 23:24:03.078 -04:00 [DBG] Rendering check session result
2020-08-28 23:24:03.079 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 23:24:03.080 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:24:03.081 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:24:03.082 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 23:24:03.083 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:24:03.084 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:24:03.084 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-28 23:24:03.084 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-28 23:24:03.084 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-28 23:24:03.084 -04:00 [DBG] Start userinfo request
2020-08-28 23:24:03.084 -04:00 [DBG] Bearer token found in header
2020-08-28 23:24:03.093 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:24:03.093 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:24:03.099 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:24:03.099 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:24:03.101 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 23:24:03.101 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598671443,"exp":1598675043,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1598671440,"idp":"azuread","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"external"},"$type":"TokenValidationLog"}
2020-08-28 23:24:03.101 -04:00 [DBG] Creating userinfo response
2020-08-28 23:24:03.101 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-28 23:24:03.101 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-28 23:24:03.102 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:24:03.102 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-28 23:24:03.102 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-28 23:24:03.104 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:24:03.106 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username
2020-08-28 23:24:03.106 -04:00 [DBG] End userinfo request
2020-08-28 23:24:07.688 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 23:24:07.689 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:24:07.689 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:24:07.689 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 23:24:07.690 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 23:24:07.690 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 23:24:07.690 -04:00 [DBG] Start discovery request
2020-08-28 23:24:07.692 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 23:24:07.731 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-28 23:24:07.732 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 23:24:07.732 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 23:24:07.732 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 23:24:07.732 -04:00 [DBG] Rendering check session result
2020-08-28 23:24:07.733 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:24:07.734 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:24:07.734 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-28 23:24:07.734 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-28 23:24:07.734 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-28 23:24:07.734 -04:00 [DBG] Start key discovery request
2020-08-28 23:25:16.306 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-28 23:25:16.307 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-28 23:25:16.307 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-28 23:25:16.307 -04:00 [DBG] Processing signout request for 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-28 23:25:16.307 -04:00 [DBG] Start end session request validation
2020-08-28 23:25:16.307 -04:00 [DBG] Start identity token validation
2020-08-28 23:25:16.324 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:25:16.324 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:25:16.324 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-28 23:25:16.326 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 23:25:16.326 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598671443,"exp":1598671743,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"cExpMWlEWjN0TC1ldHNKYmtiQUo4OWV3eUxsLm1sTTBkR2tJQ20yaWFScktG","iat":1598671443,"at_hash":"GWu0S8ZoMF1vF_PBdc86HA","s_hash":"JmwdazrutFOzo7Wj9d7N6w","sid":"7xFoe5EeyjiQz0IdEIqDcg","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1598671440,"idp":"azuread","amr":"external"},"$type":"TokenValidationLog"}
2020-08-28 23:25:16.326 -04:00 [WRN] Invalid PostLogoutRedirectUri: https://localhost:4200/index.html
2020-08-28 23:25:16.326 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200/index.html"},"$type":"EndSessionRequestValidationLog"}
2020-08-28 23:25:16.326 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-28 23:25:16.332 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-28 23:25:16.332 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-28 23:25:16.332 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-28 23:25:16.332 -04:00 [INF] {"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"800000b4-000b-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:25:16.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-28 23:25:20.568 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 23:25:20.568 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 23:25:20.568 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 23:25:20.568 -04:00 [DBG] Start authorize request
2020-08-28 23:25:20.568 -04:00 [DBG] No user present in authorize request
2020-08-28 23:25:20.568 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:25:20.580 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:25:20.581 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:25:20.581 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"bWZXMlBfMWFKSmV6MllhNC1aelJqU3VyOWo1SUlraGNkemlONEk2clguM2Q4","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"y0T4qIwAx51nra8AT5Jmccmr-T11vp1jHf310fUEgq8","code_challenge_method":"S256","nonce":"bWZXMlBfMWFKSmV6MllhNC1aelJqU3VyOWo1SUlraGNkemlONEk2clguM2Q4","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:25:20.581 -04:00 [ERR] Request validation failed
2020-08-28 23:25:20.581 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"bWZXMlBfMWFKSmV6MllhNC1aelJqU3VyOWo1SUlraGNkemlONEk2clguM2Q4","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"y0T4qIwAx51nra8AT5Jmccmr-T11vp1jHf310fUEgq8","code_challenge_method":"S256","nonce":"bWZXMlBfMWFKSmV6MllhNC1aelJqU3VyOWo1SUlraGNkemlONEk2clguM2Q4","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:25:20.581 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000105-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:25:20.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 23:25:27.169 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 23:25:27.170 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 23:25:27.170 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 23:25:27.170 -04:00 [DBG] Start authorize request
2020-08-28 23:25:27.170 -04:00 [DBG] No user present in authorize request
2020-08-28 23:25:27.170 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:25:27.179 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:25:27.179 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:25:27.179 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 23:25:27.182 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:25:27.190 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:25:27.192 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:25:27.193 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:25:27.193 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 23:25:27.193 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/index.html","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"MzluRUNycm9wRlpPdk9BaHFmYXVSeXhaY3ZCV2ZRNV92Wjg1NHpvNk9keFVHsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"MzluRUNycm9wRlpPdk9BaHFmYXVSeXhaY3ZCV2ZRNV92Wjg1NHpvNk9keFVH","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"MzluRUNycm9wRlpPdk9BaHFmYXVSeXhaY3ZCV2ZRNV92Wjg1NHpvNk9keFVHsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200/index.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"cynipUjUh4wjoCxedJEWIH8LNfHqMMRx8fifS6-a9o4","code_challenge_method":"S256","nonce":"MzluRUNycm9wRlpPdk9BaHFmYXVSeXhaY3ZCV2ZRNV92Wjg1NHpvNk9keFVH"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:25:27.193 -04:00 [INF] Showing login: User is not authenticated
2020-08-28 23:25:27.197 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:25:27.206 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:25:27.206 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:25:27.206 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 23:25:27.207 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:25:27.209 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:25:27.210 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:25:27.211 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:25:27.211 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 23:25:27.218 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:25:27.218 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:25:27.222 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-28 23:25:27.472 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-28 23:25:27.474 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-08-28 23:25:27.486 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000a1-000a-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:25:27.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-28 23:25:27.486 -04:00 [DBG] Augmenting SignInContext
2020-08-28 23:25:27.486 -04:00 [DBG] Adding amr claim with value: external
2020-08-28 23:25:27.486 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 23:25:27.486 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-28 23:25:27.492 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-28 23:25:27.493 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-28 23:25:27.493 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-28 23:25:27.493 -04:00 [DBG] Start authorize callback request
2020-08-28 23:25:27.493 -04:00 [DBG] User in authorize request: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-28 23:25:27.493 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:25:27.503 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:25:27.503 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:25:27.503 -04:00 [DBG] Checking for PKCE parameters
2020-08-28 23:25:27.504 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:25:27.506 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:25:27.507 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:25:27.508 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:25:27.509 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-28 23:25:27.509 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/index.html","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"MzluRUNycm9wRlpPdk9BaHFmYXVSeXhaY3ZCV2ZRNV92Wjg1NHpvNk9keFVHsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"MzluRUNycm9wRlpPdk9BaHFmYXVSeXhaY3ZCV2ZRNV92Wjg1NHpvNk9keFVH","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"mTj7wqE5uIQ4htGbf5RfXA","Raw":{"response_type":"code","client_id":"angular_spa","state":"MzluRUNycm9wRlpPdk9BaHFmYXVSeXhaY3ZCV2ZRNV92Wjg1NHpvNk9keFVHsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200/index.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"cynipUjUh4wjoCxedJEWIH8LNfHqMMRx8fifS6-a9o4","code_challenge_method":"S256","nonce":"MzluRUNycm9wRlpPdk9BaHFmYXVSeXhaY3ZCV2ZRNV92Wjg1NHpvNk9keFVH"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:25:27.510 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-28 23:25:27.510 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-28 23:25:27.512 -04:00 [DBG] bFlGAGmE2DYlDwjEz69Ny+nAI8NGCYKwsD1obF6Y2Jc= not found in database
2020-08-28 23:25:27.514 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200/index.html","Endpoint":"Authorize","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****n6SM","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000094-0009-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:25:27.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 23:25:27.514 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ClientId":"angular_spa","RedirectUri":"https://localhost:4200/index.html","State":"MzluRUNycm9wRlpPdk9BaHFmYXVSeXhaY3ZCV2ZRNV92Wjg1NHpvNk9keFVHsemicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-28 23:25:27.514 -04:00 [DBG] Augmenting SignInContext
2020-08-28 23:25:27.514 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-28 23:25:28.356 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-28 23:25:28.358 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:25:28.358 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:25:28.358 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-28 23:25:28.358 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-28 23:25:28.358 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-28 23:25:28.358 -04:00 [DBG] Start discovery request
2020-08-28 23:25:28.366 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-28 23:25:28.469 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-28 23:25:28.470 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:25:28.471 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:25:28.471 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-28 23:25:28.471 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-28 23:25:28.471 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-28 23:25:28.471 -04:00 [DBG] Start key discovery request
2020-08-28 23:25:29.661 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-28 23:25:29.663 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:25:29.663 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:25:29.663 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-28 23:25:29.664 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-28 23:25:29.664 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-28 23:25:29.664 -04:00 [DBG] Start token request.
2020-08-28 23:25:29.664 -04:00 [DBG] Start client validation
2020-08-28 23:25:29.664 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-28 23:25:29.664 -04:00 [DBG] Start parsing for secret in post body
2020-08-28 23:25:29.664 -04:00 [DBG] client id without secret found
2020-08-28 23:25:29.664 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-28 23:25:29.664 -04:00 [DBG] Secret id found: angular_spa
2020-08-28 23:25:29.672 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:25:29.672 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:25:29.672 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-28 23:25:29.672 -04:00 [DBG] Client validation success
2020-08-28 23:25:29.672 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000107-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:25:29.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-28 23:25:29.672 -04:00 [DBG] Start token request validation
2020-08-28 23:25:29.672 -04:00 [DBG] Start validation of authorization code token request
2020-08-28 23:25:29.674 -04:00 [DBG] bFlGAGmE2DYlDwjEz69Ny+nAI8NGCYKwsD1obF6Y2Jc= found in database: true
2020-08-28 23:25:29.675 -04:00 [DBG] removing bFlGAGmE2DYlDwjEz69Ny+nAI8NGCYKwsD1obF6Y2Jc= persisted grant from database
2020-08-28 23:25:29.676 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-28 23:25:29.678 -04:00 [DBG] Validation of authorization code token request success
2020-08-28 23:25:29.678 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"Ck0Eedb-CvBr4q0NCbz_bQtJ-SmYH0XOG4V7Y8un6SM","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"Ck0Eedb-CvBr4q0NCbz_bQtJ-SmYH0XOG4V7Y8un6SM","redirect_uri":"https://localhost:4200/index.html","code_verifier":"Lnp0Mld-azNvZFM3enpLaXpfRXE5TkhKWk1lUzBCYmRrWkliNXFiRWx0Qzhy","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-28 23:25:29.688 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:25:29.688 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:25:29.689 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:25:29.690 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:25:29.690 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-28 23:25:29.690 -04:00 [DBG] Getting claims for access token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-28 23:25:29.700 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:25:29.700 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:25:29.701 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:25:29.702 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-28 23:25:29.702 -04:00 [DBG] Getting claims for identity token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188 and client: angular_spa
2020-08-28 23:25:29.702 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-28 23:25:29.703 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****mnrg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****GzIQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000107-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:25:29.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-28 23:25:29.703 -04:00 [DBG] Token request success.
2020-08-28 23:25:29.712 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 23:25:29.712 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-28 23:25:29.713 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-28 23:25:29.713 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-28 23:25:29.713 -04:00 [DBG] Rendering check session result
2020-08-28 23:25:29.714 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:25:29.714 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:25:29.716 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-28 23:25:29.718 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-28 23:25:29.718 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-28 23:25:29.718 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-28 23:25:29.718 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-28 23:25:29.718 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-28 23:25:29.718 -04:00 [DBG] Start userinfo request
2020-08-28 23:25:29.718 -04:00 [DBG] Bearer token found in header
2020-08-28 23:25:29.726 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:25:29.726 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:25:29.733 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:25:29.733 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:25:29.734 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-28 23:25:29.734 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598671529,"exp":1598675129,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1598671527,"idp":"azuread","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"external"},"$type":"TokenValidationLog"}
2020-08-28 23:25:29.734 -04:00 [DBG] Creating userinfo response
2020-08-28 23:25:29.734 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-28 23:25:29.734 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-28 23:25:29.735 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:25:29.736 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-28 23:25:29.736 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-28 23:25:29.737 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-28 23:25:29.740 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-28 23:25:29.740 -04:00 [DBG] End userinfo request
2020-08-28 23:26:47.059 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 23:26:47.059 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 23:26:47.059 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 23:26:47.059 -04:00 [DBG] Start authorize request
2020-08-28 23:26:47.059 -04:00 [DBG] User in authorize request: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-28 23:26:47.059 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:26:47.076 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:26:47.076 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:26:47.076 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"cEVjLUtvNVlJUX5ofjJ2SlNGenpHemtHTVFBSjN2N01Qen43YjZSUS16TWZx","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"BHMDOnu248yicrXQtk4EhY8VOuIa2EIJ2UIVezXMXQE","code_challenge_method":"S256","nonce":"cEVjLUtvNVlJUX5ofjJ2SlNGenpHemtHTVFBSjN2N01Qen43YjZSUS16TWZx","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:26:47.076 -04:00 [ERR] Request validation failed
2020-08-28 23:26:47.077 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"cEVjLUtvNVlJUX5ofjJ2SlNGenpHemtHTVFBSjN2N01Qen43YjZSUS16TWZx","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"BHMDOnu248yicrXQtk4EhY8VOuIa2EIJ2UIVezXMXQE","code_challenge_method":"S256","nonce":"cEVjLUtvNVlJUX5ofjJ2SlNGenpHemtHTVFBSjN2N01Qen43YjZSUS16TWZx","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:26:47.077 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000ed-0008-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:26:47.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-28 23:40:31.060 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-28 23:40:31.061 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-28 23:40:31.061 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-28 23:40:31.061 -04:00 [DBG] Start authorize request
2020-08-28 23:40:31.061 -04:00 [DBG] User in authorize request: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-28 23:40:31.061 -04:00 [DBG] Start authorize request protocol validation
2020-08-28 23:40:31.122 -04:00 [DBG] angular_spa found in database: true
2020-08-28 23:40:31.122 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-28 23:40:31.122 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"TWY4SWpxRkpmbnVLdDlTaGUyVUUzNHZUMlZqNzNIREdqZVN6aTNKR1M0cEJN","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"q80I5-JgmLywx9xHCa0vrdrcF4ft2Mwb8EgQJI64fGE","code_challenge_method":"S256","nonce":"TWY4SWpxRkpmbnVLdDlTaGUyVUUzNHZUMlZqNzNIREdqZVN6aTNKR1M0cEJN","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:40:31.122 -04:00 [ERR] Request validation failed
2020-08-28 23:40:31.122 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200/index.html"],"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"TWY4SWpxRkpmbnVLdDlTaGUyVUUzNHZUMlZqNzNIREdqZVN6aTNKR1M0cEJN","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"q80I5-JgmLywx9xHCa0vrdrcF4ft2Mwb8EgQJI64fGE","code_challenge_method":"S256","nonce":"TWY4SWpxRkpmbnVLdDlTaGUyVUUzNHZUMlZqNzNIREdqZVN6aTNKR1M0cEJN","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-28 23:40:31.122 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000011e-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-29T03:40:31.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 00:18:20.324 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:18:20.335 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:18:20.335 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:18:20.335 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:18:20.335 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:18:20.335 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:18:20.335 -04:00 [DBG] Start discovery request
2020-08-29 00:18:20.346 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:18:20.397 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:18:20.399 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:18:20.399 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:18:20.399 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:18:20.400 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:18:20.400 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:18:20.400 -04:00 [DBG] Start key discovery request
2020-08-29 00:18:21.443 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 00:18:21.445 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 00:18:21.445 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 00:18:21.445 -04:00 [DBG] Start authorize request
2020-08-29 00:18:21.445 -04:00 [DBG] User in authorize request: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-29 00:18:21.445 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:18:21.461 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:18:21.461 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:18:21.461 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"SUd4dVhqLlp4N3MxMklLU1dncWpaZmJraVh5TjZtRXpsTS5pemlCdVZDMG96","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"OwNJS_cJxcNRY3kuQwbsh9II6u_tAXy9jddFflnPVkg","code_challenge_method":"S256","nonce":"SUd4dVhqLlp4N3MxMklLU1dncWpaZmJraVh5TjZtRXpsTS5pemlCdVZDMG96","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:18:21.461 -04:00 [ERR] Request validation failed
2020-08-29 00:18:21.461 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"SUd4dVhqLlp4N3MxMklLU1dncWpaZmJraVh5TjZtRXpsTS5pemlCdVZDMG96","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"OwNJS_cJxcNRY3kuQwbsh9II6u_tAXy9jddFflnPVkg","code_challenge_method":"S256","nonce":"SUd4dVhqLlp4N3MxMklLU1dncWpaZmJraVh5TjZtRXpsTS5pemlCdVZDMG96","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:18:21.461 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000181-0008-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:18:21.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 00:18:30.603 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 00:18:30.603 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 00:18:30.603 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 00:18:30.604 -04:00 [DBG] Start authorize request
2020-08-29 00:18:30.604 -04:00 [DBG] User in authorize request: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-29 00:18:30.604 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:18:30.611 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:18:30.611 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:18:30.611 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 00:18:30.614 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:18:30.622 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:18:30.623 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:18:30.624 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:18:30.624 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 00:18:30.624 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"WmVWZHlpSlljaU83T1dwbmlwZHJnM01jcV9heXR1MzVxM0dUOG4zazZ2Zmgusemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"WmVWZHlpSlljaU83T1dwbmlwZHJnM01jcV9heXR1MzVxM0dUOG4zazZ2Zmgu","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"mTj7wqE5uIQ4htGbf5RfXA","Raw":{"response_type":"code","client_id":"angular_spa","state":"WmVWZHlpSlljaU83T1dwbmlwZHJnM01jcV9heXR1MzVxM0dUOG4zazZ2Zmgusemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"opTsreGbPuuN3St9n9yGybFe3Az648zl5Gdf35cNS2s","code_challenge_method":"S256","nonce":"WmVWZHlpSlljaU83T1dwbmlwZHJnM01jcV9heXR1MzVxM0dUOG4zazZ2Zmgu"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:18:30.626 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-29 00:18:30.626 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-29 00:18:30.627 -04:00 [DBG] KE5moxXb2ygZOMyvbwB+zKB5U68HFfdU1IDL9JhJkXo= not found in database
2020-08-29 00:18:30.629 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****6zNg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000141-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:18:30.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 00:18:30.629 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"WmVWZHlpSlljaU83T1dwbmlwZHJnM01jcV9heXR1MzVxM0dUOG4zazZ2Zmgusemicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-29 00:18:31.326 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:18:31.329 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:18:31.329 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:18:31.329 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:18:31.329 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:18:31.329 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:18:31.329 -04:00 [DBG] Start discovery request
2020-08-29 00:18:31.333 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:18:31.355 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:18:31.359 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:18:31.359 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:18:31.359 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:18:31.359 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:18:31.359 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:18:31.359 -04:00 [DBG] Start key discovery request
2020-08-29 00:18:32.374 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-29 00:18:32.376 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:18:32.376 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:18:32.376 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-29 00:18:32.376 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-29 00:18:32.376 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-29 00:18:32.376 -04:00 [DBG] Start token request.
2020-08-29 00:18:32.376 -04:00 [DBG] Start client validation
2020-08-29 00:18:32.377 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-29 00:18:32.377 -04:00 [DBG] Start parsing for secret in post body
2020-08-29 00:18:32.377 -04:00 [DBG] client id without secret found
2020-08-29 00:18:32.377 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-29 00:18:32.377 -04:00 [DBG] Secret id found: angular_spa
2020-08-29 00:18:32.389 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:18:32.389 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:18:32.389 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-29 00:18:32.389 -04:00 [DBG] Client validation success
2020-08-29 00:18:32.389 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000004-000a-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:18:32.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-29 00:18:32.389 -04:00 [DBG] Start token request validation
2020-08-29 00:18:32.389 -04:00 [DBG] Start validation of authorization code token request
2020-08-29 00:18:32.390 -04:00 [DBG] KE5moxXb2ygZOMyvbwB+zKB5U68HFfdU1IDL9JhJkXo= found in database: true
2020-08-29 00:18:32.392 -04:00 [DBG] removing KE5moxXb2ygZOMyvbwB+zKB5U68HFfdU1IDL9JhJkXo= persisted grant from database
2020-08-29 00:18:32.394 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-29 00:18:32.395 -04:00 [DBG] Validation of authorization code token request success
2020-08-29 00:18:32.395 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"dCKWy_eGEc9YkTp-Z6uWY__tpZKL97thjyc6x_16zNg","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"dCKWy_eGEc9YkTp-Z6uWY__tpZKL97thjyc6x_16zNg","redirect_uri":"https://localhost:4200","code_verifier":"dVIuNlFtQ01GaDZJUDh5azREakZ5ajRLUmU3NzdwNWRvNVdCLjBUcUFlaUJV","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-29 00:18:32.405 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:18:32.405 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:18:32.408 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:18:32.409 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:18:32.410 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-29 00:18:32.410 -04:00 [DBG] Getting claims for access token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-29 00:18:32.419 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:18:32.419 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:18:32.420 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:18:32.422 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:18:32.422 -04:00 [DBG] Getting claims for identity token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188 and client: angular_spa
2020-08-29 00:18:32.422 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-29 00:18:32.422 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****W-lA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****5RlQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000004-000a-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:18:32.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 00:18:32.423 -04:00 [DBG] Token request success.
2020-08-29 00:18:32.430 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 00:18:32.430 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 00:18:32.430 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 00:18:32.430 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 00:18:32.430 -04:00 [DBG] Rendering check session result
2020-08-29 00:18:32.431 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:18:32.431 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:18:32.434 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 00:18:32.435 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:18:32.435 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:18:32.435 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-29 00:18:32.435 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-29 00:18:32.435 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-29 00:18:32.436 -04:00 [DBG] Start userinfo request
2020-08-29 00:18:32.436 -04:00 [DBG] Bearer token found in header
2020-08-29 00:18:32.443 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:18:32.443 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:18:32.450 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:18:32.450 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:18:32.451 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 00:18:32.451 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598674712,"exp":1598678312,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1598671527,"idp":"azuread","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"external"},"$type":"TokenValidationLog"}
2020-08-29 00:18:32.451 -04:00 [DBG] Creating userinfo response
2020-08-29 00:18:32.451 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 00:18:32.451 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 00:18:32.453 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:18:32.453 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-29 00:18:32.453 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 00:18:32.454 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:18:32.457 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-29 00:18:32.457 -04:00 [DBG] End userinfo request
2020-08-29 00:18:38.373 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-29 00:18:38.373 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-29 00:18:38.373 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-29 00:18:38.373 -04:00 [DBG] Processing signout request for 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-29 00:18:38.373 -04:00 [DBG] Start end session request validation
2020-08-29 00:18:38.373 -04:00 [DBG] Start identity token validation
2020-08-29 00:18:38.381 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:18:38.381 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:18:38.381 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-29 00:18:38.383 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 00:18:38.383 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598674712,"exp":1598675012,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"WmVWZHlpSlljaU83T1dwbmlwZHJnM01jcV9heXR1MzVxM0dUOG4zazZ2Zmgu","iat":1598674712,"at_hash":"SPMtqUkrGDPtRslr8AKvhw","s_hash":"S_YtDp9JN0Sg2ON87Q416w","sid":"mTj7wqE5uIQ4htGbf5RfXA","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1598671527,"idp":"azuread","amr":"external"},"$type":"TokenValidationLog"}
2020-08-29 00:18:38.383 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-08-29 00:18:38.383 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-29 00:18:38.387 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-29 00:18:38.388 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-29 00:18:38.388 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-29 00:18:38.388 -04:00 [INF] {"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000178-0000-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:18:38.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-29 00:21:04.226 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 00:21:04.226 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 00:21:04.226 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 00:21:04.226 -04:00 [DBG] Start authorize request
2020-08-29 00:21:04.226 -04:00 [DBG] No user present in authorize request
2020-08-29 00:21:04.226 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:21:04.242 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:21:04.242 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:21:04.242 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"ZUtBV1hBbEFBaE9mTXdNYll-YUtVVVBTc3NqdVluaE9EdVh5LUVjbWNRWG1O","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"6_nQu0vds9AckVxfrsQb9WJgu3t_JGarK-Z5vAPt3uo","code_challenge_method":"S256","nonce":"ZUtBV1hBbEFBaE9mTXdNYll-YUtVVVBTc3NqdVluaE9EdVh5LUVjbWNRWG1O","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:21:04.242 -04:00 [ERR] Request validation failed
2020-08-29 00:21:04.242 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"ZUtBV1hBbEFBaE9mTXdNYll-YUtVVVBTc3NqdVluaE9EdVh5LUVjbWNRWG1O","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"6_nQu0vds9AckVxfrsQb9WJgu3t_JGarK-Z5vAPt3uo","code_challenge_method":"S256","nonce":"ZUtBV1hBbEFBaE9mTXdNYll-YUtVVVBTc3NqdVluaE9EdVh5LUVjbWNRWG1O","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:21:04.242 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000011b-0008-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:21:04.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 00:21:10.493 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 00:21:10.493 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 00:21:10.493 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 00:21:10.493 -04:00 [DBG] Start authorize request
2020-08-29 00:21:10.493 -04:00 [DBG] No user present in authorize request
2020-08-29 00:21:10.493 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:21:10.506 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:21:10.506 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:21:10.507 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 00:21:10.509 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:21:10.518 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:21:10.519 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:21:10.520 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:21:10.520 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 00:21:10.520 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"MnR1Wn5aR2ZEblBSYm95djhGMHZwZ1l4LkpQaDR4Sk1RaTFyenpQcmZ0bHlYsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"MnR1Wn5aR2ZEblBSYm95djhGMHZwZ1l4LkpQaDR4Sk1RaTFyenpQcmZ0bHlY","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"MnR1Wn5aR2ZEblBSYm95djhGMHZwZ1l4LkpQaDR4Sk1RaTFyenpQcmZ0bHlYsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"DON1GcLB_hHvmA1aUZGTb--h7MeuX2e6KkJHOHq_Pjk","code_challenge_method":"S256","nonce":"MnR1Wn5aR2ZEblBSYm95djhGMHZwZ1l4LkpQaDR4Sk1RaTFyenpQcmZ0bHlY"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:21:10.520 -04:00 [INF] Showing login: User is not authenticated
2020-08-29 00:21:10.523 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:21:10.531 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:21:10.531 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:21:10.531 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 00:21:10.532 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:21:10.533 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:21:10.534 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:21:10.535 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:21:10.535 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 00:21:10.541 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:21:10.541 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:21:15.241 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-29 00:21:15.242 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:21:15.250 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:21:15.250 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:21:15.250 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 00:21:15.251 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:21:15.252 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:21:15.254 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:21:15.255 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:21:15.255 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 00:21:15.263 -04:00 [DBG] Augmenting SignInContext
2020-08-29 00:21:15.263 -04:00 [DBG] Adding idp claim with value: local
2020-08-29 00:21:15.263 -04:00 [DBG] Adding auth_time claim with value: 1598674875
2020-08-29 00:21:15.263 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 00:21:15.264 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000063-0005-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:21:15.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-29 00:21:15.270 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:21:15.270 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:21:15.274 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-29 00:21:15.274 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-29 00:21:15.274 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-29 00:21:15.274 -04:00 [DBG] Start authorize callback request
2020-08-29 00:21:15.274 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 00:21:15.274 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:21:15.281 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:21:15.281 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:21:15.281 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 00:21:15.282 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:21:15.283 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:21:15.285 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:21:15.285 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:21:15.286 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 00:21:15.286 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"MnR1Wn5aR2ZEblBSYm95djhGMHZwZ1l4LkpQaDR4Sk1RaTFyenpQcmZ0bHlYsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"MnR1Wn5aR2ZEblBSYm95djhGMHZwZ1l4LkpQaDR4Sk1RaTFyenpQcmZ0bHlY","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"DFveLnU_ORPu3fwAOi6Zew","Raw":{"response_type":"code","client_id":"angular_spa","state":"MnR1Wn5aR2ZEblBSYm95djhGMHZwZ1l4LkpQaDR4Sk1RaTFyenpQcmZ0bHlYsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"DON1GcLB_hHvmA1aUZGTb--h7MeuX2e6KkJHOHq_Pjk","code_challenge_method":"S256","nonce":"MnR1Wn5aR2ZEblBSYm95djhGMHZwZ1l4LkpQaDR4Sk1RaTFyenpQcmZ0bHlY"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:21:15.287 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-29 00:21:15.287 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-29 00:21:15.289 -04:00 [DBG] hSncyxd0Z3HGz5OX5iSMTDUtp/sl8HIbIenW2ElxXng= not found in database
2020-08-29 00:21:15.290 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****ZDes","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000009b-0000-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:21:15.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 00:21:15.290 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"MnR1Wn5aR2ZEblBSYm95djhGMHZwZ1l4LkpQaDR4Sk1RaTFyenpQcmZ0bHlYsemicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-29 00:21:15.290 -04:00 [DBG] Augmenting SignInContext
2020-08-29 00:21:15.290 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 00:21:15.388 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:21:15.390 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:21:15.390 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:21:15.390 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:21:15.390 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:21:15.390 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:21:15.390 -04:00 [DBG] Start discovery request
2020-08-29 00:21:15.396 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:21:15.417 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:21:15.420 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:21:15.420 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:21:15.420 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:21:15.420 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:21:15.420 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:21:15.421 -04:00 [DBG] Start key discovery request
2020-08-29 00:21:16.457 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-29 00:21:16.459 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:21:16.459 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:21:16.459 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-29 00:21:16.459 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-29 00:21:16.460 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-29 00:21:16.460 -04:00 [DBG] Start token request.
2020-08-29 00:21:16.460 -04:00 [DBG] Start client validation
2020-08-29 00:21:16.460 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-29 00:21:16.460 -04:00 [DBG] Start parsing for secret in post body
2020-08-29 00:21:16.460 -04:00 [DBG] client id without secret found
2020-08-29 00:21:16.460 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-29 00:21:16.460 -04:00 [DBG] Secret id found: angular_spa
2020-08-29 00:21:16.470 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:21:16.470 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:21:16.470 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-29 00:21:16.470 -04:00 [DBG] Client validation success
2020-08-29 00:21:16.470 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000009d-0000-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:21:16.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-29 00:21:16.470 -04:00 [DBG] Start token request validation
2020-08-29 00:21:16.470 -04:00 [DBG] Start validation of authorization code token request
2020-08-29 00:21:16.472 -04:00 [DBG] hSncyxd0Z3HGz5OX5iSMTDUtp/sl8HIbIenW2ElxXng= found in database: true
2020-08-29 00:21:16.473 -04:00 [DBG] removing hSncyxd0Z3HGz5OX5iSMTDUtp/sl8HIbIenW2ElxXng= persisted grant from database
2020-08-29 00:21:16.474 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-29 00:21:16.475 -04:00 [DBG] Validation of authorization code token request success
2020-08-29 00:21:16.476 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"L3m2UghAUlZTfL89yrkJ4W1avLpxi0e72KeL08hZDes","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"L3m2UghAUlZTfL89yrkJ4W1avLpxi0e72KeL08hZDes","redirect_uri":"https://localhost:4200","code_verifier":"bjNOeGVNYkFvVzJUSVh3cW5-WjR-VHZmQTlubHNUcGcySS1ydXV4Y0Y2MmFG","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-29 00:21:16.482 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:21:16.482 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:21:16.483 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:21:16.484 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:21:16.484 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-29 00:21:16.484 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 00:21:16.496 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:21:16.496 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:21:16.497 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:21:16.498 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:21:16.498 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-29 00:21:16.498 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-29 00:21:16.499 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****7HEQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****3ghQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000009d-0000-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:21:16.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 00:21:16.499 -04:00 [DBG] Token request success.
2020-08-29 00:21:16.506 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 00:21:16.507 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:21:16.507 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:21:16.508 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 00:21:16.508 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 00:21:16.508 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 00:21:16.508 -04:00 [DBG] Rendering check session result
2020-08-29 00:21:16.509 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 00:21:16.510 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:21:16.510 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:21:16.510 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-29 00:21:16.510 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-29 00:21:16.510 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-29 00:21:16.510 -04:00 [DBG] Start userinfo request
2020-08-29 00:21:16.510 -04:00 [DBG] Bearer token found in header
2020-08-29 00:21:16.518 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:21:16.518 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:21:16.525 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:21:16.525 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:21:16.526 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 00:21:16.526 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598674876,"exp":1598678476,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598674875,"idp":"local","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-29 00:21:16.526 -04:00 [DBG] Creating userinfo response
2020-08-29 00:21:16.526 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 00:21:16.526 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 00:21:16.527 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:21:16.528 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-29 00:21:16.528 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 00:21:16.529 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:21:16.532 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-29 00:21:16.532 -04:00 [DBG] End userinfo request
2020-08-29 00:21:23.804 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-29 00:21:23.804 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-29 00:21:23.804 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-29 00:21:23.804 -04:00 [DBG] Processing signout request for 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 00:21:23.804 -04:00 [DBG] Start end session request validation
2020-08-29 00:21:23.804 -04:00 [DBG] Start identity token validation
2020-08-29 00:21:23.812 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:21:23.812 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:21:23.812 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-29 00:21:23.813 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 00:21:23.813 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598674876,"exp":1598675176,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"MnR1Wn5aR2ZEblBSYm95djhGMHZwZ1l4LkpQaDR4Sk1RaTFyenpQcmZ0bHlY","iat":1598674876,"at_hash":"wMuUd4OCc4lt3ajRyhL_9A","s_hash":"5tmk4JQInSrUoFm2WgO9Tw","sid":"DFveLnU_ORPu3fwAOi6Zew","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598674875,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-29 00:21:23.814 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-08-29 00:21:23.814 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-29 00:21:23.817 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-29 00:21:23.817 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-29 00:21:23.817 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-29 00:21:23.817 -04:00 [INF] {"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"8000011f-0008-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:21:23.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-29 00:21:23.844 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-08-29 00:21:23.845 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-08-29 00:21:23.845 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-08-29 00:21:23.845 -04:00 [DBG] Processing signout callback request
2020-08-29 00:21:23.853 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:21:23.853 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:21:23.853 -04:00 [DBG] No client front-channel logout URLs
2020-08-29 00:21:23.853 -04:00 [DBG] No client back-channel logout URLs
2020-08-29 00:21:23.853 -04:00 [INF] Successful signout callback.
2020-08-29 00:21:23.853 -04:00 [DBG] No client front-channel iframe urls
2020-08-29 00:21:23.854 -04:00 [DBG] No client back-channel iframe urls
2020-08-29 00:21:33.026 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:21:33.028 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:21:33.028 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:21:33.028 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:21:33.028 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:21:33.028 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:21:33.028 -04:00 [DBG] Start discovery request
2020-08-29 00:21:33.035 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:21:33.061 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:21:33.065 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:21:33.065 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:21:33.066 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:21:33.066 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:21:33.066 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:21:33.067 -04:00 [DBG] Start key discovery request
2020-08-29 00:21:34.115 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 00:21:34.115 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 00:21:34.115 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 00:21:34.115 -04:00 [DBG] Start authorize request
2020-08-29 00:21:34.115 -04:00 [DBG] No user present in authorize request
2020-08-29 00:21:34.115 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:21:34.131 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:21:34.131 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:21:34.131 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"VWtlNFZqdEMuNGZTRjlSQlRMU2VLdm5VZTBYTW5Bb3pGbDNCaGpPZElkMGZ4","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"eR0rS0zO8ov9mbqfiSt0cRvSq24ha4fTFo85dZLecvg","code_challenge_method":"S256","nonce":"VWtlNFZqdEMuNGZTRjlSQlRMU2VLdm5VZTBYTW5Bb3pGbDNCaGpPZElkMGZ4","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:21:34.131 -04:00 [ERR] Request validation failed
2020-08-29 00:21:34.132 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"VWtlNFZqdEMuNGZTRjlSQlRMU2VLdm5VZTBYTW5Bb3pGbDNCaGpPZElkMGZ4","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"eR0rS0zO8ov9mbqfiSt0cRvSq24ha4fTFo85dZLecvg","code_challenge_method":"S256","nonce":"VWtlNFZqdEMuNGZTRjlSQlRMU2VLdm5VZTBYTW5Bb3pGbDNCaGpPZElkMGZ4","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:21:34.132 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000006f-0001-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:21:34.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 00:21:53.938 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-29 00:21:53.938 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-29 00:21:53.938 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-29 00:21:53.939 -04:00 [DBG] Processing signout request for anonymous
2020-08-29 00:21:53.939 -04:00 [DBG] Start end session request validation
2020-08-29 00:21:53.939 -04:00 [INF] End session request validation success
{"ClientId":null,"ClientName":null,"SubjectId":"unknown","PostLogOutUri":null,"State":null,"Raw":{},"$type":"EndSessionRequestValidationLog"}
2020-08-29 00:21:53.939 -04:00 [DBG] Success validating end session request from null
2020-08-29 00:22:01.652 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:22:01.654 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:22:01.654 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:22:01.654 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:22:01.654 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:22:01.654 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:22:01.654 -04:00 [DBG] Start discovery request
2020-08-29 00:22:01.662 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:22:01.689 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:22:01.690 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:22:01.691 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:22:01.691 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:22:01.691 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:22:01.691 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:22:01.691 -04:00 [DBG] Start key discovery request
2020-08-29 00:22:02.711 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 00:22:02.711 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 00:22:02.711 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 00:22:02.711 -04:00 [DBG] Start authorize request
2020-08-29 00:22:02.711 -04:00 [DBG] No user present in authorize request
2020-08-29 00:22:02.711 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:22:02.728 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:22:02.728 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:22:02.728 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"VWZLWFhmTEtLU1cyaFFXRnRadHQ2cmEwMzRHWF9LWFdjY05LYi1BczhEN3lm","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"40y4GigVE7CK2jiFNqFqeBlm5Ucadhs3rIVKNWkqhBw","code_challenge_method":"S256","nonce":"VWZLWFhmTEtLU1cyaFFXRnRadHQ2cmEwMzRHWF9LWFdjY05LYi1BczhEN3lm","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:22:02.728 -04:00 [ERR] Request validation failed
2020-08-29 00:22:02.728 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"VWZLWFhmTEtLU1cyaFFXRnRadHQ2cmEwMzRHWF9LWFdjY05LYi1BczhEN3lm","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"40y4GigVE7CK2jiFNqFqeBlm5Ucadhs3rIVKNWkqhBw","code_challenge_method":"S256","nonce":"VWZLWFhmTEtLU1cyaFFXRnRadHQ2cmEwMzRHWF9LWFdjY05LYi1BczhEN3lm","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:22:02.728 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000d5-0002-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:22:02.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 00:22:11.162 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 00:22:11.162 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 00:22:11.162 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 00:22:11.162 -04:00 [DBG] Start authorize request
2020-08-29 00:22:11.162 -04:00 [DBG] No user present in authorize request
2020-08-29 00:22:11.162 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:22:11.170 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:22:11.170 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:22:11.170 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 00:22:11.172 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:22:11.180 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:22:11.181 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:22:11.182 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:22:11.182 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 00:22:11.182 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"TVM3TVFHbDFsU2ZOVm1IRmJvUFc2VDVhT2JjTnZqRVZwV3dMOWV6Z0dvQ2Ztsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"TVM3TVFHbDFsU2ZOVm1IRmJvUFc2VDVhT2JjTnZqRVZwV3dMOWV6Z0dvQ2Zt","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"TVM3TVFHbDFsU2ZOVm1IRmJvUFc2VDVhT2JjTnZqRVZwV3dMOWV6Z0dvQ2Ztsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"MWb9SDUlrjux0eO-eMp0MoCxpsprNoGvvOrJuPv3OBc","code_challenge_method":"S256","nonce":"TVM3TVFHbDFsU2ZOVm1IRmJvUFc2VDVhT2JjTnZqRVZwV3dMOWV6Z0dvQ2Zt"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:22:11.182 -04:00 [INF] Showing login: User is not authenticated
2020-08-29 00:22:11.186 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:22:11.196 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:22:11.196 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:22:11.196 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 00:22:11.197 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:22:11.198 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:22:11.199 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:22:11.200 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:22:11.200 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 00:22:11.206 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:22:11.206 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:22:13.245 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-29 00:22:13.991 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-29 00:22:13.993 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-08-29 00:22:14.006 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000071-0001-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:22:14.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-29 00:22:14.007 -04:00 [DBG] Augmenting SignInContext
2020-08-29 00:22:14.007 -04:00 [DBG] Adding amr claim with value: external
2020-08-29 00:22:14.007 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 00:22:14.007 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-29 00:22:14.012 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-29 00:22:14.012 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-29 00:22:14.012 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-29 00:22:14.012 -04:00 [DBG] Start authorize callback request
2020-08-29 00:22:14.013 -04:00 [DBG] User in authorize request: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-29 00:22:14.013 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:22:14.021 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:22:14.021 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:22:14.021 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 00:22:14.022 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:22:14.023 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:22:14.025 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:22:14.026 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:22:14.026 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 00:22:14.026 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"TVM3TVFHbDFsU2ZOVm1IRmJvUFc2VDVhT2JjTnZqRVZwV3dMOWV6Z0dvQ2Ztsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"TVM3TVFHbDFsU2ZOVm1IRmJvUFc2VDVhT2JjTnZqRVZwV3dMOWV6Z0dvQ2Zt","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"jQi7b6NCxBmgIr9SHCJIVg","Raw":{"response_type":"code","client_id":"angular_spa","state":"TVM3TVFHbDFsU2ZOVm1IRmJvUFc2VDVhT2JjTnZqRVZwV3dMOWV6Z0dvQ2Ztsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"MWb9SDUlrjux0eO-eMp0MoCxpsprNoGvvOrJuPv3OBc","code_challenge_method":"S256","nonce":"TVM3TVFHbDFsU2ZOVm1IRmJvUFc2VDVhT2JjTnZqRVZwV3dMOWV6Z0dvQ2Zt"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:22:14.028 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-29 00:22:14.028 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-29 00:22:14.029 -04:00 [DBG] UaA5XbS02x7YuSUmhcXoelgPzEWD8h2JeQE7opZRCdM= not found in database
2020-08-29 00:22:14.031 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****Jp78","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000067-0005-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:22:14.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 00:22:14.031 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"TVM3TVFHbDFsU2ZOVm1IRmJvUFc2VDVhT2JjTnZqRVZwV3dMOWV6Z0dvQ2Ztsemicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-29 00:22:14.031 -04:00 [DBG] Augmenting SignInContext
2020-08-29 00:22:14.031 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 00:22:14.872 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:22:14.874 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:22:14.874 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:22:14.874 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:22:14.874 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:22:14.874 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:22:14.874 -04:00 [DBG] Start discovery request
2020-08-29 00:22:14.876 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:22:14.951 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:22:14.953 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:22:14.953 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:22:14.953 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:22:14.953 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:22:14.953 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:22:14.953 -04:00 [DBG] Start key discovery request
2020-08-29 00:22:15.976 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-29 00:22:15.977 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:22:15.978 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:22:15.978 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-29 00:22:15.978 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-29 00:22:15.978 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-29 00:22:15.978 -04:00 [DBG] Start token request.
2020-08-29 00:22:15.978 -04:00 [DBG] Start client validation
2020-08-29 00:22:15.978 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-29 00:22:15.978 -04:00 [DBG] Start parsing for secret in post body
2020-08-29 00:22:15.978 -04:00 [DBG] client id without secret found
2020-08-29 00:22:15.978 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-29 00:22:15.978 -04:00 [DBG] Secret id found: angular_spa
2020-08-29 00:22:15.988 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:22:15.989 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:22:15.989 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-29 00:22:15.989 -04:00 [DBG] Client validation success
2020-08-29 00:22:15.989 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"800000a1-0000-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:22:15.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-29 00:22:15.989 -04:00 [DBG] Start token request validation
2020-08-29 00:22:15.989 -04:00 [DBG] Start validation of authorization code token request
2020-08-29 00:22:15.990 -04:00 [DBG] UaA5XbS02x7YuSUmhcXoelgPzEWD8h2JeQE7opZRCdM= found in database: true
2020-08-29 00:22:15.991 -04:00 [DBG] removing UaA5XbS02x7YuSUmhcXoelgPzEWD8h2JeQE7opZRCdM= persisted grant from database
2020-08-29 00:22:15.993 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-29 00:22:15.994 -04:00 [DBG] Validation of authorization code token request success
2020-08-29 00:22:15.995 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"S1zBKXv-BwJKeiUyll4JTMnQGNyB-TOhKxdsIFTJp78","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"S1zBKXv-BwJKeiUyll4JTMnQGNyB-TOhKxdsIFTJp78","redirect_uri":"https://localhost:4200","code_verifier":"TFpscFB0OXRMeC1OY2ZkQzR6RzQtNEJkcTUuM3BqRGxnRUVMcFlUQ341Zk1D","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-29 00:22:16.001 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:22:16.001 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:22:16.002 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:22:16.003 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:22:16.003 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-29 00:22:16.003 -04:00 [DBG] Getting claims for access token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-29 00:22:16.012 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:22:16.012 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:22:16.013 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:22:16.014 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:22:16.014 -04:00 [DBG] Getting claims for identity token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188 and client: angular_spa
2020-08-29 00:22:16.014 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-29 00:22:16.015 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****6Rfg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****iseg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000a1-0000-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:22:16.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 00:22:16.015 -04:00 [DBG] Token request success.
2020-08-29 00:22:16.023 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 00:22:16.024 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 00:22:16.024 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 00:22:16.024 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 00:22:16.024 -04:00 [DBG] Rendering check session result
2020-08-29 00:22:16.025 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:22:16.025 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:22:16.027 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 00:22:16.028 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:22:16.028 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:22:16.029 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-29 00:22:16.029 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-29 00:22:16.029 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-29 00:22:16.029 -04:00 [DBG] Start userinfo request
2020-08-29 00:22:16.029 -04:00 [DBG] Bearer token found in header
2020-08-29 00:22:16.037 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:22:16.037 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:22:16.043 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:22:16.043 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:22:16.045 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 00:22:16.045 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598674936,"exp":1598678536,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1598674934,"idp":"azuread","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"external"},"$type":"TokenValidationLog"}
2020-08-29 00:22:16.045 -04:00 [DBG] Creating userinfo response
2020-08-29 00:22:16.045 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 00:22:16.045 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 00:22:16.047 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:22:16.047 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-29 00:22:16.047 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 00:22:16.048 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:22:16.051 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-29 00:22:16.051 -04:00 [DBG] End userinfo request
2020-08-29 00:22:16.928 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-29 00:22:16.928 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-29 00:22:16.928 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-29 00:22:16.928 -04:00 [DBG] Processing signout request for 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-29 00:22:16.928 -04:00 [DBG] Start end session request validation
2020-08-29 00:22:16.928 -04:00 [DBG] Start identity token validation
2020-08-29 00:22:16.936 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:22:16.936 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:22:16.936 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-29 00:22:16.938 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 00:22:16.938 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598674936,"exp":1598675236,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"TVM3TVFHbDFsU2ZOVm1IRmJvUFc2VDVhT2JjTnZqRVZwV3dMOWV6Z0dvQ2Zt","iat":1598674936,"at_hash":"ZzG-YtyvZnygNYsT2XGopw","s_hash":"_5F55ZZEXg2Qb_h-Q-i7Lg","sid":"jQi7b6NCxBmgIr9SHCJIVg","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1598674934,"idp":"azuread","amr":"external"},"$type":"TokenValidationLog"}
2020-08-29 00:22:16.938 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-08-29 00:22:16.938 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-29 00:22:16.942 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-29 00:22:16.942 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-29 00:22:16.942 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-29 00:22:16.942 -04:00 [INF] {"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000122-000a-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:22:16.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-29 00:22:37.823 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 00:22:37.823 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 00:22:37.823 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 00:22:37.823 -04:00 [DBG] Start authorize request
2020-08-29 00:22:37.823 -04:00 [DBG] No user present in authorize request
2020-08-29 00:22:37.824 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:22:37.839 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:22:37.839 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:22:37.839 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"RG10OVQxNXRKR1VlcEE1YW5BQWRSalAwcjlKLkN-YnZobUwycWVES2N2M09F","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"Cj1_LjC1-9g_GzzLU-c2l-c8sgSZ_nX5yC2NWDH0E68","code_challenge_method":"S256","nonce":"RG10OVQxNXRKR1VlcEE1YW5BQWRSalAwcjlKLkN-YnZobUwycWVES2N2M09F","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:22:37.839 -04:00 [ERR] Request validation failed
2020-08-29 00:22:37.839 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"RG10OVQxNXRKR1VlcEE1YW5BQWRSalAwcjlKLkN-YnZobUwycWVES2N2M09F","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"Cj1_LjC1-9g_GzzLU-c2l-c8sgSZ_nX5yC2NWDH0E68","code_challenge_method":"S256","nonce":"RG10OVQxNXRKR1VlcEE1YW5BQWRSalAwcjlKLkN-YnZobUwycWVES2N2M09F","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:22:37.839 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000e9-0004-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:22:37.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 00:22:44.125 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 00:22:44.125 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 00:22:44.125 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 00:22:44.125 -04:00 [DBG] Start authorize request
2020-08-29 00:22:44.126 -04:00 [DBG] No user present in authorize request
2020-08-29 00:22:44.126 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:22:44.143 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:22:44.143 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:22:44.143 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 00:22:44.147 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:22:44.156 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:22:44.157 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:22:44.158 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:22:44.158 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 00:22:44.159 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"WWFmMmwxSnhNVVBfUzZhd0VnSURHNHlWb3FGMW9tX29aRVoydVFsamdzN1A0semicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"WWFmMmwxSnhNVVBfUzZhd0VnSURHNHlWb3FGMW9tX29aRVoydVFsamdzN1A0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"WWFmMmwxSnhNVVBfUzZhd0VnSURHNHlWb3FGMW9tX29aRVoydVFsamdzN1A0semicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"NIM3WAIJtcmhW8OPTK0QxaRhVJmhEwVjoodebTrYi9E","code_challenge_method":"S256","nonce":"WWFmMmwxSnhNVVBfUzZhd0VnSURHNHlWb3FGMW9tX29aRVoydVFsamdzN1A0"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:22:44.159 -04:00 [INF] Showing login: User is not authenticated
2020-08-29 00:22:44.163 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:22:44.171 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:22:44.171 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:22:44.171 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 00:22:44.173 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:22:44.174 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:22:44.178 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:22:44.179 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:22:44.179 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 00:22:44.185 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:22:44.185 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:22:45.938 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-29 00:22:45.939 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:22:45.948 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:22:45.948 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:22:45.948 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 00:22:45.949 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:22:45.950 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:22:45.951 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:22:45.952 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:22:45.952 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 00:22:45.961 -04:00 [DBG] Augmenting SignInContext
2020-08-29 00:22:45.962 -04:00 [DBG] Adding idp claim with value: local
2020-08-29 00:22:45.962 -04:00 [DBG] Adding auth_time claim with value: 1598674965
2020-08-29 00:22:45.962 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 00:22:45.962 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"8000006d-0005-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:22:45.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-29 00:22:45.969 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:22:45.969 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:22:45.973 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-29 00:22:45.974 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-29 00:22:45.974 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-29 00:22:45.974 -04:00 [DBG] Start authorize callback request
2020-08-29 00:22:45.974 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 00:22:45.974 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:22:45.981 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:22:45.981 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:22:45.982 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 00:22:45.983 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:22:45.984 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:22:45.985 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:22:45.987 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:22:45.987 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 00:22:45.987 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"WWFmMmwxSnhNVVBfUzZhd0VnSURHNHlWb3FGMW9tX29aRVoydVFsamdzN1A0semicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"WWFmMmwxSnhNVVBfUzZhd0VnSURHNHlWb3FGMW9tX29aRVoydVFsamdzN1A0","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"qwCKA4CTE2GUrh0sbZiXDg","Raw":{"response_type":"code","client_id":"angular_spa","state":"WWFmMmwxSnhNVVBfUzZhd0VnSURHNHlWb3FGMW9tX29aRVoydVFsamdzN1A0semicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"NIM3WAIJtcmhW8OPTK0QxaRhVJmhEwVjoodebTrYi9E","code_challenge_method":"S256","nonce":"WWFmMmwxSnhNVVBfUzZhd0VnSURHNHlWb3FGMW9tX29aRVoydVFsamdzN1A0"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:22:45.988 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-29 00:22:45.989 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-29 00:22:45.990 -04:00 [DBG] ytQ68yMQlBOhmMyB+vqApuhd6z0Axq52DChhx8mZCyE= not found in database
2020-08-29 00:22:45.991 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****PHXo","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000127-0006-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:22:45.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 00:22:45.991 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"WWFmMmwxSnhNVVBfUzZhd0VnSURHNHlWb3FGMW9tX29aRVoydVFsamdzN1A0semicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-29 00:22:45.991 -04:00 [DBG] Augmenting SignInContext
2020-08-29 00:22:45.992 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 00:22:46.836 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:22:46.838 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:22:46.838 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:22:46.838 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:22:46.838 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:22:46.839 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:22:46.839 -04:00 [DBG] Start discovery request
2020-08-29 00:22:46.847 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:22:46.880 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:22:46.882 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:22:46.882 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:22:46.882 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:22:46.882 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:22:46.882 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:22:46.882 -04:00 [DBG] Start key discovery request
2020-08-29 00:22:47.940 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-29 00:22:47.941 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:22:47.941 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:22:47.942 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-29 00:22:47.942 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-29 00:22:47.942 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-29 00:22:47.942 -04:00 [DBG] Start token request.
2020-08-29 00:22:47.942 -04:00 [DBG] Start client validation
2020-08-29 00:22:47.942 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-29 00:22:47.942 -04:00 [DBG] Start parsing for secret in post body
2020-08-29 00:22:47.942 -04:00 [DBG] client id without secret found
2020-08-29 00:22:47.942 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-29 00:22:47.942 -04:00 [DBG] Secret id found: angular_spa
2020-08-29 00:22:47.950 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:22:47.951 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:22:47.951 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-29 00:22:47.951 -04:00 [DBG] Client validation success
2020-08-29 00:22:47.951 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"800000ed-0004-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:22:47.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-29 00:22:47.951 -04:00 [DBG] Start token request validation
2020-08-29 00:22:47.951 -04:00 [DBG] Start validation of authorization code token request
2020-08-29 00:22:47.952 -04:00 [DBG] ytQ68yMQlBOhmMyB+vqApuhd6z0Axq52DChhx8mZCyE= found in database: true
2020-08-29 00:22:47.953 -04:00 [DBG] removing ytQ68yMQlBOhmMyB+vqApuhd6z0Axq52DChhx8mZCyE= persisted grant from database
2020-08-29 00:22:47.955 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-29 00:22:47.956 -04:00 [DBG] Validation of authorization code token request success
2020-08-29 00:22:47.956 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"lgZ57nLXCX1iPssTtVRX642N5tO8TliI8Pj4WraPHXo","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"lgZ57nLXCX1iPssTtVRX642N5tO8TliI8Pj4WraPHXo","redirect_uri":"https://localhost:4200","code_verifier":"fk5tOHhhWnhSYWp4VDJtM1RKZnpFMDRxdlNJTGNoTms1dV9qWkx0THF2ajdk","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-29 00:22:47.963 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:22:47.963 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:22:47.964 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:22:47.965 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:22:47.965 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-29 00:22:47.965 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 00:22:47.975 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:22:47.975 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:22:47.976 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:22:47.977 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:22:47.977 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-29 00:22:47.977 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-29 00:22:47.978 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****jeiQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****R-6g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000ed-0004-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:22:47.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 00:22:47.978 -04:00 [DBG] Token request success.
2020-08-29 00:22:47.988 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 00:22:47.988 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 00:22:47.988 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 00:22:47.988 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 00:22:47.988 -04:00 [DBG] Rendering check session result
2020-08-29 00:22:47.989 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:22:47.989 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:22:47.991 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 00:22:47.992 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:22:47.992 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:22:47.992 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-29 00:22:47.992 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-29 00:22:47.992 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-29 00:22:47.993 -04:00 [DBG] Start userinfo request
2020-08-29 00:22:47.993 -04:00 [DBG] Bearer token found in header
2020-08-29 00:22:48.000 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:22:48.000 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:22:48.007 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:22:48.007 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:22:48.008 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 00:22:48.008 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598674967,"exp":1598678567,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598674965,"idp":"local","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-29 00:22:48.008 -04:00 [DBG] Creating userinfo response
2020-08-29 00:22:48.008 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 00:22:48.008 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 00:22:48.010 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:22:48.010 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-29 00:22:48.010 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 00:22:48.011 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:22:48.014 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-29 00:22:48.014 -04:00 [DBG] End userinfo request
2020-08-29 00:22:49.727 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-29 00:22:49.727 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-29 00:22:49.727 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-29 00:22:49.727 -04:00 [DBG] Processing signout request for 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 00:22:49.727 -04:00 [DBG] Start end session request validation
2020-08-29 00:22:49.727 -04:00 [DBG] Start identity token validation
2020-08-29 00:22:49.735 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:22:49.735 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:22:49.735 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-29 00:22:49.737 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 00:22:49.737 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598674967,"exp":1598675267,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"WWFmMmwxSnhNVVBfUzZhd0VnSURHNHlWb3FGMW9tX29aRVoydVFsamdzN1A0","iat":1598674967,"at_hash":"9oZ10UenDegiicoMl5RgWA","s_hash":"TDtvA7XJ4aTIQmQlDtOSuA","sid":"qwCKA4CTE2GUrh0sbZiXDg","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598674965,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-29 00:22:49.737 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-08-29 00:22:49.737 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-29 00:22:49.741 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-29 00:22:49.741 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-29 00:22:49.741 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-29 00:22:49.741 -04:00 [INF] {"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000004-0000-f900-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:22:49.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-29 00:22:49.768 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-08-29 00:22:49.768 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-08-29 00:22:49.768 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-08-29 00:22:49.768 -04:00 [DBG] Processing signout callback request
2020-08-29 00:22:49.777 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:22:49.777 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:22:49.777 -04:00 [DBG] No client front-channel logout URLs
2020-08-29 00:22:49.777 -04:00 [DBG] No client back-channel logout URLs
2020-08-29 00:22:49.777 -04:00 [INF] Successful signout callback.
2020-08-29 00:22:49.777 -04:00 [DBG] No client front-channel iframe urls
2020-08-29 00:22:49.777 -04:00 [DBG] No client back-channel iframe urls
2020-08-29 00:22:57.908 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:22:57.910 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:22:57.910 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:22:57.910 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:22:57.910 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:22:57.910 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:22:57.910 -04:00 [DBG] Start discovery request
2020-08-29 00:22:57.913 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:22:57.947 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:22:57.948 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:22:57.948 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:22:57.949 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:22:57.949 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:22:57.949 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:22:57.949 -04:00 [DBG] Start key discovery request
2020-08-29 00:22:58.975 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 00:22:58.975 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 00:22:58.975 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 00:22:58.975 -04:00 [DBG] Start authorize request
2020-08-29 00:22:58.975 -04:00 [DBG] No user present in authorize request
2020-08-29 00:22:58.975 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:22:58.983 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:22:58.983 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:22:58.983 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"bHJIa2tOVVNzVkhsemNGNFRWQk5CQ2RyN21LOXZ5cUhBcEthSlp4aEk0a05O","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"cB6lAh_ZDuQFNnz4Uv0yjkKwQ1w2pjze4l4SAapNQGk","code_challenge_method":"S256","nonce":"bHJIa2tOVVNzVkhsemNGNFRWQk5CQ2RyN21LOXZ5cUhBcEthSlp4aEk0a05O","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:22:58.983 -04:00 [ERR] Request validation failed
2020-08-29 00:22:58.983 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"bHJIa2tOVVNzVkhsemNGNFRWQk5CQ2RyN21LOXZ5cUhBcEthSlp4aEk0a05O","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"cB6lAh_ZDuQFNnz4Uv0yjkKwQ1w2pjze4l4SAapNQGk","code_challenge_method":"S256","nonce":"bHJIa2tOVVNzVkhsemNGNFRWQk5CQ2RyN21LOXZ5cUhBcEthSlp4aEk0a05O","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:22:58.983 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000d9-0002-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:22:58.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 00:23:12.670 -04:00 [INF] Removing 0 grants
2020-08-29 00:23:12.672 -04:00 [INF] Removing 0 device flow codes
2020-08-29 00:23:22.991 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 00:23:22.991 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 00:23:22.991 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 00:23:22.991 -04:00 [DBG] Start authorize request
2020-08-29 00:23:22.991 -04:00 [DBG] No user present in authorize request
2020-08-29 00:23:22.991 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:23:23.005 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:23:23.005 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:23:23.005 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 00:23:23.006 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:23:23.007 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:23:23.008 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:23:23.009 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:23:23.009 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 00:23:23.009 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"VDVjN0V3SFZuUEVhbmxoSVpuckdvUHBRSFB1bHc1eVoxZnFieH5RS0xmNW1Rsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"VDVjN0V3SFZuUEVhbmxoSVpuckdvUHBRSFB1bHc1eVoxZnFieH5RS0xmNW1R","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"VDVjN0V3SFZuUEVhbmxoSVpuckdvUHBRSFB1bHc1eVoxZnFieH5RS0xmNW1Rsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"9dfN6eiccl8XGgXJU0TgaZKyuqxvN1QSuVGvvwvHIxs","code_challenge_method":"S256","nonce":"VDVjN0V3SFZuUEVhbmxoSVpuckdvUHBRSFB1bHc1eVoxZnFieH5RS0xmNW1R"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:23:23.009 -04:00 [INF] Showing login: User is not authenticated
2020-08-29 00:23:23.012 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:23:23.020 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:23:23.020 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:23:23.020 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 00:23:23.022 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:23:23.023 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:23:23.024 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:23:23.025 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:23:23.025 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 00:23:23.031 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:23:23.031 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:23:24.517 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-29 00:23:25.478 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-29 00:23:25.479 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-08-29 00:23:25.491 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000b5-0007-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:23:25.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-29 00:23:25.491 -04:00 [DBG] Augmenting SignInContext
2020-08-29 00:23:25.491 -04:00 [DBG] Adding amr claim with value: external
2020-08-29 00:23:25.492 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 00:23:25.492 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-29 00:23:25.497 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-29 00:23:25.497 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-29 00:23:25.497 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-29 00:23:25.497 -04:00 [DBG] Start authorize callback request
2020-08-29 00:23:25.497 -04:00 [DBG] User in authorize request: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-29 00:23:25.497 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:23:25.506 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:23:25.506 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:23:25.506 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 00:23:25.507 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:23:25.509 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:23:25.510 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:23:25.511 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:23:25.511 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 00:23:25.511 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"VDVjN0V3SFZuUEVhbmxoSVpuckdvUHBRSFB1bHc1eVoxZnFieH5RS0xmNW1Rsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"VDVjN0V3SFZuUEVhbmxoSVpuckdvUHBRSFB1bHc1eVoxZnFieH5RS0xmNW1R","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"kZIkKkFsdWn_wRYuMnqe3w","Raw":{"response_type":"code","client_id":"angular_spa","state":"VDVjN0V3SFZuUEVhbmxoSVpuckdvUHBRSFB1bHc1eVoxZnFieH5RS0xmNW1Rsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"9dfN6eiccl8XGgXJU0TgaZKyuqxvN1QSuVGvvwvHIxs","code_challenge_method":"S256","nonce":"VDVjN0V3SFZuUEVhbmxoSVpuckdvUHBRSFB1bHc1eVoxZnFieH5RS0xmNW1R"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:23:25.512 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-29 00:23:25.513 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-29 00:23:25.514 -04:00 [DBG] Ay7mRfOQ+P18U+miVTfGbBuNlO2em40iKnUgfsPtfsg= not found in database
2020-08-29 00:23:25.515 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****DSVU","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000b7-0007-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:23:25.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 00:23:25.515 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"VDVjN0V3SFZuUEVhbmxoSVpuckdvUHBRSFB1bHc1eVoxZnFieH5RS0xmNW1Rsemicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-29 00:23:25.516 -04:00 [DBG] Augmenting SignInContext
2020-08-29 00:23:25.516 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 00:23:26.363 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:23:26.364 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:23:26.364 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:23:26.364 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:23:26.365 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:23:26.365 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:23:26.365 -04:00 [DBG] Start discovery request
2020-08-29 00:23:26.367 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:23:26.444 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:23:26.445 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:23:26.445 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:23:26.445 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:23:26.445 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:23:26.445 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:23:26.446 -04:00 [DBG] Start key discovery request
2020-08-29 00:23:27.504 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-29 00:23:27.506 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:23:27.506 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:23:27.506 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-29 00:23:27.506 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-29 00:23:27.506 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-29 00:23:27.506 -04:00 [DBG] Start token request.
2020-08-29 00:23:27.506 -04:00 [DBG] Start client validation
2020-08-29 00:23:27.506 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-29 00:23:27.507 -04:00 [DBG] Start parsing for secret in post body
2020-08-29 00:23:27.507 -04:00 [DBG] client id without secret found
2020-08-29 00:23:27.507 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-29 00:23:27.507 -04:00 [DBG] Secret id found: angular_spa
2020-08-29 00:23:27.516 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:23:27.516 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:23:27.516 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-29 00:23:27.516 -04:00 [DBG] Client validation success
2020-08-29 00:23:27.516 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000071-0005-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:23:27.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-29 00:23:27.516 -04:00 [DBG] Start token request validation
2020-08-29 00:23:27.516 -04:00 [DBG] Start validation of authorization code token request
2020-08-29 00:23:27.517 -04:00 [DBG] Ay7mRfOQ+P18U+miVTfGbBuNlO2em40iKnUgfsPtfsg= found in database: true
2020-08-29 00:23:27.518 -04:00 [DBG] removing Ay7mRfOQ+P18U+miVTfGbBuNlO2em40iKnUgfsPtfsg= persisted grant from database
2020-08-29 00:23:27.520 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-29 00:23:27.521 -04:00 [DBG] Validation of authorization code token request success
2020-08-29 00:23:27.521 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"bG7-qh6370_bFQObvBqZQafxn9PzGiJrO_engVQDSVU","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"bG7-qh6370_bFQObvBqZQafxn9PzGiJrO_engVQDSVU","redirect_uri":"https://localhost:4200","code_verifier":"YkxwZ2dKSHI5eFBqMFlMYU9ya1VmZmZvRFlWYkN0b3JaaC56NXRWZHk4X1At","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-29 00:23:27.527 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:23:27.528 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:23:27.529 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:23:27.530 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:23:27.530 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-29 00:23:27.530 -04:00 [DBG] Getting claims for access token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-29 00:23:27.539 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:23:27.539 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:23:27.540 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:23:27.541 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:23:27.541 -04:00 [DBG] Getting claims for identity token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188 and client: angular_spa
2020-08-29 00:23:27.541 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-29 00:23:27.542 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****Crtw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****erdg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000071-0005-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:23:27.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 00:23:27.542 -04:00 [DBG] Token request success.
2020-08-29 00:23:27.551 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 00:23:27.551 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 00:23:27.551 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 00:23:27.551 -04:00 [DBG] Rendering check session result
2020-08-29 00:23:27.551 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 00:23:27.553 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:23:27.553 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:23:27.555 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 00:23:27.556 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:23:27.556 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:23:27.556 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-29 00:23:27.556 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-29 00:23:27.556 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-29 00:23:27.556 -04:00 [DBG] Start userinfo request
2020-08-29 00:23:27.556 -04:00 [DBG] Bearer token found in header
2020-08-29 00:23:27.564 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:23:27.564 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:23:27.570 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:23:27.570 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:23:27.572 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 00:23:27.572 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598675007,"exp":1598678607,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1598675005,"idp":"azuread","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"external"},"$type":"TokenValidationLog"}
2020-08-29 00:23:27.572 -04:00 [DBG] Creating userinfo response
2020-08-29 00:23:27.572 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 00:23:27.572 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 00:23:27.573 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:23:27.573 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-29 00:23:27.573 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 00:23:27.575 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:23:27.577 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-29 00:23:27.577 -04:00 [DBG] End userinfo request
2020-08-29 00:23:29.328 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-29 00:23:29.328 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-29 00:23:29.328 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-29 00:23:29.328 -04:00 [DBG] Processing signout request for 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-29 00:23:29.328 -04:00 [DBG] Start end session request validation
2020-08-29 00:23:29.328 -04:00 [DBG] Start identity token validation
2020-08-29 00:23:29.337 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:23:29.338 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:23:29.338 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-29 00:23:29.339 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 00:23:29.339 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598675007,"exp":1598675307,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"VDVjN0V3SFZuUEVhbmxoSVpuckdvUHBRSFB1bHc1eVoxZnFieH5RS0xmNW1R","iat":1598675007,"at_hash":"K5AvtFRO3R-UfQD_X1JuVg","s_hash":"KWxiP9PnPWgXwo5Vfnh7gw","sid":"kZIkKkFsdWn_wRYuMnqe3w","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1598675005,"idp":"azuread","amr":"external"},"$type":"TokenValidationLog"}
2020-08-29 00:23:29.340 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-08-29 00:23:29.340 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-29 00:23:29.344 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-29 00:23:29.344 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-29 00:23:29.344 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-29 00:23:29.344 -04:00 [INF] {"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000187-0000-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:23:29.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-29 00:23:45.275 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 00:23:45.275 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 00:23:45.275 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 00:23:45.275 -04:00 [DBG] Start authorize request
2020-08-29 00:23:45.275 -04:00 [DBG] No user present in authorize request
2020-08-29 00:23:45.275 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:23:45.294 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:23:45.294 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:23:45.294 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"ZEM2UjVOWG9hbkxhemY3c2Etb2NaWFZsVFNIQVhLbGlDM3RkMEYwZkNidmdi","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"SAFOTsfRz1PIugWzD9jSqzmEpjsanGeZ8eH-hRReVu0","code_challenge_method":"S256","nonce":"ZEM2UjVOWG9hbkxhemY3c2Etb2NaWFZsVFNIQVhLbGlDM3RkMEYwZkNidmdi","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:23:45.294 -04:00 [ERR] Request validation failed
2020-08-29 00:23:45.294 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"ZEM2UjVOWG9hbkxhemY3c2Etb2NaWFZsVFNIQVhLbGlDM3RkMEYwZkNidmdi","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"SAFOTsfRz1PIugWzD9jSqzmEpjsanGeZ8eH-hRReVu0","code_challenge_method":"S256","nonce":"ZEM2UjVOWG9hbkxhemY3c2Etb2NaWFZsVFNIQVhLbGlDM3RkMEYwZkNidmdi","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:23:45.294 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000dd-0002-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:23:45.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 00:27:32.792 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:27:32.834 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:27:32.834 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:27:32.834 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:27:32.834 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:27:32.834 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:27:32.834 -04:00 [DBG] Start discovery request
2020-08-29 00:27:32.843 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:27:32.864 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:27:32.865 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:27:32.865 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:27:32.865 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:27:32.866 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:27:32.866 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:27:32.866 -04:00 [DBG] Start key discovery request
2020-08-29 00:27:32.880 -04:00 [DBG] CORS request made for path: /api/test from origin: https://localhost:4200 but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-29 00:27:33.928 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 00:27:33.928 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 00:27:33.928 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 00:27:33.928 -04:00 [DBG] Start authorize request
2020-08-29 00:27:33.928 -04:00 [DBG] No user present in authorize request
2020-08-29 00:27:33.928 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:27:33.947 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:27:33.947 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:27:33.947 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"cGtPYUp-UVF2UHZkLjVlZDdzZGpxeHhvaHBRTUFFZkZsc2hvVEtnSksyLXVl","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"mb6H9Iy6N6boTOfu51gVnTbLCQeWXSO1lkf6sXWl2KU","code_challenge_method":"S256","nonce":"cGtPYUp-UVF2UHZkLjVlZDdzZGpxeHhvaHBRTUFFZkZsc2hvVEtnSksyLXVl","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:27:33.947 -04:00 [ERR] Request validation failed
2020-08-29 00:27:33.947 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"cGtPYUp-UVF2UHZkLjVlZDdzZGpxeHhvaHBRTUFFZkZsc2hvVEtnSksyLXVl","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"mb6H9Iy6N6boTOfu51gVnTbLCQeWXSO1lkf6sXWl2KU","code_challenge_method":"S256","nonce":"cGtPYUp-UVF2UHZkLjVlZDdzZGpxeHhvaHBRTUFFZkZsc2hvVEtnSksyLXVl","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:27:33.947 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000012a-000a-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:27:33.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 00:27:40.471 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 00:27:40.471 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 00:27:40.472 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 00:27:40.472 -04:00 [DBG] Start authorize request
2020-08-29 00:27:40.472 -04:00 [DBG] No user present in authorize request
2020-08-29 00:27:40.472 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:27:40.479 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:27:40.479 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:27:40.479 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 00:27:40.482 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:27:40.490 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:27:40.491 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:27:40.492 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:27:40.492 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 00:27:40.493 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"dk5YSGhPa3BmS2IxcEdzcVZibjBfRXluLW80RFQ1MVBNbHVNa0ZBN0tsLlhXsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"dk5YSGhPa3BmS2IxcEdzcVZibjBfRXluLW80RFQ1MVBNbHVNa0ZBN0tsLlhX","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"dk5YSGhPa3BmS2IxcEdzcVZibjBfRXluLW80RFQ1MVBNbHVNa0ZBN0tsLlhXsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"nArDx64f-HsqUZUBwz4bWTteMfMvsJVjg7qOPtcTQUc","code_challenge_method":"S256","nonce":"dk5YSGhPa3BmS2IxcEdzcVZibjBfRXluLW80RFQ1MVBNbHVNa0ZBN0tsLlhX"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:27:40.493 -04:00 [INF] Showing login: User is not authenticated
2020-08-29 00:27:40.496 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:27:40.503 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:27:40.503 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:27:40.504 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 00:27:40.505 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:27:40.506 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:27:40.507 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:27:40.507 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:27:40.508 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 00:27:40.514 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:27:40.514 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:27:42.607 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-29 00:27:42.608 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:27:42.616 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:27:42.616 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:27:42.617 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 00:27:42.618 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:27:42.619 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:27:42.620 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:27:42.621 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:27:42.621 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 00:27:42.631 -04:00 [DBG] Augmenting SignInContext
2020-08-29 00:27:42.631 -04:00 [DBG] Adding idp claim with value: local
2020-08-29 00:27:42.631 -04:00 [DBG] Adding auth_time claim with value: 1598675262
2020-08-29 00:27:42.631 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 00:27:42.632 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"8000012a-0008-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:27:42.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-29 00:27:42.641 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:27:42.641 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:27:42.645 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-29 00:27:42.645 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-29 00:27:42.645 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-29 00:27:42.645 -04:00 [DBG] Start authorize callback request
2020-08-29 00:27:42.645 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 00:27:42.645 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:27:42.652 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:27:42.652 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:27:42.652 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 00:27:42.653 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:27:42.654 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:27:42.655 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:27:42.656 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:27:42.656 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 00:27:42.656 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"dk5YSGhPa3BmS2IxcEdzcVZibjBfRXluLW80RFQ1MVBNbHVNa0ZBN0tsLlhXsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"dk5YSGhPa3BmS2IxcEdzcVZibjBfRXluLW80RFQ1MVBNbHVNa0ZBN0tsLlhX","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ZN9GYFPPbNiFg8-80axV2Q","Raw":{"response_type":"code","client_id":"angular_spa","state":"dk5YSGhPa3BmS2IxcEdzcVZibjBfRXluLW80RFQ1MVBNbHVNa0ZBN0tsLlhXsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"nArDx64f-HsqUZUBwz4bWTteMfMvsJVjg7qOPtcTQUc","code_challenge_method":"S256","nonce":"dk5YSGhPa3BmS2IxcEdzcVZibjBfRXluLW80RFQ1MVBNbHVNa0ZBN0tsLlhX"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:27:42.658 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-29 00:27:42.658 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-29 00:27:42.659 -04:00 [DBG] 041NLUNEUrTBcuu/Bov9exwm+X1PQz/gzqyhbRyieOY= not found in database
2020-08-29 00:27:42.661 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****rfuQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000012a-0002-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:27:42.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 00:27:42.661 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"dk5YSGhPa3BmS2IxcEdzcVZibjBfRXluLW80RFQ1MVBNbHVNa0ZBN0tsLlhXsemicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-29 00:27:42.661 -04:00 [DBG] Augmenting SignInContext
2020-08-29 00:27:42.661 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 00:27:42.750 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:27:42.752 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:27:42.752 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:27:42.752 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:27:42.752 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:27:42.752 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:27:42.752 -04:00 [DBG] Start discovery request
2020-08-29 00:27:42.755 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:27:42.777 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:27:42.779 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:27:42.779 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:27:42.779 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:27:42.779 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:27:42.779 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:27:42.779 -04:00 [DBG] Start key discovery request
2020-08-29 00:27:42.797 -04:00 [DBG] CORS request made for path: /api/test from origin: https://localhost:4200 but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-29 00:27:43.800 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-29 00:27:43.802 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:27:43.802 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:27:43.802 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-29 00:27:43.802 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-29 00:27:43.802 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-29 00:27:43.802 -04:00 [DBG] Start token request.
2020-08-29 00:27:43.803 -04:00 [DBG] Start client validation
2020-08-29 00:27:43.803 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-29 00:27:43.803 -04:00 [DBG] Start parsing for secret in post body
2020-08-29 00:27:43.803 -04:00 [DBG] client id without secret found
2020-08-29 00:27:43.803 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-29 00:27:43.803 -04:00 [DBG] Secret id found: angular_spa
2020-08-29 00:27:43.812 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:27:43.812 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:27:43.812 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-29 00:27:43.812 -04:00 [DBG] Client validation success
2020-08-29 00:27:43.812 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000134-0004-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:27:43.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-29 00:27:43.812 -04:00 [DBG] Start token request validation
2020-08-29 00:27:43.812 -04:00 [DBG] Start validation of authorization code token request
2020-08-29 00:27:43.814 -04:00 [DBG] 041NLUNEUrTBcuu/Bov9exwm+X1PQz/gzqyhbRyieOY= found in database: true
2020-08-29 00:27:43.816 -04:00 [DBG] removing 041NLUNEUrTBcuu/Bov9exwm+X1PQz/gzqyhbRyieOY= persisted grant from database
2020-08-29 00:27:43.817 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-29 00:27:43.818 -04:00 [DBG] Validation of authorization code token request success
2020-08-29 00:27:43.818 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"RWJIRuwBVTKq-dpGk_bQbVkhbZpREoLwUkTW0KirfuQ","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"RWJIRuwBVTKq-dpGk_bQbVkhbZpREoLwUkTW0KirfuQ","redirect_uri":"https://localhost:4200","code_verifier":"M3hvT2I3alJCOUM3ZVhORUpzRlV0Z1JNbHNXRlkwZDBsZGVzV0NQWEJYYnVC","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-29 00:27:43.825 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:27:43.825 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:27:43.826 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:27:43.827 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:27:43.827 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-29 00:27:43.827 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 00:27:43.837 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:27:43.837 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:27:43.838 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:27:43.839 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:27:43.839 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-29 00:27:43.839 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-29 00:27:43.840 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****WtEA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****PT5w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000134-0004-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:27:43.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 00:27:43.840 -04:00 [DBG] Token request success.
2020-08-29 00:27:43.846 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 00:27:43.847 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:27:43.848 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:27:43.848 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 00:27:43.848 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 00:27:43.848 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 00:27:43.848 -04:00 [DBG] Rendering check session result
2020-08-29 00:27:43.849 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 00:27:43.850 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:27:43.850 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:27:43.850 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-29 00:27:43.850 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-29 00:27:43.850 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-29 00:27:43.851 -04:00 [DBG] Start userinfo request
2020-08-29 00:27:43.851 -04:00 [DBG] Bearer token found in header
2020-08-29 00:27:43.859 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:27:43.859 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:27:43.865 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:27:43.866 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:27:43.867 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 00:27:43.867 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598675263,"exp":1598678863,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598675262,"idp":"local","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-29 00:27:43.867 -04:00 [DBG] Creating userinfo response
2020-08-29 00:27:43.867 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 00:27:43.867 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 00:27:43.868 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:27:43.868 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-29 00:27:43.868 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 00:27:43.870 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:27:43.873 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-29 00:27:43.873 -04:00 [DBG] End userinfo request
2020-08-29 00:28:03.862 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:28:03.864 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:28:03.864 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:28:03.865 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:28:03.865 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:28:03.865 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:28:03.865 -04:00 [DBG] Start discovery request
2020-08-29 00:28:03.877 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:28:03.914 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:28:03.917 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:28:03.917 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:28:03.917 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:28:03.917 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:28:03.917 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:28:03.917 -04:00 [DBG] Start key discovery request
2020-08-29 00:28:03.926 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 00:28:03.926 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 00:28:03.926 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 00:28:03.926 -04:00 [DBG] Rendering check session result
2020-08-29 00:28:03.949 -04:00 [DBG] CORS request made for path: /api/test from origin: https://localhost:4200 but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-29 00:29:01.059 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 00:29:01.059 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 00:29:01.059 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 00:29:01.060 -04:00 [DBG] Start authorize request
2020-08-29 00:29:01.060 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 00:29:01.060 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:29:01.076 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:29:01.076 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:29:01.076 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"c3F4RnZWeFg3bVBvZHJyNVNxRnh4SkhOfnBQbE05bk1HbkkxeEVoQWRyUWU5","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"7ENfyp0n99woXNr0_unhXvUFF1B3T_RX86cmEmrf_sg","code_challenge_method":"S256","nonce":"c3F4RnZWeFg3bVBvZHJyNVNxRnh4SkhOfnBQbE05bk1HbkkxeEVoQWRyUWU5","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:29:01.076 -04:00 [ERR] Request validation failed
2020-08-29 00:29:01.076 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"c3F4RnZWeFg3bVBvZHJyNVNxRnh4SkhOfnBQbE05bk1HbkkxeEVoQWRyUWU5","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"7ENfyp0n99woXNr0_unhXvUFF1B3T_RX86cmEmrf_sg","code_challenge_method":"S256","nonce":"c3F4RnZWeFg3bVBvZHJyNVNxRnh4SkhOfnBQbE05bk1HbkkxeEVoQWRyUWU5","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:29:01.076 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000012e-0002-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:29:01.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 00:29:35.582 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:29:35.584 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:29:35.584 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:29:35.584 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:29:35.584 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:29:35.584 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:29:35.584 -04:00 [DBG] Start discovery request
2020-08-29 00:29:35.591 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:29:35.662 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:29:35.662 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 00:29:35.663 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 00:29:35.663 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 00:29:35.663 -04:00 [DBG] Rendering check session result
2020-08-29 00:29:35.664 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:29:35.664 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:29:35.664 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:29:35.665 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:29:35.665 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:29:35.665 -04:00 [DBG] Start key discovery request
2020-08-29 00:29:35.689 -04:00 [DBG] CORS request made for path: /api/test from origin: https://localhost:4200 but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-29 00:29:36.673 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 00:29:36.674 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 00:29:36.674 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 00:29:36.674 -04:00 [DBG] Start authorize request
2020-08-29 00:29:36.674 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 00:29:36.674 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:29:36.689 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:29:36.689 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:29:36.689 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"TUtMeVdGZ1N2LkZtQXVBd0xUaGFXa2MydkFNSW95YnUxbklsOWozTmRmNU92","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"NNXX9_B1uiLh8YlXyya8OtOmGcd-bF0nekHc2oFOcM4","code_challenge_method":"S256","nonce":"TUtMeVdGZ1N2LkZtQXVBd0xUaGFXa2MydkFNSW95YnUxbklsOWozTmRmNU92","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:29:36.689 -04:00 [ERR] Request validation failed
2020-08-29 00:29:36.689 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"TUtMeVdGZ1N2LkZtQXVBd0xUaGFXa2MydkFNSW95YnUxbklsOWozTmRmNU92","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"NNXX9_B1uiLh8YlXyya8OtOmGcd-bF0nekHc2oFOcM4","code_challenge_method":"S256","nonce":"TUtMeVdGZ1N2LkZtQXVBd0xUaGFXa2MydkFNSW95YnUxbklsOWozTmRmNU92","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:29:36.689 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000012e-0008-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:29:36.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 00:32:01.517 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:32:01.520 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:32:01.520 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:32:01.520 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:32:01.520 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:32:01.520 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:32:01.520 -04:00 [DBG] Start discovery request
2020-08-29 00:32:01.528 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:32:01.559 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:32:01.561 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 00:32:01.561 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 00:32:01.561 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 00:32:01.561 -04:00 [DBG] Rendering check session result
2020-08-29 00:32:01.566 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:32:01.566 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:32:01.566 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:32:01.568 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:32:01.568 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:32:01.568 -04:00 [DBG] Start key discovery request
2020-08-29 00:32:01.593 -04:00 [DBG] CORS request made for path: /api/test from origin: https://localhost:4200 but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-29 00:32:02.573 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 00:32:02.573 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 00:32:02.573 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 00:32:02.573 -04:00 [DBG] Start authorize request
2020-08-29 00:32:02.573 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 00:32:02.573 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:32:02.588 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:32:02.588 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:32:02.588 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"Qkt6aEFhb3M4LU9pei13Ti5tZkNaSFd3NEFiMmdKY3dkbGpvS3UxNVBWNm56","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"9CPcVcWwAPUCfzvIRxNM52oIvxaz6YqIKSwBmTcTI1E","code_challenge_method":"S256","nonce":"Qkt6aEFhb3M4LU9pei13Ti5tZkNaSFd3NEFiMmdKY3dkbGpvS3UxNVBWNm56","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:32:02.588 -04:00 [ERR] Request validation failed
2020-08-29 00:32:02.588 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"Qkt6aEFhb3M4LU9pei13Ti5tZkNaSFd3NEFiMmdKY3dkbGpvS3UxNVBWNm56","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"9CPcVcWwAPUCfzvIRxNM52oIvxaz6YqIKSwBmTcTI1E","code_challenge_method":"S256","nonce":"Qkt6aEFhb3M4LU9pei13Ti5tZkNaSFd3NEFiMmdKY3dkbGpvS3UxNVBWNm56","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:32:02.588 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000138-0004-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:32:02.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 00:33:12.851 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:33:12.853 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:33:12.854 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:33:12.854 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:33:12.854 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:33:12.854 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:33:12.854 -04:00 [DBG] Start discovery request
2020-08-29 00:33:12.861 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:33:12.889 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:33:12.891 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:33:12.891 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:33:12.891 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:33:12.891 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:33:12.891 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:33:12.891 -04:00 [DBG] Start key discovery request
2020-08-29 00:33:15.260 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:33:15.266 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:33:15.267 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:33:15.267 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:33:15.267 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:33:15.267 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:33:15.267 -04:00 [DBG] Start discovery request
2020-08-29 00:33:15.275 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:33:15.296 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:33:15.298 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:33:15.298 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:33:15.298 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:33:15.298 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:33:15.299 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:33:15.299 -04:00 [DBG] Start key discovery request
2020-08-29 00:33:19.651 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:33:19.653 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:33:19.653 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:33:19.653 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:33:19.653 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:33:19.653 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:33:19.653 -04:00 [DBG] Start discovery request
2020-08-29 00:33:19.656 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:33:19.695 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:33:19.697 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:33:19.697 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:33:19.698 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:33:19.698 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:33:19.698 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:33:19.698 -04:00 [DBG] Start key discovery request
2020-08-29 00:33:38.595 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:33:38.597 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:33:38.598 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:33:38.598 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:33:38.598 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:33:38.598 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:33:38.598 -04:00 [DBG] Start discovery request
2020-08-29 00:33:38.607 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:33:38.638 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:33:38.639 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:33:38.639 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:33:38.639 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:33:38.640 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:33:38.640 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:33:38.640 -04:00 [DBG] Start key discovery request
2020-08-29 00:35:20.537 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:35:20.539 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:35:20.539 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:35:20.539 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:35:20.539 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:35:20.539 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:35:20.539 -04:00 [DBG] Start discovery request
2020-08-29 00:35:20.547 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:35:20.593 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:35:20.595 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:35:20.595 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:35:20.595 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:35:20.595 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:35:20.595 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:35:20.595 -04:00 [DBG] Start key discovery request
2020-08-29 00:35:20.608 -04:00 [DBG] CORS request made for path: /api/test from origin: https://localhost:4200 but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-29 00:35:21.531 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:35:21.532 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:35:21.532 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:35:21.532 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:35:21.533 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:35:21.533 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:35:21.533 -04:00 [DBG] Start discovery request
2020-08-29 00:35:21.538 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:35:21.568 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:35:21.570 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:35:21.570 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:35:21.570 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:35:21.570 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:35:21.570 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:35:21.570 -04:00 [DBG] Start key discovery request
2020-08-29 00:35:21.603 -04:00 [DBG] CORS request made for path: /api/test from origin: https://localhost:4200 but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-29 00:35:25.979 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:35:25.981 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:35:25.981 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:35:25.981 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:35:25.981 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:35:25.981 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:35:25.981 -04:00 [DBG] Start discovery request
2020-08-29 00:35:25.984 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:35:26.015 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:35:26.016 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:35:26.016 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:35:26.020 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:35:26.022 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:35:26.022 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:35:26.022 -04:00 [DBG] Start key discovery request
2020-08-29 00:36:05.990 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-29 00:36:05.990 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-29 00:36:05.990 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-29 00:36:05.990 -04:00 [DBG] Processing signout request for 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 00:36:05.990 -04:00 [DBG] Start end session request validation
2020-08-29 00:36:05.990 -04:00 [DBG] Start identity token validation
2020-08-29 00:36:06.009 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:36:06.009 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:36:06.009 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-29 00:36:06.011 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 00:36:06.011 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598675263,"exp":1598675563,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"dk5YSGhPa3BmS2IxcEdzcVZibjBfRXluLW80RFQ1MVBNbHVNa0ZBN0tsLlhX","iat":1598675263,"at_hash":"YUBclA51HKoGBhI09ubY3w","s_hash":"FM_wFj17KEWhe6WdisFcrA","sid":"ZN9GYFPPbNiFg8-80axV2Q","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598675262,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-29 00:36:06.011 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-08-29 00:36:06.011 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-29 00:36:06.015 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-29 00:36:06.015 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-29 00:36:06.015 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-29 00:36:06.015 -04:00 [INF] {"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"8000007b-0005-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:36:06.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-29 00:36:06.039 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-08-29 00:36:06.039 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-08-29 00:36:06.039 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-08-29 00:36:06.039 -04:00 [DBG] Processing signout callback request
2020-08-29 00:36:06.054 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:36:06.054 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:36:06.054 -04:00 [DBG] No client front-channel logout URLs
2020-08-29 00:36:06.054 -04:00 [DBG] No client back-channel logout URLs
2020-08-29 00:36:06.054 -04:00 [INF] Successful signout callback.
2020-08-29 00:36:06.054 -04:00 [DBG] No client front-channel iframe urls
2020-08-29 00:36:06.054 -04:00 [DBG] No client back-channel iframe urls
2020-08-29 00:36:09.074 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:36:09.076 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:36:09.076 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:36:09.076 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:36:09.076 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:36:09.076 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:36:09.076 -04:00 [DBG] Start discovery request
2020-08-29 00:36:09.084 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:36:09.114 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:36:09.116 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:36:09.116 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:36:09.116 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:36:09.116 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:36:09.116 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:36:09.116 -04:00 [DBG] Start key discovery request
2020-08-29 00:36:10.147 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 00:36:10.147 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 00:36:10.147 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 00:36:10.147 -04:00 [DBG] Start authorize request
2020-08-29 00:36:10.148 -04:00 [DBG] No user present in authorize request
2020-08-29 00:36:10.148 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:36:10.157 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:36:10.157 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:36:10.157 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"OUJHSm5nSG5pV1ZZLlZzSVg2NjJiR2l0a28yQUlVcGpHREkxTlQ2RE9oZ1oy","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"cay3cum43YqzFKPqsRY6BY-PH4dNDaHr-ZVc_YaZH-A","code_challenge_method":"S256","nonce":"OUJHSm5nSG5pV1ZZLlZzSVg2NjJiR2l0a28yQUlVcGpHREkxTlQ2RE9oZ1oy","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:36:10.157 -04:00 [ERR] Request validation failed
2020-08-29 00:36:10.157 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"OUJHSm5nSG5pV1ZZLlZzSVg2NjJiR2l0a28yQUlVcGpHREkxTlQ2RE9oZ1oy","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"cay3cum43YqzFKPqsRY6BY-PH4dNDaHr-ZVc_YaZH-A","code_challenge_method":"S256","nonce":"OUJHSm5nSG5pV1ZZLlZzSVg2NjJiR2l0a28yQUlVcGpHREkxTlQ2RE9oZ1oy","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:36:10.157 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000e8-0008-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:36:10.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 00:36:18.121 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 00:36:18.121 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 00:36:18.121 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 00:36:18.121 -04:00 [DBG] Start authorize request
2020-08-29 00:36:18.121 -04:00 [DBG] No user present in authorize request
2020-08-29 00:36:18.121 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:36:18.129 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:36:18.129 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:36:18.130 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 00:36:18.132 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:36:18.140 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:36:18.141 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:36:18.142 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:36:18.142 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 00:36:18.142 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"czNjb2FzZW9xRmFpZDk2NWxRSU5JT0xNeXpleExIZEk5QjBjSExsaTRVbHdIsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"czNjb2FzZW9xRmFpZDk2NWxRSU5JT0xNeXpleExIZEk5QjBjSExsaTRVbHdI","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"czNjb2FzZW9xRmFpZDk2NWxRSU5JT0xNeXpleExIZEk5QjBjSExsaTRVbHdIsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"heQtdFQqgyDiioC3blX_6sgqLhcU24pKbVmi3MdBNeM","code_challenge_method":"S256","nonce":"czNjb2FzZW9xRmFpZDk2NWxRSU5JT0xNeXpleExIZEk5QjBjSExsaTRVbHdI"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:36:18.142 -04:00 [INF] Showing login: User is not authenticated
2020-08-29 00:36:18.145 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:36:18.153 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:36:18.153 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:36:18.153 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 00:36:18.154 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:36:18.155 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:36:18.156 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:36:18.157 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:36:18.157 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 00:36:18.163 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:36:18.163 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:36:25.823 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-29 00:36:25.824 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:36:25.832 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:36:25.833 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:36:25.833 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 00:36:25.834 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:36:25.835 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:36:25.836 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:36:25.837 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:36:25.837 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 00:36:25.845 -04:00 [DBG] Augmenting SignInContext
2020-08-29 00:36:25.845 -04:00 [DBG] Adding idp claim with value: local
2020-08-29 00:36:25.845 -04:00 [DBG] Adding auth_time claim with value: 1598675785
2020-08-29 00:36:25.845 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 00:36:25.846 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000bd-0000-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:36:25.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-29 00:36:25.852 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:36:25.852 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:36:25.856 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-29 00:36:25.856 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-29 00:36:25.856 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-29 00:36:25.856 -04:00 [DBG] Start authorize callback request
2020-08-29 00:36:25.856 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 00:36:25.856 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:36:25.863 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:36:25.863 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:36:25.863 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 00:36:25.864 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:36:25.865 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:36:25.866 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:36:25.867 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:36:25.867 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 00:36:25.867 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"czNjb2FzZW9xRmFpZDk2NWxRSU5JT0xNeXpleExIZEk5QjBjSExsaTRVbHdIsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"czNjb2FzZW9xRmFpZDk2NWxRSU5JT0xNeXpleExIZEk5QjBjSExsaTRVbHdI","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"fvT_hnJB1nOPdB8RSJ5Ggw","Raw":{"response_type":"code","client_id":"angular_spa","state":"czNjb2FzZW9xRmFpZDk2NWxRSU5JT0xNeXpleExIZEk5QjBjSExsaTRVbHdIsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"heQtdFQqgyDiioC3blX_6sgqLhcU24pKbVmi3MdBNeM","code_challenge_method":"S256","nonce":"czNjb2FzZW9xRmFpZDk2NWxRSU5JT0xNeXpleExIZEk5QjBjSExsaTRVbHdI"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:36:25.869 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-29 00:36:25.869 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-29 00:36:25.870 -04:00 [DBG] 3BKUeTSlv2akcucs+29cT/7M+a240yq7lNHNo1m0Vxk= not found in database
2020-08-29 00:36:25.872 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****gtLw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000085-0001-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:36:25.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 00:36:25.872 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"czNjb2FzZW9xRmFpZDk2NWxRSU5JT0xNeXpleExIZEk5QjBjSExsaTRVbHdIsemicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-29 00:36:25.872 -04:00 [DBG] Augmenting SignInContext
2020-08-29 00:36:25.872 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 00:36:26.050 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:36:26.052 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:36:26.052 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:36:26.052 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:36:26.052 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:36:26.052 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:36:26.052 -04:00 [DBG] Start discovery request
2020-08-29 00:36:26.055 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:36:26.084 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:36:26.085 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:36:26.085 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:36:26.086 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:36:26.086 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:36:26.086 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:36:26.086 -04:00 [DBG] Start key discovery request
2020-08-29 00:36:27.098 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-29 00:36:27.099 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:36:27.100 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:36:27.102 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-29 00:36:27.102 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-29 00:36:27.102 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-29 00:36:27.102 -04:00 [DBG] Start token request.
2020-08-29 00:36:27.103 -04:00 [DBG] Start client validation
2020-08-29 00:36:27.103 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-29 00:36:27.103 -04:00 [DBG] Start parsing for secret in post body
2020-08-29 00:36:27.103 -04:00 [DBG] client id without secret found
2020-08-29 00:36:27.103 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-29 00:36:27.103 -04:00 [DBG] Secret id found: angular_spa
2020-08-29 00:36:27.111 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:36:27.111 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:36:27.111 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-29 00:36:27.111 -04:00 [DBG] Client validation success
2020-08-29 00:36:27.111 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000007d-0005-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:36:27.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-29 00:36:27.111 -04:00 [DBG] Start token request validation
2020-08-29 00:36:27.111 -04:00 [DBG] Start validation of authorization code token request
2020-08-29 00:36:27.112 -04:00 [DBG] 3BKUeTSlv2akcucs+29cT/7M+a240yq7lNHNo1m0Vxk= found in database: true
2020-08-29 00:36:27.113 -04:00 [DBG] removing 3BKUeTSlv2akcucs+29cT/7M+a240yq7lNHNo1m0Vxk= persisted grant from database
2020-08-29 00:36:27.115 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-29 00:36:27.117 -04:00 [DBG] Validation of authorization code token request success
2020-08-29 00:36:27.117 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"GtBF0xWlYDgP6x20tz-Rm2wq_kslSrE4E6L60VmgtLw","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"GtBF0xWlYDgP6x20tz-Rm2wq_kslSrE4E6L60VmgtLw","redirect_uri":"https://localhost:4200","code_verifier":"MlYuTEV5a2V3UkJlMmpkaGZBV2trcHU4b3FaTnJMMkRrVTE0NThGTVQuZzJL","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-29 00:36:27.123 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:36:27.123 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:36:27.124 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:36:27.125 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:36:27.125 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-29 00:36:27.125 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 00:36:27.135 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:36:27.135 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:36:27.136 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:36:27.137 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:36:27.137 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-29 00:36:27.137 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-29 00:36:27.137 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****bIwg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****YXng","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000007d-0005-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:36:27.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 00:36:27.138 -04:00 [DBG] Token request success.
2020-08-29 00:36:27.147 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 00:36:27.147 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 00:36:27.147 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 00:36:27.147 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 00:36:27.147 -04:00 [DBG] Rendering check session result
2020-08-29 00:36:27.148 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:36:27.149 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:36:27.150 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 00:36:27.152 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:36:27.152 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:36:27.152 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-29 00:36:27.152 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-29 00:36:27.152 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-29 00:36:27.152 -04:00 [DBG] Start userinfo request
2020-08-29 00:36:27.152 -04:00 [DBG] Bearer token found in header
2020-08-29 00:36:27.159 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:36:27.159 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:36:27.166 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:36:27.166 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:36:27.167 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 00:36:27.167 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598675787,"exp":1598679387,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598675785,"idp":"local","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-29 00:36:27.167 -04:00 [DBG] Creating userinfo response
2020-08-29 00:36:27.168 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 00:36:27.168 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 00:36:27.169 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:36:27.169 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-29 00:36:27.169 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 00:36:27.170 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:36:27.173 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-29 00:36:27.173 -04:00 [DBG] End userinfo request
2020-08-29 00:37:27.719 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:37:27.721 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:37:27.721 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:37:27.722 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:37:27.722 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:37:27.722 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:37:27.722 -04:00 [DBG] Start discovery request
2020-08-29 00:37:27.731 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:37:27.785 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:37:27.788 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:37:27.788 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:37:27.788 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:37:27.789 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:37:27.789 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:37:27.789 -04:00 [DBG] Start key discovery request
2020-08-29 00:37:27.801 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 00:37:27.801 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 00:37:27.801 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 00:37:27.801 -04:00 [DBG] Rendering check session result
2020-08-29 00:37:43.131 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 00:37:43.131 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 00:37:43.131 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 00:37:43.131 -04:00 [DBG] Start authorize request
2020-08-29 00:37:43.131 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 00:37:43.131 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:37:43.152 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:37:43.152 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:37:43.152 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"NW5aZUFFV3NIfjNBY0lYLlN4S203U2gxMmNuVkpNY0M0SkFQcnFselhRdnI3","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"pI3seCE5ooWUH9BvcrEqVMaEnBq-yN-8cia6EJCbqsE","code_challenge_method":"S256","nonce":"NW5aZUFFV3NIfjNBY0lYLlN4S203U2gxMmNuVkpNY0M0SkFQcnFselhRdnI3","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:37:43.152 -04:00 [ERR] Request validation failed
2020-08-29 00:37:43.152 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"NW5aZUFFV3NIfjNBY0lYLlN4S203U2gxMmNuVkpNY0M0SkFQcnFselhRdnI3","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"pI3seCE5ooWUH9BvcrEqVMaEnBq-yN-8cia6EJCbqsE","code_challenge_method":"S256","nonce":"NW5aZUFFV3NIfjNBY0lYLlN4S203U2gxMmNuVkpNY0M0SkFQcnFselhRdnI3","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:37:43.152 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000c5-0000-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:37:43.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 00:37:48.460 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:37:48.462 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:37:48.462 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:37:48.462 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:37:48.462 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:37:48.462 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:37:48.462 -04:00 [DBG] Start discovery request
2020-08-29 00:37:48.465 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:37:48.516 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:37:48.519 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:37:48.519 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:37:48.519 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:37:48.519 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:37:48.519 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:37:48.519 -04:00 [DBG] Start key discovery request
2020-08-29 00:37:48.520 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 00:37:48.520 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 00:37:48.520 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 00:37:48.520 -04:00 [DBG] Rendering check session result
2020-08-29 00:37:49.524 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 00:37:49.524 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 00:37:49.524 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 00:37:49.524 -04:00 [DBG] Start authorize request
2020-08-29 00:37:49.524 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 00:37:49.524 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:37:49.532 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:37:49.532 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:37:49.533 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"MThma1ZXS0NyTWJva1B-NW00OVRiSWdTY2FCUkRHZm16MElqZXFySHFHajJq","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"D4865Pj0jZ35Sd17EYmUQqKQC4XD_LMAzz2D0WQr_lE","code_challenge_method":"S256","nonce":"MThma1ZXS0NyTWJva1B-NW00OVRiSWdTY2FCUkRHZm16MElqZXFySHFHajJq","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:37:49.533 -04:00 [ERR] Request validation failed
2020-08-29 00:37:49.533 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"MThma1ZXS0NyTWJva1B-NW00OVRiSWdTY2FCUkRHZm16MElqZXFySHFHajJq","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"D4865Pj0jZ35Sd17EYmUQqKQC4XD_LMAzz2D0WQr_lE","code_challenge_method":"S256","nonce":"MThma1ZXS0NyTWJva1B-NW00OVRiSWdTY2FCUkRHZm16MElqZXFySHFHajJq","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:37:49.533 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000c9-0000-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:37:49.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 00:38:01.531 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:38:01.536 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:38:01.536 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:38:01.536 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:38:01.536 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:38:01.536 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:38:01.536 -04:00 [DBG] Start discovery request
2020-08-29 00:38:01.543 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:38:01.579 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:38:01.581 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:38:01.581 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:38:01.581 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:38:01.581 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:38:01.581 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:38:01.581 -04:00 [DBG] Start key discovery request
2020-08-29 00:38:01.582 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 00:38:01.582 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 00:38:01.582 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 00:38:01.582 -04:00 [DBG] Rendering check session result
2020-08-29 00:38:02.580 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 00:38:02.580 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 00:38:02.580 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 00:38:02.580 -04:00 [DBG] Start authorize request
2020-08-29 00:38:02.580 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 00:38:02.580 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:38:02.600 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:38:02.601 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:38:02.601 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"amVqUkZ0RG50QUpCbDlMc2wwcU1YdnpGTXFpeG80dzFIbXBWWGZyMEpHWDlk","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"NL3MteZ_e4v97Dvd6n4FBWg7SCpmEV4QJiSjH5Y-ceQ","code_challenge_method":"S256","nonce":"amVqUkZ0RG50QUpCbDlMc2wwcU1YdnpGTXFpeG80dzFIbXBWWGZyMEpHWDlk","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:38:02.601 -04:00 [ERR] Request validation failed
2020-08-29 00:38:02.601 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"amVqUkZ0RG50QUpCbDlMc2wwcU1YdnpGTXFpeG80dzFIbXBWWGZyMEpHWDlk","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"NL3MteZ_e4v97Dvd6n4FBWg7SCpmEV4QJiSjH5Y-ceQ","code_challenge_method":"S256","nonce":"amVqUkZ0RG50QUpCbDlMc2wwcU1YdnpGTXFpeG80dzFIbXBWWGZyMEpHWDlk","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:38:02.601 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000134-0008-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:38:02.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 00:39:02.836 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:39:02.838 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:39:02.838 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:39:02.838 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:39:02.838 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:39:02.838 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:39:02.838 -04:00 [DBG] Start discovery request
2020-08-29 00:39:02.846 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:39:02.887 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:39:02.888 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 00:39:02.888 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 00:39:02.889 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 00:39:02.889 -04:00 [DBG] Rendering check session result
2020-08-29 00:39:02.889 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:39:02.889 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:39:02.889 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:39:02.892 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:39:02.892 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:39:02.892 -04:00 [DBG] Start key discovery request
2020-08-29 00:39:03.878 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 00:39:03.878 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 00:39:03.878 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 00:39:03.878 -04:00 [DBG] Start authorize request
2020-08-29 00:39:03.878 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 00:39:03.878 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:39:03.897 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:39:03.897 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:39:03.897 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"QWFzU1I1bDBEN2x1OENqUm5sWU9WNG9yRHZlSmlFTXVZVXd2eFR5cUVFM1NI","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"1Df2_XyRzqdGCQflr2lK_ePJixmOP4lkMthzk3Uq3jU","code_challenge_method":"S256","nonce":"QWFzU1I1bDBEN2x1OENqUm5sWU9WNG9yRHZlSmlFTXVZVXd2eFR5cUVFM1NI","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:39:03.898 -04:00 [ERR] Request validation failed
2020-08-29 00:39:03.898 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"QWFzU1I1bDBEN2x1OENqUm5sWU9WNG9yRHZlSmlFTXVZVXd2eFR5cUVFM1NI","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"1Df2_XyRzqdGCQflr2lK_ePJixmOP4lkMthzk3Uq3jU","code_challenge_method":"S256","nonce":"QWFzU1I1bDBEN2x1OENqUm5sWU9WNG9yRHZlSmlFTXVZVXd2eFR5cUVFM1NI","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:39:03.898 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000f5-0004-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:39:03.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 00:39:22.676 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-29 00:39:22.676 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-29 00:39:22.676 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-29 00:39:22.676 -04:00 [DBG] Processing signout request for 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 00:39:22.676 -04:00 [DBG] Start end session request validation
2020-08-29 00:39:22.676 -04:00 [DBG] Start identity token validation
2020-08-29 00:39:22.695 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:39:22.695 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:39:22.695 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-29 00:39:22.698 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 00:39:22.698 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598675787,"exp":1598676087,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"czNjb2FzZW9xRmFpZDk2NWxRSU5JT0xNeXpleExIZEk5QjBjSExsaTRVbHdI","iat":1598675787,"at_hash":"fgsoepKie29NFOrJ-QRzsQ","s_hash":"MPOsHFTmmbtM2t28SunKsw","sid":"fvT_hnJB1nOPdB8RSJ5Ggw","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598675785,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-29 00:39:22.698 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-08-29 00:39:22.698 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-29 00:39:22.703 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-29 00:39:22.703 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-29 00:39:22.703 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-29 00:39:22.703 -04:00 [INF] {"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000032-000a-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:39:22.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-29 00:39:22.733 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-08-29 00:39:22.733 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-08-29 00:39:22.733 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-08-29 00:39:22.733 -04:00 [DBG] Processing signout callback request
2020-08-29 00:39:22.743 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:39:22.744 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:39:22.744 -04:00 [DBG] No client front-channel logout URLs
2020-08-29 00:39:22.744 -04:00 [DBG] No client back-channel logout URLs
2020-08-29 00:39:22.744 -04:00 [INF] Successful signout callback.
2020-08-29 00:39:22.744 -04:00 [DBG] No client front-channel iframe urls
2020-08-29 00:39:22.744 -04:00 [DBG] No client back-channel iframe urls
2020-08-29 00:39:25.238 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:39:25.240 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:39:25.240 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:39:25.240 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:39:25.240 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:39:25.241 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:39:25.241 -04:00 [DBG] Start discovery request
2020-08-29 00:39:25.249 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:39:25.273 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:39:25.275 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:39:25.275 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:39:25.275 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:39:25.275 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:39:25.275 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:39:25.275 -04:00 [DBG] Start key discovery request
2020-08-29 00:39:26.311 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 00:39:26.311 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 00:39:26.311 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 00:39:26.311 -04:00 [DBG] Start authorize request
2020-08-29 00:39:26.311 -04:00 [DBG] No user present in authorize request
2020-08-29 00:39:26.311 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:39:26.323 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:39:26.323 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:39:26.323 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"enQweWlSRFp-UG5LenY1UWtiTWozYX5sQTRaX2NPQ3hKTVlqaGt6SzVyU2VI","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"_F8ELqsF02F1tGl0kKpk69VyeUQq3JkR6Jj1d1yMrk4","code_challenge_method":"S256","nonce":"enQweWlSRFp-UG5LenY1UWtiTWozYX5sQTRaX2NPQ3hKTVlqaGt6SzVyU2VI","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:39:26.324 -04:00 [ERR] Request validation failed
2020-08-29 00:39:26.324 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"enQweWlSRFp-UG5LenY1UWtiTWozYX5sQTRaX2NPQ3hKTVlqaGt6SzVyU2VI","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"_F8ELqsF02F1tGl0kKpk69VyeUQq3JkR6Jj1d1yMrk4","code_challenge_method":"S256","nonce":"enQweWlSRFp-UG5LenY1UWtiTWozYX5sQTRaX2NPQ3hKTVlqaGt6SzVyU2VI","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:39:26.324 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000048-0004-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:39:26.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 00:39:33.676 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 00:39:33.676 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 00:39:33.676 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 00:39:33.676 -04:00 [DBG] Start authorize request
2020-08-29 00:39:33.676 -04:00 [DBG] No user present in authorize request
2020-08-29 00:39:33.677 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:39:33.685 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:39:33.685 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:39:33.685 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 00:39:33.688 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:39:33.696 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:39:33.697 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:39:33.698 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:39:33.698 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 00:39:33.698 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"MVJxMm81NWw2T0tweW83MkdKNGhoTllaLkllSTMxRWE4NnlLd3pSVGFNWWRysemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"MVJxMm81NWw2T0tweW83MkdKNGhoTllaLkllSTMxRWE4NnlLd3pSVGFNWWRy","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"MVJxMm81NWw2T0tweW83MkdKNGhoTllaLkllSTMxRWE4NnlLd3pSVGFNWWRysemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"3hzYBmAb63afX-quU30rs9l1Drh14_UVgTpc1ML_nXg","code_challenge_method":"S256","nonce":"MVJxMm81NWw2T0tweW83MkdKNGhoTllaLkllSTMxRWE4NnlLd3pSVGFNWWRy"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:39:33.699 -04:00 [INF] Showing login: User is not authenticated
2020-08-29 00:39:33.703 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:39:33.711 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:39:33.711 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:39:33.711 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 00:39:33.712 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:39:33.713 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:39:33.714 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:39:33.715 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:39:33.715 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 00:39:33.721 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:39:33.722 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:39:37.165 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-29 00:39:37.166 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:39:37.176 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:39:37.176 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:39:37.176 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 00:39:37.177 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:39:37.178 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:39:37.179 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:39:37.180 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:39:37.180 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 00:39:37.187 -04:00 [DBG] Augmenting SignInContext
2020-08-29 00:39:37.187 -04:00 [DBG] Adding idp claim with value: local
2020-08-29 00:39:37.187 -04:00 [DBG] Adding auth_time claim with value: 1598675977
2020-08-29 00:39:37.187 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 00:39:37.188 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"8000004c-0004-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:39:37.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-29 00:39:37.194 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:39:37.194 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:39:37.198 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-29 00:39:37.198 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-29 00:39:37.198 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-29 00:39:37.198 -04:00 [DBG] Start authorize callback request
2020-08-29 00:39:37.198 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 00:39:37.198 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:39:37.205 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:39:37.205 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:39:37.205 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 00:39:37.206 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:39:37.208 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:39:37.209 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:39:37.210 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:39:37.210 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 00:39:37.210 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"MVJxMm81NWw2T0tweW83MkdKNGhoTllaLkllSTMxRWE4NnlLd3pSVGFNWWRysemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"MVJxMm81NWw2T0tweW83MkdKNGhoTllaLkllSTMxRWE4NnlLd3pSVGFNWWRy","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"38pcKXRffpdu_yhZYwtOZg","Raw":{"response_type":"code","client_id":"angular_spa","state":"MVJxMm81NWw2T0tweW83MkdKNGhoTllaLkllSTMxRWE4NnlLd3pSVGFNWWRysemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"3hzYBmAb63afX-quU30rs9l1Drh14_UVgTpc1ML_nXg","code_challenge_method":"S256","nonce":"MVJxMm81NWw2T0tweW83MkdKNGhoTllaLkllSTMxRWE4NnlLd3pSVGFNWWRy"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:39:37.211 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-29 00:39:37.211 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-29 00:39:37.212 -04:00 [DBG] /CMxG+NpU2JYt+oyaiQHR+Ua6dgZmI+q1Br+lPqywIE= not found in database
2020-08-29 00:39:37.214 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****rdx4","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000004e-0004-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:39:37.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 00:39:37.214 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"MVJxMm81NWw2T0tweW83MkdKNGhoTllaLkllSTMxRWE4NnlLd3pSVGFNWWRysemicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-29 00:39:37.214 -04:00 [DBG] Augmenting SignInContext
2020-08-29 00:39:37.214 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 00:39:37.393 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 00:39:37.394 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:39:37.394 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:39:37.394 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 00:39:37.395 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 00:39:37.395 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 00:39:37.395 -04:00 [DBG] Start discovery request
2020-08-29 00:39:37.397 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 00:39:37.428 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 00:39:37.430 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:39:37.430 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:39:37.430 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 00:39:37.430 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 00:39:37.430 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 00:39:37.430 -04:00 [DBG] Start key discovery request
2020-08-29 00:39:38.456 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-29 00:39:38.458 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:39:38.458 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:39:38.458 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-29 00:39:38.458 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-29 00:39:38.458 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-29 00:39:38.459 -04:00 [DBG] Start token request.
2020-08-29 00:39:38.459 -04:00 [DBG] Start client validation
2020-08-29 00:39:38.459 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-29 00:39:38.459 -04:00 [DBG] Start parsing for secret in post body
2020-08-29 00:39:38.459 -04:00 [DBG] client id without secret found
2020-08-29 00:39:38.459 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-29 00:39:38.459 -04:00 [DBG] Secret id found: angular_spa
2020-08-29 00:39:38.467 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:39:38.467 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:39:38.467 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-29 00:39:38.467 -04:00 [DBG] Client validation success
2020-08-29 00:39:38.467 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000014c-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:39:38.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-29 00:39:38.467 -04:00 [DBG] Start token request validation
2020-08-29 00:39:38.467 -04:00 [DBG] Start validation of authorization code token request
2020-08-29 00:39:38.469 -04:00 [DBG] /CMxG+NpU2JYt+oyaiQHR+Ua6dgZmI+q1Br+lPqywIE= found in database: true
2020-08-29 00:39:38.470 -04:00 [DBG] removing /CMxG+NpU2JYt+oyaiQHR+Ua6dgZmI+q1Br+lPqywIE= persisted grant from database
2020-08-29 00:39:38.472 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-29 00:39:38.474 -04:00 [DBG] Validation of authorization code token request success
2020-08-29 00:39:38.474 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"W1cVZ5ZZXdUUjWS_dO7YA1RF0NzTtHqK2dIua_1rdx4","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"W1cVZ5ZZXdUUjWS_dO7YA1RF0NzTtHqK2dIua_1rdx4","redirect_uri":"https://localhost:4200","code_verifier":"MVVSMk1ZRTFpeVpncFJWcFllY1hnVEZDRlJGWk0ybHZ-akFneH41Q1E0Q2Yy","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-29 00:39:38.480 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:39:38.480 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:39:38.481 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:39:38.482 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:39:38.482 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-29 00:39:38.482 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 00:39:38.493 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:39:38.493 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:39:38.494 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:39:38.495 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 00:39:38.495 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-29 00:39:38.495 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-29 00:39:38.496 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****Jy7w","$type":"Token"},{"TokenType":"access_token","TokenValue":"****i8wA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000014c-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:39:38.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 00:39:38.496 -04:00 [DBG] Token request success.
2020-08-29 00:39:38.504 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 00:39:38.504 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 00:39:38.505 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 00:39:38.505 -04:00 [DBG] Rendering check session result
2020-08-29 00:39:38.505 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 00:39:38.506 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:39:38.506 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:39:38.508 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 00:39:38.509 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 00:39:38.509 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 00:39:38.509 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-29 00:39:38.509 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-29 00:39:38.509 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-29 00:39:38.510 -04:00 [DBG] Start userinfo request
2020-08-29 00:39:38.510 -04:00 [DBG] Bearer token found in header
2020-08-29 00:39:38.517 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:39:38.517 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:39:38.525 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:39:38.525 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:39:38.526 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 00:39:38.527 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598675978,"exp":1598679578,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598675977,"idp":"local","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-29 00:39:38.527 -04:00 [DBG] Creating userinfo response
2020-08-29 00:39:38.527 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 00:39:38.527 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 00:39:38.528 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:39:38.528 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-29 00:39:38.529 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 00:39:38.530 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 00:39:38.534 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-29 00:39:38.534 -04:00 [DBG] End userinfo request
2020-08-29 00:40:55.062 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 00:40:55.062 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 00:40:55.062 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 00:40:55.062 -04:00 [DBG] Start authorize request
2020-08-29 00:40:55.062 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 00:40:55.062 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 00:40:55.078 -04:00 [DBG] angular_spa found in database: true
2020-08-29 00:40:55.078 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 00:40:55.078 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"Nmc4bE9vdGxMZkI3SjFzbkFyS0F-SzIwYnp1bHhETUxlTUs4TUJOazQxNE1V","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"RSTvmSm6hAIfkzOFSBwDsrJzWttLpqUP37eMiE4bPoc","code_challenge_method":"S256","nonce":"Nmc4bE9vdGxMZkI3SjFzbkFyS0F-SzIwYnp1bHhETUxlTUs4TUJOazQxNE1V","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:40:55.078 -04:00 [ERR] Request validation failed
2020-08-29 00:40:55.078 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"Nmc4bE9vdGxMZkI3SjFzbkFyS0F-SzIwYnp1bHhETUxlTUs4TUJOazQxNE1V","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"RSTvmSm6hAIfkzOFSBwDsrJzWttLpqUP37eMiE4bPoc","code_challenge_method":"S256","nonce":"Nmc4bE9vdGxMZkI3SjFzbkFyS0F-SzIwYnp1bHhETUxlTUs4TUJOazQxNE1V","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 00:40:55.078 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000f6-0004-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-29T04:40:55.0000000Z","ProcessId":5008,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 21:41:07.289 -04:00 [INF] Starting host...
2020-08-29 21:41:09.069 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-29 21:41:09.228 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-29 21:41:09.228 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-29 21:41:09.228 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-29 21:41:09.228 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-29 21:41:09.228 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-29 21:41:09.228 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-29 21:41:09.613 -04:00 [DBG] Login Url: /Account/Login
2020-08-29 21:41:09.614 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-29 21:41:09.614 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-29 21:41:09.614 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-29 21:41:09.614 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-29 21:41:09.614 -04:00 [DBG] Error Url: /home/error
2020-08-29 21:41:09.614 -04:00 [DBG] Error Id Parameter: errorId
2020-08-29 21:42:30.840 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 21:42:32.673 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:42:32.675 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:42:32.682 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 21:42:32.697 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 21:42:32.697 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 21:42:32.699 -04:00 [DBG] Start discovery request
2020-08-29 21:42:33.095 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 21:42:33.176 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 21:42:33.197 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:42:33.197 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:42:33.203 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 21:42:33.208 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 21:42:33.208 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 21:42:33.209 -04:00 [DBG] Start key discovery request
2020-08-29 21:42:34.285 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 21:42:34.289 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 21:42:34.289 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 21:42:34.290 -04:00 [DBG] Start authorize request
2020-08-29 21:42:34.294 -04:00 [DBG] No user present in authorize request
2020-08-29 21:42:34.295 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:42:34.494 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:42:34.498 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:42:34.510 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"a1VVdXNVNmNuR3pKVm5MNVN5VUZoRzJxUFBSYzIzamR4T0hpVzltfkVObTBH","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"sCmI2c-I19KnI4gZ3R2LtbB2pzlDQ-WKDC774AxMH6Y","code_challenge_method":"S256","nonce":"a1VVdXNVNmNuR3pKVm5MNVN5VUZoRzJxUFBSYzIzamR4T0hpVzltfkVObTBH","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 21:42:34.514 -04:00 [ERR] Request validation failed
2020-08-29 21:42:34.514 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"a1VVdXNVNmNuR3pKVm5MNVN5VUZoRzJxUFBSYzIzamR4T0hpVzltfkVObTBH","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"sCmI2c-I19KnI4gZ3R2LtbB2pzlDQ-WKDC774AxMH6Y","code_challenge_method":"S256","nonce":"a1VVdXNVNmNuR3pKVm5MNVN5VUZoRzJxUFBSYzIzamR4T0hpVzltfkVObTBH","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 21:42:34.520 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000001c-0004-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:42:34.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 21:42:45.477 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 21:42:45.481 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 21:42:45.482 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 21:42:45.482 -04:00 [DBG] Start authorize request
2020-08-29 21:42:45.483 -04:00 [DBG] No user present in authorize request
2020-08-29 21:42:45.483 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:42:45.495 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:42:45.495 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:42:45.497 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 21:42:45.542 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:42:45.575 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:42:45.581 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:42:45.583 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:42:45.586 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 21:42:45.586 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"ckxWNm9tY2lqOUV1cUQ1UGRRVG5CfkNMOEpfZEhHQ1VsLURFSmhfZWJUUWMzsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"ckxWNm9tY2lqOUV1cUQ1UGRRVG5CfkNMOEpfZEhHQ1VsLURFSmhfZWJUUWMz","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"ckxWNm9tY2lqOUV1cUQ1UGRRVG5CfkNMOEpfZEhHQ1VsLURFSmhfZWJUUWMzsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"LGnS0umFB5ZNat00xq_x8utB3vHFsZtn3Cp7udBTI2M","code_challenge_method":"S256","nonce":"ckxWNm9tY2lqOUV1cUQ1UGRRVG5CfkNMOEpfZEhHQ1VsLURFSmhfZWJUUWMz"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 21:42:45.589 -04:00 [INF] Showing login: User is not authenticated
2020-08-29 21:42:45.607 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:42:45.616 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:42:45.616 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:42:45.616 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 21:42:45.617 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:42:45.619 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:42:45.623 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:42:45.624 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:42:45.624 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 21:42:45.635 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:42:45.635 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:42:52.415 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-29 21:42:52.446 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:42:52.457 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:42:52.457 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:42:52.457 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 21:42:52.459 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:42:52.460 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:42:52.461 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:42:52.462 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:42:52.463 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 21:42:52.619 -04:00 [DBG] Augmenting SignInContext
2020-08-29 21:42:52.619 -04:00 [DBG] Adding idp claim with value: local
2020-08-29 21:42:52.619 -04:00 [DBG] Adding auth_time claim with value: 1598751772
2020-08-29 21:42:52.628 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 21:42:52.630 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"8000000e-0005-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:42:52.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-29 21:42:52.638 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:42:52.638 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:42:52.651 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-29 21:42:52.652 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-29 21:42:52.652 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-29 21:42:52.653 -04:00 [DBG] Start authorize callback request
2020-08-29 21:42:52.655 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 21:42:52.655 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:42:52.663 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:42:52.664 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:42:52.664 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 21:42:52.665 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:42:52.666 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:42:52.667 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:42:52.668 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:42:52.668 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 21:42:52.668 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"ckxWNm9tY2lqOUV1cUQ1UGRRVG5CfkNMOEpfZEhHQ1VsLURFSmhfZWJUUWMzsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"ckxWNm9tY2lqOUV1cUQ1UGRRVG5CfkNMOEpfZEhHQ1VsLURFSmhfZWJUUWMz","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"TPxAUgep1_AZ5oCp6u6CUA","Raw":{"response_type":"code","client_id":"angular_spa","state":"ckxWNm9tY2lqOUV1cUQ1UGRRVG5CfkNMOEpfZEhHQ1VsLURFSmhfZWJUUWMzsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"LGnS0umFB5ZNat00xq_x8utB3vHFsZtn3Cp7udBTI2M","code_challenge_method":"S256","nonce":"ckxWNm9tY2lqOUV1cUQ1UGRRVG5CfkNMOEpfZEhHQ1VsLURFSmhfZWJUUWMz"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 21:42:52.682 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-29 21:42:52.683 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-29 21:42:52.713 -04:00 [DBG] ZGYU7DdS2hrdvyG4bXuR/JgKH8m/+Vp+9z+h6TIAQkw= not found in database
2020-08-29 21:42:52.805 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****_6ao","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000003e-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:42:52.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 21:42:52.806 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"ckxWNm9tY2lqOUV1cUQ1UGRRVG5CfkNMOEpfZEhHQ1VsLURFSmhfZWJUUWMzsemicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-29 21:42:52.809 -04:00 [DBG] Augmenting SignInContext
2020-08-29 21:42:52.810 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 21:42:53.621 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 21:42:53.627 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:42:53.627 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:42:53.628 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 21:42:53.629 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 21:42:53.629 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 21:42:53.629 -04:00 [DBG] Start discovery request
2020-08-29 21:42:53.641 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 21:42:53.669 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 21:42:53.675 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:42:53.675 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:42:53.677 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 21:42:53.677 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 21:42:53.677 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 21:42:53.678 -04:00 [DBG] Start key discovery request
2020-08-29 21:42:54.693 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-29 21:42:54.697 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:42:54.697 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:42:54.697 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-29 21:42:54.700 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-29 21:42:54.700 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-29 21:42:54.703 -04:00 [DBG] Start token request.
2020-08-29 21:42:54.704 -04:00 [DBG] Start client validation
2020-08-29 21:42:54.706 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-29 21:42:54.707 -04:00 [DBG] Start parsing for secret in post body
2020-08-29 21:42:54.707 -04:00 [DBG] client id without secret found
2020-08-29 21:42:54.708 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-29 21:42:54.708 -04:00 [DBG] Secret id found: angular_spa
2020-08-29 21:42:54.716 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:42:54.716 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:42:54.717 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-29 21:42:54.717 -04:00 [DBG] Client validation success
2020-08-29 21:42:54.717 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000020-0001-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:42:54.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-29 21:42:54.719 -04:00 [DBG] Start token request validation
2020-08-29 21:42:54.722 -04:00 [DBG] Start validation of authorization code token request
2020-08-29 21:42:54.731 -04:00 [DBG] ZGYU7DdS2hrdvyG4bXuR/JgKH8m/+Vp+9z+h6TIAQkw= found in database: true
2020-08-29 21:42:54.750 -04:00 [DBG] removing ZGYU7DdS2hrdvyG4bXuR/JgKH8m/+Vp+9z+h6TIAQkw= persisted grant from database
2020-08-29 21:42:54.759 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-29 21:42:54.762 -04:00 [DBG] Validation of authorization code token request success
2020-08-29 21:42:54.764 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"OUZYqA-qWyoVbK_CKjJBOYz1e7lNvDY4mTcmwkc_6ao","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"OUZYqA-qWyoVbK_CKjJBOYz1e7lNvDY4mTcmwkc_6ao","redirect_uri":"https://localhost:4200","code_verifier":"RFM4Q0JZcnQ0RkhGeDFZQWFYR2prTUtOX1hkS1RjaFdCbHB-NGtaSFhwLmxr","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-29 21:42:54.774 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:42:54.775 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:42:54.776 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:42:54.777 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:42:54.784 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-29 21:42:54.784 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 21:42:54.840 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:42:54.841 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:42:54.842 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:42:54.843 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:42:54.846 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-29 21:42:54.846 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-29 21:42:54.848 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****MQ3Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****m4_w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000020-0001-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:42:54.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 21:42:54.849 -04:00 [DBG] Token request success.
2020-08-29 21:42:54.861 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 21:42:54.862 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 21:42:54.862 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 21:42:54.862 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 21:42:54.862 -04:00 [DBG] Rendering check session result
2020-08-29 21:42:54.863 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:42:54.863 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:42:54.866 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 21:42:54.867 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:42:54.867 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:42:54.868 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-29 21:42:54.869 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-29 21:42:54.869 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-29 21:42:54.870 -04:00 [DBG] Start userinfo request
2020-08-29 21:42:54.872 -04:00 [DBG] Bearer token found in header
2020-08-29 21:42:54.910 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:42:54.910 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:42:54.919 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:42:54.919 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:42:54.922 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 21:42:54.922 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598751774,"exp":1598755374,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598751772,"idp":"local","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-29 21:42:54.925 -04:00 [DBG] Creating userinfo response
2020-08-29 21:42:54.927 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 21:42:54.928 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 21:42:54.930 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:42:54.933 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-29 21:42:54.934 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 21:42:54.935 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:42:54.939 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-29 21:42:54.939 -04:00 [DBG] End userinfo request
2020-08-29 21:44:10.665 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 21:44:10.669 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 21:44:10.669 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 21:44:10.669 -04:00 [DBG] Start authorize request
2020-08-29 21:44:10.669 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 21:44:10.669 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:44:10.690 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:44:10.690 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:44:10.690 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"dUFiaG9FVElkVk53Ykk2TW5DeDQycko1LlRsd1VwQ0l5OHUubUt1RnMxN2ZE","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"6UkhrCJzDUDga1C2F9gSj4tvWRuKM8oiM86BgLu43oQ","code_challenge_method":"S256","nonce":"dUFiaG9FVElkVk53Ykk2TW5DeDQycko1LlRsd1VwQ0l5OHUubUt1RnMxN2ZE","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 21:44:10.690 -04:00 [ERR] Request validation failed
2020-08-29 21:44:10.690 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"dUFiaG9FVElkVk53Ykk2TW5DeDQycko1LlRsd1VwQ0l5OHUubUt1RnMxN2ZE","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"6UkhrCJzDUDga1C2F9gSj4tvWRuKM8oiM86BgLu43oQ","code_challenge_method":"S256","nonce":"dUFiaG9FVElkVk53Ykk2TW5DeDQycko1LlRsd1VwQ0l5OHUubUt1RnMxN2ZE","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 21:44:10.691 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000003f-0008-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:44:10.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 21:44:35.248 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 21:44:35.254 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:44:35.256 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:44:35.258 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 21:44:35.259 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 21:44:35.259 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 21:44:35.259 -04:00 [DBG] Start discovery request
2020-08-29 21:44:35.267 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 21:44:35.325 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 21:44:35.325 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 21:44:35.325 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 21:44:35.325 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 21:44:35.325 -04:00 [DBG] Rendering check session result
2020-08-29 21:44:35.327 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:44:35.327 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:44:35.327 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 21:44:35.329 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 21:44:35.329 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 21:44:35.329 -04:00 [DBG] Start key discovery request
2020-08-29 21:44:36.542 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 21:44:36.543 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 21:44:36.543 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 21:44:36.543 -04:00 [DBG] Start authorize request
2020-08-29 21:44:36.543 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 21:44:36.543 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:44:36.560 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:44:36.561 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:44:36.561 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"RzZqQmp3eUNzSjBWQVJGd3Rnfm9VbkE1SGZEMUZkbVJTQWRmb3AxNWtKSkpi","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"5D2ndv4bB9T5nbMoT9-opxlQCeYPB9Awz6SL5JBulyI","code_challenge_method":"S256","nonce":"RzZqQmp3eUNzSjBWQVJGd3Rnfm9VbkE1SGZEMUZkbVJTQWRmb3AxNWtKSkpi","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 21:44:36.561 -04:00 [ERR] Request validation failed
2020-08-29 21:44:36.562 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"RzZqQmp3eUNzSjBWQVJGd3Rnfm9VbkE1SGZEMUZkbVJTQWRmb3AxNWtKSkpi","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"5D2ndv4bB9T5nbMoT9-opxlQCeYPB9Awz6SL5JBulyI","code_challenge_method":"S256","nonce":"RzZqQmp3eUNzSjBWQVJGd3Rnfm9VbkE1SGZEMUZkbVJTQWRmb3AxNWtKSkpi","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 21:44:36.562 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000004e-0006-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:44:36.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 21:44:37.009 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 21:44:37.011 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:44:37.011 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:44:37.011 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 21:44:37.012 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 21:44:37.012 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 21:44:37.012 -04:00 [DBG] Start discovery request
2020-08-29 21:44:37.016 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 21:44:37.083 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 21:44:37.084 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 21:44:37.085 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:44:37.085 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 21:44:37.085 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:44:37.085 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 21:44:37.085 -04:00 [DBG] Rendering check session result
2020-08-29 21:44:37.086 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 21:44:37.086 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 21:44:37.086 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 21:44:37.086 -04:00 [DBG] Start key discovery request
2020-08-29 21:44:38.894 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 21:44:38.896 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:44:38.896 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:44:38.896 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 21:44:38.897 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 21:44:38.897 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 21:44:38.897 -04:00 [DBG] Start discovery request
2020-08-29 21:44:38.900 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 21:44:38.963 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 21:44:38.964 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 21:44:38.964 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 21:44:38.964 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 21:44:38.964 -04:00 [DBG] Rendering check session result
2020-08-29 21:44:38.970 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:44:38.970 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:44:38.971 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 21:44:38.971 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 21:44:38.971 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 21:44:38.971 -04:00 [DBG] Start key discovery request
2020-08-29 21:44:46.058 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-29 21:44:46.059 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-29 21:44:46.059 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-29 21:44:46.061 -04:00 [DBG] Processing signout request for 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 21:44:46.063 -04:00 [DBG] Start end session request validation
2020-08-29 21:44:46.065 -04:00 [DBG] Start identity token validation
2020-08-29 21:44:46.074 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:44:46.074 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:44:46.075 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-29 21:44:46.077 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 21:44:46.077 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598751774,"exp":1598752074,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"ckxWNm9tY2lqOUV1cUQ1UGRRVG5CfkNMOEpfZEhHQ1VsLURFSmhfZWJUUWMz","iat":1598751774,"at_hash":"zGT9YLh6G_PFP798B5AY1g","s_hash":"YxQAxWkJr1WSR2X1Ie88YA","sid":"TPxAUgep1_AZ5oCp6u6CUA","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598751772,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-29 21:44:46.079 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-08-29 21:44:46.080 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-29 21:44:46.105 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-29 21:44:46.106 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-29 21:44:46.106 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-29 21:44:46.106 -04:00 [INF] {"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000020-0004-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:44:46.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-29 21:44:46.141 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-08-29 21:44:46.143 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-08-29 21:44:46.143 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-08-29 21:44:46.144 -04:00 [DBG] Processing signout callback request
2020-08-29 21:44:46.159 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:44:46.159 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:44:46.160 -04:00 [DBG] No client front-channel logout URLs
2020-08-29 21:44:46.160 -04:00 [DBG] No client back-channel logout URLs
2020-08-29 21:44:46.161 -04:00 [INF] Successful signout callback.
2020-08-29 21:44:46.161 -04:00 [DBG] No client front-channel iframe urls
2020-08-29 21:44:46.161 -04:00 [DBG] No client back-channel iframe urls
2020-08-29 21:44:49.363 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 21:44:49.365 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:44:49.365 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:44:49.365 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 21:44:49.365 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 21:44:49.366 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 21:44:49.366 -04:00 [DBG] Start discovery request
2020-08-29 21:44:49.369 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 21:44:49.406 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 21:44:49.411 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:44:49.412 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:44:49.412 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 21:44:49.412 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 21:44:49.412 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 21:44:49.412 -04:00 [DBG] Start key discovery request
2020-08-29 21:44:50.466 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 21:44:50.466 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 21:44:50.466 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 21:44:50.466 -04:00 [DBG] Start authorize request
2020-08-29 21:44:50.467 -04:00 [DBG] No user present in authorize request
2020-08-29 21:44:50.467 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:44:50.474 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:44:50.474 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:44:50.474 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"d1lMeUhMTEZXdGVfSWJ-eTJ4R0REa25vT2puYVlrTUNlYnpjbWV4WkVJTHR5","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"S1K9nqN2jKxBoRn43sqhhXtoHQVH5maHi-gKldtuCAo","code_challenge_method":"S256","nonce":"d1lMeUhMTEZXdGVfSWJ-eTJ4R0REa25vT2puYVlrTUNlYnpjbWV4WkVJTHR5","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 21:44:50.475 -04:00 [ERR] Request validation failed
2020-08-29 21:44:50.475 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"d1lMeUhMTEZXdGVfSWJ-eTJ4R0REa25vT2puYVlrTUNlYnpjbWV4WkVJTHR5","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"S1K9nqN2jKxBoRn43sqhhXtoHQVH5maHi-gKldtuCAo","code_challenge_method":"S256","nonce":"d1lMeUhMTEZXdGVfSWJ-eTJ4R0REa25vT2puYVlrTUNlYnpjbWV4WkVJTHR5","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 21:44:50.475 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000010-000b-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:44:50.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 21:44:59.903 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 21:44:59.903 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 21:44:59.903 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 21:44:59.904 -04:00 [DBG] Start authorize request
2020-08-29 21:44:59.904 -04:00 [DBG] No user present in authorize request
2020-08-29 21:44:59.904 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:44:59.912 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:44:59.912 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:44:59.912 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 21:44:59.914 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:44:59.915 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:44:59.917 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:44:59.918 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:44:59.918 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 21:44:59.918 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"YmpiekN4WFZoaEpJUW9DV3JKRn5LbWpGdGpBems2dzg2elc0c3VaZC0zZDhHsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"YmpiekN4WFZoaEpJUW9DV3JKRn5LbWpGdGpBems2dzg2elc0c3VaZC0zZDhH","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"YmpiekN4WFZoaEpJUW9DV3JKRn5LbWpGdGpBems2dzg2elc0c3VaZC0zZDhHsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"ndZ9F-DrjSKmMF7z_16RY8Z-aEti61TTN3E-vkdhq9A","code_challenge_method":"S256","nonce":"YmpiekN4WFZoaEpJUW9DV3JKRn5LbWpGdGpBems2dzg2elc0c3VaZC0zZDhH"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 21:44:59.918 -04:00 [INF] Showing login: User is not authenticated
2020-08-29 21:44:59.922 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:44:59.930 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:44:59.930 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:44:59.930 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 21:44:59.932 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:44:59.933 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:44:59.934 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:44:59.935 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:44:59.935 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 21:44:59.941 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:44:59.941 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:45:01.824 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-29 21:45:01.826 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:45:01.834 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:45:01.834 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:45:01.834 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 21:45:01.835 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:45:01.836 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:45:01.838 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:45:01.839 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:45:01.839 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 21:45:01.846 -04:00 [DBG] Augmenting SignInContext
2020-08-29 21:45:01.846 -04:00 [DBG] Adding idp claim with value: local
2020-08-29 21:45:01.846 -04:00 [DBG] Adding auth_time claim with value: 1598751901
2020-08-29 21:45:01.846 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 21:45:01.847 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000062-000a-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:45:01.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-29 21:45:01.853 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:45:01.853 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:45:01.858 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-29 21:45:01.858 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-29 21:45:01.858 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-29 21:45:01.858 -04:00 [DBG] Start authorize callback request
2020-08-29 21:45:01.858 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 21:45:01.858 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:45:01.865 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:45:01.865 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:45:01.865 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 21:45:01.866 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:45:01.867 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:45:01.868 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:45:01.869 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:45:01.869 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 21:45:01.869 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"YmpiekN4WFZoaEpJUW9DV3JKRn5LbWpGdGpBems2dzg2elc0c3VaZC0zZDhHsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"YmpiekN4WFZoaEpJUW9DV3JKRn5LbWpGdGpBems2dzg2elc0c3VaZC0zZDhH","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"DA4fjnRXZz6PFBlwsD1nSw","Raw":{"response_type":"code","client_id":"angular_spa","state":"YmpiekN4WFZoaEpJUW9DV3JKRn5LbWpGdGpBems2dzg2elc0c3VaZC0zZDhHsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"ndZ9F-DrjSKmMF7z_16RY8Z-aEti61TTN3E-vkdhq9A","code_challenge_method":"S256","nonce":"YmpiekN4WFZoaEpJUW9DV3JKRn5LbWpGdGpBems2dzg2elc0c3VaZC0zZDhH"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 21:45:01.871 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-29 21:45:01.871 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-29 21:45:01.872 -04:00 [DBG] JZGLbJQTE1buGKwg9S3QjGFy/2kbhFIRrfr+2TzvrQY= not found in database
2020-08-29 21:45:01.874 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****_IQU","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000024-0009-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:45:01.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 21:45:01.874 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"YmpiekN4WFZoaEpJUW9DV3JKRn5LbWpGdGpBems2dzg2elc0c3VaZC0zZDhHsemicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-29 21:45:01.875 -04:00 [DBG] Augmenting SignInContext
2020-08-29 21:45:01.875 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 21:45:02.063 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 21:45:02.065 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:45:02.065 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:45:02.065 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 21:45:02.065 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 21:45:02.065 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 21:45:02.065 -04:00 [DBG] Start discovery request
2020-08-29 21:45:02.068 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 21:45:02.092 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 21:45:02.096 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:45:02.096 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:45:02.097 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 21:45:02.097 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 21:45:02.097 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 21:45:02.097 -04:00 [DBG] Start key discovery request
2020-08-29 21:45:03.130 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-29 21:45:03.132 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:45:03.133 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:45:03.133 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-29 21:45:03.133 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-29 21:45:03.133 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-29 21:45:03.133 -04:00 [DBG] Start token request.
2020-08-29 21:45:03.133 -04:00 [DBG] Start client validation
2020-08-29 21:45:03.134 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-29 21:45:03.134 -04:00 [DBG] Start parsing for secret in post body
2020-08-29 21:45:03.134 -04:00 [DBG] client id without secret found
2020-08-29 21:45:03.134 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-29 21:45:03.134 -04:00 [DBG] Secret id found: angular_spa
2020-08-29 21:45:03.142 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:45:03.143 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:45:03.143 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-29 21:45:03.143 -04:00 [DBG] Client validation success
2020-08-29 21:45:03.143 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000024-0004-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:45:03.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-29 21:45:03.143 -04:00 [DBG] Start token request validation
2020-08-29 21:45:03.143 -04:00 [DBG] Start validation of authorization code token request
2020-08-29 21:45:03.144 -04:00 [DBG] JZGLbJQTE1buGKwg9S3QjGFy/2kbhFIRrfr+2TzvrQY= found in database: true
2020-08-29 21:45:03.146 -04:00 [DBG] removing JZGLbJQTE1buGKwg9S3QjGFy/2kbhFIRrfr+2TzvrQY= persisted grant from database
2020-08-29 21:45:03.149 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-29 21:45:03.151 -04:00 [DBG] Validation of authorization code token request success
2020-08-29 21:45:03.151 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"F18n-DLN6ZyQkiBiuK-1bn35e4Ltn8gX66pOtUl_IQU","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"F18n-DLN6ZyQkiBiuK-1bn35e4Ltn8gX66pOtUl_IQU","redirect_uri":"https://localhost:4200","code_verifier":"Lk9ob0xMeDRJLjJ5dVBQLUFZYmtaelRKY3E5QjNpM2tadmdBeWkzUXh6U00t","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-29 21:45:03.158 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:45:03.158 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:45:03.159 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:45:03.160 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:45:03.161 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-29 21:45:03.161 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 21:45:03.172 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:45:03.172 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:45:03.173 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:45:03.174 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:45:03.175 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-29 21:45:03.175 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-29 21:45:03.176 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****F2Bw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****6ZVw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000024-0004-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:45:03.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 21:45:03.176 -04:00 [DBG] Token request success.
2020-08-29 21:45:03.188 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 21:45:03.190 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:45:03.190 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:45:03.191 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 21:45:03.191 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 21:45:03.191 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 21:45:03.191 -04:00 [DBG] Rendering check session result
2020-08-29 21:45:03.192 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 21:45:03.194 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:45:03.194 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:45:03.194 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-29 21:45:03.195 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-29 21:45:03.195 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-29 21:45:03.195 -04:00 [DBG] Start userinfo request
2020-08-29 21:45:03.195 -04:00 [DBG] Bearer token found in header
2020-08-29 21:45:03.204 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:45:03.204 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:45:03.212 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:45:03.212 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:45:03.213 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 21:45:03.214 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598751903,"exp":1598755503,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598751901,"idp":"local","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-29 21:45:03.214 -04:00 [DBG] Creating userinfo response
2020-08-29 21:45:03.214 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 21:45:03.214 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 21:45:03.216 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:45:03.216 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-29 21:45:03.216 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 21:45:03.217 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:45:03.221 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-29 21:45:03.221 -04:00 [DBG] End userinfo request
2020-08-29 21:45:28.163 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 21:45:28.168 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:45:28.168 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:45:28.169 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 21:45:28.169 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 21:45:28.169 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 21:45:28.169 -04:00 [DBG] Start discovery request
2020-08-29 21:45:28.175 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 21:45:28.235 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 21:45:28.235 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 21:45:28.235 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 21:45:28.235 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 21:45:28.235 -04:00 [DBG] Rendering check session result
2020-08-29 21:45:28.236 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:45:28.237 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:45:28.240 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 21:45:28.241 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 21:45:28.241 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 21:45:28.241 -04:00 [DBG] Start key discovery request
2020-08-29 21:49:35.835 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 21:49:35.835 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 21:49:35.835 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 21:49:35.835 -04:00 [DBG] Start authorize request
2020-08-29 21:49:35.835 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 21:49:35.835 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:49:35.894 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:49:35.895 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:49:35.895 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"UW5ub3RrNEhWNFUzd3Jub19nNFlsOTV4aU1Hblk4MmJIdkNPYU9aRi4ya2xt","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"8sT7JRpQyLssnEkXhUuBLup6X5J1hBZCZUvrjrFN0wo","code_challenge_method":"S256","nonce":"UW5ub3RrNEhWNFUzd3Jub19nNFlsOTV4aU1Hblk4MmJIdkNPYU9aRi4ya2xt","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 21:49:35.895 -04:00 [ERR] Request validation failed
2020-08-29 21:49:35.895 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"UW5ub3RrNEhWNFUzd3Jub19nNFlsOTV4aU1Hblk4MmJIdkNPYU9aRi4ya2xt","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"8sT7JRpQyLssnEkXhUuBLup6X5J1hBZCZUvrjrFN0wo","code_challenge_method":"S256","nonce":"UW5ub3RrNEhWNFUzd3Jub19nNFlsOTV4aU1Hblk4MmJIdkNPYU9aRi4ya2xt","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 21:49:35.895 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000026-0004-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:49:35.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 21:49:57.010 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 21:49:57.012 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:49:57.012 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:49:57.012 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 21:49:57.012 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 21:49:57.012 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 21:49:57.013 -04:00 [DBG] Start discovery request
2020-08-29 21:49:57.026 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 21:49:57.067 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 21:49:57.072 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 21:49:57.072 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 21:49:57.072 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 21:49:57.072 -04:00 [DBG] Rendering check session result
2020-08-29 21:49:57.072 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:49:57.072 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:49:57.073 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 21:49:57.073 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 21:49:57.073 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 21:49:57.073 -04:00 [DBG] Start key discovery request
2020-08-29 21:50:05.776 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 21:50:05.776 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 21:50:05.776 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 21:50:05.776 -04:00 [DBG] Start authorize request
2020-08-29 21:50:05.776 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 21:50:05.776 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:50:05.783 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:50:05.783 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:50:05.783 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 21:50:05.786 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:50:05.794 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:50:05.796 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:50:05.796 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:50:05.797 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 21:50:05.797 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"MnNFYWlsSjlkcG1PSE5UUnlPUUNGblk5bklzWnZ-VkVlTjVPYi5hWlVOQ21j","UiLocales":null,"Nonce":"MnNFYWlsSjlkcG1PSE5UUnlPUUNGblk5bklzWnZ-VkVlTjVPYi5hWlVOQ21j","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"DA4fjnRXZz6PFBlwsD1nSw","Raw":{"response_type":"code","client_id":"angular_spa","state":"MnNFYWlsSjlkcG1PSE5UUnlPUUNGblk5bklzWnZ-VkVlTjVPYi5hWlVOQ21j","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"yMZUnulW_zVux8_gDVRKtNFLl-TW7IV65-NKFaw7_W0","code_challenge_method":"S256","nonce":"MnNFYWlsSjlkcG1PSE5UUnlPUUNGblk5bklzWnZ-VkVlTjVPYi5hWlVOQ21j"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 21:50:05.801 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-29 21:50:05.801 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-29 21:50:05.802 -04:00 [DBG] r91AuCT3f6wrN3K6F90kwdmnRZU2uwJ5CFI1A0yaaV8= not found in database
2020-08-29 21:50:05.805 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****uNiA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000002c-0001-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:50:05.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 21:50:05.805 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"MnNFYWlsSjlkcG1PSE5UUnlPUUNGblk5bklzWnZ-VkVlTjVPYi5hWlVOQ21j","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-29 21:50:05.995 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 21:50:05.997 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:50:05.997 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:50:05.997 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 21:50:05.997 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 21:50:05.997 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 21:50:05.997 -04:00 [DBG] Start discovery request
2020-08-29 21:50:06.000 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 21:50:06.030 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 21:50:06.032 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:50:06.032 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:50:06.032 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 21:50:06.033 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 21:50:06.033 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 21:50:06.033 -04:00 [DBG] Start key discovery request
2020-08-29 21:50:07.074 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-29 21:50:07.076 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:50:07.076 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:50:07.076 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-29 21:50:07.088 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-29 21:50:07.088 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-29 21:50:07.088 -04:00 [DBG] Start token request.
2020-08-29 21:50:07.088 -04:00 [DBG] Start client validation
2020-08-29 21:50:07.088 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-29 21:50:07.088 -04:00 [DBG] Start parsing for secret in post body
2020-08-29 21:50:07.088 -04:00 [DBG] client id without secret found
2020-08-29 21:50:07.088 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-29 21:50:07.088 -04:00 [DBG] Secret id found: angular_spa
2020-08-29 21:50:07.098 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:50:07.098 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:50:07.098 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-29 21:50:07.098 -04:00 [DBG] Client validation success
2020-08-29 21:50:07.098 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000028-0009-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:50:07.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-29 21:50:07.098 -04:00 [DBG] Start token request validation
2020-08-29 21:50:07.098 -04:00 [DBG] Start validation of authorization code token request
2020-08-29 21:50:07.099 -04:00 [DBG] r91AuCT3f6wrN3K6F90kwdmnRZU2uwJ5CFI1A0yaaV8= found in database: true
2020-08-29 21:50:07.101 -04:00 [DBG] removing r91AuCT3f6wrN3K6F90kwdmnRZU2uwJ5CFI1A0yaaV8= persisted grant from database
2020-08-29 21:50:07.103 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-29 21:50:07.105 -04:00 [DBG] Validation of authorization code token request success
2020-08-29 21:50:07.105 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"B_anhn0uRRP99yosuS466V83OHsNK_AwwSarp7GuNiA","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"B_anhn0uRRP99yosuS466V83OHsNK_AwwSarp7GuNiA","redirect_uri":"https://localhost:4200","code_verifier":"Q29fMWhWd0piV18uS2hieVFCU0tSemxKTnRJb2NFY1BNX1NfVWVPMXdueVdB","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-29 21:50:07.111 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:50:07.111 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:50:07.112 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:50:07.113 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:50:07.113 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-29 21:50:07.113 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 21:50:07.126 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:50:07.126 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:50:07.127 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:50:07.128 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:50:07.129 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-29 21:50:07.129 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-29 21:50:07.130 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****TBYQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****DlPg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000028-0009-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:50:07.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 21:50:07.130 -04:00 [DBG] Token request success.
2020-08-29 21:50:07.139 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 21:50:07.139 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 21:50:07.139 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 21:50:07.139 -04:00 [DBG] Rendering check session result
2020-08-29 21:50:07.140 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 21:50:07.141 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:50:07.141 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:50:07.143 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 21:50:07.144 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:50:07.144 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:50:07.145 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-29 21:50:07.147 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-29 21:50:07.147 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-29 21:50:07.147 -04:00 [DBG] Start userinfo request
2020-08-29 21:50:07.147 -04:00 [DBG] Bearer token found in header
2020-08-29 21:50:07.155 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:50:07.155 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:50:07.162 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:50:07.162 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:50:07.163 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 21:50:07.163 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598752207,"exp":1598755807,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598751901,"idp":"local","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-29 21:50:07.164 -04:00 [DBG] Creating userinfo response
2020-08-29 21:50:07.164 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 21:50:07.164 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 21:50:07.165 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:50:07.165 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-29 21:50:07.165 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 21:50:07.166 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:50:07.170 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-29 21:50:07.170 -04:00 [DBG] End userinfo request
2020-08-29 21:50:12.516 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-29 21:50:12.516 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-29 21:50:12.516 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-29 21:50:12.517 -04:00 [DBG] Processing signout request for 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 21:50:12.517 -04:00 [DBG] Start end session request validation
2020-08-29 21:50:12.517 -04:00 [DBG] Start identity token validation
2020-08-29 21:50:12.525 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:50:12.525 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:50:12.525 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-29 21:50:12.527 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 21:50:12.527 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598752207,"exp":1598752507,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"MnNFYWlsSjlkcG1PSE5UUnlPUUNGblk5bklzWnZ-VkVlTjVPYi5hWlVOQ21j","iat":1598752207,"at_hash":"j5cnApQ0dJG1HmhfUz8EwQ","s_hash":"EKQerdoxAfcGKLupaKOfJg","sid":"DA4fjnRXZz6PFBlwsD1nSw","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598751901,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-29 21:50:12.528 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-08-29 21:50:12.528 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-29 21:50:12.532 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-29 21:50:12.533 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-29 21:50:12.533 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-29 21:50:12.533 -04:00 [INF] {"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000045-0008-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:50:12.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-29 21:50:12.564 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-08-29 21:50:12.564 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-08-29 21:50:12.564 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-08-29 21:50:12.564 -04:00 [DBG] Processing signout callback request
2020-08-29 21:50:12.572 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:50:12.572 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:50:12.572 -04:00 [DBG] No client front-channel logout URLs
2020-08-29 21:50:12.572 -04:00 [DBG] No client back-channel logout URLs
2020-08-29 21:50:12.572 -04:00 [INF] Successful signout callback.
2020-08-29 21:50:12.572 -04:00 [DBG] No client front-channel iframe urls
2020-08-29 21:50:12.572 -04:00 [DBG] No client back-channel iframe urls
2020-08-29 21:50:15.722 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 21:50:15.723 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:50:15.723 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:50:15.723 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 21:50:15.724 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 21:50:15.724 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 21:50:15.724 -04:00 [DBG] Start discovery request
2020-08-29 21:50:15.726 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 21:50:15.755 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 21:50:15.757 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:50:15.757 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:50:15.757 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 21:50:15.757 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 21:50:15.757 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 21:50:15.757 -04:00 [DBG] Start key discovery request
2020-08-29 21:50:16.820 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 21:50:16.821 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 21:50:16.821 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 21:50:16.821 -04:00 [DBG] Start authorize request
2020-08-29 21:50:16.821 -04:00 [DBG] No user present in authorize request
2020-08-29 21:50:16.821 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:50:16.828 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:50:16.828 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:50:16.828 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"Zm1wMWhQNl9wNjE1MVZCSHZHWG5JYVF0SVo0ZXhadG8zT3VoMjhkZWNxQjRJ","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"v-AplKdax_LllD0WRHueiobi2Lwiuz9VJFA1pMlzy_I","code_challenge_method":"S256","nonce":"Zm1wMWhQNl9wNjE1MVZCSHZHWG5JYVF0SVo0ZXhadG8zT3VoMjhkZWNxQjRJ","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 21:50:16.828 -04:00 [ERR] Request validation failed
2020-08-29 21:50:16.828 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"Zm1wMWhQNl9wNjE1MVZCSHZHWG5JYVF0SVo0ZXhadG8zT3VoMjhkZWNxQjRJ","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"v-AplKdax_LllD0WRHueiobi2Lwiuz9VJFA1pMlzy_I","code_challenge_method":"S256","nonce":"Zm1wMWhQNl9wNjE1MVZCSHZHWG5JYVF0SVo0ZXhadG8zT3VoMjhkZWNxQjRJ","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 21:50:16.828 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000044-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:50:16.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 21:50:44.389 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 21:50:44.390 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 21:50:44.390 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 21:50:44.390 -04:00 [DBG] Start authorize request
2020-08-29 21:50:44.390 -04:00 [DBG] No user present in authorize request
2020-08-29 21:50:44.390 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:50:44.410 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:50:44.410 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:50:44.410 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 21:50:44.412 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:50:44.413 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:50:44.414 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:50:44.417 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:50:44.417 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 21:50:44.418 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"QVhyRnh4YUQuRDBnODhaaUN-WkVudEN2Ym5xYTMtcnZPY3hnaXFMYlRZSXJCsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"QVhyRnh4YUQuRDBnODhaaUN-WkVudEN2Ym5xYTMtcnZPY3hnaXFMYlRZSXJC","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"QVhyRnh4YUQuRDBnODhaaUN-WkVudEN2Ym5xYTMtcnZPY3hnaXFMYlRZSXJCsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"hXmPu9MmBVdrYA-Lg7DtypNtNADvq1mDN7XatkeVccU","code_challenge_method":"S256","nonce":"QVhyRnh4YUQuRDBnODhaaUN-WkVudEN2Ym5xYTMtcnZPY3hnaXFMYlRZSXJC"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 21:50:44.418 -04:00 [INF] Showing login: User is not authenticated
2020-08-29 21:50:44.421 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:50:44.432 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:50:44.432 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:50:44.432 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 21:50:44.433 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:50:44.434 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:50:44.435 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:50:44.436 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:50:44.436 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 21:50:44.443 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:50:44.443 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:50:48.212 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-29 21:50:48.214 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:50:48.223 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:50:48.223 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:50:48.223 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 21:50:48.224 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:50:48.225 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:50:48.226 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:50:48.227 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:50:48.227 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 21:50:48.234 -04:00 [DBG] Augmenting SignInContext
2020-08-29 21:50:48.234 -04:00 [DBG] Adding idp claim with value: local
2020-08-29 21:50:48.234 -04:00 [DBG] Adding auth_time claim with value: 1598752248
2020-08-29 21:50:48.235 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 21:50:48.236 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"8000002c-0004-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:50:48.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-29 21:50:48.242 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:50:48.242 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:50:48.247 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-29 21:50:48.250 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-29 21:50:48.250 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-29 21:50:48.250 -04:00 [DBG] Start authorize callback request
2020-08-29 21:50:48.250 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 21:50:48.251 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:50:48.258 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:50:48.258 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:50:48.258 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 21:50:48.259 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:50:48.260 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:50:48.261 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:50:48.262 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:50:48.262 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 21:50:48.263 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"QVhyRnh4YUQuRDBnODhaaUN-WkVudEN2Ym5xYTMtcnZPY3hnaXFMYlRZSXJCsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"QVhyRnh4YUQuRDBnODhaaUN-WkVudEN2Ym5xYTMtcnZPY3hnaXFMYlRZSXJC","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"XCakLhMoDPKqSakI9tZhsA","Raw":{"response_type":"code","client_id":"angular_spa","state":"QVhyRnh4YUQuRDBnODhaaUN-WkVudEN2Ym5xYTMtcnZPY3hnaXFMYlRZSXJCsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"hXmPu9MmBVdrYA-Lg7DtypNtNADvq1mDN7XatkeVccU","code_challenge_method":"S256","nonce":"QVhyRnh4YUQuRDBnODhaaUN-WkVudEN2Ym5xYTMtcnZPY3hnaXFMYlRZSXJC"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 21:50:48.264 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-29 21:50:48.264 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-29 21:50:48.265 -04:00 [DBG] lXqFjO0XsljUzOoTVTQXzzoP5wM4XS5ORCJ+qglctyA= not found in database
2020-08-29 21:50:48.267 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****51W0","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000005a-0006-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:50:48.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 21:50:48.267 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"QVhyRnh4YUQuRDBnODhaaUN-WkVudEN2Ym5xYTMtcnZPY3hnaXFMYlRZSXJCsemicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-29 21:50:48.267 -04:00 [DBG] Augmenting SignInContext
2020-08-29 21:50:48.268 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 21:50:48.468 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 21:50:48.470 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:50:48.470 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:50:48.470 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 21:50:48.470 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 21:50:48.471 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 21:50:48.471 -04:00 [DBG] Start discovery request
2020-08-29 21:50:48.475 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 21:50:48.513 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 21:50:48.515 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:50:48.515 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:50:48.515 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 21:50:48.515 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 21:50:48.515 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 21:50:48.515 -04:00 [DBG] Start key discovery request
2020-08-29 21:50:49.528 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-29 21:50:49.529 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:50:49.529 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:50:49.529 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-29 21:50:49.530 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-29 21:50:49.530 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-29 21:50:49.530 -04:00 [DBG] Start token request.
2020-08-29 21:50:49.530 -04:00 [DBG] Start client validation
2020-08-29 21:50:49.530 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-29 21:50:49.530 -04:00 [DBG] Start parsing for secret in post body
2020-08-29 21:50:49.530 -04:00 [DBG] client id without secret found
2020-08-29 21:50:49.530 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-29 21:50:49.530 -04:00 [DBG] Secret id found: angular_spa
2020-08-29 21:50:49.539 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:50:49.539 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:50:49.539 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-29 21:50:49.539 -04:00 [DBG] Client validation success
2020-08-29 21:50:49.539 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000016-0003-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:50:49.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-29 21:50:49.539 -04:00 [DBG] Start token request validation
2020-08-29 21:50:49.539 -04:00 [DBG] Start validation of authorization code token request
2020-08-29 21:50:49.540 -04:00 [DBG] lXqFjO0XsljUzOoTVTQXzzoP5wM4XS5ORCJ+qglctyA= found in database: true
2020-08-29 21:50:49.542 -04:00 [DBG] removing lXqFjO0XsljUzOoTVTQXzzoP5wM4XS5ORCJ+qglctyA= persisted grant from database
2020-08-29 21:50:49.544 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-29 21:50:49.545 -04:00 [DBG] Validation of authorization code token request success
2020-08-29 21:50:49.545 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"bqcikiLxsjZN07MmkynX0uUsnox72nx4r6Yv7uf51W0","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"bqcikiLxsjZN07MmkynX0uUsnox72nx4r6Yv7uf51W0","redirect_uri":"https://localhost:4200","code_verifier":"Y35hQ04wWkttZ2Z-Q0Z3NC1pTUJ1NjV2eEdOc1lfN3lCZ1o4RDkycEV1RnJx","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-29 21:50:49.552 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:50:49.552 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:50:49.553 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:50:49.554 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:50:49.554 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-29 21:50:49.554 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 21:50:49.565 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:50:49.565 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:50:49.566 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:50:49.567 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:50:49.567 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-29 21:50:49.567 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-29 21:50:49.568 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****HT1A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****uj8w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000016-0003-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:50:49.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 21:50:49.568 -04:00 [DBG] Token request success.
2020-08-29 21:50:49.577 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 21:50:49.577 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 21:50:49.577 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 21:50:49.577 -04:00 [DBG] Rendering check session result
2020-08-29 21:50:49.578 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 21:50:49.579 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:50:49.579 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:50:49.581 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 21:50:49.582 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:50:49.582 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:50:49.582 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-29 21:50:49.582 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-29 21:50:49.582 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-29 21:50:49.583 -04:00 [DBG] Start userinfo request
2020-08-29 21:50:49.583 -04:00 [DBG] Bearer token found in header
2020-08-29 21:50:49.591 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:50:49.591 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:50:49.598 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:50:49.598 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:50:49.600 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 21:50:49.600 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598752249,"exp":1598755849,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598752248,"idp":"local","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-29 21:50:49.600 -04:00 [DBG] Creating userinfo response
2020-08-29 21:50:49.600 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 21:50:49.600 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 21:50:49.602 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:50:49.602 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-29 21:50:49.602 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 21:50:49.603 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:50:49.607 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-29 21:50:49.607 -04:00 [DBG] End userinfo request
2020-08-29 21:50:55.632 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-29 21:50:55.635 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-29 21:50:55.635 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-29 21:50:55.635 -04:00 [DBG] Processing signout request for 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 21:50:55.635 -04:00 [DBG] Start end session request validation
2020-08-29 21:50:55.635 -04:00 [DBG] Start identity token validation
2020-08-29 21:50:55.643 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:50:55.643 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:50:55.643 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-29 21:50:55.645 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 21:50:55.645 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598752249,"exp":1598752549,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"QVhyRnh4YUQuRDBnODhaaUN-WkVudEN2Ym5xYTMtcnZPY3hnaXFMYlRZSXJC","iat":1598752249,"at_hash":"zPZxZ0rD-Mfwrt3RJgsZVA","s_hash":"pNlvPFJ4U9jUn2STUMwKCQ","sid":"XCakLhMoDPKqSakI9tZhsA","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598752248,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-29 21:50:55.645 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-08-29 21:50:55.645 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-29 21:50:55.649 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-29 21:50:55.649 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-29 21:50:55.650 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-29 21:50:55.650 -04:00 [INF] {"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000014-000b-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:50:55.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-29 21:50:55.681 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-08-29 21:50:55.684 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-08-29 21:50:55.684 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-08-29 21:50:55.684 -04:00 [DBG] Processing signout callback request
2020-08-29 21:50:55.692 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:50:55.692 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:50:55.692 -04:00 [DBG] No client front-channel logout URLs
2020-08-29 21:50:55.692 -04:00 [DBG] No client back-channel logout URLs
2020-08-29 21:50:55.692 -04:00 [INF] Successful signout callback.
2020-08-29 21:50:55.692 -04:00 [DBG] No client front-channel iframe urls
2020-08-29 21:50:55.692 -04:00 [DBG] No client back-channel iframe urls
2020-08-29 21:50:59.023 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 21:50:59.024 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:50:59.024 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:50:59.025 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 21:50:59.025 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 21:50:59.025 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 21:50:59.025 -04:00 [DBG] Start discovery request
2020-08-29 21:50:59.028 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 21:50:59.069 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 21:50:59.071 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:50:59.071 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:50:59.071 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 21:50:59.071 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 21:50:59.071 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 21:50:59.071 -04:00 [DBG] Start key discovery request
2020-08-29 21:51:00.093 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 21:51:00.093 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 21:51:00.093 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 21:51:00.093 -04:00 [DBG] Start authorize request
2020-08-29 21:51:00.093 -04:00 [DBG] No user present in authorize request
2020-08-29 21:51:00.093 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:51:00.100 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:51:00.100 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:51:00.101 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"NGk0bWtEWjVpbkk0RUtWSkdiSUI3elktdnYtLUJhNUlxYl9vRzRickZlZnZ-","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"5ZlJrV0tVpAxm4ZmJa5UPYWEcmTP3iFFGvcF4FiZEEU","code_challenge_method":"S256","nonce":"NGk0bWtEWjVpbkk0RUtWSkdiSUI3elktdnYtLUJhNUlxYl9vRzRickZlZnZ-","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 21:51:00.101 -04:00 [ERR] Request validation failed
2020-08-29 21:51:00.101 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"NGk0bWtEWjVpbkk0RUtWSkdiSUI3elktdnYtLUJhNUlxYl9vRzRickZlZnZ-","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"5ZlJrV0tVpAxm4ZmJa5UPYWEcmTP3iFFGvcF4FiZEEU","code_challenge_method":"S256","nonce":"NGk0bWtEWjVpbkk0RUtWSkdiSUI3elktdnYtLUJhNUlxYl9vRzRickZlZnZ-","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 21:51:00.101 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000034-0004-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:51:00.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 21:51:17.034 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 21:51:17.034 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 21:51:17.034 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 21:51:17.034 -04:00 [DBG] Start authorize request
2020-08-29 21:51:17.034 -04:00 [DBG] No user present in authorize request
2020-08-29 21:51:17.034 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:51:17.044 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:51:17.044 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:51:17.044 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 21:51:17.045 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:51:17.046 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:51:17.047 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:51:17.048 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:51:17.048 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 21:51:17.048 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"Ukx5NDN-Y3ZydC5nV1RERW1SYmZ3Ni0wdDI0ZzJxVlpBR1JJa0dudXFXeVlPsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"Ukx5NDN-Y3ZydC5nV1RERW1SYmZ3Ni0wdDI0ZzJxVlpBR1JJa0dudXFXeVlP","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"Ukx5NDN-Y3ZydC5nV1RERW1SYmZ3Ni0wdDI0ZzJxVlpBR1JJa0dudXFXeVlPsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"39grFphSMYTnv544s9QVQ8AjjCHGRynQSax0uaiBnEg","code_challenge_method":"S256","nonce":"Ukx5NDN-Y3ZydC5nV1RERW1SYmZ3Ni0wdDI0ZzJxVlpBR1JJa0dudXFXeVlP"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 21:51:17.048 -04:00 [INF] Showing login: User is not authenticated
2020-08-29 21:51:17.052 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:51:17.060 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:51:17.060 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:51:17.060 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 21:51:17.061 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:51:17.062 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:51:17.063 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:51:17.064 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:51:17.065 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 21:51:17.071 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:51:17.071 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:51:18.814 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-29 21:51:18.815 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:51:18.824 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:51:18.824 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:51:18.824 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 21:51:18.825 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:51:18.826 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:51:18.827 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:51:18.828 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:51:18.828 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 21:51:18.834 -04:00 [DBG] Augmenting SignInContext
2020-08-29 21:51:18.834 -04:00 [DBG] Adding idp claim with value: local
2020-08-29 21:51:18.834 -04:00 [DBG] Adding auth_time claim with value: 1598752278
2020-08-29 21:51:18.834 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 21:51:18.835 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"8000005c-0006-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:51:18.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-29 21:51:18.841 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:51:18.841 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:51:18.845 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-29 21:51:18.845 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-29 21:51:18.845 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-29 21:51:18.845 -04:00 [DBG] Start authorize callback request
2020-08-29 21:51:18.845 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 21:51:18.846 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:51:18.852 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:51:18.853 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:51:18.853 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 21:51:18.854 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:51:18.855 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:51:18.856 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:51:18.857 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:51:18.858 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 21:51:18.858 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"Ukx5NDN-Y3ZydC5nV1RERW1SYmZ3Ni0wdDI0ZzJxVlpBR1JJa0dudXFXeVlPsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"Ukx5NDN-Y3ZydC5nV1RERW1SYmZ3Ni0wdDI0ZzJxVlpBR1JJa0dudXFXeVlP","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"4upDhG9NAMrqNERik4aTBA","Raw":{"response_type":"code","client_id":"angular_spa","state":"Ukx5NDN-Y3ZydC5nV1RERW1SYmZ3Ni0wdDI0ZzJxVlpBR1JJa0dudXFXeVlPsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"39grFphSMYTnv544s9QVQ8AjjCHGRynQSax0uaiBnEg","code_challenge_method":"S256","nonce":"Ukx5NDN-Y3ZydC5nV1RERW1SYmZ3Ni0wdDI0ZzJxVlpBR1JJa0dudXFXeVlP"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 21:51:18.859 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-29 21:51:18.859 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-29 21:51:18.860 -04:00 [DBG] cCCTUNbqdNxRKSE5B05PC40sC/sokjOh8rIXXV7yQag= not found in database
2020-08-29 21:51:18.862 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****vqk4","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000070-000a-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:51:18.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 21:51:18.862 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"Ukx5NDN-Y3ZydC5nV1RERW1SYmZ3Ni0wdDI0ZzJxVlpBR1JJa0dudXFXeVlPsemicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-29 21:51:18.862 -04:00 [DBG] Augmenting SignInContext
2020-08-29 21:51:18.863 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 21:51:19.652 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 21:51:19.655 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:51:19.655 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:51:19.655 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 21:51:19.655 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 21:51:19.655 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 21:51:19.655 -04:00 [DBG] Start discovery request
2020-08-29 21:51:19.662 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 21:51:19.694 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 21:51:19.699 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:51:19.699 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:51:19.699 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 21:51:19.699 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 21:51:19.699 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 21:51:19.700 -04:00 [DBG] Start key discovery request
2020-08-29 21:51:20.744 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-29 21:51:20.746 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:51:20.746 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:51:20.746 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-29 21:51:20.746 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-29 21:51:20.746 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-29 21:51:20.747 -04:00 [DBG] Start token request.
2020-08-29 21:51:20.747 -04:00 [DBG] Start client validation
2020-08-29 21:51:20.747 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-29 21:51:20.747 -04:00 [DBG] Start parsing for secret in post body
2020-08-29 21:51:20.747 -04:00 [DBG] client id without secret found
2020-08-29 21:51:20.747 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-29 21:51:20.747 -04:00 [DBG] Secret id found: angular_spa
2020-08-29 21:51:20.755 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:51:20.755 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:51:20.755 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-29 21:51:20.755 -04:00 [DBG] Client validation success
2020-08-29 21:51:20.755 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000072-000a-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:51:20.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-29 21:51:20.755 -04:00 [DBG] Start token request validation
2020-08-29 21:51:20.756 -04:00 [DBG] Start validation of authorization code token request
2020-08-29 21:51:20.757 -04:00 [DBG] cCCTUNbqdNxRKSE5B05PC40sC/sokjOh8rIXXV7yQag= found in database: true
2020-08-29 21:51:20.758 -04:00 [DBG] removing cCCTUNbqdNxRKSE5B05PC40sC/sokjOh8rIXXV7yQag= persisted grant from database
2020-08-29 21:51:20.760 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-29 21:51:20.762 -04:00 [DBG] Validation of authorization code token request success
2020-08-29 21:51:20.762 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"uBRjqxfuOXumCCv2aexxLPJLUXIeim7V33z65Livqk4","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"uBRjqxfuOXumCCv2aexxLPJLUXIeim7V33z65Livqk4","redirect_uri":"https://localhost:4200","code_verifier":"S0lIYVZBYmNKY3hoNn5wQX5pMno3Q2J0amNHeU5DaUx6UGFvVWhxU1MyWmRt","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-29 21:51:20.768 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:51:20.768 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:51:20.769 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:51:20.770 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:51:20.770 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-29 21:51:20.770 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 21:51:20.781 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:51:20.781 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:51:20.782 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:51:20.783 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:51:20.783 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-29 21:51:20.783 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-29 21:51:20.784 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****cmCQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****9M7w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000072-000a-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:51:20.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 21:51:20.784 -04:00 [DBG] Token request success.
2020-08-29 21:51:20.794 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 21:51:20.795 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 21:51:20.795 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 21:51:20.795 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 21:51:20.795 -04:00 [DBG] Rendering check session result
2020-08-29 21:51:20.796 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:51:20.796 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:51:20.798 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 21:51:20.799 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:51:20.799 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:51:20.800 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-29 21:51:20.800 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-29 21:51:20.800 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-29 21:51:20.800 -04:00 [DBG] Start userinfo request
2020-08-29 21:51:20.800 -04:00 [DBG] Bearer token found in header
2020-08-29 21:51:20.808 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:51:20.808 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:51:20.815 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:51:20.815 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:51:20.817 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 21:51:20.817 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598752280,"exp":1598755880,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598752278,"idp":"local","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-29 21:51:20.817 -04:00 [DBG] Creating userinfo response
2020-08-29 21:51:20.817 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 21:51:20.817 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 21:51:20.818 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:51:20.818 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-29 21:51:20.818 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 21:51:20.820 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:51:20.824 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-29 21:51:20.824 -04:00 [DBG] End userinfo request
2020-08-29 21:53:08.642 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-29 21:53:08.644 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-29 21:53:08.644 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-29 21:53:08.644 -04:00 [DBG] Processing signout request for 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 21:53:08.644 -04:00 [DBG] Start end session request validation
2020-08-29 21:53:08.644 -04:00 [DBG] Start identity token validation
2020-08-29 21:53:08.664 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:53:08.664 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:53:08.664 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-29 21:53:08.666 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 21:53:08.666 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598752280,"exp":1598752580,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"Ukx5NDN-Y3ZydC5nV1RERW1SYmZ3Ni0wdDI0ZzJxVlpBR1JJa0dudXFXeVlP","iat":1598752280,"at_hash":"kJTiUlIiR2zuXKhzr09e7Q","s_hash":"dCHf7YDMQL77hleG6Lf3pQ","sid":"4upDhG9NAMrqNERik4aTBA","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598752278,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-29 21:53:08.666 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-08-29 21:53:08.666 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-29 21:53:08.672 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-29 21:53:08.672 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-29 21:53:08.672 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-29 21:53:08.672 -04:00 [INF] {"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000060-0006-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:53:08.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-29 21:53:08.702 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-08-29 21:53:08.702 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-08-29 21:53:08.702 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-08-29 21:53:08.702 -04:00 [DBG] Processing signout callback request
2020-08-29 21:53:08.711 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:53:08.712 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:53:08.712 -04:00 [DBG] No client front-channel logout URLs
2020-08-29 21:53:08.712 -04:00 [DBG] No client back-channel logout URLs
2020-08-29 21:53:08.714 -04:00 [INF] Successful signout callback.
2020-08-29 21:53:08.714 -04:00 [DBG] No client front-channel iframe urls
2020-08-29 21:53:08.714 -04:00 [DBG] No client back-channel iframe urls
2020-08-29 21:53:11.106 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 21:53:11.108 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:53:11.108 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:53:11.108 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 21:53:11.108 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 21:53:11.108 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 21:53:11.108 -04:00 [DBG] Start discovery request
2020-08-29 21:53:11.112 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 21:53:11.140 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 21:53:11.142 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:53:11.142 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:53:11.142 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 21:53:11.142 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 21:53:11.142 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 21:53:11.142 -04:00 [DBG] Start key discovery request
2020-08-29 21:53:12.171 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 21:53:12.172 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 21:53:12.172 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 21:53:12.172 -04:00 [DBG] Start authorize request
2020-08-29 21:53:12.172 -04:00 [DBG] No user present in authorize request
2020-08-29 21:53:12.172 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:53:12.180 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:53:12.180 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:53:12.180 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"VHRlRVFDSDJhQ0MxSllnWUcxWG1tZE44NS5mNGVzbjJYWkdMWm4xaGJfcVZl","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"BzrGJ5LtmMNB2YqCW0H9J-rW6r-fFxpGjWakEj700-M","code_challenge_method":"S256","nonce":"VHRlRVFDSDJhQ0MxSllnWUcxWG1tZE44NS5mNGVzbjJYWkdMWm4xaGJfcVZl","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 21:53:12.180 -04:00 [ERR] Request validation failed
2020-08-29 21:53:12.180 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"VHRlRVFDSDJhQ0MxSllnWUcxWG1tZE44NS5mNGVzbjJYWkdMWm4xaGJfcVZl","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"BzrGJ5LtmMNB2YqCW0H9J-rW6r-fFxpGjWakEj700-M","code_challenge_method":"S256","nonce":"VHRlRVFDSDJhQ0MxSllnWUcxWG1tZE44NS5mNGVzbjJYWkdMWm4xaGJfcVZl","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 21:53:12.180 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000050-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:53:12.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 21:53:19.088 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 21:53:19.089 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 21:53:19.089 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 21:53:19.089 -04:00 [DBG] Start authorize request
2020-08-29 21:53:19.089 -04:00 [DBG] No user present in authorize request
2020-08-29 21:53:19.089 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:53:19.097 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:53:19.097 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:53:19.097 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 21:53:19.099 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:53:19.100 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:53:19.101 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:53:19.102 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:53:19.102 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 21:53:19.102 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"RWctczhMTnpPOS1wazcySUF2ZFpnV1JuaGtsSTdUWlZZSklqX3RPaHJ0bUt4semicolon%2Fextras%2Fadmin2","UiLocales":null,"Nonce":"RWctczhMTnpPOS1wazcySUF2ZFpnV1JuaGtsSTdUWlZZSklqX3RPaHJ0bUt4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"RWctczhMTnpPOS1wazcySUF2ZFpnV1JuaGtsSTdUWlZZSklqX3RPaHJ0bUt4semicolon%2Fextras%2Fadmin2","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"3vPwDl1KN0SOQEUR_0XYouDVlwIdP7v5elUNtvfUr7Y","code_challenge_method":"S256","nonce":"RWctczhMTnpPOS1wazcySUF2ZFpnV1JuaGtsSTdUWlZZSklqX3RPaHJ0bUt4"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 21:53:19.102 -04:00 [INF] Showing login: User is not authenticated
2020-08-29 21:53:19.107 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:53:19.115 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:53:19.115 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:53:19.115 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 21:53:19.116 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:53:19.117 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:53:19.118 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:53:19.119 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:53:19.119 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 21:53:19.126 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:53:19.126 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:53:21.599 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-29 21:53:21.601 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:53:21.609 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:53:21.609 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:53:21.609 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 21:53:21.610 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:53:21.611 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:53:21.612 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:53:21.613 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:53:21.613 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 21:53:21.619 -04:00 [DBG] Augmenting SignInContext
2020-08-29 21:53:21.619 -04:00 [DBG] Adding idp claim with value: local
2020-08-29 21:53:21.619 -04:00 [DBG] Adding auth_time claim with value: 1598752401
2020-08-29 21:53:21.619 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 21:53:21.620 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000064-0006-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:53:21.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-29 21:53:21.627 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:53:21.627 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:53:21.631 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-29 21:53:21.631 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-29 21:53:21.631 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-29 21:53:21.631 -04:00 [DBG] Start authorize callback request
2020-08-29 21:53:21.631 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 21:53:21.631 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 21:53:21.639 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:53:21.639 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:53:21.639 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 21:53:21.640 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:53:21.641 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:53:21.642 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:53:21.643 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:53:21.643 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 21:53:21.643 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"RWctczhMTnpPOS1wazcySUF2ZFpnV1JuaGtsSTdUWlZZSklqX3RPaHJ0bUt4semicolon%2Fextras%2Fadmin2","UiLocales":null,"Nonce":"RWctczhMTnpPOS1wazcySUF2ZFpnV1JuaGtsSTdUWlZZSklqX3RPaHJ0bUt4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"llM2nKvrRJ6F6mOoDZ5PFw","Raw":{"response_type":"code","client_id":"angular_spa","state":"RWctczhMTnpPOS1wazcySUF2ZFpnV1JuaGtsSTdUWlZZSklqX3RPaHJ0bUt4semicolon%2Fextras%2Fadmin2","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"3vPwDl1KN0SOQEUR_0XYouDVlwIdP7v5elUNtvfUr7Y","code_challenge_method":"S256","nonce":"RWctczhMTnpPOS1wazcySUF2ZFpnV1JuaGtsSTdUWlZZSklqX3RPaHJ0bUt4"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 21:53:21.645 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-29 21:53:21.645 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-29 21:53:21.646 -04:00 [DBG] CbUojnrNCdc0AT9ogNhwem8/trjLlN8sp266p5NUiwI= not found in database
2020-08-29 21:53:21.648 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****n5_8","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000036-0004-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:53:21.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 21:53:21.648 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"RWctczhMTnpPOS1wazcySUF2ZFpnV1JuaGtsSTdUWlZZSklqX3RPaHJ0bUt4semicolon%2Fextras%2Fadmin2","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-29 21:53:21.648 -04:00 [DBG] Augmenting SignInContext
2020-08-29 21:53:21.648 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 21:53:21.833 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 21:53:21.835 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:53:21.835 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:53:21.835 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 21:53:21.835 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 21:53:21.835 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 21:53:21.835 -04:00 [DBG] Start discovery request
2020-08-29 21:53:21.839 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 21:53:21.876 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 21:53:21.877 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:53:21.877 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:53:21.877 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 21:53:21.877 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 21:53:21.878 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 21:53:21.878 -04:00 [DBG] Start key discovery request
2020-08-29 21:53:22.891 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-29 21:53:22.892 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:53:22.893 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:53:22.893 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-29 21:53:22.893 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-29 21:53:22.893 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-29 21:53:22.893 -04:00 [DBG] Start token request.
2020-08-29 21:53:22.893 -04:00 [DBG] Start client validation
2020-08-29 21:53:22.893 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-29 21:53:22.893 -04:00 [DBG] Start parsing for secret in post body
2020-08-29 21:53:22.893 -04:00 [DBG] client id without secret found
2020-08-29 21:53:22.893 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-29 21:53:22.894 -04:00 [DBG] Secret id found: angular_spa
2020-08-29 21:53:22.902 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:53:22.902 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:53:22.902 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-29 21:53:22.902 -04:00 [DBG] Client validation success
2020-08-29 21:53:22.902 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000052-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:53:22.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-29 21:53:22.902 -04:00 [DBG] Start token request validation
2020-08-29 21:53:22.902 -04:00 [DBG] Start validation of authorization code token request
2020-08-29 21:53:22.903 -04:00 [DBG] CbUojnrNCdc0AT9ogNhwem8/trjLlN8sp266p5NUiwI= found in database: true
2020-08-29 21:53:22.904 -04:00 [DBG] removing CbUojnrNCdc0AT9ogNhwem8/trjLlN8sp266p5NUiwI= persisted grant from database
2020-08-29 21:53:22.906 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-29 21:53:22.907 -04:00 [DBG] Validation of authorization code token request success
2020-08-29 21:53:22.907 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"u3Hk66g_4oP-tJO00ll_mYLeP4Cc56wwpU7mLyrn5_8","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"u3Hk66g_4oP-tJO00ll_mYLeP4Cc56wwpU7mLyrn5_8","redirect_uri":"https://localhost:4200","code_verifier":"eGRRS1NsZVJ3Z2REYWppRnNWcDEtRVRLbjdhLi1XdDY2eGRiRGdfWFA4d0VY","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-29 21:53:22.913 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:53:22.913 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:53:22.914 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:53:22.915 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:53:22.916 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-29 21:53:22.916 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 21:53:22.925 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:53:22.925 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:53:22.926 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:53:22.927 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 21:53:22.927 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-29 21:53:22.927 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-29 21:53:22.928 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****QAsw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****AWOw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000052-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-30T01:53:22.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 21:53:22.928 -04:00 [DBG] Token request success.
2020-08-29 21:53:22.938 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 21:53:22.938 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 21:53:22.938 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 21:53:22.938 -04:00 [DBG] Rendering check session result
2020-08-29 21:53:22.939 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 21:53:22.940 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:53:22.941 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:53:22.942 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 21:53:22.944 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 21:53:22.944 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 21:53:22.944 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-29 21:53:22.944 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-29 21:53:22.944 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-29 21:53:22.944 -04:00 [DBG] Start userinfo request
2020-08-29 21:53:22.944 -04:00 [DBG] Bearer token found in header
2020-08-29 21:53:22.952 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:53:22.952 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:53:22.959 -04:00 [DBG] angular_spa found in database: true
2020-08-29 21:53:22.959 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 21:53:22.960 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 21:53:22.960 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598752402,"exp":1598756002,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598752401,"idp":"local","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-29 21:53:22.960 -04:00 [DBG] Creating userinfo response
2020-08-29 21:53:22.960 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 21:53:22.960 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 21:53:22.962 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:53:22.962 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-29 21:53:22.962 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 21:53:22.963 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 21:53:22.966 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-29 21:53:22.966 -04:00 [DBG] End userinfo request
2020-08-29 22:03:41.021 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 22:03:41.073 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:03:41.073 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:03:41.075 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 22:03:41.076 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 22:03:41.076 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 22:03:41.076 -04:00 [DBG] Start discovery request
2020-08-29 22:03:41.088 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 22:03:41.128 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 22:03:41.130 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:03:41.130 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:03:41.130 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 22:03:41.130 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 22:03:41.130 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 22:03:41.130 -04:00 [DBG] Start key discovery request
2020-08-29 22:05:05.515 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 22:05:05.524 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:05:05.524 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:05:05.524 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 22:05:05.524 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 22:05:05.525 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 22:05:05.525 -04:00 [DBG] Start discovery request
2020-08-29 22:05:05.531 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 22:05:05.555 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 22:05:05.557 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:05:05.557 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:05:05.557 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 22:05:05.557 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 22:05:05.558 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 22:05:05.558 -04:00 [DBG] Start key discovery request
2020-08-29 22:12:16.447 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 22:12:16.501 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:12:16.501 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:12:16.501 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 22:12:16.501 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 22:12:16.501 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 22:12:16.501 -04:00 [DBG] Start discovery request
2020-08-29 22:12:16.515 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 22:12:16.528 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 22:12:16.529 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:12:16.529 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:12:16.529 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 22:12:16.529 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 22:12:16.529 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 22:12:16.529 -04:00 [DBG] Start key discovery request
2020-08-29 22:12:18.571 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 22:12:18.573 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:12:18.573 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:12:18.573 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 22:12:18.575 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 22:12:18.575 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 22:12:18.575 -04:00 [DBG] Start discovery request
2020-08-29 22:12:18.578 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 22:12:18.611 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 22:12:18.613 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:12:18.613 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:12:18.613 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 22:12:18.613 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 22:12:18.613 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 22:12:18.613 -04:00 [DBG] Start key discovery request
2020-08-29 22:12:22.505 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 22:12:22.507 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:12:22.507 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:12:22.510 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 22:12:22.510 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 22:12:22.510 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 22:12:22.510 -04:00 [DBG] Start discovery request
2020-08-29 22:12:22.513 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 22:12:22.553 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 22:12:22.555 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:12:22.555 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:12:22.555 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 22:12:22.555 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 22:12:22.555 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 22:12:22.555 -04:00 [DBG] Start key discovery request
2020-08-29 22:15:20.404 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 22:15:20.407 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:15:20.407 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:15:20.408 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 22:15:20.408 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 22:15:20.408 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 22:15:20.408 -04:00 [DBG] Start discovery request
2020-08-29 22:15:20.412 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 22:15:20.438 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 22:15:20.440 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:15:20.440 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:15:20.440 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 22:15:20.440 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 22:15:20.440 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 22:15:20.440 -04:00 [DBG] Start key discovery request
2020-08-29 22:15:33.099 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 22:15:33.100 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:15:33.100 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:15:33.100 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 22:15:33.101 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 22:15:33.101 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 22:15:33.101 -04:00 [DBG] Start discovery request
2020-08-29 22:15:33.104 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 22:15:33.153 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 22:15:33.154 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:15:33.155 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:15:33.155 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 22:15:33.155 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 22:15:33.155 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 22:15:33.155 -04:00 [DBG] Start key discovery request
2020-08-29 22:15:34.351 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 22:15:34.351 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 22:15:34.351 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 22:15:34.351 -04:00 [DBG] Start discovery request
2020-08-29 22:15:34.354 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 22:15:34.381 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 22:15:34.381 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 22:15:34.381 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 22:15:34.381 -04:00 [DBG] Start key discovery request
2020-08-29 22:16:15.324 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 22:16:15.326 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:16:15.326 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:16:15.326 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 22:16:15.326 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 22:16:15.326 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 22:16:15.326 -04:00 [DBG] Start discovery request
2020-08-29 22:16:15.328 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 22:16:15.365 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 22:16:15.367 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:16:15.367 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:16:15.368 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 22:16:15.368 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 22:16:15.368 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 22:16:15.368 -04:00 [DBG] Start key discovery request
2020-08-29 22:16:50.107 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-29 22:16:50.107 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-29 22:16:50.107 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-29 22:16:50.107 -04:00 [DBG] Processing signout request for 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 22:16:50.108 -04:00 [DBG] Start end session request validation
2020-08-29 22:16:50.108 -04:00 [DBG] Start identity token validation
2020-08-29 22:16:50.132 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:16:50.132 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:16:50.132 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-29 22:16:50.136 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 22:16:50.136 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598752402,"exp":1598752702,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"RWctczhMTnpPOS1wazcySUF2ZFpnV1JuaGtsSTdUWlZZSklqX3RPaHJ0bUt4","iat":1598752402,"at_hash":"TeU0pewKWKA2BRODcwmYgA","s_hash":"fRG2-_Cd-oJBSrEKSmrL3w","sid":"llM2nKvrRJ6F6mOoDZ5PFw","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598752401,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-29 22:16:50.136 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-08-29 22:16:50.136 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-29 22:16:50.141 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-29 22:16:50.141 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-29 22:16:50.141 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-29 22:16:50.141 -04:00 [INF] {"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"8000005a-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-30T02:16:50.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-29 22:16:50.175 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-08-29 22:16:50.176 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-08-29 22:16:50.176 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-08-29 22:16:50.176 -04:00 [DBG] Processing signout callback request
2020-08-29 22:16:50.187 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:16:50.187 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:16:50.187 -04:00 [DBG] No client front-channel logout URLs
2020-08-29 22:16:50.187 -04:00 [DBG] No client back-channel logout URLs
2020-08-29 22:16:50.188 -04:00 [INF] Successful signout callback.
2020-08-29 22:16:50.188 -04:00 [DBG] No client front-channel iframe urls
2020-08-29 22:16:50.188 -04:00 [DBG] No client back-channel iframe urls
2020-08-29 22:16:51.948 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 22:16:51.949 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:16:51.949 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:16:51.949 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 22:16:51.949 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 22:16:51.949 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 22:16:51.950 -04:00 [DBG] Start discovery request
2020-08-29 22:16:51.952 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 22:16:51.997 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 22:16:51.999 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:16:51.999 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:16:51.999 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 22:16:51.999 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 22:16:51.999 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 22:16:51.999 -04:00 [DBG] Start key discovery request
2020-08-29 22:16:53.030 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 22:16:53.030 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 22:16:53.030 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 22:16:53.030 -04:00 [DBG] Start authorize request
2020-08-29 22:16:53.030 -04:00 [DBG] No user present in authorize request
2020-08-29 22:16:53.030 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 22:16:53.037 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:16:53.037 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:16:53.037 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"RUJiYUtILmxJblNoMEVNelVRYUdPUXlHN1lXRGJpSHdKMC1CN0IyRi1taGg4","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"aQQbaFZKBgYbin4jxO8N3GNXeREqyPHbS629UY8X5sM","code_challenge_method":"S256","nonce":"RUJiYUtILmxJblNoMEVNelVRYUdPUXlHN1lXRGJpSHdKMC1CN0IyRi1taGg4","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 22:16:53.037 -04:00 [ERR] Request validation failed
2020-08-29 22:16:53.038 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"RUJiYUtILmxJblNoMEVNelVRYUdPUXlHN1lXRGJpSHdKMC1CN0IyRi1taGg4","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"aQQbaFZKBgYbin4jxO8N3GNXeREqyPHbS629UY8X5sM","code_challenge_method":"S256","nonce":"RUJiYUtILmxJblNoMEVNelVRYUdPUXlHN1lXRGJpSHdKMC1CN0IyRi1taGg4","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 22:16:53.038 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000004-0008-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-30T02:16:53.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 22:17:00.738 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 22:17:00.739 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 22:17:00.739 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 22:17:00.739 -04:00 [DBG] Start authorize request
2020-08-29 22:17:00.739 -04:00 [DBG] No user present in authorize request
2020-08-29 22:17:00.739 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 22:17:00.746 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:17:00.746 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:17:00.746 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 22:17:00.749 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 22:17:00.757 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 22:17:00.759 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 22:17:00.760 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 22:17:00.760 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 22:17:00.760 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"SWp2YzBiaXRNMEdxRXMtLjY3TXhQZWM0UlRiNVdjMHg0eXZ1bnlYbE93Mkxwsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"SWp2YzBiaXRNMEdxRXMtLjY3TXhQZWM0UlRiNVdjMHg0eXZ1bnlYbE93Mkxw","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"SWp2YzBiaXRNMEdxRXMtLjY3TXhQZWM0UlRiNVdjMHg0eXZ1bnlYbE93Mkxwsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"ca6az53-nfWU4uEm-b-aOXALGAPAOrLCAQM10zO3frA","code_challenge_method":"S256","nonce":"SWp2YzBiaXRNMEdxRXMtLjY3TXhQZWM0UlRiNVdjMHg0eXZ1bnlYbE93Mkxw"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 22:17:00.760 -04:00 [INF] Showing login: User is not authenticated
2020-08-29 22:17:00.763 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 22:17:00.773 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:17:00.773 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:17:00.773 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 22:17:00.774 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 22:17:00.775 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 22:17:00.776 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 22:17:00.777 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 22:17:00.777 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 22:17:00.783 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:17:00.783 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:17:02.642 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-29 22:17:02.644 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 22:17:02.655 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:17:02.655 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:17:02.655 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 22:17:02.656 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 22:17:02.657 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 22:17:02.658 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 22:17:02.659 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 22:17:02.659 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 22:17:02.668 -04:00 [DBG] Augmenting SignInContext
2020-08-29 22:17:02.668 -04:00 [DBG] Adding idp claim with value: local
2020-08-29 22:17:02.668 -04:00 [DBG] Adding auth_time claim with value: 1598753822
2020-08-29 22:17:02.669 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 22:17:02.670 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000076-0006-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-30T02:17:02.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-29 22:17:02.676 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:17:02.676 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:17:02.680 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-29 22:17:02.680 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-29 22:17:02.680 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-29 22:17:02.680 -04:00 [DBG] Start authorize callback request
2020-08-29 22:17:02.680 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 22:17:02.680 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 22:17:02.687 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:17:02.687 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:17:02.687 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 22:17:02.689 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 22:17:02.690 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 22:17:02.691 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 22:17:02.692 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 22:17:02.692 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 22:17:02.693 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"SWp2YzBiaXRNMEdxRXMtLjY3TXhQZWM0UlRiNVdjMHg0eXZ1bnlYbE93Mkxwsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"SWp2YzBiaXRNMEdxRXMtLjY3TXhQZWM0UlRiNVdjMHg0eXZ1bnlYbE93Mkxw","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"gA1qnYEDis7Rrv44KJ6DLQ","Raw":{"response_type":"code","client_id":"angular_spa","state":"SWp2YzBiaXRNMEdxRXMtLjY3TXhQZWM0UlRiNVdjMHg0eXZ1bnlYbE93Mkxwsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"ca6az53-nfWU4uEm-b-aOXALGAPAOrLCAQM10zO3frA","code_challenge_method":"S256","nonce":"SWp2YzBiaXRNMEdxRXMtLjY3TXhQZWM0UlRiNVdjMHg0eXZ1bnlYbE93Mkxw"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 22:17:02.694 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-29 22:17:02.694 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-29 22:17:02.697 -04:00 [DBG] pQqukp6vMjq4nnIxxkgxjkr8ZSMxYoFlXeaKBvUjvpU= not found in database
2020-08-29 22:17:02.699 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****JuAs","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000087-000a-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-30T02:17:02.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 22:17:02.699 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"SWp2YzBiaXRNMEdxRXMtLjY3TXhQZWM0UlRiNVdjMHg0eXZ1bnlYbE93Mkxwsemicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-29 22:17:02.699 -04:00 [DBG] Augmenting SignInContext
2020-08-29 22:17:02.699 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 22:17:03.480 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 22:17:03.481 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:17:03.481 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:17:03.481 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 22:17:03.481 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 22:17:03.481 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 22:17:03.481 -04:00 [DBG] Start discovery request
2020-08-29 22:17:03.484 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 22:17:03.519 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 22:17:03.521 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:17:03.521 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:17:03.521 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 22:17:03.521 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 22:17:03.521 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 22:17:03.521 -04:00 [DBG] Start key discovery request
2020-08-29 22:17:04.583 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-29 22:17:04.584 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:17:04.584 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:17:04.585 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-29 22:17:04.585 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-29 22:17:04.585 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-29 22:17:04.585 -04:00 [DBG] Start token request.
2020-08-29 22:17:04.585 -04:00 [DBG] Start client validation
2020-08-29 22:17:04.585 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-29 22:17:04.585 -04:00 [DBG] Start parsing for secret in post body
2020-08-29 22:17:04.585 -04:00 [DBG] client id without secret found
2020-08-29 22:17:04.585 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-29 22:17:04.585 -04:00 [DBG] Secret id found: angular_spa
2020-08-29 22:17:04.593 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:17:04.593 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:17:04.593 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-29 22:17:04.593 -04:00 [DBG] Client validation success
2020-08-29 22:17:04.593 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000089-000a-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-30T02:17:04.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-29 22:17:04.593 -04:00 [DBG] Start token request validation
2020-08-29 22:17:04.593 -04:00 [DBG] Start validation of authorization code token request
2020-08-29 22:17:04.594 -04:00 [DBG] pQqukp6vMjq4nnIxxkgxjkr8ZSMxYoFlXeaKBvUjvpU= found in database: true
2020-08-29 22:17:04.595 -04:00 [DBG] removing pQqukp6vMjq4nnIxxkgxjkr8ZSMxYoFlXeaKBvUjvpU= persisted grant from database
2020-08-29 22:17:04.597 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-29 22:17:04.599 -04:00 [DBG] Validation of authorization code token request success
2020-08-29 22:17:04.599 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"TKvSC7ThUyomdgq0ZihTF1_bdM47-QqM0L5T1T1JuAs","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"TKvSC7ThUyomdgq0ZihTF1_bdM47-QqM0L5T1T1JuAs","redirect_uri":"https://localhost:4200","code_verifier":"WUJfYnRIQmUwbFJoODJ4b25OdUZIMVBnY3dUcUdNN3JHbDNaQmxBbWtMWHo4","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-29 22:17:04.606 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:17:04.606 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:17:04.607 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 22:17:04.608 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 22:17:04.608 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-29 22:17:04.608 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 22:17:04.618 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:17:04.619 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:17:04.620 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 22:17:04.621 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 22:17:04.621 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-29 22:17:04.621 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-29 22:17:04.622 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****Qirw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****6N7A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000089-000a-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-30T02:17:04.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 22:17:04.622 -04:00 [DBG] Token request success.
2020-08-29 22:17:04.630 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 22:17:04.630 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 22:17:04.630 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 22:17:04.630 -04:00 [DBG] Rendering check session result
2020-08-29 22:17:04.631 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 22:17:04.633 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:17:04.633 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:17:04.635 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 22:17:04.636 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:17:04.637 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:17:04.637 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-29 22:17:04.637 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-29 22:17:04.637 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-29 22:17:04.637 -04:00 [DBG] Start userinfo request
2020-08-29 22:17:04.637 -04:00 [DBG] Bearer token found in header
2020-08-29 22:17:04.645 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:17:04.645 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:17:04.652 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:17:04.652 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:17:04.654 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 22:17:04.654 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598753824,"exp":1598757424,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598753822,"idp":"local","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-29 22:17:04.654 -04:00 [DBG] Creating userinfo response
2020-08-29 22:17:04.654 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 22:17:04.654 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 22:17:04.656 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 22:17:04.656 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-29 22:17:04.656 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 22:17:04.657 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 22:17:04.661 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-29 22:17:04.661 -04:00 [DBG] End userinfo request
2020-08-29 22:17:26.326 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-29 22:17:26.326 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-29 22:17:26.326 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-29 22:17:26.326 -04:00 [DBG] Processing signout request for 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 22:17:26.326 -04:00 [DBG] Start end session request validation
2020-08-29 22:17:26.326 -04:00 [DBG] Start identity token validation
2020-08-29 22:17:26.334 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:17:26.334 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:17:26.334 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-29 22:17:26.339 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 22:17:26.339 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598753824,"exp":1598754124,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"SWp2YzBiaXRNMEdxRXMtLjY3TXhQZWM0UlRiNVdjMHg0eXZ1bnlYbE93Mkxw","iat":1598753824,"at_hash":"o4eDwZ3ZES8m_cHT374VmA","s_hash":"mTBO-048x_tiqBlFqWjwzg","sid":"gA1qnYEDis7Rrv44KJ6DLQ","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598753822,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-29 22:17:26.339 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-08-29 22:17:26.340 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-29 22:17:26.344 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-29 22:17:26.344 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-29 22:17:26.344 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-29 22:17:26.344 -04:00 [INF] {"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000032-0001-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-30T02:17:26.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-29 22:17:26.378 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-08-29 22:17:26.378 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-08-29 22:17:26.378 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-08-29 22:17:26.378 -04:00 [DBG] Processing signout callback request
2020-08-29 22:17:26.386 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:17:26.386 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:17:26.386 -04:00 [DBG] No client front-channel logout URLs
2020-08-29 22:17:26.386 -04:00 [DBG] No client back-channel logout URLs
2020-08-29 22:17:26.386 -04:00 [INF] Successful signout callback.
2020-08-29 22:17:26.386 -04:00 [DBG] No client front-channel iframe urls
2020-08-29 22:17:26.386 -04:00 [DBG] No client back-channel iframe urls
2020-08-29 22:17:29.027 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 22:17:29.029 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:17:29.029 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:17:29.029 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 22:17:29.029 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 22:17:29.029 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 22:17:29.029 -04:00 [DBG] Start discovery request
2020-08-29 22:17:29.031 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 22:17:29.081 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 22:17:29.083 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:17:29.083 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:17:29.083 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 22:17:29.083 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 22:17:29.083 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 22:17:29.083 -04:00 [DBG] Start key discovery request
2020-08-29 22:17:30.097 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 22:17:30.097 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 22:17:30.097 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 22:17:30.097 -04:00 [DBG] Start authorize request
2020-08-29 22:17:30.097 -04:00 [DBG] No user present in authorize request
2020-08-29 22:17:30.097 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 22:17:30.109 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:17:30.109 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:17:30.109 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"azNjZThGZ0tOVXF1X0RZeVNxckxoNEJmQ0lieEw3c1Z5MmRSNGlNMDNnVFh0","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"gEIjVbOpe3tEnn-7kzP5V9KIm8ddtEEnIKbl2O6hOQg","code_challenge_method":"S256","nonce":"azNjZThGZ0tOVXF1X0RZeVNxckxoNEJmQ0lieEw3c1Z5MmRSNGlNMDNnVFh0","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 22:17:30.109 -04:00 [ERR] Request validation failed
2020-08-29 22:17:30.109 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"azNjZThGZ0tOVXF1X0RZeVNxckxoNEJmQ0lieEw3c1Z5MmRSNGlNMDNnVFh0","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"gEIjVbOpe3tEnn-7kzP5V9KIm8ddtEEnIKbl2O6hOQg","code_challenge_method":"S256","nonce":"azNjZThGZ0tOVXF1X0RZeVNxckxoNEJmQ0lieEw3c1Z5MmRSNGlNMDNnVFh0","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 22:17:30.109 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000008b-000a-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-30T02:17:30.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-29 22:17:37.669 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-29 22:17:37.670 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-29 22:17:37.670 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-29 22:17:37.670 -04:00 [DBG] Start authorize request
2020-08-29 22:17:37.670 -04:00 [DBG] No user present in authorize request
2020-08-29 22:17:37.670 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 22:17:37.677 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:17:37.677 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:17:37.677 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 22:17:37.679 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 22:17:37.680 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 22:17:37.681 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 22:17:37.682 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 22:17:37.682 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 22:17:37.682 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"bi16UG9fRVVuNFdzTVhUfktDX3d1VjR1TE5TRzJBQ3pzMW1HR3AtZXRqcWcusemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"bi16UG9fRVVuNFdzTVhUfktDX3d1VjR1TE5TRzJBQ3pzMW1HR3AtZXRqcWcu","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"bi16UG9fRVVuNFdzTVhUfktDX3d1VjR1TE5TRzJBQ3pzMW1HR3AtZXRqcWcusemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"B_bl4vSlijhJLWufuRpLka428shjw3F2qK5Cyvqf7E8","code_challenge_method":"S256","nonce":"bi16UG9fRVVuNFdzTVhUfktDX3d1VjR1TE5TRzJBQ3pzMW1HR3AtZXRqcWcu"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 22:17:37.682 -04:00 [INF] Showing login: User is not authenticated
2020-08-29 22:17:37.685 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 22:17:37.692 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:17:37.692 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:17:37.692 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 22:17:37.694 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 22:17:37.695 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 22:17:37.696 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 22:17:37.696 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 22:17:37.697 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 22:17:37.702 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:17:37.702 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:17:39.841 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-29 22:17:39.842 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 22:17:39.850 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:17:39.850 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:17:39.850 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 22:17:39.852 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 22:17:39.854 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 22:17:39.857 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 22:17:39.858 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 22:17:39.858 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 22:17:39.864 -04:00 [DBG] Augmenting SignInContext
2020-08-29 22:17:39.864 -04:00 [DBG] Adding idp claim with value: local
2020-08-29 22:17:39.864 -04:00 [DBG] Adding auth_time claim with value: 1598753859
2020-08-29 22:17:39.864 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 22:17:39.865 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"8000008d-000a-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-30T02:17:39.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-29 22:17:39.872 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:17:39.872 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:17:39.875 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-29 22:17:39.875 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-29 22:17:39.875 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-29 22:17:39.875 -04:00 [DBG] Start authorize callback request
2020-08-29 22:17:39.876 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 22:17:39.876 -04:00 [DBG] Start authorize request protocol validation
2020-08-29 22:17:39.883 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:17:39.883 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:17:39.884 -04:00 [DBG] Checking for PKCE parameters
2020-08-29 22:17:39.885 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 22:17:39.886 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 22:17:39.888 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 22:17:39.888 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 22:17:39.889 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-29 22:17:39.889 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"bi16UG9fRVVuNFdzTVhUfktDX3d1VjR1TE5TRzJBQ3pzMW1HR3AtZXRqcWcusemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"bi16UG9fRVVuNFdzTVhUfktDX3d1VjR1TE5TRzJBQ3pzMW1HR3AtZXRqcWcu","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"7N67EXES50qyhoKqHUj90w","Raw":{"response_type":"code","client_id":"angular_spa","state":"bi16UG9fRVVuNFdzTVhUfktDX3d1VjR1TE5TRzJBQ3pzMW1HR3AtZXRqcWcusemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"B_bl4vSlijhJLWufuRpLka428shjw3F2qK5Cyvqf7E8","code_challenge_method":"S256","nonce":"bi16UG9fRVVuNFdzTVhUfktDX3d1VjR1TE5TRzJBQ3pzMW1HR3AtZXRqcWcu"},"$type":"AuthorizeRequestValidationLog"}
2020-08-29 22:17:39.890 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-29 22:17:39.890 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-29 22:17:39.891 -04:00 [DBG] nxBziGzTTPdmthSF5T1MSX/Tr7CAzkzNNborGwBOlms= not found in database
2020-08-29 22:17:39.893 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****AQCs","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000008f-000a-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-30T02:17:39.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 22:17:39.893 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"bi16UG9fRVVuNFdzTVhUfktDX3d1VjR1TE5TRzJBQ3pzMW1HR3AtZXRqcWcusemicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-29 22:17:39.893 -04:00 [DBG] Augmenting SignInContext
2020-08-29 22:17:39.893 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-29 22:17:40.079 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-29 22:17:40.080 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:17:40.080 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:17:40.080 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-29 22:17:40.081 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-29 22:17:40.081 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-29 22:17:40.081 -04:00 [DBG] Start discovery request
2020-08-29 22:17:40.083 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-29 22:17:40.114 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-29 22:17:40.116 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:17:40.116 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:17:40.117 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-29 22:17:40.117 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-29 22:17:40.117 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-29 22:17:40.117 -04:00 [DBG] Start key discovery request
2020-08-29 22:17:41.128 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-29 22:17:41.133 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:17:41.133 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:17:41.133 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-29 22:17:41.133 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-29 22:17:41.133 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-29 22:17:41.134 -04:00 [DBG] Start token request.
2020-08-29 22:17:41.134 -04:00 [DBG] Start client validation
2020-08-29 22:17:41.134 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-29 22:17:41.134 -04:00 [DBG] Start parsing for secret in post body
2020-08-29 22:17:41.134 -04:00 [DBG] client id without secret found
2020-08-29 22:17:41.134 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-29 22:17:41.134 -04:00 [DBG] Secret id found: angular_spa
2020-08-29 22:17:41.142 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:17:41.142 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:17:41.142 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-29 22:17:41.143 -04:00 [DBG] Client validation success
2020-08-29 22:17:41.143 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000062-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-30T02:17:41.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-29 22:17:41.143 -04:00 [DBG] Start token request validation
2020-08-29 22:17:41.143 -04:00 [DBG] Start validation of authorization code token request
2020-08-29 22:17:41.144 -04:00 [DBG] nxBziGzTTPdmthSF5T1MSX/Tr7CAzkzNNborGwBOlms= found in database: true
2020-08-29 22:17:41.145 -04:00 [DBG] removing nxBziGzTTPdmthSF5T1MSX/Tr7CAzkzNNborGwBOlms= persisted grant from database
2020-08-29 22:17:41.148 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-29 22:17:41.149 -04:00 [DBG] Validation of authorization code token request success
2020-08-29 22:17:41.150 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"0We2BVYUh2GdV1W0DtVDByIXEOyw8GJNIvHpkHSAQCs","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"0We2BVYUh2GdV1W0DtVDByIXEOyw8GJNIvHpkHSAQCs","redirect_uri":"https://localhost:4200","code_verifier":"Zk9ITTh0dVptc1JMWC43UFFmSUtMa1EzckdkYldqN2szeG1ucm9OZXhPaVhp","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-29 22:17:41.156 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:17:41.156 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:17:41.157 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 22:17:41.158 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 22:17:41.159 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-29 22:17:41.159 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-29 22:17:41.168 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:17:41.169 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:17:41.170 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 22:17:41.171 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-29 22:17:41.171 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-29 22:17:41.171 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-29 22:17:41.172 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****tPcg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****ypvg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000062-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-30T02:17:41.0000000Z","ProcessId":22768,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-29 22:17:41.172 -04:00 [DBG] Token request success.
2020-08-29 22:17:41.180 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-29 22:17:41.180 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-29 22:17:41.180 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-29 22:17:41.180 -04:00 [DBG] Rendering check session result
2020-08-29 22:17:41.180 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 22:17:41.182 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:17:41.182 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:17:41.184 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-29 22:17:41.185 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-29 22:17:41.185 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-29 22:17:41.185 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-29 22:17:41.185 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-29 22:17:41.185 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-29 22:17:41.185 -04:00 [DBG] Start userinfo request
2020-08-29 22:17:41.185 -04:00 [DBG] Bearer token found in header
2020-08-29 22:17:41.193 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:17:41.193 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:17:41.201 -04:00 [DBG] angular_spa found in database: true
2020-08-29 22:17:41.201 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-29 22:17:41.202 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-29 22:17:41.202 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598753861,"exp":1598757461,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598753859,"idp":"local","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-29 22:17:41.203 -04:00 [DBG] Creating userinfo response
2020-08-29 22:17:41.203 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 22:17:41.203 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 22:17:41.205 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 22:17:41.205 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-29 22:17:41.205 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-29 22:17:41.206 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-29 22:17:41.210 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-29 22:17:41.210 -04:00 [DBG] End userinfo request
2020-08-29 22:41:09.102 -04:00 [INF] Removing 0 grants
2020-08-29 22:41:09.115 -04:00 [INF] Removing 0 device flow codes
2020-08-29 23:41:09.172 -04:00 [INF] Removing 0 grants
2020-08-29 23:41:09.175 -04:00 [INF] Removing 0 device flow codes
2020-08-30 23:42:26.293 -04:00 [INF] Starting host...
2020-08-30 23:42:28.072 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-30 23:42:28.234 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-30 23:42:28.234 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-30 23:42:28.234 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-30 23:42:28.235 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-30 23:42:28.235 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-30 23:42:28.235 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-30 23:42:28.509 -04:00 [DBG] Login Url: /Account/Login
2020-08-30 23:42:28.510 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-30 23:42:28.510 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-30 23:42:28.510 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-30 23:42:28.510 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-30 23:42:28.510 -04:00 [DBG] Error Url: /home/error
2020-08-30 23:42:28.510 -04:00 [DBG] Error Id Parameter: errorId
2020-08-31 00:02:19.658 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 00:02:19.938 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 00:02:19.952 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 00:02:19.952 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 00:02:19.954 -04:00 [DBG] Start discovery request
2020-08-31 00:02:20.527 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:02:20.528 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:02:20.529 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 00:02:20.530 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 00:02:20.530 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 00:02:20.531 -04:00 [DBG] Start discovery request
2020-08-31 00:02:20.804 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 00:02:20.804 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 00:02:20.862 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 00:02:20.886 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:02:20.886 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:02:20.887 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 00:02:20.888 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 00:02:20.888 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 00:02:20.889 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 00:02:20.889 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 00:02:20.889 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 00:02:20.889 -04:00 [DBG] Start key discovery request
2020-08-31 00:02:20.889 -04:00 [DBG] Start key discovery request
2020-08-31 00:02:21.954 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 00:02:21.956 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 00:02:21.956 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 00:02:21.957 -04:00 [DBG] Start authorize request
2020-08-31 00:02:21.961 -04:00 [DBG] No user present in authorize request
2020-08-31 00:02:21.962 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 00:02:22.154 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:02:22.158 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:02:22.170 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"V2hqLXhWZHktUEVqUjRmbUVENFVMT3dFeS1sbTdQQTlvVkNsdmNkdEh4ZHdx","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"RwQWsQPV3o-VQxGfy4ddYnMi8YFiklcVYXuTqityP4U","code_challenge_method":"S256","nonce":"V2hqLXhWZHktUEVqUjRmbUVENFVMT3dFeS1sbTdQQTlvVkNsdmNkdEh4ZHdx","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:02:22.174 -04:00 [ERR] Request validation failed
2020-08-31 00:02:22.174 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"V2hqLXhWZHktUEVqUjRmbUVENFVMT3dFeS1sbTdQQTlvVkNsdmNkdEh4ZHdx","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"RwQWsQPV3o-VQxGfy4ddYnMi8YFiklcVYXuTqityP4U","code_challenge_method":"S256","nonce":"V2hqLXhWZHktUEVqUjRmbUVENFVMT3dFeS1sbTdQQTlvVkNsdmNkdEh4ZHdx","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:02:22.178 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000e0-0008-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:02:22.0000000Z","ProcessId":8772,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 00:02:40.255 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-31 00:02:40.257 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-31 00:02:40.257 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-31 00:02:40.258 -04:00 [DBG] Processing signout request for anonymous
2020-08-31 00:02:40.260 -04:00 [DBG] Start end session request validation
2020-08-31 00:02:40.262 -04:00 [DBG] Start identity token validation
2020-08-31 00:02:40.291 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:02:40.291 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:02:40.291 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-31 00:02:40.407 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-31 00:02:40.407 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598753861,"exp":1598754161,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"bi16UG9fRVVuNFdzTVhUfktDX3d1VjR1TE5TRzJBQ3pzMW1HR3AtZXRqcWcu","iat":1598753861,"at_hash":"vAvfRrqMz-kckvpsiQWZ6g","s_hash":"BLRabkVdFCz5hE3B223v1Q","sid":"7N67EXES50qyhoKqHUj90w","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598753859,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-31 00:02:40.409 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"unknown","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-08-31 00:02:40.409 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-31 00:02:42.648 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 00:02:42.652 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:02:42.652 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:02:42.653 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 00:02:42.660 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 00:02:42.661 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 00:02:42.661 -04:00 [DBG] Start discovery request
2020-08-31 00:02:42.677 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 00:02:42.706 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 00:02:42.709 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:02:42.709 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:02:42.709 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 00:02:42.711 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 00:02:42.711 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 00:02:42.711 -04:00 [DBG] Start key discovery request
2020-08-31 00:02:43.741 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 00:02:43.742 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 00:02:43.742 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 00:02:43.742 -04:00 [DBG] Start authorize request
2020-08-31 00:02:43.742 -04:00 [DBG] No user present in authorize request
2020-08-31 00:02:43.743 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 00:02:43.757 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:02:43.757 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:02:43.758 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"aFA2U0U1MnowRzRoSXFJeTEuTU5tb1RUMGpLb0RjdX5zelRybmlQREpORFNz","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"Sj6eX1qxklwxmanTjtXy-oOlssWX2AHblM-pp0PnEIU","code_challenge_method":"S256","nonce":"aFA2U0U1MnowRzRoSXFJeTEuTU5tb1RUMGpLb0RjdX5zelRybmlQREpORFNz","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:02:43.758 -04:00 [ERR] Request validation failed
2020-08-31 00:02:43.758 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"aFA2U0U1MnowRzRoSXFJeTEuTU5tb1RUMGpLb0RjdX5zelRybmlQREpORFNz","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"Sj6eX1qxklwxmanTjtXy-oOlssWX2AHblM-pp0PnEIU","code_challenge_method":"S256","nonce":"aFA2U0U1MnowRzRoSXFJeTEuTU5tb1RUMGpLb0RjdX5zelRybmlQREpORFNz","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:02:43.758 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000b7-000a-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:02:43.0000000Z","ProcessId":8772,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 00:02:57.762 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 00:02:57.768 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 00:02:57.768 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 00:02:57.768 -04:00 [DBG] Start authorize request
2020-08-31 00:02:57.768 -04:00 [DBG] No user present in authorize request
2020-08-31 00:02:57.768 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 00:02:57.777 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:02:57.777 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:02:57.779 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 00:02:57.821 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:02:57.854 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:02:57.860 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:02:57.862 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:02:57.865 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 00:02:57.866 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"VTJvYXNvSi5URUZ6SWlEREh2SzYxLU5vTmszZkhTWWI5alBucFZLLmtTaGlZsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"VTJvYXNvSi5URUZ6SWlEREh2SzYxLU5vTmszZkhTWWI5alBucFZLLmtTaGlZ","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"VTJvYXNvSi5URUZ6SWlEREh2SzYxLU5vTmszZkhTWWI5alBucFZLLmtTaGlZsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"DuZb-ElTTgbLvdB5fKJ3dbiXG0jxsO3vCmJz2GGzWm0","code_challenge_method":"S256","nonce":"VTJvYXNvSi5URUZ6SWlEREh2SzYxLU5vTmszZkhTWWI5alBucFZLLmtTaGlZ"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:02:57.868 -04:00 [INF] Showing login: User is not authenticated
2020-08-31 00:02:57.883 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 00:02:57.890 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:02:57.890 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:02:57.890 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 00:02:57.891 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:02:57.892 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:02:57.894 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:02:57.894 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:02:57.895 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 00:02:57.905 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:02:57.905 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:03:00.277 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-31 00:03:00.756 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-31 00:03:00.815 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-08-31 00:03:00.895 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"8000013b-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:03:00.0000000Z","ProcessId":8772,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-31 00:03:00.898 -04:00 [DBG] Augmenting SignInContext
2020-08-31 00:03:00.899 -04:00 [DBG] Adding amr claim with value: external
2020-08-31 00:03:00.900 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-31 00:03:00.902 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-31 00:03:00.908 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-31 00:03:00.908 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-31 00:03:00.908 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-31 00:03:00.910 -04:00 [DBG] Start authorize callback request
2020-08-31 00:03:00.911 -04:00 [DBG] User in authorize request: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-31 00:03:00.911 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 00:03:00.919 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:03:00.919 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:03:00.919 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 00:03:00.920 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:03:00.922 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:03:00.923 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:03:00.924 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:03:00.924 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 00:03:00.924 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"VTJvYXNvSi5URUZ6SWlEREh2SzYxLU5vTmszZkhTWWI5alBucFZLLmtTaGlZsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"VTJvYXNvSi5URUZ6SWlEREh2SzYxLU5vTmszZkhTWWI5alBucFZLLmtTaGlZ","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"okerRj2G72EuJNMu8XPcOQ","Raw":{"response_type":"code","client_id":"angular_spa","state":"VTJvYXNvSi5URUZ6SWlEREh2SzYxLU5vTmszZkhTWWI5alBucFZLLmtTaGlZsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"DuZb-ElTTgbLvdB5fKJ3dbiXG0jxsO3vCmJz2GGzWm0","code_challenge_method":"S256","nonce":"VTJvYXNvSi5URUZ6SWlEREh2SzYxLU5vTmszZkhTWWI5alBucFZLLmtTaGlZ"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:03:00.929 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-31 00:03:00.931 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-31 00:03:00.958 -04:00 [DBG] 1isR2QLJR6JIkgJHaLHDRqPGSzPDZQzIZ1zf0on/DGY= not found in database
2020-08-31 00:03:01.050 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****Pi-A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000005a-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:03:01.0000000Z","ProcessId":8772,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-31 00:03:01.051 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"VTJvYXNvSi5URUZ6SWlEREh2SzYxLU5vTmszZkhTWWI5alBucFZLLmtTaGlZsemicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-31 00:03:01.055 -04:00 [DBG] Augmenting SignInContext
2020-08-31 00:03:01.055 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-31 00:03:01.837 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 00:03:01.839 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:03:01.839 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:03:01.839 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 00:03:01.839 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 00:03:01.839 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 00:03:01.839 -04:00 [DBG] Start discovery request
2020-08-31 00:03:01.843 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 00:03:01.912 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 00:03:01.915 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:03:01.915 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:03:01.915 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 00:03:01.915 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 00:03:01.915 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 00:03:01.915 -04:00 [DBG] Start key discovery request
2020-08-31 00:03:02.934 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-31 00:03:02.936 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:03:02.936 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:03:02.937 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-31 00:03:02.940 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-31 00:03:02.940 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-31 00:03:02.942 -04:00 [DBG] Start token request.
2020-08-31 00:03:02.944 -04:00 [DBG] Start client validation
2020-08-31 00:03:02.947 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-31 00:03:02.947 -04:00 [DBG] Start parsing for secret in post body
2020-08-31 00:03:02.948 -04:00 [DBG] client id without secret found
2020-08-31 00:03:02.948 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-31 00:03:02.948 -04:00 [DBG] Secret id found: angular_spa
2020-08-31 00:03:02.957 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:03:02.957 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:03:02.957 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-31 00:03:02.957 -04:00 [DBG] Client validation success
2020-08-31 00:03:02.958 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000008f-0002-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:03:02.0000000Z","ProcessId":8772,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-31 00:03:02.960 -04:00 [DBG] Start token request validation
2020-08-31 00:03:02.962 -04:00 [DBG] Start validation of authorization code token request
2020-08-31 00:03:02.971 -04:00 [DBG] 1isR2QLJR6JIkgJHaLHDRqPGSzPDZQzIZ1zf0on/DGY= found in database: true
2020-08-31 00:03:02.985 -04:00 [DBG] removing 1isR2QLJR6JIkgJHaLHDRqPGSzPDZQzIZ1zf0on/DGY= persisted grant from database
2020-08-31 00:03:02.995 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-31 00:03:02.998 -04:00 [DBG] Validation of authorization code token request success
2020-08-31 00:03:03.000 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"ZUdnq2j_B2czK5t2AIWqBxl5z4wjFyADEY8YJZLPi-A","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"ZUdnq2j_B2czK5t2AIWqBxl5z4wjFyADEY8YJZLPi-A","redirect_uri":"https://localhost:4200","code_verifier":"MDJGMS4walBRYWJ4LVB6a2NpZ1dYT29xWm5JMHZhajFDUVFFSEgtU1k1MEdK","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-31 00:03:03.010 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:03:03.010 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:03:03.012 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:03:03.013 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:03:03.020 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-31 00:03:03.020 -04:00 [DBG] Getting claims for access token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-31 00:03:03.046 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:03:03.047 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:03:03.048 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:03:03.049 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:03:03.053 -04:00 [DBG] Getting claims for identity token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188 and client: angular_spa
2020-08-31 00:03:03.053 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-31 00:03:03.055 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****oaww","$type":"Token"},{"TokenType":"access_token","TokenValue":"****J9aQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000008f-0002-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:03:03.0000000Z","ProcessId":8772,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-31 00:03:03.055 -04:00 [DBG] Token request success.
2020-08-31 00:03:03.065 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-31 00:03:03.065 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-31 00:03:03.065 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-31 00:03:03.065 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-31 00:03:03.066 -04:00 [DBG] Rendering check session result
2020-08-31 00:03:03.066 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:03:03.066 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:03:03.068 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-31 00:03:03.070 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:03:03.070 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:03:03.070 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-31 00:03:03.071 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-31 00:03:03.071 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-31 00:03:03.073 -04:00 [DBG] Start userinfo request
2020-08-31 00:03:03.074 -04:00 [DBG] Bearer token found in header
2020-08-31 00:03:03.085 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:03:03.085 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:03:03.093 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:03:03.093 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:03:03.095 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-31 00:03:03.095 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598846583,"exp":1598850183,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1598846580,"idp":"azuread","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"external"},"$type":"TokenValidationLog"}
2020-08-31 00:03:03.098 -04:00 [DBG] Creating userinfo response
2020-08-31 00:03:03.100 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 00:03:03.100 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 00:03:03.102 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:03:03.105 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-31 00:03:03.105 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 00:03:03.106 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:03:03.109 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-31 00:03:03.109 -04:00 [DBG] End userinfo request
2020-08-31 00:03:35.616 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-31 00:03:35.616 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-31 00:03:35.616 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-31 00:03:35.616 -04:00 [DBG] Processing signout request for 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-31 00:03:35.616 -04:00 [DBG] Start end session request validation
2020-08-31 00:03:35.616 -04:00 [DBG] Start identity token validation
2020-08-31 00:03:35.627 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:03:35.627 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:03:35.627 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-31 00:03:35.630 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-31 00:03:35.631 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598846583,"exp":1598846883,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"VTJvYXNvSi5URUZ6SWlEREh2SzYxLU5vTmszZkhTWWI5alBucFZLLmtTaGlZ","iat":1598846583,"at_hash":"fCqXBUB6BDmacWqB6zI0jw","s_hash":"SZbHTOzrqroMRTnRycnCog","sid":"okerRj2G72EuJNMu8XPcOQ","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1598846580,"idp":"azuread","amr":"external"},"$type":"TokenValidationLog"}
2020-08-31 00:03:35.631 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-08-31 00:03:35.631 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-31 00:03:35.641 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-31 00:03:35.641 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-31 00:03:35.641 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-31 00:03:35.642 -04:00 [INF] {"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000086-0006-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:03:35.0000000Z","ProcessId":8772,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-31 00:03:39.177 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 00:03:39.177 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 00:03:39.177 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 00:03:39.177 -04:00 [DBG] Start authorize request
2020-08-31 00:03:39.178 -04:00 [DBG] No user present in authorize request
2020-08-31 00:03:39.178 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 00:03:39.186 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:03:39.186 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:03:39.186 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"WVJVTll6cDIwZWZnMV9DLmZrUmk2NHByfkZrRDJzR1R5Sk1YZG9KNzdvR1M1","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"LZABNXdz2PSwh-2spLEEQY750Su5CIZOld03Vf7HQHM","code_challenge_method":"S256","nonce":"WVJVTll6cDIwZWZnMV9DLmZrUmk2NHByfkZrRDJzR1R5Sk1YZG9KNzdvR1M1","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:03:39.186 -04:00 [ERR] Request validation failed
2020-08-31 00:03:39.186 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"WVJVTll6cDIwZWZnMV9DLmZrUmk2NHByfkZrRDJzR1R5Sk1YZG9KNzdvR1M1","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"LZABNXdz2PSwh-2spLEEQY750Su5CIZOld03Vf7HQHM","code_challenge_method":"S256","nonce":"WVJVTll6cDIwZWZnMV9DLmZrUmk2NHByfkZrRDJzR1R5Sk1YZG9KNzdvR1M1","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:03:39.187 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000080-0004-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:03:39.0000000Z","ProcessId":8772,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 00:04:15.705 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 00:04:15.706 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 00:04:15.706 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 00:04:15.706 -04:00 [DBG] Start authorize request
2020-08-31 00:04:15.706 -04:00 [DBG] No user present in authorize request
2020-08-31 00:04:15.706 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 00:04:15.715 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:04:15.716 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:04:15.716 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 00:04:15.718 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:04:15.719 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:04:15.720 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:04:15.721 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:04:15.721 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 00:04:15.722 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"Z29HajNjNERxSExROXhnZ1FzS0tZRmVzbXJwbml2TVlmeDJEZ2RmRXJFQ1Bssemicolon%2Fextras%2Fadmin2","UiLocales":null,"Nonce":"Z29HajNjNERxSExROXhnZ1FzS0tZRmVzbXJwbml2TVlmeDJEZ2RmRXJFQ1Bs","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"Z29HajNjNERxSExROXhnZ1FzS0tZRmVzbXJwbml2TVlmeDJEZ2RmRXJFQ1Bssemicolon%2Fextras%2Fadmin2","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"QYIls_5QIZ6HIeizsoUkXGt0d7ur83veZTnGxa3GQCE","code_challenge_method":"S256","nonce":"Z29HajNjNERxSExROXhnZ1FzS0tZRmVzbXJwbml2TVlmeDJEZ2RmRXJFQ1Bs"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:04:15.722 -04:00 [INF] Showing login: User is not authenticated
2020-08-31 00:04:15.726 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 00:04:15.740 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:04:15.740 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:04:15.740 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 00:04:15.741 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:04:15.742 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:04:15.743 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:04:15.744 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:04:15.744 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 00:04:15.751 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:04:15.751 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:04:17.985 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-31 00:04:18.003 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 00:04:18.011 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:04:18.011 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:04:18.011 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 00:04:18.012 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:04:18.013 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:04:18.015 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:04:18.016 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:04:18.016 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 00:04:18.057 -04:00 [DBG] Augmenting SignInContext
2020-08-31 00:04:18.057 -04:00 [DBG] Adding idp claim with value: local
2020-08-31 00:04:18.057 -04:00 [DBG] Adding auth_time claim with value: 1598846658
2020-08-31 00:04:18.058 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-31 00:04:18.059 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000093-0002-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:04:18.0000000Z","ProcessId":8772,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-31 00:04:18.066 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:04:18.066 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:04:18.073 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-31 00:04:18.074 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-31 00:04:18.074 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-31 00:04:18.074 -04:00 [DBG] Start authorize callback request
2020-08-31 00:04:18.074 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 00:04:18.074 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 00:04:18.081 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:04:18.081 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:04:18.081 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 00:04:18.082 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:04:18.084 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:04:18.085 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:04:18.085 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:04:18.086 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 00:04:18.086 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"Z29HajNjNERxSExROXhnZ1FzS0tZRmVzbXJwbml2TVlmeDJEZ2RmRXJFQ1Bssemicolon%2Fextras%2Fadmin2","UiLocales":null,"Nonce":"Z29HajNjNERxSExROXhnZ1FzS0tZRmVzbXJwbml2TVlmeDJEZ2RmRXJFQ1Bs","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"2Hrx6-GEuteqWOh6NCMCEQ","Raw":{"response_type":"code","client_id":"angular_spa","state":"Z29HajNjNERxSExROXhnZ1FzS0tZRmVzbXJwbml2TVlmeDJEZ2RmRXJFQ1Bssemicolon%2Fextras%2Fadmin2","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"QYIls_5QIZ6HIeizsoUkXGt0d7ur83veZTnGxa3GQCE","code_challenge_method":"S256","nonce":"Z29HajNjNERxSExROXhnZ1FzS0tZRmVzbXJwbml2TVlmeDJEZ2RmRXJFQ1Bs"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:04:18.087 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-31 00:04:18.087 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-31 00:04:18.088 -04:00 [DBG] lLW1wRmNMHF3DOUGJ6/9637Dt0k3Bg7i+XFw8uIflgg= not found in database
2020-08-31 00:04:18.090 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****SPLU","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000095-0002-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:04:18.0000000Z","ProcessId":8772,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-31 00:04:18.090 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"Z29HajNjNERxSExROXhnZ1FzS0tZRmVzbXJwbml2TVlmeDJEZ2RmRXJFQ1Bssemicolon%2Fextras%2Fadmin2","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-31 00:04:18.090 -04:00 [DBG] Augmenting SignInContext
2020-08-31 00:04:18.090 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-31 00:04:18.255 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 00:04:18.256 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:04:18.256 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:04:18.257 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 00:04:18.257 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 00:04:18.257 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 00:04:18.257 -04:00 [DBG] Start discovery request
2020-08-31 00:04:18.260 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 00:04:18.299 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 00:04:18.300 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:04:18.301 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:04:18.301 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 00:04:18.301 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 00:04:18.301 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 00:04:18.301 -04:00 [DBG] Start key discovery request
2020-08-31 00:04:19.333 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-31 00:04:19.334 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:04:19.335 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:04:19.335 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-31 00:04:19.336 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-31 00:04:19.336 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-31 00:04:19.336 -04:00 [DBG] Start token request.
2020-08-31 00:04:19.336 -04:00 [DBG] Start client validation
2020-08-31 00:04:19.336 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-31 00:04:19.336 -04:00 [DBG] Start parsing for secret in post body
2020-08-31 00:04:19.337 -04:00 [DBG] client id without secret found
2020-08-31 00:04:19.337 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-31 00:04:19.337 -04:00 [DBG] Secret id found: angular_spa
2020-08-31 00:04:19.345 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:04:19.345 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:04:19.345 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-31 00:04:19.345 -04:00 [DBG] Client validation success
2020-08-31 00:04:19.345 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000036-0003-fa00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:04:19.0000000Z","ProcessId":8772,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-31 00:04:19.345 -04:00 [DBG] Start token request validation
2020-08-31 00:04:19.345 -04:00 [DBG] Start validation of authorization code token request
2020-08-31 00:04:19.346 -04:00 [DBG] lLW1wRmNMHF3DOUGJ6/9637Dt0k3Bg7i+XFw8uIflgg= found in database: true
2020-08-31 00:04:19.348 -04:00 [DBG] removing lLW1wRmNMHF3DOUGJ6/9637Dt0k3Bg7i+XFw8uIflgg= persisted grant from database
2020-08-31 00:04:19.350 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-31 00:04:19.351 -04:00 [DBG] Validation of authorization code token request success
2020-08-31 00:04:19.352 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"SMCcSiDQB_uZUVWdHu5lrLykIyvh_r4_bpPjKFTSPLU","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"SMCcSiDQB_uZUVWdHu5lrLykIyvh_r4_bpPjKFTSPLU","redirect_uri":"https://localhost:4200","code_verifier":"VWh4ZlhKU2l4Uko1VmMuRi1VV2MyZ0Z4Z1FMU0puVTE1YkhPR0xxYTNhVjMx","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-31 00:04:19.358 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:04:19.358 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:04:19.359 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:04:19.361 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:04:19.361 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-31 00:04:19.361 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 00:04:19.372 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:04:19.372 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:04:19.374 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:04:19.375 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:04:19.375 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-31 00:04:19.375 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-31 00:04:19.377 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****O67Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****qFWg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000036-0003-fa00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:04:19.0000000Z","ProcessId":8772,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-31 00:04:19.377 -04:00 [DBG] Token request success.
2020-08-31 00:04:19.387 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-31 00:04:19.387 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-31 00:04:19.387 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-31 00:04:19.387 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-31 00:04:19.387 -04:00 [DBG] Rendering check session result
2020-08-31 00:04:19.389 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:04:19.389 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:04:19.391 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-31 00:04:19.393 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:04:19.393 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:04:19.393 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-31 00:04:19.393 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-31 00:04:19.393 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-31 00:04:19.393 -04:00 [DBG] Start userinfo request
2020-08-31 00:04:19.393 -04:00 [DBG] Bearer token found in header
2020-08-31 00:04:19.402 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:04:19.402 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:04:19.412 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:04:19.412 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:04:19.415 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-31 00:04:19.415 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598846659,"exp":1598850259,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598846658,"idp":"local","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-31 00:04:19.415 -04:00 [DBG] Creating userinfo response
2020-08-31 00:04:19.415 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 00:04:19.415 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 00:04:19.417 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:04:19.417 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-31 00:04:19.417 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 00:04:19.418 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:04:19.422 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-31 00:04:19.422 -04:00 [DBG] End userinfo request
2020-08-31 00:04:44.035 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 00:04:44.035 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 00:04:44.035 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 00:04:44.035 -04:00 [DBG] Start authorize request
2020-08-31 00:04:44.035 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 00:04:44.035 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 00:04:44.046 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:04:44.046 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:04:44.046 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"bWJaLWkycFlQQzlNYkMubnBORkVWd2gtdmV2VzczcW5Qd0VJSVdIMFhtZFVK","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"xmGKK52HybGDCA2pbRqeXuDOnrBhU4rvRs0UhQBSCZQ","code_challenge_method":"S256","nonce":"bWJaLWkycFlQQzlNYkMubnBORkVWd2gtdmV2VzczcW5Qd0VJSVdIMFhtZFVK","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:04:44.046 -04:00 [ERR] Request validation failed
2020-08-31 00:04:44.046 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"bWJaLWkycFlQQzlNYkMubnBORkVWd2gtdmV2VzczcW5Qd0VJSVdIMFhtZFVK","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"xmGKK52HybGDCA2pbRqeXuDOnrBhU4rvRs0UhQBSCZQ","code_challenge_method":"S256","nonce":"bWJaLWkycFlQQzlNYkMubnBORkVWd2gtdmV2VzczcW5Qd0VJSVdIMFhtZFVK","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:04:44.047 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000008a-0006-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:04:44.0000000Z","ProcessId":8772,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 00:28:41.417 -04:00 [INF] Starting host...
2020-08-31 00:28:41.730 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-31 00:28:41.797 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-31 00:28:41.797 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-31 00:28:41.797 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-31 00:28:41.797 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-31 00:28:41.797 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-31 00:28:41.797 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-31 00:28:41.908 -04:00 [DBG] Login Url: /Account/Login
2020-08-31 00:28:41.909 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-31 00:28:41.909 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-31 00:28:41.909 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-31 00:28:41.909 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-31 00:28:41.909 -04:00 [DBG] Error Url: /home/error
2020-08-31 00:28:41.909 -04:00 [DBG] Error Id Parameter: errorId
2020-08-31 00:28:41.916 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-31 00:28:41.920 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-31 00:28:41.925 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 00:28:41.941 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 00:28:41.941 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 00:28:41.942 -04:00 [DBG] Start authorize request
2020-08-31 00:28:41.944 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-31 00:28:41.945 -04:00 [DBG] No user present in authorize request
2020-08-31 00:28:41.947 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 00:28:42.542 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-31 00:28:42.542 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-31 00:28:43.698 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:28:43.703 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:28:43.710 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 00:28:43.776 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:28:43.867 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:28:43.880 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:28:43.882 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:28:43.885 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 00:28:43.892 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"c0JiSDN0TzBOTlJyeDhVTjNFbWhoVn43a1N-MXJ0dmdDZTJKZnNZdUhmYXRSsemicolon%2Fshould-login","UiLocales":null,"Nonce":"c0JiSDN0TzBOTlJyeDhVTjNFbWhoVn43a1N-MXJ0dmdDZTJKZnNZdUhmYXRS","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"c0JiSDN0TzBOTlJyeDhVTjNFbWhoVn43a1N-MXJ0dmdDZTJKZnNZdUhmYXRSsemicolon%2Fshould-login","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"khzPhXdDaCsvQEviagfXs5lawDTzlTBxrEZ3lAEqHS8","code_challenge_method":"S256","nonce":"c0JiSDN0TzBOTlJyeDhVTjNFbWhoVn43a1N-MXJ0dmdDZTJKZnNZdUhmYXRS"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:28:43.897 -04:00 [INF] Showing login: User is not authenticated
2020-08-31 00:28:43.914 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-31 00:28:43.915 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-31 00:28:43.935 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-31 00:28:43.936 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 00:28:43.965 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:28:43.966 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:28:43.966 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 00:28:43.967 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:28:43.968 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:28:43.970 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:28:43.971 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:28:43.971 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 00:28:43.982 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:28:43.982 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:29:34.573 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-31 00:29:34.575 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-31 00:29:34.575 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-31 00:29:34.597 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-31 00:29:34.597 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 00:29:34.619 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:29:34.619 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:29:34.619 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 00:29:34.622 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:29:34.631 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:29:34.632 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:29:34.633 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:29:34.633 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 00:29:34.785 -04:00 [DBG] Augmenting SignInContext
2020-08-31 00:29:34.786 -04:00 [DBG] Adding idp claim with value: local
2020-08-31 00:29:34.786 -04:00 [DBG] Adding auth_time claim with value: 1598848174
2020-08-31 00:29:34.786 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-08-31 00:29:34.792 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-31 00:29:34.798 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000fc-000a-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:29:34.0000000Z","ProcessId":17888,"LocalIpAddress":"127.0.0.1:44354","RemoteIpAddress":"127.0.0.1","$type":"UserLoginSuccessEvent"}
2020-08-31 00:29:34.828 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:29:34.828 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:29:34.838 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-31 00:29:34.839 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-31 00:29:34.839 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-31 00:29:34.840 -04:00 [DBG] Start authorize callback request
2020-08-31 00:29:34.841 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 00:29:34.842 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 00:29:34.849 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:29:34.849 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:29:34.849 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 00:29:34.850 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:29:34.851 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:29:34.853 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:29:34.854 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:29:34.854 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 00:29:34.854 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"c0JiSDN0TzBOTlJyeDhVTjNFbWhoVn43a1N-MXJ0dmdDZTJKZnNZdUhmYXRSsemicolon%2Fshould-login","UiLocales":null,"Nonce":"c0JiSDN0TzBOTlJyeDhVTjNFbWhoVn43a1N-MXJ0dmdDZTJKZnNZdUhmYXRS","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"yp2Lc4p4HIo289Ybpf7LKA","Raw":{"response_type":"code","client_id":"angular_spa","state":"c0JiSDN0TzBOTlJyeDhVTjNFbWhoVn43a1N-MXJ0dmdDZTJKZnNZdUhmYXRSsemicolon%2Fshould-login","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"khzPhXdDaCsvQEviagfXs5lawDTzlTBxrEZ3lAEqHS8","code_challenge_method":"S256","nonce":"c0JiSDN0TzBOTlJyeDhVTjNFbWhoVn43a1N-MXJ0dmdDZTJKZnNZdUhmYXRS"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:29:34.867 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-31 00:29:34.869 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-31 00:29:34.920 -04:00 [DBG] 8LA0r4dADdu6J+W/C3bip8MkygLw/FLjjwyW5AhjthQ= not found in database
2020-08-31 00:29:35.008 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****b4Qo","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000d4-0006-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:29:35.0000000Z","ProcessId":17888,"LocalIpAddress":"127.0.0.1:44354","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedSuccessEvent"}
2020-08-31 00:29:35.009 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"c0JiSDN0TzBOTlJyeDhVTjNFbWhoVn43a1N-MXJ0dmdDZTJKZnNZdUhmYXRSsemicolon%2Fshould-login","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-31 00:29:35.015 -04:00 [DBG] Augmenting SignInContext
2020-08-31 00:29:35.015 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-31 00:29:35.889 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 00:29:35.898 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:29:35.899 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:29:35.901 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 00:29:35.902 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 00:29:35.902 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 00:29:35.903 -04:00 [DBG] Start discovery request
2020-08-31 00:29:35.969 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 00:29:36.207 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 00:29:36.211 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:29:36.211 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:29:36.212 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 00:29:36.212 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 00:29:36.212 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 00:29:36.213 -04:00 [DBG] Start key discovery request
2020-08-31 00:29:37.240 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-31 00:29:37.245 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:29:37.246 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:29:37.246 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-31 00:29:37.249 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-31 00:29:37.249 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-31 00:29:37.251 -04:00 [DBG] Start token request.
2020-08-31 00:29:37.252 -04:00 [DBG] Start client validation
2020-08-31 00:29:37.254 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-31 00:29:37.255 -04:00 [DBG] Start parsing for secret in post body
2020-08-31 00:29:37.255 -04:00 [DBG] client id without secret found
2020-08-31 00:29:37.256 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-31 00:29:37.256 -04:00 [DBG] Secret id found: angular_spa
2020-08-31 00:29:37.265 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:29:37.265 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:29:37.266 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-31 00:29:37.266 -04:00 [DBG] Client validation success
2020-08-31 00:29:37.267 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000102-0008-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:29:37.0000000Z","ProcessId":17888,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-31 00:29:37.269 -04:00 [DBG] Start token request validation
2020-08-31 00:29:37.271 -04:00 [DBG] Start validation of authorization code token request
2020-08-31 00:29:37.280 -04:00 [DBG] 8LA0r4dADdu6J+W/C3bip8MkygLw/FLjjwyW5AhjthQ= found in database: true
2020-08-31 00:29:37.300 -04:00 [DBG] removing 8LA0r4dADdu6J+W/C3bip8MkygLw/FLjjwyW5AhjthQ= persisted grant from database
2020-08-31 00:29:37.310 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-31 00:29:37.312 -04:00 [DBG] Validation of authorization code token request success
2020-08-31 00:29:37.314 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"GhXCzHvp1nqFUcaYcZiV9ux1wlhEGN6VbSn5WMjb4Qo","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"GhXCzHvp1nqFUcaYcZiV9ux1wlhEGN6VbSn5WMjb4Qo","redirect_uri":"https://localhost:4200","code_verifier":"bHQwbVhUU05pTDNxall-ZzlDbVNBdjFFUzNYTXVnN2ZLU2hyTTE1SXFfTjU1","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-31 00:29:37.324 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:29:37.324 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:29:37.325 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:29:37.327 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:29:37.333 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-31 00:29:37.334 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 00:29:37.380 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:29:37.380 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:29:37.382 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:29:37.383 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:29:37.386 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-31 00:29:37.386 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-31 00:29:37.388 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****S7NA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****eqBA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000102-0008-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:29:37.0000000Z","ProcessId":17888,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-31 00:29:37.389 -04:00 [DBG] Token request success.
2020-08-31 00:29:37.402 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-31 00:29:37.404 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-31 00:29:37.404 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:29:37.404 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:29:37.405 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-31 00:29:37.405 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-31 00:29:37.405 -04:00 [DBG] Rendering check session result
2020-08-31 00:29:37.407 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-31 00:29:37.409 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:29:37.409 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:29:37.412 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-31 00:29:37.413 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-31 00:29:37.413 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-31 00:29:37.415 -04:00 [DBG] Start userinfo request
2020-08-31 00:29:37.417 -04:00 [DBG] Bearer token found in header
2020-08-31 00:29:37.466 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:29:37.466 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:29:37.475 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:29:37.475 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:29:37.477 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-31 00:29:37.478 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598848177,"exp":1598851777,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598848174,"idp":"local","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-31 00:29:37.481 -04:00 [DBG] Creating userinfo response
2020-08-31 00:29:37.483 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 00:29:37.483 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 00:29:37.485 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:29:37.488 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-31 00:29:37.488 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 00:29:37.490 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:29:37.494 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-31 00:29:37.495 -04:00 [DBG] End userinfo request
2020-08-31 00:29:40.068 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 00:29:40.069 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 00:29:40.069 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 00:29:40.069 -04:00 [DBG] Start authorize request
2020-08-31 00:29:40.069 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 00:29:40.069 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 00:29:40.078 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:29:40.079 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:29:40.079 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"Uk9uSEdNUi54X35USUQzVGdXbHRreGRUZWdBaUM2TE90eXJ4My5WTGZYaVNJ","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"PBg5Q3-9sbgfW-a-NPWC1oLcjvM1IBx21wi_NgRNcK4","code_challenge_method":"S256","nonce":"Uk9uSEdNUi54X35USUQzVGdXbHRreGRUZWdBaUM2TE90eXJ4My5WTGZYaVNJ","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:29:40.080 -04:00 [ERR] Request validation failed
2020-08-31 00:29:40.080 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"Uk9uSEdNUi54X35USUQzVGdXbHRreGRUZWdBaUM2TE90eXJ4My5WTGZYaVNJ","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"PBg5Q3-9sbgfW-a-NPWC1oLcjvM1IBx21wi_NgRNcK4","code_challenge_method":"S256","nonce":"Uk9uSEdNUi54X35USUQzVGdXbHRreGRUZWdBaUM2TE90eXJ4My5WTGZYaVNJ","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:29:40.081 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000d8-0006-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:29:40.0000000Z","ProcessId":17888,"LocalIpAddress":"127.0.0.1:44354","RemoteIpAddress":"127.0.0.1","$type":"TokenIssuedFailureEvent"}
2020-08-31 00:40:32.459 -04:00 [INF] Starting host...
2020-08-31 00:40:33.382 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-31 00:40:33.474 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-31 00:40:33.475 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-31 00:40:33.475 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-31 00:40:33.475 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-31 00:40:33.475 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-31 00:40:33.475 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-31 00:40:33.659 -04:00 [DBG] Login Url: /Account/Login
2020-08-31 00:40:33.659 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-31 00:40:33.659 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-31 00:40:33.659 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-31 00:40:33.659 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-31 00:40:33.659 -04:00 [DBG] Error Url: /home/error
2020-08-31 00:40:33.660 -04:00 [DBG] Error Id Parameter: errorId
2020-08-31 00:40:48.159 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 00:40:48.161 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 00:40:48.162 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 00:40:48.163 -04:00 [DBG] Start authorize request
2020-08-31 00:40:48.166 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 00:40:48.172 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 00:40:49.321 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:40:49.327 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:40:49.333 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 00:40:49.398 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:40:49.495 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:40:49.505 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:40:49.506 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:40:49.510 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 00:40:49.517 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"X1JVaU1xYjMuekdoZ0Q0V3lpS0tjVmZaWUF5NkV2OUw2SXRQSVR1Qlh3S0Fnsemicolon%2Fshould-login","UiLocales":null,"Nonce":"X1JVaU1xYjMuekdoZ0Q0V3lpS0tjVmZaWUF5NkV2OUw2SXRQSVR1Qlh3S0Fn","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"yp2Lc4p4HIo289Ybpf7LKA","Raw":{"response_type":"code","client_id":"angular_spa","state":"X1JVaU1xYjMuekdoZ0Q0V3lpS0tjVmZaWUF5NkV2OUw2SXRQSVR1Qlh3S0Fnsemicolon%2Fshould-login","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"pB-ZpFqIbL9geoBQ8-gJM85p59kXjcNKbg5DdYwL6Co","code_challenge_method":"S256","nonce":"X1JVaU1xYjMuekdoZ0Q0V3lpS0tjVmZaWUF5NkV2OUw2SXRQSVR1Qlh3S0Fn"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:40:49.618 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-31 00:40:49.620 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-31 00:40:49.675 -04:00 [DBG] h/p5t2ZnijPOQiHXiFlX8PmOICm4Cryqm6dnnVarDGo= not found in database
2020-08-31 00:40:49.772 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****zTcU","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000e0-0006-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:40:49.0000000Z","ProcessId":15432,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-31 00:40:49.773 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"X1JVaU1xYjMuekdoZ0Q0V3lpS0tjVmZaWUF5NkV2OUw2SXRQSVR1Qlh3S0Fnsemicolon%2Fshould-login","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-31 00:40:50.629 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 00:40:50.640 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:40:50.641 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:40:50.643 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 00:40:50.645 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 00:40:50.645 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 00:40:50.646 -04:00 [DBG] Start discovery request
2020-08-31 00:40:50.715 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 00:40:50.808 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 00:40:50.808 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 00:40:50.808 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 00:40:50.808 -04:00 [DBG] Start discovery request
2020-08-31 00:40:50.816 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 00:40:50.849 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 00:40:50.850 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 00:40:50.850 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 00:40:50.852 -04:00 [DBG] Start key discovery request
2020-08-31 00:40:50.945 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 00:40:50.947 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:40:50.948 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:40:50.948 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 00:40:50.948 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 00:40:50.948 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 00:40:50.948 -04:00 [DBG] Start key discovery request
2020-08-31 00:40:51.964 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-31 00:40:51.970 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:40:51.970 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:40:51.971 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-31 00:40:51.975 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-31 00:40:51.975 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-31 00:40:51.978 -04:00 [DBG] Start token request.
2020-08-31 00:40:51.979 -04:00 [DBG] Start client validation
2020-08-31 00:40:51.981 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-31 00:40:51.982 -04:00 [DBG] Start parsing for secret in post body
2020-08-31 00:40:51.987 -04:00 [DBG] client id without secret found
2020-08-31 00:40:51.987 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-31 00:40:51.987 -04:00 [DBG] Secret id found: angular_spa
2020-08-31 00:40:51.996 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:40:51.996 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:40:51.996 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-31 00:40:51.996 -04:00 [DBG] Client validation success
2020-08-31 00:40:51.997 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000051-0007-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:40:51.0000000Z","ProcessId":15432,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-31 00:40:51.999 -04:00 [DBG] Start token request validation
2020-08-31 00:40:52.001 -04:00 [DBG] Start validation of authorization code token request
2020-08-31 00:40:52.010 -04:00 [DBG] h/p5t2ZnijPOQiHXiFlX8PmOICm4Cryqm6dnnVarDGo= found in database: true
2020-08-31 00:40:52.029 -04:00 [DBG] removing h/p5t2ZnijPOQiHXiFlX8PmOICm4Cryqm6dnnVarDGo= persisted grant from database
2020-08-31 00:40:52.039 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-31 00:40:52.041 -04:00 [DBG] Validation of authorization code token request success
2020-08-31 00:40:52.044 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"DssenG7iauHpgpSRnjmpxKhVRgulUZkriqd_vcCzTcU","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"DssenG7iauHpgpSRnjmpxKhVRgulUZkriqd_vcCzTcU","redirect_uri":"https://localhost:4200","code_verifier":"VHVoeUtaTHByUmwuVVhHVHduUW9rbzRQbWxTU01oQlpOVHBybmNGaVptcEVP","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-31 00:40:52.055 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:40:52.055 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:40:52.057 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:40:52.058 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:40:52.065 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-31 00:40:52.065 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 00:40:52.166 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:40:52.166 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:40:52.167 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:40:52.169 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:40:52.172 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-31 00:40:52.172 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-31 00:40:52.174 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****c6JA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****lXCQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000051-0007-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:40:52.0000000Z","ProcessId":15432,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-31 00:40:52.175 -04:00 [DBG] Token request success.
2020-08-31 00:40:52.186 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-31 00:40:52.188 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:40:52.188 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:40:52.191 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-31 00:40:52.192 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:40:52.192 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:40:52.192 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-31 00:40:52.193 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-31 00:40:52.193 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-31 00:40:52.194 -04:00 [DBG] Start userinfo request
2020-08-31 00:40:52.196 -04:00 [DBG] Bearer token found in header
2020-08-31 00:40:52.196 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-31 00:40:52.196 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-31 00:40:52.196 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-31 00:40:52.196 -04:00 [DBG] Rendering check session result
2020-08-31 00:40:52.240 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:40:52.240 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:40:52.251 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:40:52.251 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:40:52.253 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-31 00:40:52.253 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598848852,"exp":1598852452,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598848174,"idp":"local","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-31 00:40:52.256 -04:00 [DBG] Creating userinfo response
2020-08-31 00:40:52.258 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 00:40:52.259 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 00:40:52.261 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:40:52.264 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-31 00:40:52.264 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 00:40:52.266 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:40:52.271 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-31 00:40:52.271 -04:00 [DBG] End userinfo request
2020-08-31 00:40:54.221 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 00:40:54.223 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 00:40:54.223 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 00:40:54.224 -04:00 [DBG] Start authorize request
2020-08-31 00:40:54.224 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 00:40:54.224 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 00:40:54.246 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:40:54.247 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:40:54.247 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 00:40:54.249 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:40:54.250 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:40:54.252 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:40:54.253 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:40:54.253 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 00:40:54.253 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"dXN5U01oMmxPM09DYWE2VmIudnhkdjR6TnBXN25lYmVWS21ERGZTZWlFOU1Hsemicolon%2Fshould-login","UiLocales":null,"Nonce":"dXN5U01oMmxPM09DYWE2VmIudnhkdjR6TnBXN25lYmVWS21ERGZTZWlFOU1H","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"yp2Lc4p4HIo289Ybpf7LKA","Raw":{"response_type":"code","client_id":"angular_spa","state":"dXN5U01oMmxPM09DYWE2VmIudnhkdjR6TnBXN25lYmVWS21ERGZTZWlFOU1Hsemicolon%2Fshould-login","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"wvPgD0ZgfjMB_ZnOq-14Tt96nXOs9f9teIzl1QO7MvE","code_challenge_method":"S256","nonce":"dXN5U01oMmxPM09DYWE2VmIudnhkdjR6TnBXN25lYmVWS21ERGZTZWlFOU1H"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:40:54.255 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-31 00:40:54.255 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-31 00:40:54.256 -04:00 [DBG] NT2isYpXDtvAylkdufq/vuEqThtCYQDc73QiA6XiWNo= not found in database
2020-08-31 00:40:54.259 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****eGFo","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000cd-0006-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:40:54.0000000Z","ProcessId":15432,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-31 00:40:54.259 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"dXN5U01oMmxPM09DYWE2VmIudnhkdjR6TnBXN25lYmVWS21ERGZTZWlFOU1Hsemicolon%2Fshould-login","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-31 00:40:54.430 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 00:40:54.432 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:40:54.432 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:40:54.433 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 00:40:54.434 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 00:40:54.434 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 00:40:54.434 -04:00 [DBG] Start discovery request
2020-08-31 00:40:54.437 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 00:40:54.487 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 00:40:54.489 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:40:54.489 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:40:54.489 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 00:40:54.489 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-31 00:40:54.490 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-31 00:40:54.490 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-31 00:40:54.490 -04:00 [DBG] Rendering check session result
2020-08-31 00:40:54.491 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 00:40:54.491 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 00:40:54.491 -04:00 [DBG] Start key discovery request
2020-08-31 00:40:55.527 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-31 00:40:55.532 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:40:55.532 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:40:55.533 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-31 00:40:55.534 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-31 00:40:55.534 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-31 00:40:55.534 -04:00 [DBG] Start token request.
2020-08-31 00:40:55.534 -04:00 [DBG] Start client validation
2020-08-31 00:40:55.534 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-31 00:40:55.534 -04:00 [DBG] Start parsing for secret in post body
2020-08-31 00:40:55.535 -04:00 [DBG] client id without secret found
2020-08-31 00:40:55.535 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-31 00:40:55.535 -04:00 [DBG] Secret id found: angular_spa
2020-08-31 00:40:55.544 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:40:55.544 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:40:55.544 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-31 00:40:55.544 -04:00 [DBG] Client validation success
2020-08-31 00:40:55.545 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000021-0000-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:40:55.0000000Z","ProcessId":15432,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-31 00:40:55.545 -04:00 [DBG] Start token request validation
2020-08-31 00:40:55.545 -04:00 [DBG] Start validation of authorization code token request
2020-08-31 00:40:55.546 -04:00 [DBG] NT2isYpXDtvAylkdufq/vuEqThtCYQDc73QiA6XiWNo= found in database: true
2020-08-31 00:40:55.548 -04:00 [DBG] removing NT2isYpXDtvAylkdufq/vuEqThtCYQDc73QiA6XiWNo= persisted grant from database
2020-08-31 00:40:55.550 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-31 00:40:55.552 -04:00 [DBG] Validation of authorization code token request success
2020-08-31 00:40:55.552 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"LK-OZ2csIkWs2ytDPBCLs4EwMfsNVNxZujk4X9IeGFo","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"LK-OZ2csIkWs2ytDPBCLs4EwMfsNVNxZujk4X9IeGFo","redirect_uri":"https://localhost:4200","code_verifier":"MUpHQy5pRDFjN2V4Llg4SjB4SVJ4N3JiS3J2eDlYMzJSVDkyTGNDZXZ4ZWJo","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-31 00:40:55.558 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:40:55.559 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:40:55.560 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:40:55.561 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:40:55.562 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-31 00:40:55.562 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 00:40:55.573 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:40:55.573 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:40:55.574 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:40:55.575 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:40:55.575 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-31 00:40:55.575 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-31 00:40:55.576 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****Z9zg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****9K3A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000021-0000-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:40:55.0000000Z","ProcessId":15432,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-31 00:40:55.576 -04:00 [DBG] Token request success.
2020-08-31 00:40:55.586 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-31 00:40:55.587 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-31 00:40:55.588 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:40:55.588 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-31 00:40:55.588 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-31 00:40:55.588 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:40:55.588 -04:00 [DBG] Rendering check session result
2020-08-31 00:40:55.588 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-31 00:40:55.588 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-31 00:40:55.588 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-31 00:40:55.589 -04:00 [DBG] Start userinfo request
2020-08-31 00:40:55.589 -04:00 [DBG] Bearer token found in header
2020-08-31 00:40:55.597 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:40:55.598 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:40:55.605 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:40:55.605 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:40:55.607 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-31 00:40:55.607 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598848855,"exp":1598852455,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598848174,"idp":"local","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-31 00:40:55.607 -04:00 [DBG] Creating userinfo response
2020-08-31 00:40:55.607 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 00:40:55.607 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 00:40:55.609 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:40:55.609 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-31 00:40:55.609 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 00:40:55.610 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:40:55.614 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-31 00:40:55.614 -04:00 [DBG] End userinfo request
2020-08-31 00:40:59.797 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 00:40:59.800 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 00:40:59.800 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 00:40:59.801 -04:00 [DBG] Start authorize request
2020-08-31 00:40:59.801 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 00:40:59.801 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 00:40:59.814 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:40:59.814 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:40:59.815 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"ZWFjalllbHpEdUNDaFhKV2lyaFJOd3RXYWFqdGhzLmxRRk5Zb2xQaHJBLllI","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"A0LNZv9cuQgh_Qw5iuAghcER-zh21VioFvK1NupiT_I","code_challenge_method":"S256","nonce":"ZWFjalllbHpEdUNDaFhKV2lyaFJOd3RXYWFqdGhzLmxRRk5Zb2xQaHJBLllI","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:40:59.816 -04:00 [ERR] Request validation failed
2020-08-31 00:40:59.816 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"ZWFjalllbHpEdUNDaFhKV2lyaFJOd3RXYWFqdGhzLmxRRk5Zb2xQaHJBLllI","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"A0LNZv9cuQgh_Qw5iuAghcER-zh21VioFvK1NupiT_I","code_challenge_method":"S256","nonce":"ZWFjalllbHpEdUNDaFhKV2lyaFJOd3RXYWFqdGhzLmxRRk5Zb2xQaHJBLllI","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:40:59.817 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000077-0006-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:40:59.0000000Z","ProcessId":15432,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 00:41:41.280 -04:00 [INF] Starting host...
2020-08-31 00:41:42.206 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-31 00:41:42.287 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-31 00:41:42.287 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-31 00:41:42.287 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-31 00:41:42.287 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-31 00:41:42.287 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-31 00:41:42.287 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-31 00:41:42.462 -04:00 [DBG] Login Url: /Account/Login
2020-08-31 00:41:42.463 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-31 00:41:42.463 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-31 00:41:42.463 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-31 00:41:42.463 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-31 00:41:42.463 -04:00 [DBG] Error Url: /home/error
2020-08-31 00:41:42.463 -04:00 [DBG] Error Id Parameter: errorId
2020-08-31 00:41:56.178 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 00:41:57.006 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:41:57.008 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:41:57.012 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 00:41:57.014 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 00:41:57.014 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 00:41:57.015 -04:00 [DBG] Start discovery request
2020-08-31 00:41:57.325 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 00:41:57.383 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 00:41:57.384 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-31 00:41:57.384 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-31 00:41:57.384 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-31 00:41:57.385 -04:00 [DBG] Rendering check session result
2020-08-31 00:41:57.405 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:41:57.405 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:41:57.405 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 00:41:57.406 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 00:41:57.406 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 00:41:57.406 -04:00 [DBG] Start key discovery request
2020-08-31 00:42:00.914 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 00:42:00.915 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 00:42:00.915 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 00:42:00.916 -04:00 [DBG] Start authorize request
2020-08-31 00:42:00.919 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 00:42:00.920 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 00:42:01.116 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:42:01.120 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:42:01.132 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"dVhTTTFpLnhVOGpYWXZwa0VHd3lvMjlsVG5lVEtRNVJXN1kzRndVZHNtWDlY","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"g-x7EBmw7GhoCjMlD8QudSIuHWJ4m4ysxfd1I2Z2KCM","code_challenge_method":"S256","nonce":"dVhTTTFpLnhVOGpYWXZwa0VHd3lvMjlsVG5lVEtRNVJXN1kzRndVZHNtWDlY","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:42:01.136 -04:00 [ERR] Request validation failed
2020-08-31 00:42:01.136 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"dVhTTTFpLnhVOGpYWXZwa0VHd3lvMjlsVG5lVEtRNVJXN1kzRndVZHNtWDlY","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"g-x7EBmw7GhoCjMlD8QudSIuHWJ4m4ysxfd1I2Z2KCM","code_challenge_method":"S256","nonce":"dVhTTTFpLnhVOGpYWXZwa0VHd3lvMjlsVG5lVEtRNVJXN1kzRndVZHNtWDlY","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:42:01.141 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000168-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:42:01.0000000Z","ProcessId":26256,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 00:47:37.585 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 00:47:37.589 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 00:47:37.590 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 00:47:37.590 -04:00 [DBG] Start authorize request
2020-08-31 00:47:37.591 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 00:47:37.591 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 00:47:37.611 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:47:37.611 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:47:37.611 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"b3lwTmYuWC1MSXh4S08xcXlKTHY5c1NWeHIyMHM4RG0zbnBBT1ZRdi5Rb0Nv","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"FSQspcnswTr1KKjUFY00cscntYXyEtSExF6acyRmN3E","code_challenge_method":"S256","nonce":"b3lwTmYuWC1MSXh4S08xcXlKTHY5c1NWeHIyMHM4RG0zbnBBT1ZRdi5Rb0Nv","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:47:37.611 -04:00 [ERR] Request validation failed
2020-08-31 00:47:37.611 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"b3lwTmYuWC1MSXh4S08xcXlKTHY5c1NWeHIyMHM4RG0zbnBBT1ZRdi5Rb0Nv","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"FSQspcnswTr1KKjUFY00cscntYXyEtSExF6acyRmN3E","code_challenge_method":"S256","nonce":"b3lwTmYuWC1MSXh4S08xcXlKTHY5c1NWeHIyMHM4RG0zbnBBT1ZRdi5Rb0Nv","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:47:37.612 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000070-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:47:37.0000000Z","ProcessId":26256,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 00:47:55.218 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 00:47:55.221 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 00:47:55.221 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 00:47:55.222 -04:00 [DBG] Start authorize request
2020-08-31 00:47:55.222 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 00:47:55.222 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 00:47:55.250 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:47:55.250 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:47:55.251 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"VX5vLnh0aC5IZUZHUVN1dWdJR3FKQThabm1hOXcwU3N0ZWhTYWI4V0Nod1c0","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"PS7CUA6cYDebBIWXbzyJEpopg2M-P3fw7jbeJfWWLVE","code_challenge_method":"S256","nonce":"VX5vLnh0aC5IZUZHUVN1dWdJR3FKQThabm1hOXcwU3N0ZWhTYWI4V0Nod1c0","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:47:55.251 -04:00 [ERR] Request validation failed
2020-08-31 00:47:55.251 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"VX5vLnh0aC5IZUZHUVN1dWdJR3FKQThabm1hOXcwU3N0ZWhTYWI4V0Nod1c0","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"PS7CUA6cYDebBIWXbzyJEpopg2M-P3fw7jbeJfWWLVE","code_challenge_method":"S256","nonce":"VX5vLnh0aC5IZUZHUVN1dWdJR3FKQThabm1hOXcwU3N0ZWhTYWI4V0Nod1c0","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:47:55.252 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000007b-0006-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:47:55.0000000Z","ProcessId":26256,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 00:52:19.095 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-31 00:52:19.096 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-31 00:52:19.096 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-31 00:52:19.097 -04:00 [DBG] Processing signout request for 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 00:52:19.099 -04:00 [DBG] Start end session request validation
2020-08-31 00:52:19.100 -04:00 [DBG] Start identity token validation
2020-08-31 00:52:19.178 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:52:19.178 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:52:19.179 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-31 00:52:19.288 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-31 00:52:19.289 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598848855,"exp":1598849155,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"dXN5U01oMmxPM09DYWE2VmIudnhkdjR6TnBXN25lYmVWS21ERGZTZWlFOU1H","iat":1598848855,"at_hash":"rfk9-lS80Iz3gt7ua7GaEw","s_hash":"mlILomCHiX-R78x9OJ7aiQ","sid":"yp2Lc4p4HIo289Ybpf7LKA","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598848174,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-31 00:52:19.293 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-08-31 00:52:19.294 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-31 00:52:19.327 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-31 00:52:19.327 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-31 00:52:19.327 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-31 00:52:19.328 -04:00 [INF] {"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"800000d6-000a-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:52:19.0000000Z","ProcessId":26256,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-31 00:52:19.363 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-08-31 00:52:19.365 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-08-31 00:52:19.365 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-08-31 00:52:19.367 -04:00 [DBG] Processing signout callback request
2020-08-31 00:52:19.398 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:52:19.398 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:52:19.399 -04:00 [DBG] No client front-channel logout URLs
2020-08-31 00:52:19.399 -04:00 [DBG] No client back-channel logout URLs
2020-08-31 00:52:19.400 -04:00 [INF] Successful signout callback.
2020-08-31 00:52:19.400 -04:00 [DBG] No client front-channel iframe urls
2020-08-31 00:52:19.400 -04:00 [DBG] No client back-channel iframe urls
2020-08-31 00:52:22.124 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 00:52:22.127 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:52:22.128 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:52:22.128 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 00:52:22.128 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 00:52:22.128 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 00:52:22.128 -04:00 [DBG] Start discovery request
2020-08-31 00:52:22.143 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 00:52:22.173 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 00:52:22.175 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:52:22.175 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:52:22.175 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 00:52:22.175 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 00:52:22.176 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 00:52:22.176 -04:00 [DBG] Start key discovery request
2020-08-31 00:52:23.206 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 00:52:23.207 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 00:52:23.207 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 00:52:23.207 -04:00 [DBG] Start authorize request
2020-08-31 00:52:23.207 -04:00 [DBG] No user present in authorize request
2020-08-31 00:52:23.207 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 00:52:23.217 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:52:23.217 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:52:23.217 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"YmhnY1R5UVYxaG5WaDdfWUJxMGthLUJEdjJKWFlzNnFRbWN6TTRQWWZlQkpW","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"sWp0AS7l6avYqkazwCNPjYxWmlLiXbVmzczI6ilXlE0","code_challenge_method":"S256","nonce":"YmhnY1R5UVYxaG5WaDdfWUJxMGthLUJEdjJKWFlzNnFRbWN6TTRQWWZlQkpW","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:52:23.217 -04:00 [ERR] Request validation failed
2020-08-31 00:52:23.217 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"YmhnY1R5UVYxaG5WaDdfWUJxMGthLUJEdjJKWFlzNnFRbWN6TTRQWWZlQkpW","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"sWp0AS7l6avYqkazwCNPjYxWmlLiXbVmzczI6ilXlE0","code_challenge_method":"S256","nonce":"YmhnY1R5UVYxaG5WaDdfWUJxMGthLUJEdjJKWFlzNnFRbWN6TTRQWWZlQkpW","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:52:23.217 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000d1-0002-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:52:23.0000000Z","ProcessId":26256,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 00:52:29.506 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 00:52:29.507 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 00:52:29.507 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 00:52:29.507 -04:00 [DBG] Start authorize request
2020-08-31 00:52:29.507 -04:00 [DBG] No user present in authorize request
2020-08-31 00:52:29.507 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 00:52:29.526 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:52:29.526 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:52:29.528 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 00:52:29.569 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:52:29.601 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:52:29.608 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:52:29.609 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:52:29.613 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 00:52:29.613 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"ekgtSnIwMEpqWWNLfmNGdnpSSC1xcEtBdzhfdWRGVnpiejhWUlFMM2Q2TWpvsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"ekgtSnIwMEpqWWNLfmNGdnpSSC1xcEtBdzhfdWRGVnpiejhWUlFMM2Q2TWpv","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"ekgtSnIwMEpqWWNLfmNGdnpSSC1xcEtBdzhfdWRGVnpiejhWUlFMM2Q2TWpvsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"O3VjdiIPFys-bK4qceOgBcqMaICldgcCBudnoY8famE","code_challenge_method":"S256","nonce":"ekgtSnIwMEpqWWNLfmNGdnpSSC1xcEtBdzhfdWRGVnpiejhWUlFMM2Q2TWpv"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:52:29.615 -04:00 [INF] Showing login: User is not authenticated
2020-08-31 00:52:29.631 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 00:52:29.639 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:52:29.639 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:52:29.639 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 00:52:29.640 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:52:29.641 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:52:29.642 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:52:29.644 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:52:29.644 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 00:52:29.655 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:52:29.655 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:52:31.878 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-31 00:52:31.898 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 00:52:31.907 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:52:31.907 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:52:31.907 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 00:52:31.909 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:52:31.910 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:52:31.911 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:52:31.912 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:52:31.912 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 00:52:31.993 -04:00 [DBG] Augmenting SignInContext
2020-08-31 00:52:31.994 -04:00 [DBG] Adding idp claim with value: local
2020-08-31 00:52:31.994 -04:00 [DBG] Adding auth_time claim with value: 1598849551
2020-08-31 00:52:31.996 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-31 00:52:31.999 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000b4-0009-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:52:31.0000000Z","ProcessId":26256,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-31 00:52:32.006 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:52:32.006 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:52:32.013 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-31 00:52:32.014 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-31 00:52:32.014 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-31 00:52:32.015 -04:00 [DBG] Start authorize callback request
2020-08-31 00:52:32.017 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 00:52:32.017 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 00:52:32.024 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:52:32.024 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:52:32.025 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 00:52:32.026 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:52:32.027 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:52:32.028 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:52:32.029 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:52:32.029 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 00:52:32.030 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"ekgtSnIwMEpqWWNLfmNGdnpSSC1xcEtBdzhfdWRGVnpiejhWUlFMM2Q2TWpvsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"ekgtSnIwMEpqWWNLfmNGdnpSSC1xcEtBdzhfdWRGVnpiejhWUlFMM2Q2TWpv","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"pgJuSVlOTUNx8uo9trzFoQ","Raw":{"response_type":"code","client_id":"angular_spa","state":"ekgtSnIwMEpqWWNLfmNGdnpSSC1xcEtBdzhfdWRGVnpiejhWUlFMM2Q2TWpvsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"O3VjdiIPFys-bK4qceOgBcqMaICldgcCBudnoY8famE","code_challenge_method":"S256","nonce":"ekgtSnIwMEpqWWNLfmNGdnpSSC1xcEtBdzhfdWRGVnpiejhWUlFMM2Q2TWpv"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 00:52:32.035 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-31 00:52:32.036 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-31 00:52:32.076 -04:00 [DBG] 4MOw7fGFAonLs9XD/lNBWe34RoRvAv3Rg9GCWG4kRoI= not found in database
2020-08-31 00:52:32.166 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****fttI","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000b4-000b-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:52:32.0000000Z","ProcessId":26256,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-31 00:52:32.167 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"ekgtSnIwMEpqWWNLfmNGdnpSSC1xcEtBdzhfdWRGVnpiejhWUlFMM2Q2TWpvsemicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-31 00:52:32.169 -04:00 [DBG] Augmenting SignInContext
2020-08-31 00:52:32.169 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-31 00:52:32.948 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 00:52:32.950 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:52:32.950 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:52:32.951 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 00:52:32.952 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 00:52:32.952 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 00:52:32.952 -04:00 [DBG] Start discovery request
2020-08-31 00:52:32.965 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 00:52:32.995 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 00:52:32.999 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:52:32.999 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:52:33.000 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 00:52:33.002 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 00:52:33.002 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 00:52:33.002 -04:00 [DBG] Start key discovery request
2020-08-31 00:52:34.014 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-31 00:52:34.016 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:52:34.016 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:52:34.016 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-31 00:52:34.020 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-31 00:52:34.020 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-31 00:52:34.022 -04:00 [DBG] Start token request.
2020-08-31 00:52:34.024 -04:00 [DBG] Start client validation
2020-08-31 00:52:34.027 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-31 00:52:34.028 -04:00 [DBG] Start parsing for secret in post body
2020-08-31 00:52:34.028 -04:00 [DBG] client id without secret found
2020-08-31 00:52:34.029 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-31 00:52:34.029 -04:00 [DBG] Secret id found: angular_spa
2020-08-31 00:52:34.039 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:52:34.039 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:52:34.039 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-31 00:52:34.039 -04:00 [DBG] Client validation success
2020-08-31 00:52:34.040 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000078-0000-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:52:34.0000000Z","ProcessId":26256,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-31 00:52:34.042 -04:00 [DBG] Start token request validation
2020-08-31 00:52:34.045 -04:00 [DBG] Start validation of authorization code token request
2020-08-31 00:52:34.055 -04:00 [DBG] 4MOw7fGFAonLs9XD/lNBWe34RoRvAv3Rg9GCWG4kRoI= found in database: true
2020-08-31 00:52:34.070 -04:00 [DBG] removing 4MOw7fGFAonLs9XD/lNBWe34RoRvAv3Rg9GCWG4kRoI= persisted grant from database
2020-08-31 00:52:34.079 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-31 00:52:34.082 -04:00 [DBG] Validation of authorization code token request success
2020-08-31 00:52:34.084 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"VZ9p3jTafTmaTE0Dq-7UpHw7tSvmMWUsijOxi7hfttI","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"VZ9p3jTafTmaTE0Dq-7UpHw7tSvmMWUsijOxi7hfttI","redirect_uri":"https://localhost:4200","code_verifier":"NjJlU1lmYnYwaHNuU0M3bS5-b3VXbkpMRGc0UDNXVG5YajNLbXRlQk4tSmgt","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-31 00:52:34.093 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:52:34.094 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:52:34.095 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:52:34.096 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:52:34.103 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-31 00:52:34.103 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 00:52:34.130 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:52:34.130 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:52:34.131 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:52:34.132 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 00:52:34.136 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-31 00:52:34.136 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-31 00:52:34.138 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****EiXA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****cSNg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000078-0000-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-31T04:52:34.0000000Z","ProcessId":26256,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-31 00:52:34.138 -04:00 [DBG] Token request success.
2020-08-31 00:52:34.151 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-31 00:52:34.152 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-31 00:52:34.152 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-31 00:52:34.152 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-31 00:52:34.152 -04:00 [DBG] Rendering check session result
2020-08-31 00:52:34.153 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:52:34.153 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:52:34.155 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-31 00:52:34.157 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 00:52:34.157 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 00:52:34.157 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-31 00:52:34.158 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-31 00:52:34.158 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-31 00:52:34.160 -04:00 [DBG] Start userinfo request
2020-08-31 00:52:34.161 -04:00 [DBG] Bearer token found in header
2020-08-31 00:52:34.174 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:52:34.175 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:52:34.184 -04:00 [DBG] angular_spa found in database: true
2020-08-31 00:52:34.184 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 00:52:34.186 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-31 00:52:34.186 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598849554,"exp":1598853154,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598849551,"idp":"local","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-31 00:52:34.189 -04:00 [DBG] Creating userinfo response
2020-08-31 00:52:34.191 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 00:52:34.191 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 00:52:34.193 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:52:34.196 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-31 00:52:34.196 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 00:52:34.198 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 00:52:34.202 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-31 00:52:34.202 -04:00 [DBG] End userinfo request
2020-08-31 10:05:40.038 -04:00 [INF] Starting host...
2020-08-31 10:05:41.712 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-08-31 10:05:41.899 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-08-31 10:05:41.899 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-08-31 10:05:41.899 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-08-31 10:05:41.899 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-08-31 10:05:41.899 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-08-31 10:05:41.899 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-08-31 10:05:42.234 -04:00 [DBG] Login Url: /Account/Login
2020-08-31 10:05:42.235 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-08-31 10:05:42.235 -04:00 [DBG] Logout Url: /Account/Logout
2020-08-31 10:05:42.235 -04:00 [DBG] ConsentUrl Url: /consent
2020-08-31 10:05:42.235 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-08-31 10:05:42.235 -04:00 [DBG] Error Url: /home/error
2020-08-31 10:05:42.235 -04:00 [DBG] Error Id Parameter: errorId
2020-08-31 10:06:55.411 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 10:06:55.668 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 10:06:55.681 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 10:06:55.681 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 10:06:55.683 -04:00 [DBG] Start discovery request
2020-08-31 10:06:56.272 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:06:56.274 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:06:56.276 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 10:06:56.277 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 10:06:56.277 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 10:06:56.277 -04:00 [DBG] Start discovery request
2020-08-31 10:06:56.611 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 10:06:56.611 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 10:06:56.673 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 10:06:56.685 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 10:06:56.707 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:06:56.707 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:06:56.708 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:06:56.708 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:06:56.709 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 10:06:56.711 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 10:06:56.711 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 10:06:56.712 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 10:06:56.712 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 10:06:56.712 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 10:06:56.712 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 10:06:56.713 -04:00 [DBG] Start key discovery request
2020-08-31 10:06:56.713 -04:00 [DBG] Start key discovery request
2020-08-31 10:06:56.724 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 10:06:56.724 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 10:06:56.724 -04:00 [DBG] Start discovery request
2020-08-31 10:06:56.728 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 10:06:56.771 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 10:06:56.773 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:06:56.773 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:06:56.774 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 10:06:56.776 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 10:06:56.776 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 10:06:56.777 -04:00 [DBG] Start key discovery request
2020-08-31 10:06:57.831 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 10:06:57.834 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 10:06:57.834 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 10:06:57.835 -04:00 [DBG] Start authorize request
2020-08-31 10:06:57.838 -04:00 [DBG] No user present in authorize request
2020-08-31 10:06:57.839 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 10:06:58.036 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:06:58.041 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:06:58.055 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"NGF3Y2JoNVFxc2xiNzBMQ2U3VUtJfnptNVJVYnMueGdBZjFyQ3FnY1IwcHZx","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"Jhrw444V22e576sKU1OAJRgHdgdGlkLPte55d2fKogE","code_challenge_method":"S256","nonce":"NGF3Y2JoNVFxc2xiNzBMQ2U3VUtJfnptNVJVYnMueGdBZjFyQ3FnY1IwcHZx","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:06:58.058 -04:00 [ERR] Request validation failed
2020-08-31 10:06:58.058 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"NGF3Y2JoNVFxc2xiNzBMQ2U3VUtJfnptNVJVYnMueGdBZjFyQ3FnY1IwcHZx","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"Jhrw444V22e576sKU1OAJRgHdgdGlkLPte55d2fKogE","code_challenge_method":"S256","nonce":"NGF3Y2JoNVFxc2xiNzBMQ2U3VUtJfnptNVJVYnMueGdBZjFyQ3FnY1IwcHZx","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:06:58.063 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000d9-0002-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:06:58.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 10:06:58.213 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 10:06:58.214 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 10:06:58.214 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 10:06:58.214 -04:00 [DBG] Start authorize request
2020-08-31 10:06:58.214 -04:00 [DBG] No user present in authorize request
2020-08-31 10:06:58.214 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 10:06:58.223 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:06:58.223 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:06:58.223 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"WkZNV1VkQ29VRFBwLnlvMzNyVmxaY0ZHYUZUUTBnfjcuS0xxb0RWUnFXNzVp","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"oUH5wXjk2HRAVlJpy1fRWA8FrdzgMrlJ0SGwlzw1mxM","code_challenge_method":"S256","nonce":"WkZNV1VkQ29VRFBwLnlvMzNyVmxaY0ZHYUZUUTBnfjcuS0xxb0RWUnFXNzVp","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:06:58.223 -04:00 [ERR] Request validation failed
2020-08-31 10:06:58.223 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"WkZNV1VkQ29VRFBwLnlvMzNyVmxaY0ZHYUZUUTBnfjcuS0xxb0RWUnFXNzVp","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"oUH5wXjk2HRAVlJpy1fRWA8FrdzgMrlJ0SGwlzw1mxM","code_challenge_method":"S256","nonce":"WkZNV1VkQ29VRFBwLnlvMzNyVmxaY0ZHYUZUUTBnfjcuS0xxb0RWUnFXNzVp","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:06:58.223 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000008c-0006-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:06:58.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 10:07:21.405 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-31 10:07:21.407 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-31 10:07:21.407 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-31 10:07:21.408 -04:00 [DBG] Processing signout request for anonymous
2020-08-31 10:07:21.410 -04:00 [DBG] Start end session request validation
2020-08-31 10:07:21.413 -04:00 [DBG] Start identity token validation
2020-08-31 10:07:21.445 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:07:21.445 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:07:21.445 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-31 10:07:21.559 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-31 10:07:21.560 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598849554,"exp":1598849854,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"ekgtSnIwMEpqWWNLfmNGdnpSSC1xcEtBdzhfdWRGVnpiejhWUlFMM2Q2TWpv","iat":1598849554,"at_hash":"WKOLUEp7c8qTb1lh3d-Q5Q","s_hash":"3lbuF4XiqQeGv83uUmngtw","sid":"pgJuSVlOTUNx8uo9trzFoQ","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598849551,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-31 10:07:21.561 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"unknown","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-08-31 10:07:21.562 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-31 10:07:24.483 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 10:07:24.487 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:07:24.487 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:07:24.487 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 10:07:24.488 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 10:07:24.488 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 10:07:24.488 -04:00 [DBG] Start discovery request
2020-08-31 10:07:24.491 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 10:07:24.511 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 10:07:24.516 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:07:24.516 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:07:24.516 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 10:07:24.516 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 10:07:24.516 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 10:07:24.516 -04:00 [DBG] Start key discovery request
2020-08-31 10:07:25.553 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 10:07:25.557 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 10:07:25.557 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 10:07:25.557 -04:00 [DBG] Start authorize request
2020-08-31 10:07:25.557 -04:00 [DBG] No user present in authorize request
2020-08-31 10:07:25.557 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 10:07:25.567 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:07:25.567 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:07:25.567 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"N0I3bW5ZTHMuRndTNVpOSW1qOVVKZGFDRWlVWWxibGctc0cwemlCZWUtNH5G","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"dfyl6LCX8J63Ku9Mbxt9PdDVKskxpU776l0vZxdllyo","code_challenge_method":"S256","nonce":"N0I3bW5ZTHMuRndTNVpOSW1qOVVKZGFDRWlVWWxibGctc0cwemlCZWUtNH5G","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:07:25.567 -04:00 [ERR] Request validation failed
2020-08-31 10:07:25.568 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"N0I3bW5ZTHMuRndTNVpOSW1qOVVKZGFDRWlVWWxibGctc0cwemlCZWUtNH5G","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"dfyl6LCX8J63Ku9Mbxt9PdDVKskxpU776l0vZxdllyo","code_challenge_method":"S256","nonce":"N0I3bW5ZTHMuRndTNVpOSW1qOVVKZGFDRWlVWWxibGctc0cwemlCZWUtNH5G","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:07:25.568 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000005e-0004-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:07:25.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 10:07:46.927 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 10:07:46.929 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 10:07:46.929 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 10:07:46.929 -04:00 [DBG] Start authorize request
2020-08-31 10:07:46.929 -04:00 [DBG] No user present in authorize request
2020-08-31 10:07:46.930 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 10:07:46.950 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:07:46.951 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:07:46.952 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 10:07:46.998 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:07:47.032 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:07:47.039 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:07:47.041 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:07:47.044 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 10:07:47.045 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"bkxFMmxWLjFMVElWcGIyfk1BN2hLZlJCNkd3V28yTnB5LVVFLl9vVlZEZUJCsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"bkxFMmxWLjFMVElWcGIyfk1BN2hLZlJCNkd3V28yTnB5LVVFLl9vVlZEZUJC","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"bkxFMmxWLjFMVElWcGIyfk1BN2hLZlJCNkd3V28yTnB5LVVFLl9vVlZEZUJCsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"KfQ2nfpsst5zZ5EuS0OFwGEMMghrh7k_DZsWP-kAzqs","code_challenge_method":"S256","nonce":"bkxFMmxWLjFMVElWcGIyfk1BN2hLZlJCNkd3V28yTnB5LVVFLl9vVlZEZUJC"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:07:47.046 -04:00 [INF] Showing login: User is not authenticated
2020-08-31 10:07:47.061 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 10:07:47.070 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:07:47.070 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:07:47.070 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 10:07:47.071 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:07:47.072 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:07:47.074 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:07:47.075 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:07:47.075 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 10:07:47.088 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:07:47.088 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:07:52.074 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-31 10:07:52.701 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-31 10:07:52.754 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-08-31 10:07:52.835 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"8000002d-000b-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:07:52.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-31 10:07:52.839 -04:00 [DBG] Augmenting SignInContext
2020-08-31 10:07:52.839 -04:00 [DBG] Adding amr claim with value: external
2020-08-31 10:07:52.840 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-31 10:07:52.842 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-31 10:07:52.849 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-31 10:07:52.849 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-31 10:07:52.849 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-31 10:07:52.850 -04:00 [DBG] Start authorize callback request
2020-08-31 10:07:52.852 -04:00 [DBG] User in authorize request: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-31 10:07:52.852 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 10:07:52.860 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:07:52.860 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:07:52.861 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 10:07:52.862 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:07:52.863 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:07:52.865 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:07:52.866 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:07:52.866 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 10:07:52.866 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"bkxFMmxWLjFMVElWcGIyfk1BN2hLZlJCNkd3V28yTnB5LVVFLl9vVlZEZUJCsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"bkxFMmxWLjFMVElWcGIyfk1BN2hLZlJCNkd3V28yTnB5LVVFLl9vVlZEZUJC","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"Pvs6qk7wcBbNT7RJS3HgPQ","Raw":{"response_type":"code","client_id":"angular_spa","state":"bkxFMmxWLjFMVElWcGIyfk1BN2hLZlJCNkd3V28yTnB5LVVFLl9vVlZEZUJCsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"KfQ2nfpsst5zZ5EuS0OFwGEMMghrh7k_DZsWP-kAzqs","code_challenge_method":"S256","nonce":"bkxFMmxWLjFMVElWcGIyfk1BN2hLZlJCNkd3V28yTnB5LVVFLl9vVlZEZUJC"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:07:52.871 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-31 10:07:52.873 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-31 10:07:52.900 -04:00 [DBG] peu5OabJmRpCXoE6l7hcHu9bgjV6g1G1z/EnKw8HKAo= not found in database
2020-08-31 10:07:52.993 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****Ghm8","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000002a-0007-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:07:52.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-31 10:07:52.994 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"bkxFMmxWLjFMVElWcGIyfk1BN2hLZlJCNkd3V28yTnB5LVVFLl9vVlZEZUJCsemicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-31 10:07:52.998 -04:00 [DBG] Augmenting SignInContext
2020-08-31 10:07:52.998 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-31 10:07:53.218 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 10:07:53.221 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:07:53.221 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:07:53.222 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 10:07:53.222 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 10:07:53.222 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 10:07:53.222 -04:00 [DBG] Start discovery request
2020-08-31 10:07:53.228 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 10:07:53.295 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 10:07:53.297 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:07:53.298 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:07:53.298 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 10:07:53.298 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 10:07:53.298 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 10:07:53.298 -04:00 [DBG] Start key discovery request
2020-08-31 10:07:54.325 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-31 10:07:54.327 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:07:54.327 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:07:54.327 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-31 10:07:54.329 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-31 10:07:54.329 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-31 10:07:54.332 -04:00 [DBG] Start token request.
2020-08-31 10:07:54.334 -04:00 [DBG] Start client validation
2020-08-31 10:07:54.336 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-31 10:07:54.337 -04:00 [DBG] Start parsing for secret in post body
2020-08-31 10:07:54.337 -04:00 [DBG] client id without secret found
2020-08-31 10:07:54.338 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-31 10:07:54.338 -04:00 [DBG] Secret id found: angular_spa
2020-08-31 10:07:54.346 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:07:54.346 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:07:54.347 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-31 10:07:54.347 -04:00 [DBG] Client validation success
2020-08-31 10:07:54.348 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000057-0005-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:07:54.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-31 10:07:54.349 -04:00 [DBG] Start token request validation
2020-08-31 10:07:54.351 -04:00 [DBG] Start validation of authorization code token request
2020-08-31 10:07:54.361 -04:00 [DBG] peu5OabJmRpCXoE6l7hcHu9bgjV6g1G1z/EnKw8HKAo= found in database: true
2020-08-31 10:07:54.375 -04:00 [DBG] removing peu5OabJmRpCXoE6l7hcHu9bgjV6g1G1z/EnKw8HKAo= persisted grant from database
2020-08-31 10:07:54.387 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-31 10:07:54.389 -04:00 [DBG] Validation of authorization code token request success
2020-08-31 10:07:54.391 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"eec8zipoaZugL5Oj2utgX2N1gR_gN8DPBFZRAp5Ghm8","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"eec8zipoaZugL5Oj2utgX2N1gR_gN8DPBFZRAp5Ghm8","redirect_uri":"https://localhost:4200","code_verifier":"dFprYXQ0U1lGaGpDR1dzfnc3b09QLXQuVElIcC03RGFocUlSOFdXUDVfQ21L","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-31 10:07:54.401 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:07:54.401 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:07:54.403 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:07:54.404 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:07:54.411 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-31 10:07:54.411 -04:00 [DBG] Getting claims for access token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-31 10:07:54.439 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:07:54.439 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:07:54.440 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:07:54.441 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:07:54.444 -04:00 [DBG] Getting claims for identity token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188 and client: angular_spa
2020-08-31 10:07:54.445 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-31 10:07:54.447 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****2sYA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****d3Vg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000057-0005-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:07:54.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-31 10:07:54.447 -04:00 [DBG] Token request success.
2020-08-31 10:07:54.457 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-31 10:07:54.458 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:07:54.459 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:07:54.459 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-31 10:07:54.459 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-31 10:07:54.459 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-31 10:07:54.460 -04:00 [DBG] Rendering check session result
2020-08-31 10:07:54.462 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-31 10:07:54.463 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:07:54.464 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:07:54.464 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-31 10:07:54.465 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-31 10:07:54.465 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-31 10:07:54.467 -04:00 [DBG] Start userinfo request
2020-08-31 10:07:54.468 -04:00 [DBG] Bearer token found in header
2020-08-31 10:07:54.479 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:07:54.480 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:07:54.488 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:07:54.488 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:07:54.490 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-31 10:07:54.490 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598882874,"exp":1598886474,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1598882872,"idp":"azuread","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"external"},"$type":"TokenValidationLog"}
2020-08-31 10:07:54.493 -04:00 [DBG] Creating userinfo response
2020-08-31 10:07:54.495 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 10:07:54.496 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 10:07:54.498 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:07:54.501 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-31 10:07:54.501 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 10:07:54.503 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:07:54.506 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-31 10:07:54.506 -04:00 [DBG] End userinfo request
2020-08-31 10:08:19.310 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-31 10:08:19.311 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-31 10:08:19.311 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-31 10:08:19.311 -04:00 [DBG] Processing signout request for 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-31 10:08:19.311 -04:00 [DBG] Start end session request validation
2020-08-31 10:08:19.311 -04:00 [DBG] Start identity token validation
2020-08-31 10:08:19.324 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:08:19.325 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:08:19.325 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-31 10:08:19.327 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-31 10:08:19.328 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598882874,"exp":1598883174,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"bkxFMmxWLjFMVElWcGIyfk1BN2hLZlJCNkd3V28yTnB5LVVFLl9vVlZEZUJC","iat":1598882874,"at_hash":"PeE1DxJV0EYmCZHnZTetNg","s_hash":"y5HksE7ZBEOIeUkoI9atPw","sid":"Pvs6qk7wcBbNT7RJS3HgPQ","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1598882872,"idp":"azuread","amr":"external"},"$type":"TokenValidationLog"}
2020-08-31 10:08:19.328 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-08-31 10:08:19.328 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-31 10:08:19.339 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-31 10:08:19.340 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-31 10:08:19.340 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-31 10:08:19.340 -04:00 [INF] {"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"800000eb-0006-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:08:19.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-31 10:08:23.081 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 10:08:23.082 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 10:08:23.082 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 10:08:23.082 -04:00 [DBG] Start authorize request
2020-08-31 10:08:23.082 -04:00 [DBG] No user present in authorize request
2020-08-31 10:08:23.082 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 10:08:23.093 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:08:23.093 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:08:23.094 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"OFZhaHZuQ3ZuV1NIR3R4THF1c0pnNHVxUkt6cmVCNHp2MDd4MjBPNzVWUjJw","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"cyi1bVuYPtsHkBJXaqEFitkgkSz7W-ZRUbUHoivlwRM","code_challenge_method":"S256","nonce":"OFZhaHZuQ3ZuV1NIR3R4THF1c0pnNHVxUkt6cmVCNHp2MDd4MjBPNzVWUjJw","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:08:23.094 -04:00 [ERR] Request validation failed
2020-08-31 10:08:23.094 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"OFZhaHZuQ3ZuV1NIR3R4THF1c0pnNHVxUkt6cmVCNHp2MDd4MjBPNzVWUjJw","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"cyi1bVuYPtsHkBJXaqEFitkgkSz7W-ZRUbUHoivlwRM","code_challenge_method":"S256","nonce":"OFZhaHZuQ3ZuV1NIR3R4THF1c0pnNHVxUkt6cmVCNHp2MDd4MjBPNzVWUjJw","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:08:23.094 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000011d-000a-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:08:23.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 10:08:30.765 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 10:08:30.767 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:08:30.767 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:08:30.767 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 10:08:30.767 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 10:08:30.767 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 10:08:30.767 -04:00 [DBG] Start discovery request
2020-08-31 10:08:30.770 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 10:08:30.787 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 10:08:30.788 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:08:30.788 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:08:30.788 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 10:08:30.789 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 10:08:30.789 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 10:08:30.789 -04:00 [DBG] Start key discovery request
2020-08-31 10:08:31.801 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 10:08:31.802 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 10:08:31.802 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 10:08:31.802 -04:00 [DBG] Start authorize request
2020-08-31 10:08:31.802 -04:00 [DBG] No user present in authorize request
2020-08-31 10:08:31.802 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 10:08:31.810 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:08:31.810 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:08:31.810 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"SzlNX2lPR1JKLWZEZDFiVFVfYmJscUViQVdpYk9fZn5NZFdZV25NdVRUVENK","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"2wbncoC2NwK2_YYsP7eSKguEDVCJL02N1rl4ZeQVJR8","code_challenge_method":"S256","nonce":"SzlNX2lPR1JKLWZEZDFiVFVfYmJscUViQVdpYk9fZn5NZFdZV25NdVRUVENK","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:08:31.810 -04:00 [ERR] Request validation failed
2020-08-31 10:08:31.811 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"SzlNX2lPR1JKLWZEZDFiVFVfYmJscUViQVdpYk9fZn5NZFdZV25NdVRUVENK","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"2wbncoC2NwK2_YYsP7eSKguEDVCJL02N1rl4ZeQVJR8","code_challenge_method":"S256","nonce":"SzlNX2lPR1JKLWZEZDFiVFVfYmJscUViQVdpYk9fZn5NZFdZV25NdVRUVENK","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:08:31.811 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000050-0003-fa00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:08:31.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 10:10:52.376 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 10:10:52.377 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:10:52.377 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:10:52.377 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 10:10:52.377 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 10:10:52.377 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 10:10:52.377 -04:00 [DBG] Start discovery request
2020-08-31 10:10:52.380 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 10:10:52.438 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 10:10:52.440 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:10:52.441 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:10:52.441 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 10:10:52.441 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 10:10:52.441 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 10:10:52.441 -04:00 [DBG] Start key discovery request
2020-08-31 10:10:53.615 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 10:10:53.615 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 10:10:53.615 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 10:10:53.615 -04:00 [DBG] Start authorize request
2020-08-31 10:10:53.615 -04:00 [DBG] No user present in authorize request
2020-08-31 10:10:53.615 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 10:10:53.648 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:10:53.648 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:10:53.649 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"dFkydGJHZXdxZHZiUjVSMFVQTFJHUk9KTFNZMlJUVXcuV2xBNzluREMtUlNv","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"x4JXdMwWGI5r_KlCytaTOOXxgY3aUREa6utHZvloWLw","code_challenge_method":"S256","nonce":"dFkydGJHZXdxZHZiUjVSMFVQTFJHUk9KTFNZMlJUVXcuV2xBNzluREMtUlNv","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:10:53.649 -04:00 [ERR] Request validation failed
2020-08-31 10:10:53.649 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"dFkydGJHZXdxZHZiUjVSMFVQTFJHUk9KTFNZMlJUVXcuV2xBNzluREMtUlNv","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"x4JXdMwWGI5r_KlCytaTOOXxgY3aUREa6utHZvloWLw","code_challenge_method":"S256","nonce":"dFkydGJHZXdxZHZiUjVSMFVQTFJHUk9KTFNZMlJUVXcuV2xBNzluREMtUlNv","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:10:53.649 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000131-0008-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:10:53.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 10:11:00.026 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 10:11:00.029 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 10:11:00.029 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 10:11:00.029 -04:00 [DBG] Start authorize request
2020-08-31 10:11:00.029 -04:00 [DBG] No user present in authorize request
2020-08-31 10:11:00.029 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 10:11:00.037 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:11:00.037 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:11:00.038 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 10:11:00.039 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:11:00.040 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:11:00.042 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:11:00.043 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:11:00.043 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 10:11:00.043 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"blVTSnZuZHhaTGluWXR0eGFRaG9OVjNmaS4wVVBqcHA1U1ZKSUlHOGp6XzZssemicolon%2Fshould-login","UiLocales":null,"Nonce":"blVTSnZuZHhaTGluWXR0eGFRaG9OVjNmaS4wVVBqcHA1U1ZKSUlHOGp6XzZs","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"blVTSnZuZHhaTGluWXR0eGFRaG9OVjNmaS4wVVBqcHA1U1ZKSUlHOGp6XzZssemicolon%2Fshould-login","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"jFKkmBWXVrRUauEp0lKDAa3jgX1vJthPID1_OT_NFeo","code_challenge_method":"S256","nonce":"blVTSnZuZHhaTGluWXR0eGFRaG9OVjNmaS4wVVBqcHA1U1ZKSUlHOGp6XzZs"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:11:00.043 -04:00 [INF] Showing login: User is not authenticated
2020-08-31 10:11:00.047 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 10:11:00.055 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:11:00.055 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:11:00.055 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 10:11:00.056 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:11:00.057 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:11:00.058 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:11:00.059 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:11:00.059 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 10:11:00.065 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:11:00.065 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:11:01.901 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-31 10:11:01.918 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 10:11:01.926 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:11:01.926 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:11:01.926 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 10:11:01.928 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:11:01.929 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:11:01.930 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:11:01.931 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:11:01.931 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 10:11:01.972 -04:00 [DBG] Augmenting SignInContext
2020-08-31 10:11:01.972 -04:00 [DBG] Adding idp claim with value: local
2020-08-31 10:11:01.972 -04:00 [DBG] Adding auth_time claim with value: 1598883061
2020-08-31 10:11:01.973 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-31 10:11:01.975 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000022-0002-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:11:01.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-31 10:11:01.982 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:11:01.982 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:11:01.992 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-31 10:11:01.992 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-31 10:11:01.992 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-31 10:11:01.992 -04:00 [DBG] Start authorize callback request
2020-08-31 10:11:01.992 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 10:11:01.992 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 10:11:01.999 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:11:01.999 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:11:02.000 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 10:11:02.001 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:11:02.002 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:11:02.003 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:11:02.004 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:11:02.004 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 10:11:02.004 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"blVTSnZuZHhaTGluWXR0eGFRaG9OVjNmaS4wVVBqcHA1U1ZKSUlHOGp6XzZssemicolon%2Fshould-login","UiLocales":null,"Nonce":"blVTSnZuZHhaTGluWXR0eGFRaG9OVjNmaS4wVVBqcHA1U1ZKSUlHOGp6XzZs","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"_RtSUcgh29jqY4RGNNGS9A","Raw":{"response_type":"code","client_id":"angular_spa","state":"blVTSnZuZHhaTGluWXR0eGFRaG9OVjNmaS4wVVBqcHA1U1ZKSUlHOGp6XzZssemicolon%2Fshould-login","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"jFKkmBWXVrRUauEp0lKDAa3jgX1vJthPID1_OT_NFeo","code_challenge_method":"S256","nonce":"blVTSnZuZHhaTGluWXR0eGFRaG9OVjNmaS4wVVBqcHA1U1ZKSUlHOGp6XzZs"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:11:02.006 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-31 10:11:02.006 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-31 10:11:02.007 -04:00 [DBG] e8Zwyv1/zMHBwhfpBhq+yDPfM/8PxyzXxAnrWxZvU68= not found in database
2020-08-31 10:11:02.009 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****J8yU","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000024-0002-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:11:02.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-31 10:11:02.009 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"blVTSnZuZHhaTGluWXR0eGFRaG9OVjNmaS4wVVBqcHA1U1ZKSUlHOGp6XzZssemicolon%2Fshould-login","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-31 10:11:02.009 -04:00 [DBG] Augmenting SignInContext
2020-08-31 10:11:02.009 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-31 10:11:02.813 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 10:11:02.815 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:11:02.815 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:11:02.815 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 10:11:02.815 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 10:11:02.815 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 10:11:02.815 -04:00 [DBG] Start discovery request
2020-08-31 10:11:02.818 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 10:11:02.850 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 10:11:02.852 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:11:02.852 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:11:02.852 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 10:11:02.852 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 10:11:02.852 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 10:11:02.852 -04:00 [DBG] Start key discovery request
2020-08-31 10:11:03.866 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-31 10:11:03.868 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:11:03.868 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:11:03.868 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-31 10:11:03.869 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-31 10:11:03.869 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-31 10:11:03.869 -04:00 [DBG] Start token request.
2020-08-31 10:11:03.869 -04:00 [DBG] Start client validation
2020-08-31 10:11:03.869 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-31 10:11:03.869 -04:00 [DBG] Start parsing for secret in post body
2020-08-31 10:11:03.870 -04:00 [DBG] client id without secret found
2020-08-31 10:11:03.870 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-31 10:11:03.870 -04:00 [DBG] Secret id found: angular_spa
2020-08-31 10:11:03.879 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:11:03.879 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:11:03.879 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-31 10:11:03.879 -04:00 [DBG] Client validation success
2020-08-31 10:11:03.879 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000007e-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:11:03.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-31 10:11:03.879 -04:00 [DBG] Start token request validation
2020-08-31 10:11:03.879 -04:00 [DBG] Start validation of authorization code token request
2020-08-31 10:11:03.880 -04:00 [DBG] e8Zwyv1/zMHBwhfpBhq+yDPfM/8PxyzXxAnrWxZvU68= found in database: true
2020-08-31 10:11:03.882 -04:00 [DBG] removing e8Zwyv1/zMHBwhfpBhq+yDPfM/8PxyzXxAnrWxZvU68= persisted grant from database
2020-08-31 10:11:03.885 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-31 10:11:03.887 -04:00 [DBG] Validation of authorization code token request success
2020-08-31 10:11:03.887 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"On2VjczKH68UbFNCWCSoNWzX6MUBTMhAJmWdtKwJ8yU","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"On2VjczKH68UbFNCWCSoNWzX6MUBTMhAJmWdtKwJ8yU","redirect_uri":"https://localhost:4200","code_verifier":"T2Y2RXpGeDZpWEhtbzlyZlhUOXd2bU4xMktKYkpzaHI1N3BVMVVrMjF6LlV0","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-31 10:11:03.893 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:11:03.893 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:11:03.895 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:11:03.897 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:11:03.897 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-31 10:11:03.897 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 10:11:03.908 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:11:03.908 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:11:03.910 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:11:03.912 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:11:03.912 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-31 10:11:03.912 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-31 10:11:03.913 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****8jcQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****YqvA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000007e-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:11:03.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-31 10:11:03.913 -04:00 [DBG] Token request success.
2020-08-31 10:11:03.921 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-31 10:11:03.922 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:11:03.922 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:11:03.923 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-31 10:11:03.923 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-31 10:11:03.923 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-31 10:11:03.923 -04:00 [DBG] Rendering check session result
2020-08-31 10:11:03.924 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-31 10:11:03.925 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:11:03.925 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:11:03.926 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-31 10:11:03.926 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-31 10:11:03.926 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-31 10:11:03.926 -04:00 [DBG] Start userinfo request
2020-08-31 10:11:03.926 -04:00 [DBG] Bearer token found in header
2020-08-31 10:11:03.936 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:11:03.936 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:11:03.944 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:11:03.944 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:11:03.946 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-31 10:11:03.946 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598883063,"exp":1598886663,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598883061,"idp":"local","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-31 10:11:03.946 -04:00 [DBG] Creating userinfo response
2020-08-31 10:11:03.946 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 10:11:03.946 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 10:11:03.948 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:11:03.948 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-31 10:11:03.948 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 10:11:03.949 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:11:03.953 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-31 10:11:03.953 -04:00 [DBG] End userinfo request
2020-08-31 10:11:12.953 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-31 10:11:12.955 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-31 10:11:12.955 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-31 10:11:12.955 -04:00 [DBG] Processing signout request for 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 10:11:12.955 -04:00 [DBG] Start end session request validation
2020-08-31 10:11:12.955 -04:00 [DBG] Start identity token validation
2020-08-31 10:11:12.965 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:11:12.966 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:11:12.966 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-31 10:11:12.968 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-31 10:11:12.969 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598883063,"exp":1598883363,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"blVTSnZuZHhaTGluWXR0eGFRaG9OVjNmaS4wVVBqcHA1U1ZKSUlHOGp6XzZs","iat":1598883063,"at_hash":"H1mkBr3g-Q29LP8drayVow","s_hash":"TddM766Gire4iIIzfNzIYg","sid":"_RtSUcgh29jqY4RGNNGS9A","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598883061,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-31 10:11:12.969 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-08-31 10:11:12.969 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-31 10:11:12.975 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-31 10:11:12.975 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-31 10:11:12.975 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-31 10:11:12.975 -04:00 [INF] {"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000092-0006-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:11:12.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-31 10:11:13.009 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-08-31 10:11:13.012 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-08-31 10:11:13.012 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-08-31 10:11:13.013 -04:00 [DBG] Processing signout callback request
2020-08-31 10:11:13.027 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:11:13.027 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:11:13.028 -04:00 [DBG] No client front-channel logout URLs
2020-08-31 10:11:13.028 -04:00 [DBG] No client back-channel logout URLs
2020-08-31 10:11:13.029 -04:00 [INF] Successful signout callback.
2020-08-31 10:11:13.029 -04:00 [DBG] No client front-channel iframe urls
2020-08-31 10:11:13.029 -04:00 [DBG] No client back-channel iframe urls
2020-08-31 10:11:15.883 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 10:11:15.885 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:11:15.885 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:11:15.885 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 10:11:15.885 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 10:11:15.885 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 10:11:15.885 -04:00 [DBG] Start discovery request
2020-08-31 10:11:15.888 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 10:11:15.929 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 10:11:15.932 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:11:15.932 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:11:15.932 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 10:11:15.933 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 10:11:15.933 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 10:11:15.933 -04:00 [DBG] Start key discovery request
2020-08-31 10:11:16.973 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 10:11:16.973 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 10:11:16.973 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 10:11:16.973 -04:00 [DBG] Start authorize request
2020-08-31 10:11:16.974 -04:00 [DBG] No user present in authorize request
2020-08-31 10:11:16.974 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 10:11:16.981 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:11:16.982 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:11:16.982 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"UXNlVGdPcEJJYTljdFZ5Q1YxXzBJbDV1cEdtUmlTU01BcElrbTVmYnNWfm5V","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"fNDvnL9JKJk7dPwjSfcQxPcJUvWbAffGmEqcH492kPI","code_challenge_method":"S256","nonce":"UXNlVGdPcEJJYTljdFZ5Q1YxXzBJbDV1cEdtUmlTU01BcElrbTVmYnNWfm5V","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:11:16.982 -04:00 [ERR] Request validation failed
2020-08-31 10:11:16.982 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"UXNlVGdPcEJJYTljdFZ5Q1YxXzBJbDV1cEdtUmlTU01BcElrbTVmYnNWfm5V","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"fNDvnL9JKJk7dPwjSfcQxPcJUvWbAffGmEqcH492kPI","code_challenge_method":"S256","nonce":"UXNlVGdPcEJJYTljdFZ5Q1YxXzBJbDV1cEdtUmlTU01BcElrbTVmYnNWfm5V","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:11:16.982 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000080-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:11:16.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 10:11:24.969 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 10:11:24.969 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 10:11:24.969 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 10:11:24.969 -04:00 [DBG] Start authorize request
2020-08-31 10:11:24.969 -04:00 [DBG] No user present in authorize request
2020-08-31 10:11:24.969 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 10:11:24.978 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:11:24.978 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:11:24.978 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 10:11:24.980 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:11:24.981 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:11:24.982 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:11:24.983 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:11:24.983 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 10:11:24.984 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"bjBJTThEUXhZbTdlRlhLZVc0Ym8tMUZ1a1NheWtaOHBkYURGUm1EVVh2WTVusemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"bjBJTThEUXhZbTdlRlhLZVc0Ym8tMUZ1a1NheWtaOHBkYURGUm1EVVh2WTVu","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"bjBJTThEUXhZbTdlRlhLZVc0Ym8tMUZ1a1NheWtaOHBkYURGUm1EVVh2WTVusemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"1Yws2EFgelE1UeUjtmrYoBubjjCgI0qhQ6Oz71VPeC8","code_challenge_method":"S256","nonce":"bjBJTThEUXhZbTdlRlhLZVc0Ym8tMUZ1a1NheWtaOHBkYURGUm1EVVh2WTVu"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:11:24.984 -04:00 [INF] Showing login: User is not authenticated
2020-08-31 10:11:24.988 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 10:11:24.997 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:11:24.997 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:11:24.997 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 10:11:24.999 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:11:25.000 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:11:25.001 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:11:25.003 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:11:25.003 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 10:11:25.009 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:11:25.009 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:11:27.543 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-31 10:11:27.545 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 10:11:27.554 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:11:27.554 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:11:27.554 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 10:11:27.556 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:11:27.557 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:11:27.558 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:11:27.559 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:11:27.559 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 10:11:27.566 -04:00 [DBG] Augmenting SignInContext
2020-08-31 10:11:27.566 -04:00 [DBG] Adding idp claim with value: local
2020-08-31 10:11:27.566 -04:00 [DBG] Adding auth_time claim with value: 1598883087
2020-08-31 10:11:27.566 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-31 10:11:27.567 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000a8-0001-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:11:27.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-31 10:11:27.573 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:11:27.573 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:11:27.578 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-31 10:11:27.582 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-31 10:11:27.582 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-31 10:11:27.582 -04:00 [DBG] Start authorize callback request
2020-08-31 10:11:27.582 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 10:11:27.582 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 10:11:27.590 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:11:27.590 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:11:27.590 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 10:11:27.591 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:11:27.592 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:11:27.594 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:11:27.595 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:11:27.595 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 10:11:27.595 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"bjBJTThEUXhZbTdlRlhLZVc0Ym8tMUZ1a1NheWtaOHBkYURGUm1EVVh2WTVusemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"bjBJTThEUXhZbTdlRlhLZVc0Ym8tMUZ1a1NheWtaOHBkYURGUm1EVVh2WTVu","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"3VNPXLk-MMDwJeMWEi5ppg","Raw":{"response_type":"code","client_id":"angular_spa","state":"bjBJTThEUXhZbTdlRlhLZVc0Ym8tMUZ1a1NheWtaOHBkYURGUm1EVVh2WTVusemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"1Yws2EFgelE1UeUjtmrYoBubjjCgI0qhQ6Oz71VPeC8","code_challenge_method":"S256","nonce":"bjBJTThEUXhZbTdlRlhLZVc0Ym8tMUZ1a1NheWtaOHBkYURGUm1EVVh2WTVu"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:11:27.597 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-31 10:11:27.597 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-31 10:11:27.598 -04:00 [DBG] mri3HznZ4pNChID4xnmlPE8vPqa1O+CrUunadCkEKpA= not found in database
2020-08-31 10:11:27.600 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****dVKg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000084-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:11:27.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-31 10:11:27.600 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"bjBJTThEUXhZbTdlRlhLZVc0Ym8tMUZ1a1NheWtaOHBkYURGUm1EVVh2WTVusemicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-31 10:11:27.600 -04:00 [DBG] Augmenting SignInContext
2020-08-31 10:11:27.601 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-31 10:11:28.384 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 10:11:28.385 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:11:28.386 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:11:28.386 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 10:11:28.386 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 10:11:28.386 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 10:11:28.386 -04:00 [DBG] Start discovery request
2020-08-31 10:11:28.388 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 10:11:28.425 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 10:11:28.427 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:11:28.427 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:11:28.427 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 10:11:28.428 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 10:11:28.428 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 10:11:28.428 -04:00 [DBG] Start key discovery request
2020-08-31 10:11:29.467 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-31 10:11:29.468 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:11:29.469 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:11:29.469 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-31 10:11:29.477 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-31 10:11:29.478 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-31 10:11:29.478 -04:00 [DBG] Start token request.
2020-08-31 10:11:29.478 -04:00 [DBG] Start client validation
2020-08-31 10:11:29.478 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-31 10:11:29.478 -04:00 [DBG] Start parsing for secret in post body
2020-08-31 10:11:29.478 -04:00 [DBG] client id without secret found
2020-08-31 10:11:29.478 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-31 10:11:29.478 -04:00 [DBG] Secret id found: angular_spa
2020-08-31 10:11:29.485 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:11:29.485 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:11:29.485 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-31 10:11:29.485 -04:00 [DBG] Client validation success
2020-08-31 10:11:29.486 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000094-0006-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:11:29.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-31 10:11:29.486 -04:00 [DBG] Start token request validation
2020-08-31 10:11:29.486 -04:00 [DBG] Start validation of authorization code token request
2020-08-31 10:11:29.487 -04:00 [DBG] mri3HznZ4pNChID4xnmlPE8vPqa1O+CrUunadCkEKpA= found in database: true
2020-08-31 10:11:29.488 -04:00 [DBG] removing mri3HznZ4pNChID4xnmlPE8vPqa1O+CrUunadCkEKpA= persisted grant from database
2020-08-31 10:11:29.491 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-31 10:11:29.492 -04:00 [DBG] Validation of authorization code token request success
2020-08-31 10:11:29.492 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"Mjoph2nPapKUSCrtxZ6H1crtAkWXL0KYs0J-MmLdVKg","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"Mjoph2nPapKUSCrtxZ6H1crtAkWXL0KYs0J-MmLdVKg","redirect_uri":"https://localhost:4200","code_verifier":"Y3llM1FpMDl-eTQ0dVNLcUxjYXNVX0NJWnpyLi5VTUZNRUJjODl3SUZ6bEdX","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-31 10:11:29.499 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:11:29.499 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:11:29.500 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:11:29.501 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:11:29.501 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-31 10:11:29.501 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 10:11:29.512 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:11:29.512 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:11:29.513 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:11:29.514 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:11:29.514 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-31 10:11:29.514 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-31 10:11:29.515 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****MJUg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****bQNA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000094-0006-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:11:29.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-31 10:11:29.516 -04:00 [DBG] Token request success.
2020-08-31 10:11:29.526 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-31 10:11:29.527 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-31 10:11:29.527 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-31 10:11:29.528 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-31 10:11:29.528 -04:00 [DBG] Rendering check session result
2020-08-31 10:11:29.528 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:11:29.528 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:11:29.531 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-31 10:11:29.532 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:11:29.533 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:11:29.533 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-31 10:11:29.535 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-31 10:11:29.535 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-31 10:11:29.535 -04:00 [DBG] Start userinfo request
2020-08-31 10:11:29.535 -04:00 [DBG] Bearer token found in header
2020-08-31 10:11:29.544 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:11:29.544 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:11:29.551 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:11:29.551 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:11:29.553 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-31 10:11:29.553 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598883089,"exp":1598886689,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598883087,"idp":"local","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-31 10:11:29.553 -04:00 [DBG] Creating userinfo response
2020-08-31 10:11:29.553 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 10:11:29.553 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 10:11:29.555 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:11:29.555 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-31 10:11:29.555 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 10:11:29.557 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:11:29.561 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-31 10:11:29.561 -04:00 [DBG] End userinfo request
2020-08-31 10:11:41.694 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 10:11:41.695 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:11:41.696 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:11:41.696 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 10:11:41.696 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 10:11:41.696 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 10:11:41.696 -04:00 [DBG] Start discovery request
2020-08-31 10:11:41.699 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 10:11:41.747 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 10:11:41.749 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:11:41.749 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:11:41.749 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 10:11:41.749 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 10:11:41.749 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 10:11:41.749 -04:00 [DBG] Start key discovery request
2020-08-31 10:11:41.751 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-31 10:11:41.751 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-31 10:11:41.751 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-31 10:11:41.751 -04:00 [DBG] Rendering check session result
2020-08-31 10:12:08.455 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 10:12:08.456 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:12:08.456 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:12:08.456 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 10:12:08.456 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 10:12:08.456 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 10:12:08.456 -04:00 [DBG] Start discovery request
2020-08-31 10:12:08.458 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 10:12:08.507 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 10:12:08.507 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-31 10:12:08.507 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-31 10:12:08.507 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-31 10:12:08.507 -04:00 [DBG] Rendering check session result
2020-08-31 10:12:08.509 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:12:08.509 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:12:08.509 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 10:12:08.509 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 10:12:08.509 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 10:12:08.509 -04:00 [DBG] Start key discovery request
2020-08-31 10:12:13.086 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-31 10:12:13.086 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-31 10:12:13.086 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-31 10:12:13.086 -04:00 [DBG] Processing signout request for 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 10:12:13.086 -04:00 [DBG] Start end session request validation
2020-08-31 10:12:13.086 -04:00 [DBG] Start identity token validation
2020-08-31 10:12:13.102 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:12:13.103 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:12:13.103 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-31 10:12:13.104 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-31 10:12:13.104 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598883089,"exp":1598883389,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"bjBJTThEUXhZbTdlRlhLZVc0Ym8tMUZ1a1NheWtaOHBkYURGUm1EVVh2WTVu","iat":1598883089,"at_hash":"k1vodk_Fd5pO-t9136W5MQ","s_hash":"fb1bNWp_QjSd0vSfJgUcHA","sid":"3VNPXLk-MMDwJeMWEi5ppg","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598883087,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-31 10:12:13.105 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-08-31 10:12:13.105 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-31 10:12:13.110 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-31 10:12:13.111 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-31 10:12:13.111 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-31 10:12:13.111 -04:00 [INF] {"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"800000ea-0002-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:12:13.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-31 10:12:13.150 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-08-31 10:12:13.150 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-08-31 10:12:13.151 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-08-31 10:12:13.151 -04:00 [DBG] Processing signout callback request
2020-08-31 10:12:13.164 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:12:13.164 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:12:13.164 -04:00 [DBG] No client front-channel logout URLs
2020-08-31 10:12:13.164 -04:00 [DBG] No client back-channel logout URLs
2020-08-31 10:12:13.164 -04:00 [INF] Successful signout callback.
2020-08-31 10:12:13.164 -04:00 [DBG] No client front-channel iframe urls
2020-08-31 10:12:13.164 -04:00 [DBG] No client back-channel iframe urls
2020-08-31 10:12:15.867 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 10:12:15.869 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:12:15.869 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:12:15.870 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 10:12:15.870 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 10:12:15.870 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 10:12:15.870 -04:00 [DBG] Start discovery request
2020-08-31 10:12:15.873 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 10:12:15.929 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 10:12:15.931 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:12:15.931 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:12:15.931 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 10:12:15.931 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 10:12:15.931 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 10:12:15.931 -04:00 [DBG] Start key discovery request
2020-08-31 10:12:16.967 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 10:12:16.968 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 10:12:16.968 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 10:12:16.968 -04:00 [DBG] Start authorize request
2020-08-31 10:12:16.968 -04:00 [DBG] No user present in authorize request
2020-08-31 10:12:16.968 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 10:12:16.975 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:12:16.975 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:12:16.976 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"a0FKZlJjVEFkQzgwZG0uMlQ0WENzeWxJdFRLd2VhWVJCQURZTnZvbzV3flhH","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"rXngBjeLK0gx-PFStD0M4ddh8CSqCnhfdI9hl4RRcKg","code_challenge_method":"S256","nonce":"a0FKZlJjVEFkQzgwZG0uMlQ0WENzeWxJdFRLd2VhWVJCQURZTnZvbzV3flhH","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:12:16.976 -04:00 [ERR] Request validation failed
2020-08-31 10:12:16.976 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"a0FKZlJjVEFkQzgwZG0uMlQ0WENzeWxJdFRLd2VhWVJCQURZTnZvbzV3flhH","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"rXngBjeLK0gx-PFStD0M4ddh8CSqCnhfdI9hl4RRcKg","code_challenge_method":"S256","nonce":"a0FKZlJjVEFkQzgwZG0uMlQ0WENzeWxJdFRLd2VhWVJCQURZTnZvbzV3flhH","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:12:16.976 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000090-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:12:16.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 10:27:07.545 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 10:27:07.596 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:27:07.596 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:27:07.596 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 10:27:07.596 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 10:27:07.596 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 10:27:07.596 -04:00 [DBG] Start discovery request
2020-08-31 10:27:07.609 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 10:27:07.623 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 10:27:07.624 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:27:07.624 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:27:07.624 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 10:27:07.625 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 10:27:07.625 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 10:27:07.625 -04:00 [DBG] Start key discovery request
2020-08-31 10:27:08.802 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 10:27:08.802 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 10:27:08.802 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 10:27:08.802 -04:00 [DBG] Start authorize request
2020-08-31 10:27:08.802 -04:00 [DBG] No user present in authorize request
2020-08-31 10:27:08.802 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 10:27:08.822 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:27:08.822 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:27:08.822 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"RVJNX0Y0TE5qMjF1MEEzTlhFZ25oUk1hQnR5MHNhUk9sdXgxa0VVOXhFRXRM","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"wxTjpOO0yu_08iUSk_CQptq8ZwO8zT1YZvSZP1tN6zw","code_challenge_method":"S256","nonce":"RVJNX0Y0TE5qMjF1MEEzTlhFZ25oUk1hQnR5MHNhUk9sdXgxa0VVOXhFRXRM","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:27:08.822 -04:00 [ERR] Request validation failed
2020-08-31 10:27:08.822 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"RVJNX0Y0TE5qMjF1MEEzTlhFZ25oUk1hQnR5MHNhUk9sdXgxa0VVOXhFRXRM","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"wxTjpOO0yu_08iUSk_CQptq8ZwO8zT1YZvSZP1tN6zw","code_challenge_method":"S256","nonce":"RVJNX0Y0TE5qMjF1MEEzTlhFZ25oUk1hQnR5MHNhUk9sdXgxa0VVOXhFRXRM","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:27:08.822 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000ac-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:27:08.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 10:46:25.032 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 10:46:25.084 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:46:25.084 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:46:25.084 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 10:46:25.084 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 10:46:25.084 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 10:46:25.084 -04:00 [DBG] Start discovery request
2020-08-31 10:46:25.095 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 10:46:25.115 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 10:46:25.116 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:46:25.117 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:46:25.117 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 10:46:25.117 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 10:46:25.117 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 10:46:25.117 -04:00 [DBG] Start key discovery request
2020-08-31 10:46:26.299 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 10:46:26.299 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 10:46:26.300 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 10:46:26.300 -04:00 [DBG] Start authorize request
2020-08-31 10:46:26.300 -04:00 [DBG] No user present in authorize request
2020-08-31 10:46:26.300 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 10:46:26.319 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:46:26.319 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:46:26.319 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"TGJOdTRnaU5XVlNhYjVVRTBnaThUaHhkMC54ZGNmYzZieWpkZHkxTkhpdjUx","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"EXfwFqBJ1qhxWc0yRy7dbcHHCiaQgsAjeLu4vc9mwEY","code_challenge_method":"S256","nonce":"TGJOdTRnaU5XVlNhYjVVRTBnaThUaHhkMC54ZGNmYzZieWpkZHkxTkhpdjUx","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:46:26.319 -04:00 [ERR] Request validation failed
2020-08-31 10:46:26.320 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"TGJOdTRnaU5XVlNhYjVVRTBnaThUaHhkMC54ZGNmYzZieWpkZHkxTkhpdjUx","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"EXfwFqBJ1qhxWc0yRy7dbcHHCiaQgsAjeLu4vc9mwEY","code_challenge_method":"S256","nonce":"TGJOdTRnaU5XVlNhYjVVRTBnaThUaHhkMC54ZGNmYzZieWpkZHkxTkhpdjUx","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:46:26.320 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000112-000a-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:46:26.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 10:48:16.898 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 10:48:16.901 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:48:16.901 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:48:16.902 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 10:48:16.902 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 10:48:16.902 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 10:48:16.902 -04:00 [DBG] Start discovery request
2020-08-31 10:48:16.911 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 10:48:16.939 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 10:48:16.943 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:48:16.943 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:48:16.943 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 10:48:16.943 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 10:48:16.943 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 10:48:16.943 -04:00 [DBG] Start key discovery request
2020-08-31 10:48:17.974 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 10:48:17.974 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 10:48:17.974 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 10:48:17.974 -04:00 [DBG] Start authorize request
2020-08-31 10:48:17.974 -04:00 [DBG] No user present in authorize request
2020-08-31 10:48:17.974 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 10:48:17.992 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:48:17.992 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:48:17.992 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"RndlM0htS2NrUnc5RW04WUVuVDREQ1lJTFE4SXJqTmt6a0wybmJ5eG5VWG9M","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"p_7-gLxJkhtUlbj-FJRJtkanV2TNGemZ_txJX6lAIlw","code_challenge_method":"S256","nonce":"RndlM0htS2NrUnc5RW04WUVuVDREQ1lJTFE4SXJqTmt6a0wybmJ5eG5VWG9M","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:48:17.992 -04:00 [ERR] Request validation failed
2020-08-31 10:48:17.992 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"RndlM0htS2NrUnc5RW04WUVuVDREQ1lJTFE4SXJqTmt6a0wybmJ5eG5VWG9M","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"p_7-gLxJkhtUlbj-FJRJtkanV2TNGemZ_txJX6lAIlw","code_challenge_method":"S256","nonce":"RndlM0htS2NrUnc5RW04WUVuVDREQ1lJTFE4SXJqTmt6a0wybmJ5eG5VWG9M","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:48:17.992 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000040-0009-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:48:17.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 10:51:10.305 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 10:51:10.305 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 10:51:10.305 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 10:51:10.305 -04:00 [DBG] Start authorize request
2020-08-31 10:51:10.305 -04:00 [DBG] No user present in authorize request
2020-08-31 10:51:10.306 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 10:51:10.322 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:51:10.322 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:51:10.322 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 10:51:10.326 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:51:10.336 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:51:10.337 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:51:10.339 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:51:10.342 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 10:51:10.342 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"TEx2am5KVmwyY2tVQVRTUGI0YWtDRFNOZm9kemlqX3M4eUhYcGxrZ19vQUlosemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"TEx2am5KVmwyY2tVQVRTUGI0YWtDRFNOZm9kemlqX3M4eUhYcGxrZ19vQUlo","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"TEx2am5KVmwyY2tVQVRTUGI0YWtDRFNOZm9kemlqX3M4eUhYcGxrZ19vQUlosemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"lN6cWwpV_UCV8lKsAcwG2CbwP0tChoqNCoEVYu0tDm4","code_challenge_method":"S256","nonce":"TEx2am5KVmwyY2tVQVRTUGI0YWtDRFNOZm9kemlqX3M4eUhYcGxrZ19vQUlo"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:51:10.342 -04:00 [INF] Showing login: User is not authenticated
2020-08-31 10:51:10.346 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 10:51:10.356 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:51:10.356 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:51:10.356 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 10:51:10.358 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:51:10.359 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:51:10.360 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:51:10.361 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:51:10.361 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 10:51:10.367 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:51:10.368 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:51:56.517 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-31 10:51:56.518 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 10:51:56.539 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:51:56.539 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:51:56.540 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 10:51:56.542 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:51:56.551 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:51:56.553 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:51:56.553 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:51:56.554 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 10:51:56.566 -04:00 [DBG] Augmenting SignInContext
2020-08-31 10:51:56.566 -04:00 [DBG] Adding idp claim with value: local
2020-08-31 10:51:56.566 -04:00 [DBG] Adding auth_time claim with value: 1598885516
2020-08-31 10:51:56.567 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-31 10:51:56.569 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000057-0004-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:51:56.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-31 10:51:56.579 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:51:56.580 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:51:56.585 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-31 10:51:56.585 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-31 10:51:56.585 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-31 10:51:56.585 -04:00 [DBG] Start authorize callback request
2020-08-31 10:51:56.585 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 10:51:56.585 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 10:51:56.592 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:51:56.592 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:51:56.592 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 10:51:56.594 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:51:56.595 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:51:56.596 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:51:56.597 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:51:56.597 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 10:51:56.597 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"TEx2am5KVmwyY2tVQVRTUGI0YWtDRFNOZm9kemlqX3M4eUhYcGxrZ19vQUlosemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"TEx2am5KVmwyY2tVQVRTUGI0YWtDRFNOZm9kemlqX3M4eUhYcGxrZ19vQUlo","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"i3QCsXwqxEprrzDN00IVcg","Raw":{"response_type":"code","client_id":"angular_spa","state":"TEx2am5KVmwyY2tVQVRTUGI0YWtDRFNOZm9kemlqX3M4eUhYcGxrZ19vQUlosemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"lN6cWwpV_UCV8lKsAcwG2CbwP0tChoqNCoEVYu0tDm4","code_challenge_method":"S256","nonce":"TEx2am5KVmwyY2tVQVRTUGI0YWtDRFNOZm9kemlqX3M4eUhYcGxrZ19vQUlo"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 10:51:56.599 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-31 10:51:56.599 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-31 10:51:56.601 -04:00 [DBG] VSJrCf1r7/8CId2soTKmnRC6mdwk0TvUJeoOHYwctw8= not found in database
2020-08-31 10:51:56.604 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****Qt8A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000142-000a-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:51:56.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-31 10:51:56.604 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"TEx2am5KVmwyY2tVQVRTUGI0YWtDRFNOZm9kemlqX3M4eUhYcGxrZ19vQUlosemicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-31 10:51:56.604 -04:00 [DBG] Augmenting SignInContext
2020-08-31 10:51:56.604 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-31 10:51:57.424 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 10:51:57.426 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:51:57.426 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:51:57.426 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 10:51:57.427 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 10:51:57.427 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 10:51:57.427 -04:00 [DBG] Start discovery request
2020-08-31 10:51:57.435 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 10:51:57.462 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 10:51:57.464 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:51:57.464 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:51:57.464 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 10:51:57.464 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 10:51:57.464 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 10:51:57.464 -04:00 [DBG] Start key discovery request
2020-08-31 10:51:58.475 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-31 10:51:58.477 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:51:58.477 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:51:58.477 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-31 10:51:58.477 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-31 10:51:58.477 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-31 10:51:58.477 -04:00 [DBG] Start token request.
2020-08-31 10:51:58.477 -04:00 [DBG] Start client validation
2020-08-31 10:51:58.477 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-31 10:51:58.477 -04:00 [DBG] Start parsing for secret in post body
2020-08-31 10:51:58.478 -04:00 [DBG] client id without secret found
2020-08-31 10:51:58.478 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-31 10:51:58.478 -04:00 [DBG] Secret id found: angular_spa
2020-08-31 10:51:58.486 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:51:58.486 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:51:58.486 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-31 10:51:58.486 -04:00 [DBG] Client validation success
2020-08-31 10:51:58.486 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000174-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:51:58.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-31 10:51:58.486 -04:00 [DBG] Start token request validation
2020-08-31 10:51:58.487 -04:00 [DBG] Start validation of authorization code token request
2020-08-31 10:51:58.488 -04:00 [DBG] VSJrCf1r7/8CId2soTKmnRC6mdwk0TvUJeoOHYwctw8= found in database: true
2020-08-31 10:51:58.489 -04:00 [DBG] removing VSJrCf1r7/8CId2soTKmnRC6mdwk0TvUJeoOHYwctw8= persisted grant from database
2020-08-31 10:51:58.492 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-31 10:51:58.494 -04:00 [DBG] Validation of authorization code token request success
2020-08-31 10:51:58.494 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"XfAShLr-CsZv1mw39CCnp_a9LIjx5SFzg7rKaHDQt8A","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"XfAShLr-CsZv1mw39CCnp_a9LIjx5SFzg7rKaHDQt8A","redirect_uri":"https://localhost:4200","code_verifier":"UU8yRGlGRWt4MXpCVEdzbmxxNDBtZFZ5ZS1KaFByU2RsTHdzUVhYYVV6T0dX","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-31 10:51:58.500 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:51:58.500 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:51:58.501 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:51:58.503 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:51:58.503 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-31 10:51:58.503 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 10:51:58.516 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:51:58.517 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:51:58.518 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:51:58.520 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 10:51:58.520 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-31 10:51:58.520 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-31 10:51:58.521 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****foTw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****wuHQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000174-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-31T14:51:58.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-31 10:51:58.521 -04:00 [DBG] Token request success.
2020-08-31 10:51:58.530 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-31 10:51:58.531 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-31 10:51:58.531 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:51:58.531 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-31 10:51:58.531 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-31 10:51:58.531 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:51:58.532 -04:00 [DBG] Rendering check session result
2020-08-31 10:51:58.534 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-31 10:51:58.535 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:51:58.535 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:51:58.536 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-31 10:51:58.536 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-31 10:51:58.536 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-31 10:51:58.536 -04:00 [DBG] Start userinfo request
2020-08-31 10:51:58.536 -04:00 [DBG] Bearer token found in header
2020-08-31 10:51:58.545 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:51:58.545 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:51:58.553 -04:00 [DBG] angular_spa found in database: true
2020-08-31 10:51:58.553 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 10:51:58.554 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-31 10:51:58.554 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598885518,"exp":1598889118,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598885516,"idp":"local","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-31 10:51:58.554 -04:00 [DBG] Creating userinfo response
2020-08-31 10:51:58.554 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 10:51:58.554 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 10:51:58.556 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:51:58.556 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-31 10:51:58.556 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 10:51:58.557 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 10:51:58.561 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-31 10:51:58.561 -04:00 [DBG] End userinfo request
2020-08-31 10:56:03.213 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 10:56:03.266 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:56:03.266 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:56:03.266 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 10:56:03.266 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 10:56:03.266 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 10:56:03.267 -04:00 [DBG] Start discovery request
2020-08-31 10:56:03.281 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 10:56:03.354 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 10:56:03.360 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 10:56:03.360 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 10:56:03.360 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 10:56:03.360 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 10:56:03.360 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 10:56:03.360 -04:00 [DBG] Start key discovery request
2020-08-31 10:56:03.371 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-31 10:56:03.371 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-31 10:56:03.371 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-31 10:56:03.371 -04:00 [DBG] Rendering check session result
2020-08-31 11:03:58.253 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-31 11:03:58.253 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-31 11:03:58.253 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-31 11:03:58.253 -04:00 [DBG] Processing signout request for 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 11:03:58.253 -04:00 [DBG] Start end session request validation
2020-08-31 11:03:58.253 -04:00 [DBG] Start identity token validation
2020-08-31 11:03:58.324 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:03:58.325 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:03:58.325 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-31 11:03:58.328 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-31 11:03:58.328 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598885518,"exp":1598885818,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"TEx2am5KVmwyY2tVQVRTUGI0YWtDRFNOZm9kemlqX3M4eUhYcGxrZ19vQUlo","iat":1598885518,"at_hash":"cb8XymXVm26dsVyTgjkUYA","s_hash":"IosOnNe_fl9fSNNOOpySmA","sid":"i3QCsXwqxEprrzDN00IVcg","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598885516,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-31 11:03:58.329 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-08-31 11:03:58.329 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-31 11:03:58.333 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-31 11:03:58.333 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-31 11:03:58.333 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-31 11:03:58.333 -04:00 [INF] {"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"800000d0-0002-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-31T15:03:58.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-31 11:03:58.381 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-08-31 11:03:58.383 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-08-31 11:03:58.384 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-08-31 11:03:58.384 -04:00 [DBG] Processing signout callback request
2020-08-31 11:03:58.395 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:03:58.395 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:03:58.395 -04:00 [DBG] No client front-channel logout URLs
2020-08-31 11:03:58.395 -04:00 [DBG] No client back-channel logout URLs
2020-08-31 11:03:58.395 -04:00 [INF] Successful signout callback.
2020-08-31 11:03:58.395 -04:00 [DBG] No client front-channel iframe urls
2020-08-31 11:03:58.395 -04:00 [DBG] No client back-channel iframe urls
2020-08-31 11:04:00.985 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 11:04:00.986 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 11:04:00.987 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 11:04:00.987 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 11:04:00.987 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 11:04:00.987 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 11:04:00.987 -04:00 [DBG] Start discovery request
2020-08-31 11:04:01.000 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 11:04:01.016 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 11:04:01.018 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 11:04:01.018 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 11:04:01.021 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 11:04:01.021 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 11:04:01.021 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 11:04:01.021 -04:00 [DBG] Start key discovery request
2020-08-31 11:04:02.039 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 11:04:02.039 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 11:04:02.039 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 11:04:02.039 -04:00 [DBG] Start authorize request
2020-08-31 11:04:02.039 -04:00 [DBG] No user present in authorize request
2020-08-31 11:04:02.039 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 11:04:02.046 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:04:02.046 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:04:02.047 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"U1oyXzF4VnlYWU5GS3lrcml1NXVCUHhJSzEubHV3bmtXYnY2ZFJ4dGhDNEpt","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"y51Ot05mIEwBS9e8RtFjtHH6iN-enGQE39JLgQB5OZc","code_challenge_method":"S256","nonce":"U1oyXzF4VnlYWU5GS3lrcml1NXVCUHhJSzEubHV3bmtXYnY2ZFJ4dGhDNEpt","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 11:04:02.047 -04:00 [ERR] Request validation failed
2020-08-31 11:04:02.047 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"U1oyXzF4VnlYWU5GS3lrcml1NXVCUHhJSzEubHV3bmtXYnY2ZFJ4dGhDNEpt","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"y51Ot05mIEwBS9e8RtFjtHH6iN-enGQE39JLgQB5OZc","code_challenge_method":"S256","nonce":"U1oyXzF4VnlYWU5GS3lrcml1NXVCUHhJSzEubHV3bmtXYnY2ZFJ4dGhDNEpt","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 11:04:02.047 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000005f-0009-fb00-b63f-84710c7967bb","TimeStamp":"2020-08-31T15:04:02.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 11:04:11.973 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 11:04:11.973 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 11:04:11.973 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 11:04:11.973 -04:00 [DBG] Start authorize request
2020-08-31 11:04:11.973 -04:00 [DBG] No user present in authorize request
2020-08-31 11:04:11.973 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 11:04:11.994 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:04:11.994 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:04:11.994 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 11:04:11.997 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:04:12.006 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 11:04:12.008 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:04:12.009 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 11:04:12.010 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 11:04:12.010 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"UW9kdjYwRGJGenYzLXk3RUYtSlEtdHZHejl4UlFjdlg1TXN5cmFNY19nel9Xsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"UW9kdjYwRGJGenYzLXk3RUYtSlEtdHZHejl4UlFjdlg1TXN5cmFNY19nel9X","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"UW9kdjYwRGJGenYzLXk3RUYtSlEtdHZHejl4UlFjdlg1TXN5cmFNY19nel9Xsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"n3B0EOO_RgQ_xt7QeVhTcJx5ViNd_jYMfaKW9yfPYlA","code_challenge_method":"S256","nonce":"UW9kdjYwRGJGenYzLXk3RUYtSlEtdHZHejl4UlFjdlg1TXN5cmFNY19nel9X"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 11:04:12.010 -04:00 [INF] Showing login: User is not authenticated
2020-08-31 11:04:12.013 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 11:04:12.021 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:04:12.021 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:04:12.021 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 11:04:12.023 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:04:12.024 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 11:04:12.025 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:04:12.026 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 11:04:12.026 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 11:04:12.032 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:04:12.032 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:04:16.913 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-08-31 11:04:17.287 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-31 11:04:17.289 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-08-31 11:04:17.304 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"8000002c-0000-fa00-b63f-84710c7967bb","TimeStamp":"2020-08-31T15:04:17.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-31 11:04:17.304 -04:00 [DBG] Augmenting SignInContext
2020-08-31 11:04:17.304 -04:00 [DBG] Adding amr claim with value: external
2020-08-31 11:04:17.305 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-31 11:04:17.305 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-31 11:04:17.309 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-31 11:04:17.309 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-31 11:04:17.309 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-31 11:04:17.309 -04:00 [DBG] Start authorize callback request
2020-08-31 11:04:17.309 -04:00 [DBG] User in authorize request: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-31 11:04:17.309 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 11:04:17.318 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:04:17.318 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:04:17.318 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 11:04:17.319 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:04:17.321 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 11:04:17.322 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:04:17.323 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 11:04:17.323 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 11:04:17.323 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"UW9kdjYwRGJGenYzLXk3RUYtSlEtdHZHejl4UlFjdlg1TXN5cmFNY19nel9Xsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"UW9kdjYwRGJGenYzLXk3RUYtSlEtdHZHejl4UlFjdlg1TXN5cmFNY19nel9X","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"w8hP-V3AVZaq85cuv0QqxA","Raw":{"response_type":"code","client_id":"angular_spa","state":"UW9kdjYwRGJGenYzLXk3RUYtSlEtdHZHejl4UlFjdlg1TXN5cmFNY19nel9Xsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"n3B0EOO_RgQ_xt7QeVhTcJx5ViNd_jYMfaKW9yfPYlA","code_challenge_method":"S256","nonce":"UW9kdjYwRGJGenYzLXk3RUYtSlEtdHZHejl4UlFjdlg1TXN5cmFNY19nel9X"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 11:04:17.325 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-31 11:04:17.325 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-31 11:04:17.327 -04:00 [DBG] sNGbEkB/fBwOwn07wane2v+zl6aWyuU7vN967IAcLPw= not found in database
2020-08-31 11:04:17.331 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****gzwY","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000132-000a-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-31T15:04:17.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-31 11:04:17.331 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"UW9kdjYwRGJGenYzLXk3RUYtSlEtdHZHejl4UlFjdlg1TXN5cmFNY19nel9Xsemicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-31 11:04:17.331 -04:00 [DBG] Augmenting SignInContext
2020-08-31 11:04:17.331 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-31 11:04:17.561 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 11:04:17.563 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 11:04:17.563 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 11:04:17.563 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 11:04:17.563 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 11:04:17.563 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 11:04:17.563 -04:00 [DBG] Start discovery request
2020-08-31 11:04:17.570 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 11:04:17.635 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 11:04:17.636 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 11:04:17.636 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 11:04:17.636 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 11:04:17.636 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 11:04:17.636 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 11:04:17.636 -04:00 [DBG] Start key discovery request
2020-08-31 11:04:18.647 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-31 11:04:18.648 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 11:04:18.648 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 11:04:18.648 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-31 11:04:18.649 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-31 11:04:18.649 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-31 11:04:18.649 -04:00 [DBG] Start token request.
2020-08-31 11:04:18.649 -04:00 [DBG] Start client validation
2020-08-31 11:04:18.649 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-31 11:04:18.649 -04:00 [DBG] Start parsing for secret in post body
2020-08-31 11:04:18.649 -04:00 [DBG] client id without secret found
2020-08-31 11:04:18.649 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-31 11:04:18.649 -04:00 [DBG] Secret id found: angular_spa
2020-08-31 11:04:18.657 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:04:18.657 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:04:18.657 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-31 11:04:18.657 -04:00 [DBG] Client validation success
2020-08-31 11:04:18.657 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000005-0005-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-31T15:04:18.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-31 11:04:18.657 -04:00 [DBG] Start token request validation
2020-08-31 11:04:18.657 -04:00 [DBG] Start validation of authorization code token request
2020-08-31 11:04:18.659 -04:00 [DBG] sNGbEkB/fBwOwn07wane2v+zl6aWyuU7vN967IAcLPw= found in database: true
2020-08-31 11:04:18.660 -04:00 [DBG] removing sNGbEkB/fBwOwn07wane2v+zl6aWyuU7vN967IAcLPw= persisted grant from database
2020-08-31 11:04:18.663 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-31 11:04:18.664 -04:00 [DBG] Validation of authorization code token request success
2020-08-31 11:04:18.664 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"PLSRG3r05whNUHY9LvjUAtMNPMWwt9ik1tMxDG9gzwY","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"PLSRG3r05whNUHY9LvjUAtMNPMWwt9ik1tMxDG9gzwY","redirect_uri":"https://localhost:4200","code_verifier":"cENsY0NaOVFiS0ZNWWt6OEZiUjk1R1FvNmtTV1JpeTRKLnpEbERVMUd3eXpR","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-31 11:04:18.670 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:04:18.670 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:04:18.671 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:04:18.673 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 11:04:18.673 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-31 11:04:18.673 -04:00 [DBG] Getting claims for access token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-31 11:04:18.682 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:04:18.682 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:04:18.683 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:04:18.684 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 11:04:18.685 -04:00 [DBG] Getting claims for identity token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188 and client: angular_spa
2020-08-31 11:04:18.685 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-31 11:04:18.686 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****m6Qw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****9Log","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000005-0005-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-31T15:04:18.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-31 11:04:18.686 -04:00 [DBG] Token request success.
2020-08-31 11:04:18.693 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-31 11:04:18.694 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-31 11:04:18.694 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-31 11:04:18.694 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-31 11:04:18.694 -04:00 [DBG] Rendering check session result
2020-08-31 11:04:18.696 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 11:04:18.696 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 11:04:18.699 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-31 11:04:18.701 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 11:04:18.701 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 11:04:18.701 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-31 11:04:18.702 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-31 11:04:18.702 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-31 11:04:18.702 -04:00 [DBG] Start userinfo request
2020-08-31 11:04:18.702 -04:00 [DBG] Bearer token found in header
2020-08-31 11:04:18.710 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:04:18.710 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:04:18.717 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:04:18.717 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:04:18.719 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-31 11:04:18.719 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598886258,"exp":1598889858,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1598886257,"idp":"azuread","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"external"},"$type":"TokenValidationLog"}
2020-08-31 11:04:18.719 -04:00 [DBG] Creating userinfo response
2020-08-31 11:04:18.719 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 11:04:18.719 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 11:04:18.721 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:04:18.721 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-31 11:04:18.721 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 11:04:18.723 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:04:18.725 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-31 11:04:18.725 -04:00 [DBG] End userinfo request
2020-08-31 11:05:41.709 -04:00 [INF] Removing 0 grants
2020-08-31 11:05:41.720 -04:00 [INF] Removing 0 device flow codes
2020-08-31 11:18:15.227 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 11:18:15.275 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 11:18:15.275 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 11:18:15.275 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 11:18:15.275 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 11:18:15.275 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 11:18:15.275 -04:00 [DBG] Start discovery request
2020-08-31 11:18:15.288 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 11:18:15.484 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 11:18:15.486 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 11:18:15.486 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 11:18:15.486 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 11:18:15.486 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 11:18:15.486 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 11:18:15.486 -04:00 [DBG] Start key discovery request
2020-08-31 11:18:23.186 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-31 11:18:23.187 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-31 11:18:23.187 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-31 11:18:23.187 -04:00 [DBG] Processing signout request for 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-08-31 11:18:23.187 -04:00 [DBG] Start end session request validation
2020-08-31 11:18:23.187 -04:00 [DBG] Start identity token validation
2020-08-31 11:18:23.217 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:18:23.217 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:18:23.217 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-31 11:18:23.221 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-31 11:18:23.221 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598886258,"exp":1598886558,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"UW9kdjYwRGJGenYzLXk3RUYtSlEtdHZHejl4UlFjdlg1TXN5cmFNY19nel9X","iat":1598886258,"at_hash":"jhB5ZQpUDQDs8g5GvZg09Q","s_hash":"rNdu_I9tkVFXpnTyXIiDPQ","sid":"w8hP-V3AVZaq85cuv0QqxA","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1598886257,"idp":"azuread","amr":"external"},"$type":"TokenValidationLog"}
2020-08-31 11:18:23.221 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-08-31 11:18:23.221 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-31 11:18:23.226 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-31 11:18:23.226 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-31 11:18:23.226 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-31 11:18:23.226 -04:00 [INF] {"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"800000df-0004-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-31T15:18:23.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-31 11:18:26.711 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 11:18:26.711 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 11:18:26.711 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 11:18:26.711 -04:00 [DBG] Start authorize request
2020-08-31 11:18:26.712 -04:00 [DBG] No user present in authorize request
2020-08-31 11:18:26.712 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 11:18:26.728 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:18:26.728 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:18:26.728 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"MjZTbGF3a29rZlEwWm9ObVVLVVBKUDM0Sk04RWt3cE1HcjB2NG5PQmN3WnhC","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"hjwcO1RQ85pg7z-a-V79Z9Ap3epML7EvY0QofRq8_xc","code_challenge_method":"S256","nonce":"MjZTbGF3a29rZlEwWm9ObVVLVVBKUDM0Sk04RWt3cE1HcjB2NG5PQmN3WnhC","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 11:18:26.728 -04:00 [ERR] Request validation failed
2020-08-31 11:18:26.728 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"MjZTbGF3a29rZlEwWm9ObVVLVVBKUDM0Sk04RWt3cE1HcjB2NG5PQmN3WnhC","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"hjwcO1RQ85pg7z-a-V79Z9Ap3epML7EvY0QofRq8_xc","code_challenge_method":"S256","nonce":"MjZTbGF3a29rZlEwWm9ObVVLVVBKUDM0Sk04RWt3cE1HcjB2NG5PQmN3WnhC","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 11:18:26.728 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000e3-0004-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-31T15:18:26.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 11:18:36.141 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 11:18:36.141 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 11:18:36.141 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 11:18:36.141 -04:00 [DBG] Start authorize request
2020-08-31 11:18:36.141 -04:00 [DBG] No user present in authorize request
2020-08-31 11:18:36.141 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 11:18:36.150 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:18:36.150 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:18:36.150 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 11:18:36.153 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:18:36.163 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 11:18:36.165 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:18:36.166 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 11:18:36.166 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 11:18:36.166 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"MkhWU201aUVYb3lKbHZVcm8xWFBPeDdxSVBRVklNUkpKV1lXU3kwRk5CeDFhsemicolon%2Fextras%2Fadmin2","UiLocales":null,"Nonce":"MkhWU201aUVYb3lKbHZVcm8xWFBPeDdxSVBRVklNUkpKV1lXU3kwRk5CeDFh","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"MkhWU201aUVYb3lKbHZVcm8xWFBPeDdxSVBRVklNUkpKV1lXU3kwRk5CeDFhsemicolon%2Fextras%2Fadmin2","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"yDn3cdj40vB1nLSnGFQl9qZnqB232bELSj5xjWJ1DLs","code_challenge_method":"S256","nonce":"MkhWU201aUVYb3lKbHZVcm8xWFBPeDdxSVBRVklNUkpKV1lXU3kwRk5CeDFh"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 11:18:36.166 -04:00 [INF] Showing login: User is not authenticated
2020-08-31 11:18:36.170 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 11:18:36.177 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:18:36.178 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:18:36.178 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 11:18:36.179 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:18:36.180 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 11:18:36.181 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:18:36.182 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 11:18:36.182 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 11:18:36.189 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:18:36.189 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:18:39.726 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 11:18:39.726 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 11:18:39.727 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 11:18:39.727 -04:00 [DBG] Start authorize request
2020-08-31 11:18:39.727 -04:00 [DBG] No user present in authorize request
2020-08-31 11:18:39.727 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 11:18:39.742 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:18:39.743 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:18:39.743 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"QjVaTjB5M1JNNWlCdUNaaU85dlFoWHVQcmhmbE5oUlZYbV9ZRm1fZjNEeTFm","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"lgS--F0VmdlHq5PpXRH-YW6aF7NBRb-RfaGykaYq7_M","code_challenge_method":"S256","nonce":"QjVaTjB5M1JNNWlCdUNaaU85dlFoWHVQcmhmbE5oUlZYbV9ZRm1fZjNEeTFm","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 11:18:39.743 -04:00 [ERR] Request validation failed
2020-08-31 11:18:39.743 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"QjVaTjB5M1JNNWlCdUNaaU85dlFoWHVQcmhmbE5oUlZYbV9ZRm1fZjNEeTFm","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"lgS--F0VmdlHq5PpXRH-YW6aF7NBRb-RfaGykaYq7_M","code_challenge_method":"S256","nonce":"QjVaTjB5M1JNNWlCdUNaaU85dlFoWHVQcmhmbE5oUlZYbV9ZRm1fZjNEeTFm","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 11:18:39.743 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000c7-0006-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-31T15:18:39.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 11:18:55.169 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 11:18:55.170 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 11:18:55.170 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 11:18:55.170 -04:00 [DBG] Start authorize request
2020-08-31 11:18:55.170 -04:00 [DBG] No user present in authorize request
2020-08-31 11:18:55.170 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 11:18:55.178 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:18:55.178 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:18:55.179 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 11:18:55.180 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:18:55.181 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 11:18:55.182 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:18:55.183 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 11:18:55.183 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 11:18:55.183 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"Qlp5RnlUenJwTG40Ql9oTmxPaVB0d2x-WG9ZODR1b1dXZE1tbWJBSlVwc25hsemicolon%2Fbasics%2Fpublic","UiLocales":null,"Nonce":"Qlp5RnlUenJwTG40Ql9oTmxPaVB0d2x-WG9ZODR1b1dXZE1tbWJBSlVwc25h","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"Qlp5RnlUenJwTG40Ql9oTmxPaVB0d2x-WG9ZODR1b1dXZE1tbWJBSlVwc25hsemicolon%2Fbasics%2Fpublic","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"IqkLPLuy65RgtbMvEvQ8TWGHQuhxdpzQclx6W99m3Rc","code_challenge_method":"S256","nonce":"Qlp5RnlUenJwTG40Ql9oTmxPaVB0d2x-WG9ZODR1b1dXZE1tbWJBSlVwc25h"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 11:18:55.183 -04:00 [INF] Showing login: User is not authenticated
2020-08-31 11:18:55.188 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 11:18:55.197 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:18:55.197 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:18:55.197 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 11:18:55.198 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:18:55.199 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 11:18:55.200 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:18:55.201 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 11:18:55.201 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 11:18:55.208 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:18:55.208 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:18:59.877 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 11:18:59.878 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 11:18:59.878 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 11:18:59.878 -04:00 [DBG] Start authorize request
2020-08-31 11:18:59.878 -04:00 [DBG] No user present in authorize request
2020-08-31 11:18:59.878 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 11:18:59.885 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:18:59.886 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:18:59.886 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"TGN2b25Ic0FBT2hGTHYtTlpHSkNpZmZmSDVPekNpSW5wNnRqU3NZbmJlQ3FB","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"I6L3YHy3E2pHjqjR2rKrx6WEWR6AIFjzbFtsKX07pt0","code_challenge_method":"S256","nonce":"TGN2b25Ic0FBT2hGTHYtTlpHSkNpZmZmSDVPekNpSW5wNnRqU3NZbmJlQ3FB","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 11:18:59.886 -04:00 [ERR] Request validation failed
2020-08-31 11:18:59.886 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"TGN2b25Ic0FBT2hGTHYtTlpHSkNpZmZmSDVPekNpSW5wNnRqU3NZbmJlQ3FB","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"I6L3YHy3E2pHjqjR2rKrx6WEWR6AIFjzbFtsKX07pt0","code_challenge_method":"S256","nonce":"TGN2b25Ic0FBT2hGTHYtTlpHSkNpZmZmSDVPekNpSW5wNnRqU3NZbmJlQ3FB","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 11:18:59.886 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000ca-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-31T15:18:59.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 11:19:25.319 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 11:19:25.319 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 11:19:25.319 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 11:19:25.319 -04:00 [DBG] Start authorize request
2020-08-31 11:19:25.319 -04:00 [DBG] No user present in authorize request
2020-08-31 11:19:25.319 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 11:19:25.336 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:19:25.337 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:19:25.337 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 11:19:25.341 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:19:25.351 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 11:19:25.352 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:19:25.353 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 11:19:25.353 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 11:19:25.353 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"N3RfanBTLlFuQTk1d1NiOTFrdFdHZTlRSDlvWlNHZy5vflRsNVdHTmxhWHpvsemicolon%2Fbasics%2Fpublic","UiLocales":null,"Nonce":"N3RfanBTLlFuQTk1d1NiOTFrdFdHZTlRSDlvWlNHZy5vflRsNVdHTmxhWHpv","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"N3RfanBTLlFuQTk1d1NiOTFrdFdHZTlRSDlvWlNHZy5vflRsNVdHTmxhWHpvsemicolon%2Fbasics%2Fpublic","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"dXT-1GHWGHi6kbjiKEdpG5rJgrIE8geAh-Cz060oxUY","code_challenge_method":"S256","nonce":"N3RfanBTLlFuQTk1d1NiOTFrdFdHZTlRSDlvWlNHZy5vflRsNVdHTmxhWHpv"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 11:19:25.353 -04:00 [INF] Showing login: User is not authenticated
2020-08-31 11:19:25.358 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 11:19:25.368 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:19:25.368 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:19:25.368 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 11:19:25.369 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:19:25.371 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 11:19:25.372 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:19:25.374 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 11:19:25.374 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 11:19:25.381 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:19:25.381 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:19:27.033 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-31 11:19:27.034 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 11:19:27.054 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:19:27.054 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:19:27.054 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 11:19:27.057 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:19:27.067 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 11:19:27.070 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:19:27.079 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 11:19:27.079 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 11:19:27.090 -04:00 [DBG] Augmenting SignInContext
2020-08-31 11:19:27.090 -04:00 [DBG] Adding idp claim with value: local
2020-08-31 11:19:27.090 -04:00 [DBG] Adding auth_time claim with value: 1598887167
2020-08-31 11:19:27.090 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-31 11:19:27.092 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000062-0008-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-31T15:19:27.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-31 11:19:27.109 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:19:27.109 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:19:27.114 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-31 11:19:27.114 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-31 11:19:27.114 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-31 11:19:27.114 -04:00 [DBG] Start authorize callback request
2020-08-31 11:19:27.114 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 11:19:27.114 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 11:19:27.132 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:19:27.133 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:19:27.133 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 11:19:27.136 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:19:27.145 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 11:19:27.148 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:19:27.156 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 11:19:27.157 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 11:19:27.157 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"N3RfanBTLlFuQTk1d1NiOTFrdFdHZTlRSDlvWlNHZy5vflRsNVdHTmxhWHpvsemicolon%2Fbasics%2Fpublic","UiLocales":null,"Nonce":"N3RfanBTLlFuQTk1d1NiOTFrdFdHZTlRSDlvWlNHZy5vflRsNVdHTmxhWHpv","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"Me2a_EnEath98mGoYAXjwA","Raw":{"response_type":"code","client_id":"angular_spa","state":"N3RfanBTLlFuQTk1d1NiOTFrdFdHZTlRSDlvWlNHZy5vflRsNVdHTmxhWHpvsemicolon%2Fbasics%2Fpublic","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"dXT-1GHWGHi6kbjiKEdpG5rJgrIE8geAh-Cz060oxUY","code_challenge_method":"S256","nonce":"N3RfanBTLlFuQTk1d1NiOTFrdFdHZTlRSDlvWlNHZy5vflRsNVdHTmxhWHpv"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 11:19:27.159 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-31 11:19:27.159 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-31 11:19:27.161 -04:00 [DBG] D5N5eg1xQI6TFG7t3tZxXP2S+vTnSua/G5lQ+NEsCsY= not found in database
2020-08-31 11:19:27.163 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****Ns8E","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000002-0006-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-31T15:19:27.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-31 11:19:27.163 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"N3RfanBTLlFuQTk1d1NiOTFrdFdHZTlRSDlvWlNHZy5vflRsNVdHTmxhWHpvsemicolon%2Fbasics%2Fpublic","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-31 11:19:27.163 -04:00 [DBG] Augmenting SignInContext
2020-08-31 11:19:27.163 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-31 11:19:27.916 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 11:19:27.918 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 11:19:27.918 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 11:19:27.918 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 11:19:27.918 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 11:19:27.918 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 11:19:27.918 -04:00 [DBG] Start discovery request
2020-08-31 11:19:27.925 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 11:19:27.949 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 11:19:27.950 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 11:19:27.950 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 11:19:27.950 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 11:19:27.950 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 11:19:27.951 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 11:19:27.951 -04:00 [DBG] Start key discovery request
2020-08-31 11:19:28.961 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-31 11:19:28.963 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 11:19:28.963 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 11:19:28.963 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-31 11:19:28.963 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-31 11:19:28.963 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-31 11:19:28.963 -04:00 [DBG] Start token request.
2020-08-31 11:19:28.963 -04:00 [DBG] Start client validation
2020-08-31 11:19:28.963 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-31 11:19:28.963 -04:00 [DBG] Start parsing for secret in post body
2020-08-31 11:19:28.964 -04:00 [DBG] client id without secret found
2020-08-31 11:19:28.964 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-31 11:19:28.964 -04:00 [DBG] Secret id found: angular_spa
2020-08-31 11:19:28.985 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:19:28.985 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:19:28.985 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-31 11:19:28.985 -04:00 [DBG] Client validation success
2020-08-31 11:19:28.985 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"800000d0-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-31T15:19:28.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-31 11:19:28.985 -04:00 [DBG] Start token request validation
2020-08-31 11:19:28.985 -04:00 [DBG] Start validation of authorization code token request
2020-08-31 11:19:28.986 -04:00 [DBG] D5N5eg1xQI6TFG7t3tZxXP2S+vTnSua/G5lQ+NEsCsY= found in database: true
2020-08-31 11:19:28.988 -04:00 [DBG] removing D5N5eg1xQI6TFG7t3tZxXP2S+vTnSua/G5lQ+NEsCsY= persisted grant from database
2020-08-31 11:19:28.991 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-31 11:19:28.992 -04:00 [DBG] Validation of authorization code token request success
2020-08-31 11:19:28.992 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"BBLB6_CdBxSivGZrlCnt7W5mshadRfOiThPmBwkNs8E","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"BBLB6_CdBxSivGZrlCnt7W5mshadRfOiThPmBwkNs8E","redirect_uri":"https://localhost:4200","code_verifier":"YURMMm1DSUlIWDRPWnZvV25GTEJDdDhvamRid0VzR1BSa2JPOUpWbWsyMm5M","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-31 11:19:29.010 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:19:29.010 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:19:29.012 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:19:29.023 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 11:19:29.023 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-31 11:19:29.023 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 11:19:29.046 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:19:29.046 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:19:29.048 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:19:29.057 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 11:19:29.058 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-31 11:19:29.058 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-31 11:19:29.059 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****Kgww","$type":"Token"},{"TokenType":"access_token","TokenValue":"****B39A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000d0-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-31T15:19:29.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-31 11:19:29.059 -04:00 [DBG] Token request success.
2020-08-31 11:19:29.065 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-31 11:19:29.067 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-31 11:19:29.067 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-31 11:19:29.067 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-31 11:19:29.067 -04:00 [DBG] Rendering check session result
2020-08-31 11:19:29.071 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 11:19:29.071 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 11:19:29.073 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-31 11:19:29.074 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 11:19:29.074 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 11:19:29.074 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-31 11:19:29.075 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-31 11:19:29.075 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-31 11:19:29.075 -04:00 [DBG] Start userinfo request
2020-08-31 11:19:29.075 -04:00 [DBG] Bearer token found in header
2020-08-31 11:19:29.097 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:19:29.098 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:19:29.105 -04:00 [DBG] angular_spa found in database: true
2020-08-31 11:19:29.106 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 11:19:29.108 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-31 11:19:29.108 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598887169,"exp":1598890769,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598887167,"idp":"local","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-31 11:19:29.108 -04:00 [DBG] Creating userinfo response
2020-08-31 11:19:29.108 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 11:19:29.108 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 11:19:29.111 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:19:29.111 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-31 11:19:29.111 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 11:19:29.112 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 11:19:29.118 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-31 11:19:29.118 -04:00 [DBG] End userinfo request
2020-08-31 12:05:41.775 -04:00 [INF] Removing 0 grants
2020-08-31 12:05:41.778 -04:00 [INF] Removing 0 device flow codes
2020-08-31 12:30:38.596 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 12:30:38.596 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 12:30:38.596 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 12:30:38.596 -04:00 [DBG] Start authorize request
2020-08-31 12:30:38.596 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 12:30:38.596 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 12:30:38.619 -04:00 [DBG] angular_spa found in database: true
2020-08-31 12:30:38.619 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 12:30:38.619 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"V3RQczZnZVc5V0RQfmphZ25lQV9MVU9haVdKNS1fekhVLms0YWtyclVPfm90","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"BUhJM6ofXMfQWpU_ZCwwUvd8Te4aL1TTPpjMeRKnGOc","code_challenge_method":"S256","nonce":"V3RQczZnZVc5V0RQfmphZ25lQV9MVU9haVdKNS1fekhVLms0YWtyclVPfm90","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 12:30:38.619 -04:00 [ERR] Request validation failed
2020-08-31 12:30:38.619 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"V3RQczZnZVc5V0RQfmphZ25lQV9MVU9haVdKNS1fekhVLms0YWtyclVPfm90","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"BUhJM6ofXMfQWpU_ZCwwUvd8Te4aL1TTPpjMeRKnGOc","code_challenge_method":"S256","nonce":"V3RQczZnZVc5V0RQfmphZ25lQV9MVU9haVdKNS1fekhVLms0YWtyclVPfm90","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 12:30:38.620 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000be-0007-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-31T16:30:38.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 12:30:41.168 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 12:30:41.170 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 12:30:41.170 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 12:30:41.170 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 12:30:41.170 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 12:30:41.170 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 12:30:41.170 -04:00 [DBG] Start discovery request
2020-08-31 12:30:41.181 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 12:30:41.207 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 12:30:41.214 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 12:30:41.215 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 12:30:41.215 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 12:30:41.215 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 12:30:41.215 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 12:30:41.215 -04:00 [DBG] Start key discovery request
2020-08-31 12:30:42.248 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 12:30:42.248 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 12:30:42.248 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 12:30:42.248 -04:00 [DBG] Start authorize request
2020-08-31 12:30:42.248 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 12:30:42.248 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 12:30:42.258 -04:00 [DBG] angular_spa found in database: true
2020-08-31 12:30:42.258 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 12:30:42.258 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"MkdXUFdnTkRBZk9XaXJRaGpOYmNldExyYUFuS2lMUGtSfnJzUjJYU24xU2FN","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"Bp85lNJ313yke8H6pUYhps7bzZdwMZlYdxz-5CTtlPU","code_challenge_method":"S256","nonce":"MkdXUFdnTkRBZk9XaXJRaGpOYmNldExyYUFuS2lMUGtSfnJzUjJYU24xU2FN","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 12:30:42.258 -04:00 [ERR] Request validation failed
2020-08-31 12:30:42.258 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"MkdXUFdnTkRBZk9XaXJRaGpOYmNldExyYUFuS2lMUGtSfnJzUjJYU24xU2FN","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"Bp85lNJ313yke8H6pUYhps7bzZdwMZlYdxz-5CTtlPU","code_challenge_method":"S256","nonce":"MkdXUFdnTkRBZk9XaXJRaGpOYmNldExyYUFuS2lMUGtSfnJzUjJYU24xU2FN","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 12:30:42.258 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000ec-0004-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-31T16:30:42.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 12:30:56.099 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-08-31 12:30:56.099 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-08-31 12:30:56.099 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-08-31 12:30:56.099 -04:00 [DBG] Processing signout request for 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 12:30:56.099 -04:00 [DBG] Start end session request validation
2020-08-31 12:30:56.099 -04:00 [DBG] Start identity token validation
2020-08-31 12:30:56.118 -04:00 [DBG] angular_spa found in database: true
2020-08-31 12:30:56.119 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 12:30:56.119 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-08-31 12:30:56.121 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-31 12:30:56.121 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598887169,"exp":1598887469,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"N3RfanBTLlFuQTk1d1NiOTFrdFdHZTlRSDlvWlNHZy5vflRsNVdHTmxhWHpv","iat":1598887169,"at_hash":"qequTfsEHO6znPl3WDgoEA","s_hash":"0pivNqvLV8yff3jkWZ-6xg","sid":"Me2a_EnEath98mGoYAXjwA","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598887167,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-31 12:30:56.122 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-08-31 12:30:56.122 -04:00 [DBG] Success validating end session request from angular_spa
2020-08-31 12:30:56.125 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-08-31 12:30:56.126 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-08-31 12:30:56.126 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-08-31 12:30:56.126 -04:00 [INF] {"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000193-000a-fe00-b63f-84710c7967bb","TimeStamp":"2020-08-31T16:30:56.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-08-31 12:30:56.160 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-08-31 12:30:56.160 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-08-31 12:30:56.160 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-08-31 12:30:56.160 -04:00 [DBG] Processing signout callback request
2020-08-31 12:30:56.168 -04:00 [DBG] angular_spa found in database: true
2020-08-31 12:30:56.168 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 12:30:56.168 -04:00 [DBG] No client front-channel logout URLs
2020-08-31 12:30:56.168 -04:00 [DBG] No client back-channel logout URLs
2020-08-31 12:30:56.168 -04:00 [INF] Successful signout callback.
2020-08-31 12:30:56.168 -04:00 [DBG] No client front-channel iframe urls
2020-08-31 12:30:56.168 -04:00 [DBG] No client back-channel iframe urls
2020-08-31 12:30:57.982 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 12:30:57.984 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 12:30:57.984 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 12:30:57.984 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 12:30:57.984 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 12:30:57.984 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 12:30:57.985 -04:00 [DBG] Start discovery request
2020-08-31 12:30:57.996 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 12:30:58.030 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 12:30:58.031 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 12:30:58.032 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 12:30:58.032 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 12:30:58.032 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 12:30:58.032 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 12:30:58.032 -04:00 [DBG] Start key discovery request
2020-08-31 12:30:59.047 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 12:30:59.048 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 12:30:59.048 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 12:30:59.048 -04:00 [DBG] Start authorize request
2020-08-31 12:30:59.048 -04:00 [DBG] No user present in authorize request
2020-08-31 12:30:59.048 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 12:30:59.055 -04:00 [DBG] angular_spa found in database: true
2020-08-31 12:30:59.055 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 12:30:59.055 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"M1Jja1JEME1xbGt5VnNFbXA3UXgxNGV0dkFTc19KRUNKR2xXS1RUb3ZRNW1s","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"ECbDCPMDqwqEEftOrl5FOEoLVfZ36fB2dOvKymZ0uLM","code_challenge_method":"S256","nonce":"M1Jja1JEME1xbGt5VnNFbXA3UXgxNGV0dkFTc19KRUNKR2xXS1RUb3ZRNW1s","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 12:30:59.055 -04:00 [ERR] Request validation failed
2020-08-31 12:30:59.056 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"M1Jja1JEME1xbGt5VnNFbXA3UXgxNGV0dkFTc19KRUNKR2xXS1RUb3ZRNW1s","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"ECbDCPMDqwqEEftOrl5FOEoLVfZ36fB2dOvKymZ0uLM","code_challenge_method":"S256","nonce":"M1Jja1JEME1xbGt5VnNFbXA3UXgxNGV0dkFTc19KRUNKR2xXS1RUb3ZRNW1s","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 12:30:59.056 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000023-0001-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-31T16:30:59.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 12:31:17.205 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 12:31:17.207 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 12:31:17.207 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 12:31:17.207 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 12:31:17.207 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 12:31:17.207 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 12:31:17.207 -04:00 [DBG] Start discovery request
2020-08-31 12:31:17.210 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 12:31:17.240 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 12:31:17.241 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 12:31:17.241 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 12:31:17.242 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 12:31:17.242 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 12:31:17.242 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 12:31:17.242 -04:00 [DBG] Start key discovery request
2020-08-31 12:31:18.262 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 12:31:18.262 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 12:31:18.262 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 12:31:18.262 -04:00 [DBG] Start authorize request
2020-08-31 12:31:18.262 -04:00 [DBG] No user present in authorize request
2020-08-31 12:31:18.262 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 12:31:18.270 -04:00 [DBG] angular_spa found in database: true
2020-08-31 12:31:18.270 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 12:31:18.270 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"TW5xaHBoX1lYVFBIQ0ZwODdhNC14QXlJOFNNSmlwbTVVbUIyRW54VTdsZ1Zj","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"fp51O1Fbr9oBx5GUZeFvpQFhYW8FjnXNrGuN7oDvDoY","code_challenge_method":"S256","nonce":"TW5xaHBoX1lYVFBIQ0ZwODdhNC14QXlJOFNNSmlwbTVVbUIyRW54VTdsZ1Zj","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 12:31:18.270 -04:00 [ERR] Request validation failed
2020-08-31 12:31:18.270 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"TW5xaHBoX1lYVFBIQ0ZwODdhNC14QXlJOFNNSmlwbTVVbUIyRW54VTdsZ1Zj","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"fp51O1Fbr9oBx5GUZeFvpQFhYW8FjnXNrGuN7oDvDoY","code_challenge_method":"S256","nonce":"TW5xaHBoX1lYVFBIQ0ZwODdhNC14QXlJOFNNSmlwbTVVbUIyRW54VTdsZ1Zj","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 12:31:18.271 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000188-0008-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-31T16:31:18.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-08-31 12:31:25.285 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-08-31 12:31:25.286 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-08-31 12:31:25.286 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-08-31 12:31:25.286 -04:00 [DBG] Start authorize request
2020-08-31 12:31:25.286 -04:00 [DBG] No user present in authorize request
2020-08-31 12:31:25.286 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 12:31:25.306 -04:00 [DBG] angular_spa found in database: true
2020-08-31 12:31:25.306 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 12:31:25.306 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 12:31:25.309 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 12:31:25.318 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 12:31:25.320 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 12:31:25.321 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 12:31:25.321 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 12:31:25.321 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"ZkFjZVlpaHI3N2lvSzBIeWUweVZBQklzOVNUMEVhVUpEMVV3Q1JELnZraThCsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"ZkFjZVlpaHI3N2lvSzBIeWUweVZBQklzOVNUMEVhVUpEMVV3Q1JELnZraThC","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"ZkFjZVlpaHI3N2lvSzBIeWUweVZBQklzOVNUMEVhVUpEMVV3Q1JELnZraThCsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"7Mawhq8_ayLBj-MXonXSEBuWZncavqgiBlVCeHbqorI","code_challenge_method":"S256","nonce":"ZkFjZVlpaHI3N2lvSzBIeWUweVZBQklzOVNUMEVhVUpEMVV3Q1JELnZraThC"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 12:31:25.321 -04:00 [INF] Showing login: User is not authenticated
2020-08-31 12:31:25.324 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 12:31:25.335 -04:00 [DBG] angular_spa found in database: true
2020-08-31 12:31:25.335 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 12:31:25.335 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 12:31:25.337 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 12:31:25.338 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 12:31:25.339 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 12:31:25.340 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 12:31:25.340 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 12:31:25.346 -04:00 [DBG] angular_spa found in database: true
2020-08-31 12:31:25.346 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 12:31:27.843 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-08-31 12:31:27.845 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 12:31:27.862 -04:00 [DBG] angular_spa found in database: true
2020-08-31 12:31:27.863 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 12:31:27.863 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 12:31:27.865 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 12:31:27.874 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 12:31:27.875 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 12:31:27.876 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 12:31:27.877 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 12:31:27.884 -04:00 [DBG] Augmenting SignInContext
2020-08-31 12:31:27.885 -04:00 [DBG] Adding idp claim with value: local
2020-08-31 12:31:27.885 -04:00 [DBG] Adding auth_time claim with value: 1598891487
2020-08-31 12:31:27.885 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-31 12:31:27.886 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000a0-000a-fd00-b63f-84710c7967bb","TimeStamp":"2020-08-31T16:31:27.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-08-31 12:31:27.892 -04:00 [DBG] angular_spa found in database: true
2020-08-31 12:31:27.892 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 12:31:27.896 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-08-31 12:31:27.896 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-08-31 12:31:27.896 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-08-31 12:31:27.896 -04:00 [DBG] Start authorize callback request
2020-08-31 12:31:27.896 -04:00 [DBG] User in authorize request: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 12:31:27.896 -04:00 [DBG] Start authorize request protocol validation
2020-08-31 12:31:27.904 -04:00 [DBG] angular_spa found in database: true
2020-08-31 12:31:27.904 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 12:31:27.904 -04:00 [DBG] Checking for PKCE parameters
2020-08-31 12:31:27.905 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 12:31:27.906 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 12:31:27.907 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 12:31:27.908 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 12:31:27.908 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-08-31 12:31:27.908 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"ZkFjZVlpaHI3N2lvSzBIeWUweVZBQklzOVNUMEVhVUpEMVV3Q1JELnZraThCsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"ZkFjZVlpaHI3N2lvSzBIeWUweVZBQklzOVNUMEVhVUpEMVV3Q1JELnZraThC","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"WVfPQzO2OJXDm08MKVKAWQ","Raw":{"response_type":"code","client_id":"angular_spa","state":"ZkFjZVlpaHI3N2lvSzBIeWUweVZBQklzOVNUMEVhVUpEMVV3Q1JELnZraThCsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"7Mawhq8_ayLBj-MXonXSEBuWZncavqgiBlVCeHbqorI","code_challenge_method":"S256","nonce":"ZkFjZVlpaHI3N2lvSzBIeWUweVZBQklzOVNUMEVhVUpEMVV3Q1JELnZraThC"},"$type":"AuthorizeRequestValidationLog"}
2020-08-31 12:31:27.910 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-08-31 12:31:27.910 -04:00 [DBG] Creating Authorization Code Flow response.
2020-08-31 12:31:27.912 -04:00 [DBG] ASIW0mt4ii0d/p+hvBjHdM00T0FMvElVzIJ3vk0g/lg= not found in database
2020-08-31 12:31:27.914 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****HLOY","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000004-0006-fc00-b63f-84710c7967bb","TimeStamp":"2020-08-31T16:31:27.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-31 12:31:27.914 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"ZkFjZVlpaHI3N2lvSzBIeWUweVZBQklzOVNUMEVhVUpEMVV3Q1JELnZraThCsemicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-08-31 12:31:27.914 -04:00 [DBG] Augmenting SignInContext
2020-08-31 12:31:27.914 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-08-31 12:31:28.112 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 12:31:28.113 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 12:31:28.113 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 12:31:28.113 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 12:31:28.113 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 12:31:28.113 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 12:31:28.114 -04:00 [DBG] Start discovery request
2020-08-31 12:31:28.120 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 12:31:28.148 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 12:31:28.150 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 12:31:28.150 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 12:31:28.150 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 12:31:28.151 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 12:31:28.151 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 12:31:28.151 -04:00 [DBG] Start key discovery request
2020-08-31 12:31:29.167 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-08-31 12:31:29.170 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 12:31:29.170 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 12:31:29.170 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-08-31 12:31:29.170 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-08-31 12:31:29.170 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-08-31 12:31:29.170 -04:00 [DBG] Start token request.
2020-08-31 12:31:29.170 -04:00 [DBG] Start client validation
2020-08-31 12:31:29.170 -04:00 [DBG] Start parsing Basic Authentication secret
2020-08-31 12:31:29.170 -04:00 [DBG] Start parsing for secret in post body
2020-08-31 12:31:29.170 -04:00 [DBG] client id without secret found
2020-08-31 12:31:29.170 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-08-31 12:31:29.170 -04:00 [DBG] Secret id found: angular_spa
2020-08-31 12:31:29.188 -04:00 [DBG] angular_spa found in database: true
2020-08-31 12:31:29.189 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 12:31:29.189 -04:00 [DBG] Public Client - skipping secret validation success
2020-08-31 12:31:29.189 -04:00 [DBG] Client validation success
2020-08-31 12:31:29.189 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000164-0000-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-31T16:31:29.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-08-31 12:31:29.189 -04:00 [DBG] Start token request validation
2020-08-31 12:31:29.189 -04:00 [DBG] Start validation of authorization code token request
2020-08-31 12:31:29.190 -04:00 [DBG] ASIW0mt4ii0d/p+hvBjHdM00T0FMvElVzIJ3vk0g/lg= found in database: true
2020-08-31 12:31:29.191 -04:00 [DBG] removing ASIW0mt4ii0d/p+hvBjHdM00T0FMvElVzIJ3vk0g/lg= persisted grant from database
2020-08-31 12:31:29.194 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-08-31 12:31:29.196 -04:00 [DBG] Validation of authorization code token request success
2020-08-31 12:31:29.196 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"QC3ZhVAs98W9V_bfIXdqs7AUuE6WnzphyzbFt5DHLOY","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"QC3ZhVAs98W9V_bfIXdqs7AUuE6WnzphyzbFt5DHLOY","redirect_uri":"https://localhost:4200","code_verifier":"eXZld1htbld1S2F5QV80N3FmWVVzX0pVaTBoYU5JaEV5ejYtcUtYWlZUbWxz","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-08-31 12:31:29.202 -04:00 [DBG] angular_spa found in database: true
2020-08-31 12:31:29.202 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 12:31:29.205 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 12:31:29.214 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 12:31:29.214 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-08-31 12:31:29.214 -04:00 [DBG] Getting claims for access token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-08-31 12:31:29.227 -04:00 [DBG] angular_spa found in database: true
2020-08-31 12:31:29.227 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 12:31:29.228 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 12:31:29.229 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-08-31 12:31:29.229 -04:00 [DBG] Getting claims for identity token for subject: 9db81902-2fd0-4c04-9fb4-4aa7f396f90c and client: angular_spa
2020-08-31 12:31:29.229 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-08-31 12:31:29.231 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****zRRQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****jQ0g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000164-0000-ff00-b63f-84710c7967bb","TimeStamp":"2020-08-31T16:31:29.0000000Z","ProcessId":29764,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-08-31 12:31:29.231 -04:00 [DBG] Token request success.
2020-08-31 12:31:29.238 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-31 12:31:29.240 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 12:31:29.240 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 12:31:29.241 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-31 12:31:29.241 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-31 12:31:29.241 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-31 12:31:29.241 -04:00 [DBG] Rendering check session result
2020-08-31 12:31:29.242 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-08-31 12:31:29.244 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 12:31:29.244 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 12:31:29.244 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-08-31 12:31:29.245 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-08-31 12:31:29.245 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-08-31 12:31:29.245 -04:00 [DBG] Start userinfo request
2020-08-31 12:31:29.245 -04:00 [DBG] Bearer token found in header
2020-08-31 12:31:29.253 -04:00 [DBG] angular_spa found in database: true
2020-08-31 12:31:29.253 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 12:31:29.261 -04:00 [DBG] angular_spa found in database: true
2020-08-31 12:31:29.262 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-08-31 12:31:29.263 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-08-31 12:31:29.263 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1598891489,"exp":1598895089,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","auth_time":1598891487,"idp":"local","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-08-31 12:31:29.263 -04:00 [DBG] Creating userinfo response
2020-08-31 12:31:29.263 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 12:31:29.263 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 12:31:29.264 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 12:31:29.264 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-08-31 12:31:29.264 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-08-31 12:31:29.265 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-08-31 12:31:29.270 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-08-31 12:31:29.270 -04:00 [DBG] End userinfo request
2020-08-31 12:32:20.620 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 12:32:20.622 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 12:32:20.622 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 12:32:20.622 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 12:32:20.622 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 12:32:20.622 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 12:32:20.622 -04:00 [DBG] Start discovery request
2020-08-31 12:32:20.632 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 12:32:20.634 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 12:32:20.635 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 12:32:20.636 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 12:32:20.638 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 12:32:20.638 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 12:32:20.638 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 12:32:20.639 -04:00 [DBG] Start discovery request
2020-08-31 12:32:20.642 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 12:32:20.646 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 12:32:20.648 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 12:32:20.648 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 12:32:20.648 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 12:32:20.648 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 12:32:20.648 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 12:32:20.648 -04:00 [DBG] Start discovery request
2020-08-31 12:32:20.651 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 12:32:20.679 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 12:32:20.681 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 12:32:20.681 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 12:32:20.681 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 12:32:20.681 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 12:32:20.682 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 12:32:20.682 -04:00 [DBG] Start key discovery request
2020-08-31 12:32:20.684 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-31 12:32:20.684 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-31 12:32:20.684 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-31 12:32:20.685 -04:00 [DBG] Rendering check session result
2020-08-31 12:32:20.708 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 12:32:20.708 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-31 12:32:20.708 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-31 12:32:20.708 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-31 12:32:20.709 -04:00 [DBG] Rendering check session result
2020-08-31 12:32:20.714 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 12:32:20.714 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 12:32:20.714 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 12:32:20.715 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 12:32:20.715 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 12:32:20.715 -04:00 [DBG] Start key discovery request
2020-08-31 12:32:20.748 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 12:32:20.748 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-31 12:32:20.748 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-31 12:32:20.748 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-31 12:32:20.748 -04:00 [DBG] Rendering check session result
2020-08-31 12:32:20.749 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 12:32:20.750 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 12:32:20.750 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 12:32:20.750 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 12:32:20.750 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 12:32:20.750 -04:00 [DBG] Start key discovery request
2020-08-31 12:32:21.805 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 12:32:21.806 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 12:32:21.806 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 12:32:21.806 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 12:32:21.806 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 12:32:21.806 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 12:32:21.806 -04:00 [DBG] Start discovery request
2020-08-31 12:32:21.809 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 12:32:21.829 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 12:32:21.829 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-31 12:32:21.830 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-31 12:32:21.830 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-31 12:32:21.830 -04:00 [DBG] Rendering check session result
2020-08-31 12:32:21.832 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 12:32:21.832 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 12:32:21.835 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 12:32:21.835 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 12:32:21.835 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 12:32:21.835 -04:00 [DBG] Start key discovery request
2020-08-31 12:32:26.919 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 12:32:26.921 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 12:32:26.921 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 12:32:26.921 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 12:32:26.921 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 12:32:26.921 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 12:32:26.921 -04:00 [DBG] Start discovery request
2020-08-31 12:32:26.924 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 12:32:26.937 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 12:32:26.938 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 12:32:26.938 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 12:32:26.938 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 12:32:26.938 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 12:32:26.938 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 12:32:26.938 -04:00 [DBG] Start discovery request
2020-08-31 12:32:26.941 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 12:32:26.947 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 12:32:26.948 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-31 12:32:26.948 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-31 12:32:26.948 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-31 12:32:26.948 -04:00 [DBG] Rendering check session result
2020-08-31 12:32:26.949 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 12:32:26.949 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 12:32:26.950 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 12:32:26.950 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 12:32:26.950 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 12:32:26.950 -04:00 [DBG] Start key discovery request
2020-08-31 12:32:26.992 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 12:32:26.994 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 12:32:26.994 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-31 12:32:26.994 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 12:32:26.994 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-31 12:32:26.994 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-31 12:32:26.994 -04:00 [DBG] Rendering check session result
2020-08-31 12:32:26.994 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 12:32:26.994 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 12:32:26.994 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 12:32:26.994 -04:00 [DBG] Start key discovery request
2020-08-31 12:32:27.309 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 12:32:27.310 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 12:32:27.310 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 12:32:27.310 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 12:32:27.310 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 12:32:27.310 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 12:32:27.311 -04:00 [DBG] Start discovery request
2020-08-31 12:32:27.313 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 12:32:27.363 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 12:32:27.364 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-08-31 12:32:27.364 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-08-31 12:32:27.364 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-08-31 12:32:27.364 -04:00 [DBG] Rendering check session result
2020-08-31 12:32:27.365 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 12:32:27.365 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 12:32:27.365 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 12:32:27.365 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 12:32:27.365 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 12:32:27.365 -04:00 [DBG] Start key discovery request
2020-08-31 13:05:41.830 -04:00 [INF] Removing 0 grants
2020-08-31 13:05:41.832 -04:00 [INF] Removing 0 device flow codes
2020-08-31 13:26:05.096 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 13:26:05.194 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 13:26:05.195 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 13:26:05.197 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 13:26:05.197 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 13:26:05.197 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 13:26:05.197 -04:00 [DBG] Start discovery request
2020-08-31 13:26:05.208 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 13:26:05.212 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 13:26:05.214 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 13:26:05.214 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 13:26:05.214 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 13:26:05.214 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 13:26:05.214 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 13:26:05.214 -04:00 [DBG] Start key discovery request
2020-08-31 13:26:09.791 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 13:26:09.793 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 13:26:09.793 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 13:26:09.793 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 13:26:09.793 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 13:26:09.793 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 13:26:09.793 -04:00 [DBG] Start discovery request
2020-08-31 13:26:09.796 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 13:26:09.808 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-08-31 13:26:09.810 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 13:26:09.810 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 13:26:09.810 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-08-31 13:26:09.810 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-08-31 13:26:09.810 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-08-31 13:26:09.810 -04:00 [DBG] Start discovery request
2020-08-31 13:26:09.813 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-08-31 13:26:09.829 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 13:26:09.832 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 13:26:09.832 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 13:26:09.832 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 13:26:09.832 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 13:26:09.832 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 13:26:09.832 -04:00 [DBG] Start key discovery request
2020-08-31 13:26:09.889 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-08-31 13:26:09.890 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-08-31 13:26:09.891 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-08-31 13:26:09.891 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-08-31 13:26:09.891 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-08-31 13:26:09.891 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-08-31 13:26:09.891 -04:00 [DBG] Start key discovery request
2020-08-31 14:19:54.412 -04:00 [INF] Removing 0 grants
2020-08-31 14:19:54.414 -04:00 [INF] Removing 0 device flow codes
2020-09-01 19:47:45.091 -04:00 [INF] Starting host...
2020-09-01 19:47:47.381 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-01 19:47:47.633 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-01 19:47:47.633 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-01 19:47:47.633 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-01 19:47:47.633 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-01 19:47:47.633 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-01 19:47:47.633 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-01 19:47:48.044 -04:00 [DBG] Login Url: /Account/Login
2020-09-01 19:47:48.045 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-01 19:47:48.045 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-01 19:47:48.045 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-01 19:47:48.045 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-01 19:47:48.045 -04:00 [DBG] Error Url: /home/error
2020-09-01 19:47:48.045 -04:00 [DBG] Error Id Parameter: errorId
2020-09-01 19:48:43.957 -04:00 [INF] Starting host...
2020-09-01 19:48:44.811 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-01 19:48:44.893 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-01 19:48:44.893 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-01 19:48:44.893 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-01 19:48:44.893 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-01 19:48:44.893 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-01 19:48:44.893 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-01 19:48:45.059 -04:00 [DBG] Login Url: /Account/Login
2020-09-01 19:48:45.060 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-01 19:48:45.060 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-01 19:48:45.060 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-01 19:48:45.060 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-01 19:48:45.060 -04:00 [DBG] Error Url: /home/error
2020-09-01 19:48:45.060 -04:00 [DBG] Error Id Parameter: errorId
2020-09-01 19:48:48.279 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-09-01 19:48:50.284 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-09-01 19:52:16.873 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.com but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-01 19:52:16.896 -04:00 [INF] Access was denied by the resource owner or by the remote server.
2020-09-01 19:52:16.899 -04:00 [ERR] Message contains error: 'access_denied', error_description: 'AADSTS65004: User declined to consent to access the app.', error_uri: 'error_uri is null'.
2020-09-01 19:52:16.900 -04:00 [INF] Error from RemoteAuthentication: Message contains error: 'access_denied', error_description: 'AADSTS65004: User declined to consent to access the app.', error_uri: 'error_uri is null'..
2020-09-01 19:52:16.905 -04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: An error was encountered while handling the remote login.
 ---> Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolException: Message contains error: 'access_denied', error_description: 'AADSTS65004: User declined to consent to access the app.', error_uri: 'error_uri is null'.
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync()
   at IdentityServer4.Hosting.FederatedSignOut.AuthenticationRequestHandlerWrapper.HandleRequestAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-09-01 20:06:19.316 -04:00 [INF] Starting host...
2020-09-01 20:06:20.233 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-01 20:06:20.319 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-01 20:06:20.319 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-01 20:06:20.319 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-01 20:06:20.319 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-01 20:06:20.319 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-01 20:06:20.319 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-01 20:06:20.495 -04:00 [DBG] Login Url: /Account/Login
2020-09-01 20:06:20.496 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-01 20:06:20.496 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-01 20:06:20.496 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-01 20:06:20.496 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-01 20:06:20.496 -04:00 [DBG] Error Url: /home/error
2020-09-01 20:06:20.496 -04:00 [DBG] Error Id Parameter: errorId
2020-09-01 20:06:22.324 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-09-01 20:06:23.859 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-09-01 20:07:19.984 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.com but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-01 20:07:20.004 -04:00 [INF] Access was denied by the resource owner or by the remote server.
2020-09-01 20:07:20.008 -04:00 [ERR] Message contains error: 'access_denied', error_description: 'AADSTS65004: User declined to consent to access the app.', error_uri: 'error_uri is null'.
2020-09-01 20:07:20.008 -04:00 [INF] Error from RemoteAuthentication: Message contains error: 'access_denied', error_description: 'AADSTS65004: User declined to consent to access the app.', error_uri: 'error_uri is null'..
2020-09-01 20:07:20.010 -04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: An error was encountered while handling the remote login.
 ---> Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectProtocolException: Message contains error: 'access_denied', error_description: 'AADSTS65004: User declined to consent to access the app.', error_uri: 'error_uri is null'.
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync()
   at IdentityServer4.Hosting.FederatedSignOut.AuthenticationRequestHandlerWrapper.HandleRequestAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-09-01 21:06:21.904 -04:00 [INF] Removing 0 grants
2020-09-01 21:06:21.916 -04:00 [INF] Removing 0 device flow codes
2020-09-01 22:06:22.718 -04:00 [INF] Removing 0 grants
2020-09-01 22:06:22.723 -04:00 [INF] Removing 0 device flow codes
2020-09-01 22:37:54.431 -04:00 [INF] Starting host...
2020-09-01 22:37:55.348 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-01 22:37:55.428 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-01 22:37:55.428 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-01 22:37:55.428 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-01 22:37:55.428 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-01 22:37:55.428 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-01 22:37:55.428 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-01 22:37:55.599 -04:00 [DBG] Login Url: /Account/Login
2020-09-01 22:37:55.600 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-01 22:37:55.600 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-01 22:37:55.600 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-01 22:37:55.600 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-01 22:37:55.600 -04:00 [DBG] Error Url: /home/error
2020-09-01 22:37:55.600 -04:00 [DBG] Error Id Parameter: errorId
2020-09-02 13:10:00.330 -04:00 [INF] Starting host...
2020-09-02 13:10:02.095 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-02 13:10:02.241 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-02 13:10:02.241 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-02 13:10:02.241 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-02 13:10:02.241 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-02 13:10:02.241 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-02 13:10:02.241 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-02 13:10:02.620 -04:00 [DBG] Login Url: /Account/Login
2020-09-02 13:10:02.621 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-02 13:10:02.621 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-02 13:10:02.621 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-02 13:10:02.621 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-02 13:10:02.621 -04:00 [DBG] Error Url: /home/error
2020-09-02 13:10:02.621 -04:00 [DBG] Error Id Parameter: errorId
2020-09-02 13:10:09.147 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-09-02 13:42:16.754 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-02 13:42:17.193 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-02 13:42:17.197 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-02 13:42:17.197 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-02 13:42:17.199 -04:00 [DBG] Start discovery request
2020-09-02 13:42:17.675 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-02 13:42:17.677 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-02 13:42:17.679 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-02 13:42:17.679 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-02 13:42:17.679 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-02 13:42:17.679 -04:00 [DBG] Start discovery request
2020-09-02 13:42:17.951 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-02 13:42:17.951 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-02 13:42:18.011 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-02 13:42:18.034 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-02 13:42:18.035 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-02 13:42:18.035 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-02 13:42:18.035 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-02 13:42:18.035 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-02 13:42:18.035 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-02 13:42:18.035 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-02 13:42:18.035 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-02 13:42:18.036 -04:00 [DBG] Start key discovery request
2020-09-02 13:42:18.036 -04:00 [DBG] Start key discovery request
2020-09-02 13:42:19.106 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-02 13:42:19.106 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-02 13:42:19.108 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-02 13:42:19.110 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-02 13:42:19.110 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-02 13:42:19.111 -04:00 [DBG] Start authorize request
2020-09-02 13:42:19.112 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-02 13:42:19.113 -04:00 [DBG] No user present in authorize request
2020-09-02 13:42:19.114 -04:00 [DBG] Start authorize request protocol validation
2020-09-02 13:42:19.310 -04:00 [DBG] angular_spa found in database: true
2020-09-02 13:42:19.315 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-02 13:42:19.328 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"QUliZzFoNmFtXzVXbk5yMXV-YVl4Tm5TNTJTa1lKUVdoYko2WlBFWGZ0QzVy","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"spyE-z4JT2ktSFEjI6cSp59Kt1zdqy4NHv_82AA54rA","code_challenge_method":"S256","nonce":"QUliZzFoNmFtXzVXbk5yMXV-YVl4Tm5TNTJTa1lKUVdoYko2WlBFWGZ0QzVy","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-02 13:42:19.332 -04:00 [ERR] Request validation failed
2020-09-02 13:42:19.332 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"QUliZzFoNmFtXzVXbk5yMXV-YVl4Tm5TNTJTa1lKUVdoYko2WlBFWGZ0QzVy","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"spyE-z4JT2ktSFEjI6cSp59Kt1zdqy4NHv_82AA54rA","code_challenge_method":"S256","nonce":"QUliZzFoNmFtXzVXbk5yMXV-YVl4Tm5TNTJTa1lKUVdoYko2WlBFWGZ0QzVy","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-02 13:42:19.336 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000251-0006-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-02T17:42:19.0000000Z","ProcessId":13864,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-02 13:42:19.347 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-02 13:42:19.348 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-02 14:10:02.161 -04:00 [INF] Removing 0 grants
2020-09-02 14:10:02.168 -04:00 [INF] Removing 0 device flow codes
2020-09-02 15:13:12.554 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-02 15:13:12.633 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-02 15:13:12.633 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-02 15:13:12.634 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-02 15:13:12.643 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-02 15:13:12.643 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-02 15:13:12.643 -04:00 [DBG] Start discovery request
2020-09-02 15:13:12.660 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-02 15:13:12.665 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-02 15:13:12.667 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-02 15:13:12.667 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-02 15:13:12.667 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-02 15:13:12.669 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-02 15:13:12.669 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-02 15:13:12.669 -04:00 [DBG] Start key discovery request
2020-09-02 15:13:14.008 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-02 15:13:14.009 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-02 15:13:14.009 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-02 15:13:14.010 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-02 15:13:14.010 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-02 15:13:14.011 -04:00 [DBG] Start authorize request
2020-09-02 15:13:14.011 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-02 15:13:14.011 -04:00 [DBG] No user present in authorize request
2020-09-02 15:13:14.012 -04:00 [DBG] Start authorize request protocol validation
2020-09-02 15:13:14.038 -04:00 [DBG] angular_spa found in database: true
2020-09-02 15:13:14.039 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-02 15:13:14.039 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"a0pkUVZhdC5UY2RJb2ZWSG9IeUIwT2RZOE9TYTkxaVBkczNiWG5ad2hCaks2","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"3TjIsREqPTX4oZkHrYp18yED8MNrgiLB8n17z683RC4","code_challenge_method":"S256","nonce":"a0pkUVZhdC5UY2RJb2ZWSG9IeUIwT2RZOE9TYTkxaVBkczNiWG5ad2hCaks2","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-02 15:13:14.039 -04:00 [ERR] Request validation failed
2020-09-02 15:13:14.040 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"a0pkUVZhdC5UY2RJb2ZWSG9IeUIwT2RZOE9TYTkxaVBkczNiWG5ad2hCaks2","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"3TjIsREqPTX4oZkHrYp18yED8MNrgiLB8n17z683RC4","code_challenge_method":"S256","nonce":"a0pkUVZhdC5UY2RJb2ZWSG9IeUIwT2RZOE9TYTkxaVBkczNiWG5ad2hCaks2","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-02 15:13:14.040 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000008f-0002-fb00-b63f-84710c7967bb","TimeStamp":"2020-09-02T19:13:14.0000000Z","ProcessId":13864,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-02 15:13:14.044 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-02 15:13:14.044 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-02 15:15:25.475 -04:00 [INF] Removing 0 grants
2020-09-02 15:15:25.477 -04:00 [INF] Removing 0 device flow codes
2020-09-02 15:17:58.199 -04:00 [INF] Starting host...
2020-09-02 15:17:59.437 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-02 15:17:59.530 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-02 15:17:59.530 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-02 15:17:59.530 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-02 15:17:59.530 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-02 15:17:59.530 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-02 15:17:59.530 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-02 15:17:59.726 -04:00 [DBG] Login Url: /Account/Login
2020-09-02 15:17:59.728 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-02 15:17:59.728 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-02 15:17:59.728 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-02 15:17:59.728 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-02 15:17:59.728 -04:00 [DBG] Error Url: /home/error
2020-09-02 15:17:59.728 -04:00 [DBG] Error Id Parameter: errorId
2020-09-02 15:17:59.741 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-02 15:17:59.742 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-02 15:18:01.335 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-02 15:18:01.336 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-02 15:18:01.343 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-09-02 15:18:01.350 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-02 15:18:01.350 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-02 15:18:02.407 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-02 15:18:02.408 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-02 15:18:02.684 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-09-02 15:18:03.016 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.com but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-02 15:18:03.147 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-09-02 15:18:03.153 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-02 15:18:03.153 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-02 15:18:04.251 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"-sTAuRxvwlBQSKV1V1HZB22LDQBseN4McuwSAsPe-aw","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000218-0008-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-02T19:18:04.0000000Z","ProcessId":9424,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-02 15:18:04.269 -04:00 [DBG] Augmenting SignInContext
2020-09-02 15:18:04.269 -04:00 [DBG] Adding amr claim with value: external
2020-09-02 15:18:04.271 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-02 15:18:04.272 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-02 15:18:04.273 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-02 15:18:04.322 -04:00 [DBG] 0 persisted grants found for 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-09-02 15:18:29.637 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-02 15:18:29.816 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-02 15:18:29.817 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-02 15:18:29.818 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-02 15:18:29.819 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-02 15:18:29.819 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-02 15:18:29.820 -04:00 [DBG] Start discovery request
2020-09-02 15:18:30.191 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-02 15:18:30.221 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-02 15:18:30.223 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-02 15:18:30.223 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-02 15:18:30.224 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-02 15:18:30.224 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-02 15:18:30.224 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-02 15:18:30.225 -04:00 [DBG] Start key discovery request
2020-09-02 15:18:31.253 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-02 15:18:31.255 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-02 15:18:31.255 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-02 15:18:31.256 -04:00 [DBG] Start authorize request
2020-09-02 15:18:31.258 -04:00 [DBG] User in authorize request: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-09-02 15:18:31.259 -04:00 [DBG] Start authorize request protocol validation
2020-09-02 15:18:31.418 -04:00 [DBG] angular_spa found in database: true
2020-09-02 15:18:31.422 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-02 15:18:31.433 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"UVpyYkFwY1FYRy5GVUtDM2ZhVlliU0hVQzVDUFI1ZFRhVlJnLUJ3LTNSdFhW","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"zm6-HvnAR7zRrVlVzTQKDa0kZ1pZh34GxYoCPiMPb5M","code_challenge_method":"S256","nonce":"UVpyYkFwY1FYRy5GVUtDM2ZhVlliU0hVQzVDUFI1ZFRhVlJnLUJ3LTNSdFhW","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-02 15:18:31.435 -04:00 [ERR] Request validation failed
2020-09-02 15:18:31.436 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"UVpyYkFwY1FYRy5GVUtDM2ZhVlliU0hVQzVDUFI1ZFRhVlJnLUJ3LTNSdFhW","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"zm6-HvnAR7zRrVlVzTQKDa0kZ1pZh34GxYoCPiMPb5M","code_challenge_method":"S256","nonce":"UVpyYkFwY1FYRy5GVUtDM2ZhVlliU0hVQzVDUFI1ZFRhVlJnLUJ3LTNSdFhW","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-02 15:18:31.437 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000144-000a-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-02T19:18:31.0000000Z","ProcessId":9424,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-02 15:18:37.871 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-02 15:18:37.872 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-02 15:18:37.873 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-02 15:18:37.873 -04:00 [DBG] Start authorize request
2020-09-02 15:18:37.873 -04:00 [DBG] User in authorize request: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-09-02 15:18:37.873 -04:00 [DBG] Start authorize request protocol validation
2020-09-02 15:18:37.883 -04:00 [DBG] angular_spa found in database: true
2020-09-02 15:18:37.883 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-02 15:18:37.884 -04:00 [DBG] Checking for PKCE parameters
2020-09-02 15:18:37.920 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-09-02 15:18:37.957 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-02 15:18:37.964 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-09-02 15:18:37.966 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-02 15:18:37.969 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-02 15:18:37.970 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"eEJQSGdmSVZqUnBCODVpNzFRVXlBbzNWT05LMVJ5Y0d0emhMaTREWFo3S1Jusemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"eEJQSGdmSVZqUnBCODVpNzFRVXlBbzNWT05LMVJ5Y0d0emhMaTREWFo3S1Ju","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"BPdN2A2NJTIpMJw96apbyg","Raw":{"response_type":"code","client_id":"angular_spa","state":"eEJQSGdmSVZqUnBCODVpNzFRVXlBbzNWT05LMVJ5Y0d0emhMaTREWFo3S1Jusemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"qA1HNchh5vP6h0A8fm8btiLnnsJFdR9KCnD2n6ZrCXQ","code_challenge_method":"S256","nonce":"eEJQSGdmSVZqUnBCODVpNzFRVXlBbzNWT05LMVJ5Y0d0emhMaTREWFo3S1Ju"},"$type":"AuthorizeRequestValidationLog"}
2020-09-02 15:18:37.985 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-09-02 15:18:37.987 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-02 15:18:38.009 -04:00 [DBG] HHJqj3m0tqerp+cVQBWX6U1S4m/XppkE8Xm9zWXfjWI= not found in database
2020-09-02 15:18:38.031 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****o3Wo","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000a0-0002-fb00-b63f-84710c7967bb","TimeStamp":"2020-09-02T19:18:38.0000000Z","ProcessId":9424,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-02 15:18:38.032 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"eEJQSGdmSVZqUnBCODVpNzFRVXlBbzNWT05LMVJ5Y0d0emhMaTREWFo3S1Jusemicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-02 15:18:38.035 -04:00 [DBG] Augmenting SignInContext
2020-09-02 15:18:38.035 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-02 15:18:38.137 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-02 15:18:38.139 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-02 15:18:38.139 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-02 15:18:38.140 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-02 15:18:38.140 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-02 15:18:38.140 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-02 15:18:38.140 -04:00 [DBG] Start discovery request
2020-09-02 15:18:38.149 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-02 15:18:38.163 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-02 15:18:38.168 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-02 15:18:38.169 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-02 15:18:38.169 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-02 15:18:38.169 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-02 15:18:38.169 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-02 15:18:38.169 -04:00 [DBG] Start key discovery request
2020-09-02 15:18:39.201 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-02 15:18:39.206 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-02 15:18:39.206 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-02 15:18:39.207 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-02 15:18:39.209 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-02 15:18:39.210 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-02 15:18:39.212 -04:00 [DBG] Start token request.
2020-09-02 15:18:39.213 -04:00 [DBG] Start client validation
2020-09-02 15:18:39.215 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-02 15:18:39.216 -04:00 [DBG] Start parsing for secret in post body
2020-09-02 15:18:39.217 -04:00 [DBG] client id without secret found
2020-09-02 15:18:39.217 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-02 15:18:39.217 -04:00 [DBG] Secret id found: angular_spa
2020-09-02 15:18:39.227 -04:00 [DBG] angular_spa found in database: true
2020-09-02 15:18:39.227 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-02 15:18:39.228 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-02 15:18:39.228 -04:00 [DBG] Client validation success
2020-09-02 15:18:39.229 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000019-0008-fa00-b63f-84710c7967bb","TimeStamp":"2020-09-02T19:18:39.0000000Z","ProcessId":9424,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-02 15:18:39.231 -04:00 [DBG] Start token request validation
2020-09-02 15:18:39.234 -04:00 [DBG] Start validation of authorization code token request
2020-09-02 15:18:39.244 -04:00 [DBG] HHJqj3m0tqerp+cVQBWX6U1S4m/XppkE8Xm9zWXfjWI= found in database: true
2020-09-02 15:18:39.259 -04:00 [DBG] removing HHJqj3m0tqerp+cVQBWX6U1S4m/XppkE8Xm9zWXfjWI= persisted grant from database
2020-09-02 15:18:39.266 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-02 15:18:39.268 -04:00 [DBG] Validation of authorization code token request success
2020-09-02 15:18:39.270 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"kEGpQHQfYtskOdU5QRRc2gaZYkHTmkTlEaArnU6o3Wo","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"kEGpQHQfYtskOdU5QRRc2gaZYkHTmkTlEaArnU6o3Wo","redirect_uri":"https://localhost:4200","code_verifier":"SGRpdlhiNmlnY0xVRnN4OEp6ZTNycWFCMExNUnBUVEg3ZUkxUXZVWGR0bXoy","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-09-02 15:18:39.281 -04:00 [DBG] angular_spa found in database: true
2020-09-02 15:18:39.281 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-02 15:18:39.283 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-09-02 15:18:39.284 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-02 15:18:39.291 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-09-02 15:18:39.291 -04:00 [DBG] Getting claims for access token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-09-02 15:18:39.320 -04:00 [DBG] angular_spa found in database: true
2020-09-02 15:18:39.320 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-02 15:18:39.321 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-09-02 15:18:39.322 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-02 15:18:39.326 -04:00 [DBG] Getting claims for identity token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188 and client: angular_spa
2020-09-02 15:18:39.326 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-02 15:18:39.328 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****By5Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****QVdA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000019-0008-fa00-b63f-84710c7967bb","TimeStamp":"2020-09-02T19:18:39.0000000Z","ProcessId":9424,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-02 15:18:39.328 -04:00 [DBG] Token request success.
2020-09-02 15:18:39.338 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-02 15:18:39.339 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-02 15:18:39.340 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-02 15:18:39.340 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-02 15:18:39.340 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-02 15:18:39.340 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-02 15:18:39.340 -04:00 [DBG] Rendering check session result
2020-09-02 15:18:39.342 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-02 15:18:39.344 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-02 15:18:39.344 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-02 15:18:39.344 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-02 15:18:39.345 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-02 15:18:39.345 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-02 15:18:39.347 -04:00 [DBG] Start userinfo request
2020-09-02 15:18:39.348 -04:00 [DBG] Bearer token found in header
2020-09-02 15:18:39.369 -04:00 [DBG] angular_spa found in database: true
2020-09-02 15:18:39.369 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-02 15:18:39.380 -04:00 [DBG] angular_spa found in database: true
2020-09-02 15:18:39.380 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-02 15:18:39.382 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-02 15:18:39.383 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599074319,"exp":1599077919,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1599074284,"idp":"azuread","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"external"},"$type":"TokenValidationLog"}
2020-09-02 15:18:39.385 -04:00 [DBG] Creating userinfo response
2020-09-02 15:18:39.387 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-09-02 15:18:39.388 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-09-02 15:18:39.391 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-09-02 15:18:39.395 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-02 15:18:39.395 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-09-02 15:18:39.397 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-09-02 15:18:39.400 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-09-02 15:18:39.401 -04:00 [DBG] End userinfo request
2020-09-02 15:18:40.585 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-09-02 15:18:40.586 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-09-02 15:18:40.586 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-09-02 15:18:40.588 -04:00 [DBG] Processing signout request for 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-09-02 15:18:40.589 -04:00 [DBG] Start end session request validation
2020-09-02 15:18:40.590 -04:00 [DBG] Start identity token validation
2020-09-02 15:18:40.602 -04:00 [DBG] angular_spa found in database: true
2020-09-02 15:18:40.602 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-02 15:18:40.602 -04:00 [DBG] Client found: angular_spa / Employee Profile SPA
2020-09-02 15:18:40.605 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-02 15:18:40.605 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599074319,"exp":1599074619,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"eEJQSGdmSVZqUnBCODVpNzFRVXlBbzNWT05LMVJ5Y0d0emhMaTREWFo3S1Ju","iat":1599074319,"at_hash":"biKRzQh_p58WvrpgL_FpHQ","s_hash":"CvDDjgFDwIyMQYQ7OjBYkw","sid":"BPdN2A2NJTIpMJw96apbyg","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1599074284,"idp":"azuread","amr":"external"},"$type":"TokenValidationLog"}
2020-09-02 15:18:40.607 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-09-02 15:18:40.607 -04:00 [DBG] Success validating end session request from angular_spa
2020-09-02 15:18:40.635 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-09-02 15:18:40.635 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-02 15:18:40.635 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-09-02 15:18:40.636 -04:00 [INF] {"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"8000001d-0008-fa00-b63f-84710c7967bb","TimeStamp":"2020-09-02T19:18:40.0000000Z","ProcessId":9424,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-09-02 15:18:43.983 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-02 15:18:43.986 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-02 15:18:43.986 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-02 15:18:43.986 -04:00 [DBG] Start authorize request
2020-09-02 15:18:43.986 -04:00 [DBG] No user present in authorize request
2020-09-02 15:18:43.986 -04:00 [DBG] Start authorize request protocol validation
2020-09-02 15:18:43.997 -04:00 [DBG] angular_spa found in database: true
2020-09-02 15:18:43.997 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-02 15:18:43.998 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"WkI3eEZxR2V3Vlp1UjZTdW9zby51ZUp0S1NQcTJyUFpKUEdiQ05rak05S204","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"XECmDYyOCd4A3on-eM83v8f6CcxEqrzn5hJ1rVlR_JM","code_challenge_method":"S256","nonce":"WkI3eEZxR2V3Vlp1UjZTdW9zby51ZUp0S1NQcTJyUFpKUEdiQ05rak05S204","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-02 15:18:43.998 -04:00 [ERR] Request validation failed
2020-09-02 15:18:43.998 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"WkI3eEZxR2V3Vlp1UjZTdW9zby51ZUp0S1NQcTJyUFpKUEdiQ05rak05S204","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"XECmDYyOCd4A3on-eM83v8f6CcxEqrzn5hJ1rVlR_JM","code_challenge_method":"S256","nonce":"WkI3eEZxR2V3Vlp1UjZTdW9zby51ZUp0S1NQcTJyUFpKUEdiQ05rak05S204","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-02 15:18:43.998 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000001f-0008-fa00-b63f-84710c7967bb","TimeStamp":"2020-09-02T19:18:43.0000000Z","ProcessId":9424,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-02 15:18:50.068 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-02 15:18:50.068 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-02 15:18:50.068 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-02 15:18:50.069 -04:00 [DBG] Start authorize request
2020-09-02 15:18:50.069 -04:00 [DBG] No user present in authorize request
2020-09-02 15:18:50.069 -04:00 [DBG] Start authorize request protocol validation
2020-09-02 15:18:50.087 -04:00 [DBG] angular_spa found in database: true
2020-09-02 15:18:50.087 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-02 15:18:50.088 -04:00 [DBG] Checking for PKCE parameters
2020-09-02 15:18:50.090 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-09-02 15:18:50.093 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-02 15:18:50.095 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-09-02 15:18:50.097 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-02 15:18:50.097 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-02 15:18:50.098 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"YW91S2NFS25VaWY4NFMzNGhtV350RHUxWXBpTW95MDR1SURMU0N6ZjNXcWpMsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"YW91S2NFS25VaWY4NFMzNGhtV350RHUxWXBpTW95MDR1SURMU0N6ZjNXcWpM","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"YW91S2NFS25VaWY4NFMzNGhtV350RHUxWXBpTW95MDR1SURMU0N6ZjNXcWpMsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"TwxVCsVB-ufzRmvhOqk8-7bEu4CfyZLxOvdqMLaNeHQ","code_challenge_method":"S256","nonce":"YW91S2NFS25VaWY4NFMzNGhtV350RHUxWXBpTW95MDR1SURMU0N6ZjNXcWpM"},"$type":"AuthorizeRequestValidationLog"}
2020-09-02 15:18:50.098 -04:00 [INF] Showing login: User is not authenticated
2020-09-02 15:18:50.104 -04:00 [DBG] Start authorize request protocol validation
2020-09-02 15:18:50.114 -04:00 [DBG] angular_spa found in database: true
2020-09-02 15:18:50.114 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-02 15:18:50.114 -04:00 [DBG] Checking for PKCE parameters
2020-09-02 15:18:50.116 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-09-02 15:18:50.117 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-02 15:18:50.118 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-09-02 15:18:50.119 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-02 15:18:50.119 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-02 15:18:50.128 -04:00 [DBG] angular_spa found in database: true
2020-09-02 15:18:50.128 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-02 15:18:51.389 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-09-02 15:18:51.682 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.com but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-02 15:18:51.686 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-09-02 15:18:51.714 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"-sTAuRxvwlBQSKV1V1HZB22LDQBseN4McuwSAsPe-aw","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"8000014a-000a-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-02T19:18:51.0000000Z","ProcessId":9424,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-02 15:18:51.714 -04:00 [DBG] Augmenting SignInContext
2020-09-02 15:18:51.714 -04:00 [DBG] Adding amr claim with value: external
2020-09-02 15:18:51.714 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-02 15:18:51.715 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-02 15:18:51.720 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-09-02 15:18:51.720 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-09-02 15:18:51.720 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-09-02 15:18:51.722 -04:00 [DBG] Start authorize callback request
2020-09-02 15:18:51.723 -04:00 [DBG] User in authorize request: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-09-02 15:18:51.723 -04:00 [DBG] Start authorize request protocol validation
2020-09-02 15:18:51.732 -04:00 [DBG] angular_spa found in database: true
2020-09-02 15:18:51.732 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-02 15:18:51.732 -04:00 [DBG] Checking for PKCE parameters
2020-09-02 15:18:51.734 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-09-02 15:18:51.735 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-02 15:18:51.736 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-09-02 15:18:51.737 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-02 15:18:51.737 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-02 15:18:51.737 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/silent-renew.html","https://localhost:4200"],"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"YW91S2NFS25VaWY4NFMzNGhtV350RHUxWXBpTW95MDR1SURMU0N6ZjNXcWpMsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"YW91S2NFS25VaWY4NFMzNGhtV350RHUxWXBpTW95MDR1SURMU0N6ZjNXcWpM","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"65RCffcNZWoxtV_YpaDlpQ","Raw":{"response_type":"code","client_id":"angular_spa","state":"YW91S2NFS25VaWY4NFMzNGhtV350RHUxWXBpTW95MDR1SURMU0N6ZjNXcWpMsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"TwxVCsVB-ufzRmvhOqk8-7bEu4CfyZLxOvdqMLaNeHQ","code_challenge_method":"S256","nonce":"YW91S2NFS25VaWY4NFMzNGhtV350RHUxWXBpTW95MDR1SURMU0N6ZjNXcWpM"},"$type":"AuthorizeRequestValidationLog"}
2020-09-02 15:18:51.739 -04:00 [DBG] Client is configured to not require consent, no consent is required
2020-09-02 15:18:51.739 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-02 15:18:51.740 -04:00 [DBG] jxPjg2FZwkitIkNob5oAYUfcG2cSUBEhLQ2t5Xd5yS4= not found in database
2020-09-02 15:18:51.742 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****bklo","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000014c-000a-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-02T19:18:51.0000000Z","ProcessId":9424,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-02 15:18:51.742 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"YW91S2NFS25VaWY4NFMzNGhtV350RHUxWXBpTW95MDR1SURMU0N6ZjNXcWpMsemicolon%2Fbasics%2Fhome","Scope":"openid profile email app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-02 15:18:51.743 -04:00 [DBG] Augmenting SignInContext
2020-09-02 15:18:51.743 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-02 15:18:52.528 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-02 15:18:52.530 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-02 15:18:52.530 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-02 15:18:52.530 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-02 15:18:52.532 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-02 15:18:52.532 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-02 15:18:52.532 -04:00 [DBG] Start discovery request
2020-09-02 15:18:52.537 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-02 15:18:52.605 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-02 15:18:52.607 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-02 15:18:52.607 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-02 15:18:52.607 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-02 15:18:52.609 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-02 15:18:52.609 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-02 15:18:52.609 -04:00 [DBG] Start key discovery request
2020-09-02 15:18:53.633 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-02 15:18:53.635 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-02 15:18:53.635 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-02 15:18:53.636 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-02 15:18:53.636 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-02 15:18:53.636 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-02 15:18:53.636 -04:00 [DBG] Start token request.
2020-09-02 15:18:53.636 -04:00 [DBG] Start client validation
2020-09-02 15:18:53.636 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-02 15:18:53.636 -04:00 [DBG] Start parsing for secret in post body
2020-09-02 15:18:53.637 -04:00 [DBG] client id without secret found
2020-09-02 15:18:53.637 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-02 15:18:53.637 -04:00 [DBG] Secret id found: angular_spa
2020-09-02 15:18:53.648 -04:00 [DBG] angular_spa found in database: true
2020-09-02 15:18:53.648 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-02 15:18:53.648 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-02 15:18:53.648 -04:00 [DBG] Client validation success
2020-09-02 15:18:53.648 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"800000b2-0005-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-02T19:18:53.0000000Z","ProcessId":9424,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-02 15:18:53.648 -04:00 [DBG] Start token request validation
2020-09-02 15:18:53.648 -04:00 [DBG] Start validation of authorization code token request
2020-09-02 15:18:53.649 -04:00 [DBG] jxPjg2FZwkitIkNob5oAYUfcG2cSUBEhLQ2t5Xd5yS4= found in database: true
2020-09-02 15:18:53.651 -04:00 [DBG] removing jxPjg2FZwkitIkNob5oAYUfcG2cSUBEhLQ2t5Xd5yS4= persisted grant from database
2020-09-02 15:18:53.654 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-02 15:18:53.655 -04:00 [DBG] Validation of authorization code token request success
2020-09-02 15:18:53.655 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"jFMBdOqlFzkdblA56r0sr60juiXL2xhPSK1VWApbklo","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"jFMBdOqlFzkdblA56r0sr60juiXL2xhPSK1VWApbklo","redirect_uri":"https://localhost:4200","code_verifier":"YlpXeUcxRnZuTG1tSXNGSW40U2pMUDlkRXhvT09aWGg2eGN0YXM2bGJFVXZs","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-09-02 15:18:53.662 -04:00 [DBG] angular_spa found in database: true
2020-09-02 15:18:53.662 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-02 15:18:53.663 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-09-02 15:18:53.665 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-02 15:18:53.665 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-09-02 15:18:53.665 -04:00 [DBG] Getting claims for access token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-09-02 15:18:53.674 -04:00 [DBG] angular_spa found in database: true
2020-09-02 15:18:53.674 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-02 15:18:53.675 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-09-02 15:18:53.676 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-02 15:18:53.676 -04:00 [DBG] Getting claims for identity token for subject: 067f2ddb-3f22-4cea-a1bd-0b9a57597188 and client: angular_spa
2020-09-02 15:18:53.676 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-02 15:18:53.677 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Employee Profile SPA","RedirectUri":null,"Endpoint":"Token","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","Scopes":"openid profile email app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****NWWQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****TaEg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000b2-0005-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-02T19:18:53.0000000Z","ProcessId":9424,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-02 15:18:53.677 -04:00 [DBG] Token request success.
2020-09-02 15:18:53.684 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-02 15:18:53.686 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-02 15:18:53.686 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-02 15:18:53.686 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-02 15:18:53.686 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-02 15:18:53.686 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-02 15:18:53.686 -04:00 [DBG] Rendering check session result
2020-09-02 15:18:53.688 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-02 15:18:53.689 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-02 15:18:53.689 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-02 15:18:53.689 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-02 15:18:53.690 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-02 15:18:53.690 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-02 15:18:53.690 -04:00 [DBG] Start userinfo request
2020-09-02 15:18:53.690 -04:00 [DBG] Bearer token found in header
2020-09-02 15:18:53.698 -04:00 [DBG] angular_spa found in database: true
2020-09-02 15:18:53.698 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-02 15:18:53.705 -04:00 [DBG] angular_spa found in database: true
2020-09-02 15:18:53.705 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-02 15:18:53.706 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-02 15:18:53.706 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599074333,"exp":1599077933,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","auth_time":1599074331,"idp":"azuread","scope":["openid","profile","email","app.api.employeeprofile.read"],"amr":"external"},"$type":"TokenValidationLog"}
2020-09-02 15:18:53.707 -04:00 [DBG] Creating userinfo response
2020-09-02 15:18:53.707 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-09-02 15:18:53.707 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-09-02 15:18:53.708 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-09-02 15:18:53.708 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-02 15:18:53.708 -04:00 [DBG] Scopes in access token: openid profile email app.api.employeeprofile.read
2020-09-02 15:18:53.709 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-09-02 15:18:53.712 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username email email_verified
2020-09-02 15:18:53.712 -04:00 [DBG] End userinfo request
2020-09-02 22:08:51.650 -04:00 [INF] Starting host...
2020-09-02 22:08:52.574 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-02 22:08:52.658 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-02 22:08:52.658 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-02 22:08:52.658 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-02 22:08:52.658 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-02 22:08:52.658 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-02 22:08:52.658 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-02 22:08:52.841 -04:00 [DBG] Login Url: /Account/Login
2020-09-02 22:08:52.841 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-02 22:08:52.841 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-02 22:08:52.841 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-02 22:08:52.842 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-02 22:08:52.842 -04:00 [DBG] Error Url: /home/error
2020-09-02 22:08:52.842 -04:00 [DBG] Error Id Parameter: errorId
2020-09-02 22:08:57.550 -04:00 [DBG] 0 persisted grants found for 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-09-02 22:09:02.298 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-02 22:09:02.329 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-09-02 22:09:02.330 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-02 22:09:02.330 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-09-02 22:09:02.336 -04:00 [INF] {"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"8000007b-0006-fb00-b63f-84710c7967bb","TimeStamp":"2020-09-03T02:09:02.0000000Z","ProcessId":27132,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-09-02 22:09:12.209 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-09-02 22:09:14.373 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-09-02 22:09:14.744 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.com but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-02 22:09:14.830 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-09-02 22:09:14.876 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"-sTAuRxvwlBQSKV1V1HZB22LDQBseN4McuwSAsPe-aw","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000be-0002-fb00-b63f-84710c7967bb","TimeStamp":"2020-09-03T02:09:14.0000000Z","ProcessId":27132,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-02 22:09:14.880 -04:00 [DBG] Augmenting SignInContext
2020-09-02 22:09:14.881 -04:00 [DBG] Adding amr claim with value: external
2020-09-02 22:09:14.882 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-02 22:09:14.882 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-02 22:09:14.888 -04:00 [DBG] 0 persisted grants found for 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-09-02 22:09:22.243 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-02 22:09:22.245 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-09-02 22:09:22.246 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-02 22:09:22.246 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-09-02 22:09:22.246 -04:00 [INF] {"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"8000015c-0000-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-03T02:09:22.0000000Z","ProcessId":27132,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-09-02 22:09:41.445 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-09-02 22:09:42.602 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-09-02 22:13:18.723 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-09-02 22:13:21.459 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-09-02 22:13:36.057 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.com but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-02 22:13:36.060 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-09-02 22:13:36.078 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"-sTAuRxvwlBQSKV1V1HZB22LDQBseN4McuwSAsPe-aw","SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000cd-0005-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-03T02:13:36.0000000Z","ProcessId":27132,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-02 22:13:36.079 -04:00 [DBG] Augmenting SignInContext
2020-09-02 22:13:36.079 -04:00 [DBG] Adding amr claim with value: external
2020-09-02 22:13:36.080 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-02 22:13:36.080 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-02 22:13:36.088 -04:00 [DBG] 0 persisted grants found for 067f2ddb-3f22-4cea-a1bd-0b9a57597188
2020-09-02 22:13:46.066 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-02 22:13:46.068 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-09-02 22:13:46.068 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-02 22:13:46.068 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-09-02 22:13:46.068 -04:00 [INF] {"SubjectId":"067f2ddb-3f22-4cea-a1bd-0b9a57597188","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000162-0000-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-03T02:13:46.0000000Z","ProcessId":27132,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-09-02 23:08:52.620 -04:00 [INF] Removing 0 grants
2020-09-02 23:08:52.628 -04:00 [INF] Removing 0 device flow codes
2020-09-05 00:10:48.254 -04:00 [INF] Starting host...
2020-09-05 00:10:49.348 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-05 00:10:49.457 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-05 00:10:49.457 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-05 00:10:49.457 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-05 00:10:49.457 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-05 00:10:49.457 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-05 00:10:49.457 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-05 00:10:49.641 -04:00 [DBG] Login Url: /Account/Login
2020-09-05 00:10:49.643 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-05 00:10:49.643 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-05 00:10:49.643 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-05 00:10:49.643 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-05 00:10:49.643 -04:00 [DBG] Error Url: /home/error
2020-09-05 00:10:49.643 -04:00 [DBG] Error Id Parameter: errorId
2020-09-05 00:10:49.657 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-05 00:10:49.662 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-05 00:10:54.162 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-05 00:10:54.162 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-05 00:10:54.171 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-09-05 00:10:54.177 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-05 00:10:54.178 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-05 00:10:56.127 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-05 00:10:56.130 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-05 00:10:56.130 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-05 00:10:57.844 -04:00 [DBG] Augmenting SignInContext
2020-09-05 00:10:57.845 -04:00 [DBG] Adding idp claim with value: local
2020-09-05 00:10:57.845 -04:00 [DBG] Adding auth_time claim with value: 1599279057
2020-09-05 00:10:57.882 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-05 00:10:57.885 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-05 00:10:57.896 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000c9-0009-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-05T04:10:57.0000000Z","ProcessId":28680,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-05 00:10:57.959 -04:00 [DBG] 1 persisted grants found for 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-09-05 00:10:58.388 -04:00 [DBG] STSClientId found in database: true
2020-09-05 00:10:58.392 -04:00 [DBG] client configuration validation for client STSClientId succeeded.
2020-09-05 00:10:58.440 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-05 00:10:58.492 -04:00 [DBG] Found [] API scopes in database
2020-09-05 00:17:38.051 -04:00 [INF] Starting host...
2020-09-05 00:17:39.011 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-05 00:17:39.096 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-05 00:17:39.096 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-05 00:17:39.096 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-05 00:17:39.096 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-05 00:17:39.096 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-05 00:17:39.096 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-05 00:17:39.275 -04:00 [DBG] Login Url: /Account/Login
2020-09-05 00:17:39.276 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-05 00:17:39.276 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-05 00:17:39.276 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-05 00:17:39.276 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-05 00:17:39.276 -04:00 [DBG] Error Url: /home/error
2020-09-05 00:17:39.276 -04:00 [DBG] Error Id Parameter: errorId
2020-09-05 00:17:42.090 -04:00 [DBG] 0 persisted grants found for 9db81902-2fd0-4c04-9fb4-4aa7f396f90c
2020-09-05 00:17:48.924 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-05 00:17:48.950 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-09-05 00:17:48.950 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-05 00:17:48.951 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-09-05 00:17:48.957 -04:00 [INF] {"SubjectId":"9db81902-2fd0-4c04-9fb4-4aa7f396f90c","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"800000d5-0005-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-05T04:17:48.0000000Z","ProcessId":18428,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-09-05 00:17:51.592 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-09-05 00:17:53.389 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-05 00:17:53.736 -04:00 [DBG] Augmenting SignInContext
2020-09-05 00:17:53.736 -04:00 [DBG] Adding idp claim with value: local
2020-09-05 00:17:53.736 -04:00 [DBG] Adding auth_time claim with value: 1599279473
2020-09-05 00:17:53.739 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-05 00:17:53.756 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000e6-0002-fb00-b63f-84710c7967bb","TimeStamp":"2020-09-05T04:17:53.0000000Z","ProcessId":18428,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-05 00:17:53.797 -04:00 [DBG] 1 persisted grants found for 34903727-3397-4344-9875-47f5e36788d3
2020-09-05 00:17:54.705 -04:00 [DBG] STSClientId found in database: true
2020-09-05 00:17:54.709 -04:00 [DBG] client configuration validation for client STSClientId succeeded.
2020-09-05 00:17:54.783 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-05 00:17:54.840 -04:00 [DBG] Found [] API scopes in database
2020-09-05 00:18:03.461 -04:00 [DBG] 1 persisted grants found for 34903727-3397-4344-9875-47f5e36788d3
2020-09-05 00:18:03.626 -04:00 [DBG] STSClientId found in database: true
2020-09-05 00:18:03.626 -04:00 [DBG] client configuration validation for client STSClientId succeeded.
2020-09-05 00:18:03.648 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-05 00:18:03.660 -04:00 [DBG] Found [] API scopes in database
2020-09-07 21:43:07.868 -04:00 [INF] Starting host...
2020-09-07 21:43:09.537 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-07 21:43:09.650 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-07 21:43:09.650 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-07 21:43:09.650 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-07 21:43:09.650 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-07 21:43:09.650 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-07 21:43:09.650 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-07 21:43:09.882 -04:00 [DBG] Login Url: /Account/Login
2020-09-07 21:43:09.883 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-07 21:43:09.883 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-07 21:43:09.883 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-07 21:43:09.883 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-07 21:43:09.883 -04:00 [DBG] Error Url: /home/error
2020-09-07 21:43:09.883 -04:00 [DBG] Error Id Parameter: errorId
2020-09-07 21:43:09.900 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-07 21:43:09.904 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-07 21:43:15.907 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-07 21:43:15.908 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-07 21:43:15.917 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-09-07 21:43:15.924 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-07 21:43:15.924 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-07 21:45:12.329 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-07 21:45:12.330 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-07 21:45:12.618 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-09-07 21:46:41.958 -04:00 [INF] Starting host...
2020-09-07 21:46:42.952 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-07 21:46:43.028 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-07 21:46:43.028 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-07 21:46:43.028 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-07 21:46:43.028 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-07 21:46:43.028 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-07 21:46:43.028 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-07 21:46:43.192 -04:00 [DBG] Login Url: /Account/Login
2020-09-07 21:46:43.193 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-07 21:46:43.193 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-07 21:46:43.193 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-07 21:46:43.193 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-07 21:46:43.193 -04:00 [DBG] Error Url: /home/error
2020-09-07 21:46:43.193 -04:00 [DBG] Error Id Parameter: errorId
2020-09-07 21:47:00.818 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-09-07 21:47:02.652 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-09-07 21:47:03.411 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-07 21:47:03.514 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-09-07 21:53:43.796 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"e440fc1c-88f8-4b66-ba65-78b602562236","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000006-0000-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-08T01:53:43.0000000Z","ProcessId":8608,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-07 21:53:43.850 -04:00 [DBG] Augmenting SignInContext
2020-09-07 21:53:43.850 -04:00 [DBG] Adding amr claim with value: external
2020-09-07 21:53:43.854 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-07 21:53:43.855 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-07 21:53:43.920 -04:00 [DBG] 0 persisted grants found for e440fc1c-88f8-4b66-ba65-78b602562236
2020-09-07 22:03:43.945 -04:00 [INF] Starting host...
2020-09-07 22:03:44.957 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-07 22:03:45.037 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-07 22:03:45.037 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-07 22:03:45.037 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-07 22:03:45.037 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-07 22:03:45.037 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-07 22:03:45.037 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-07 22:03:45.207 -04:00 [DBG] Login Url: /Account/Login
2020-09-07 22:03:45.208 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-07 22:03:45.208 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-07 22:03:45.208 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-07 22:03:45.208 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-07 22:03:45.208 -04:00 [DBG] Error Url: /home/error
2020-09-07 22:03:45.208 -04:00 [DBG] Error Id Parameter: errorId
2020-09-07 22:03:48.270 -04:00 [DBG] 0 persisted grants found for e440fc1c-88f8-4b66-ba65-78b602562236
2020-09-07 22:03:54.687 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-07 22:03:54.716 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-09-07 22:03:54.716 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-07 22:03:54.717 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-09-07 22:03:54.722 -04:00 [INF] {"SubjectId":"e440fc1c-88f8-4b66-ba65-78b602562236","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000004-0001-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-08T02:03:54.0000000Z","ProcessId":816,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-09-07 22:04:00.163 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-09-07 22:04:03.557 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-09-07 22:05:40.908 -04:00 [INF] Starting host...
2020-09-07 22:05:41.667 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-07 22:05:41.745 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-07 22:05:41.745 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-07 22:05:41.745 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-07 22:05:41.745 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-07 22:05:41.745 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-07 22:05:41.745 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-07 22:05:41.908 -04:00 [DBG] Login Url: /Account/Login
2020-09-07 22:05:41.909 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-07 22:05:41.909 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-07 22:05:41.909 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-07 22:05:41.909 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-07 22:05:41.909 -04:00 [DBG] Error Url: /home/error
2020-09-07 22:05:41.909 -04:00 [DBG] Error Id Parameter: errorId
2020-09-07 22:05:43.745 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-09-07 22:05:45.349 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-09-07 22:06:25.516 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.com but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-07 22:06:25.604 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-09-07 22:07:28.717 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"-sTAuRxvwlBQSKV1V1HZB22LDQBseN4McuwSAsPe-aw","SubjectId":"e9c2cb01-f90b-4b79-8e83-9a66a6b59d6b","DisplayName":"Nguyen, Fuji D","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000002-0005-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-08T02:07:28.0000000Z","ProcessId":13296,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-07 22:07:28.735 -04:00 [DBG] Augmenting SignInContext
2020-09-07 22:07:28.735 -04:00 [DBG] Adding amr claim with value: external
2020-09-07 22:07:28.737 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-07 22:07:28.739 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-07 22:07:28.806 -04:00 [DBG] 0 persisted grants found for e9c2cb01-f90b-4b79-8e83-9a66a6b59d6b
2020-09-07 22:44:16.398 -04:00 [INF] Starting host...
2020-09-07 22:44:17.266 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-07 22:44:17.347 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-07 22:44:17.347 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-07 22:44:17.347 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-07 22:44:17.347 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-07 22:44:17.347 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-07 22:44:17.347 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-07 22:44:17.519 -04:00 [DBG] Login Url: /Account/Login
2020-09-07 22:44:17.520 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-07 22:44:17.520 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-07 22:44:17.520 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-07 22:44:17.520 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-07 22:44:17.520 -04:00 [DBG] Error Url: /home/error
2020-09-07 22:44:17.520 -04:00 [DBG] Error Id Parameter: errorId
2020-09-07 22:44:20.054 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-09-07 22:44:24.022 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-09-07 22:44:25.156 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-07 22:44:25.248 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-09-07 22:45:18.303 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"403339fc-b328-4a17-881e-93ec1aa64a6c","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000008-0000-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-08T02:45:18.0000000Z","ProcessId":19636,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-07 22:45:18.321 -04:00 [DBG] Augmenting SignInContext
2020-09-07 22:45:18.321 -04:00 [DBG] Adding amr claim with value: external
2020-09-07 22:45:18.324 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-07 22:45:18.326 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-07 22:45:18.392 -04:00 [DBG] 0 persisted grants found for 403339fc-b328-4a17-881e-93ec1aa64a6c
2020-09-07 22:54:19.541 -04:00 [INF] Starting host...
2020-09-07 22:54:21.119 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-07 22:54:21.277 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-07 22:54:21.277 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-07 22:54:21.277 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-07 22:54:21.277 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-07 22:54:21.277 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-07 22:54:21.277 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-07 22:54:21.514 -04:00 [DBG] Login Url: /Account/Login
2020-09-07 22:54:21.515 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-07 22:54:21.515 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-07 22:54:21.515 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-07 22:54:21.515 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-07 22:54:21.515 -04:00 [DBG] Error Url: /home/error
2020-09-07 22:54:21.515 -04:00 [DBG] Error Id Parameter: errorId
2020-09-07 22:54:24.608 -04:00 [DBG] 0 persisted grants found for 403339fc-b328-4a17-881e-93ec1aa64a6c
2020-09-07 22:54:32.449 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-07 22:54:32.476 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-09-07 22:54:32.477 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-07 22:54:32.477 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-09-07 22:54:32.483 -04:00 [INF] {"SubjectId":"403339fc-b328-4a17-881e-93ec1aa64a6c","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000003-0003-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-08T02:54:32.0000000Z","ProcessId":19524,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-09-07 22:54:35.666 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-09-07 22:54:37.345 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-09-07 22:55:00.586 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.com but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-07 22:55:00.697 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-09-07 22:59:01.775 -04:00 [INF] Starting host...
2020-09-07 22:59:03.257 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-07 22:59:03.407 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-07 22:59:03.407 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-07 22:59:03.407 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-07 22:59:03.408 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-07 22:59:03.408 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-07 22:59:03.408 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-07 22:59:03.649 -04:00 [DBG] Login Url: /Account/Login
2020-09-07 22:59:03.650 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-07 22:59:03.650 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-07 22:59:03.650 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-07 22:59:03.650 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-07 22:59:03.650 -04:00 [DBG] Error Url: /home/error
2020-09-07 22:59:03.650 -04:00 [DBG] Error Id Parameter: errorId
2020-09-07 22:59:05.221 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-09-07 22:59:06.605 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-09-07 22:59:10.200 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.com but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-07 22:59:10.321 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-09-07 23:05:49.738 -04:00 [INF] Starting host...
2020-09-07 23:05:50.609 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-07 23:05:50.688 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-07 23:05:50.688 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-07 23:05:50.688 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-07 23:05:50.688 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-07 23:05:50.688 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-07 23:05:50.688 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-07 23:05:50.858 -04:00 [DBG] Login Url: /Account/Login
2020-09-07 23:05:50.859 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-07 23:05:50.859 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-07 23:05:50.859 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-07 23:05:50.859 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-07 23:05:50.859 -04:00 [DBG] Error Url: /home/error
2020-09-07 23:05:50.859 -04:00 [DBG] Error Id Parameter: errorId
2020-09-07 23:06:07.848 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-09-07 23:06:09.013 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-09-07 23:06:17.504 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.com but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-07 23:06:17.598 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-09-07 23:07:00.401 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"-sTAuRxvwlBQSKV1V1HZB22LDQBseN4McuwSAsPe-aw","SubjectId":"71d4bc7b-9589-4ef5-811a-70d73857fbc8","DisplayName":"Nguyen, Fuji D","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000012-0004-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-08T03:07:00.0000000Z","ProcessId":18064,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-07 23:07:00.444 -04:00 [DBG] Augmenting SignInContext
2020-09-07 23:07:00.444 -04:00 [DBG] Adding amr claim with value: external
2020-09-07 23:07:00.447 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-07 23:07:00.448 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-07 23:07:00.512 -04:00 [DBG] 0 persisted grants found for 71d4bc7b-9589-4ef5-811a-70d73857fbc8
2020-09-07 23:13:12.859 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-07 23:13:12.874 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-09-07 23:13:12.874 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-07 23:13:12.874 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-09-07 23:13:12.875 -04:00 [INF] {"SubjectId":"71d4bc7b-9589-4ef5-811a-70d73857fbc8","DisplayName":"Nguyen, Fuji D","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"8000001a-0008-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-08T03:13:12.0000000Z","ProcessId":18064,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-09-07 23:13:15.939 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-09-07 23:13:17.113 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-09-07 23:13:21.020 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.com but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-07 23:13:21.022 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-09-07 23:13:21.451 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"-sTAuRxvwlBQSKV1V1HZB22LDQBseN4McuwSAsPe-aw","SubjectId":"71d4bc7b-9589-4ef5-811a-70d73857fbc8","DisplayName":"Nguyen, Fuji D","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"8000000e-000a-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-08T03:13:21.0000000Z","ProcessId":18064,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-07 23:13:21.451 -04:00 [DBG] Augmenting SignInContext
2020-09-07 23:13:21.451 -04:00 [DBG] Adding amr claim with value: external
2020-09-07 23:13:21.452 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-07 23:13:21.452 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-07 23:13:21.469 -04:00 [DBG] 0 persisted grants found for 71d4bc7b-9589-4ef5-811a-70d73857fbc8
2020-09-07 23:13:28.833 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-07 23:13:28.835 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-09-07 23:13:28.835 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-07 23:13:28.835 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-09-07 23:13:28.835 -04:00 [INF] {"SubjectId":"71d4bc7b-9589-4ef5-811a-70d73857fbc8","DisplayName":"Nguyen, Fuji D","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000016-0002-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-08T03:13:28.0000000Z","ProcessId":18064,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-09-07 23:31:02.520 -04:00 [INF] Starting host...
2020-09-07 23:31:03.352 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-07 23:31:03.435 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-07 23:31:03.435 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-07 23:31:03.435 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-07 23:31:03.435 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-07 23:31:03.435 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-07 23:31:03.435 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-07 23:31:03.609 -04:00 [DBG] Login Url: /Account/Login
2020-09-07 23:31:03.610 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-07 23:31:03.610 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-07 23:31:03.610 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-07 23:31:03.610 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-07 23:31:03.610 -04:00 [DBG] Error Url: /home/error
2020-09-07 23:31:03.610 -04:00 [DBG] Error Id Parameter: errorId
2020-09-07 23:31:06.241 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-09-07 23:31:07.652 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-09-07 23:31:10.881 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.com but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-07 23:31:10.974 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-09-07 23:31:42.491 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"-sTAuRxvwlBQSKV1V1HZB22LDQBseN4McuwSAsPe-aw","SubjectId":"16371f1f-9d5f-4e2c-bc92-b0ca9d3636d3","DisplayName":"Nguyen, Fuji D","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000002-0000-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-08T03:31:42.0000000Z","ProcessId":10680,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-07 23:31:42.508 -04:00 [DBG] Augmenting SignInContext
2020-09-07 23:31:42.508 -04:00 [DBG] Adding amr claim with value: external
2020-09-07 23:31:42.510 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-07 23:31:42.512 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-07 23:31:42.574 -04:00 [DBG] 0 persisted grants found for 16371f1f-9d5f-4e2c-bc92-b0ca9d3636d3
2020-09-07 23:35:09.496 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-07 23:35:09.512 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-09-07 23:35:09.513 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-07 23:35:09.513 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-09-07 23:35:09.513 -04:00 [INF] {"SubjectId":"16371f1f-9d5f-4e2c-bc92-b0ca9d3636d3","DisplayName":"Nguyen, Fuji D","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"8000001a-0002-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-08T03:35:09.0000000Z","ProcessId":10680,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-09-07 23:35:33.055 -04:00 [INF] Starting host...
2020-09-07 23:35:33.830 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-07 23:35:33.907 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-07 23:35:33.907 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-07 23:35:33.907 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-07 23:35:33.907 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-07 23:35:33.907 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-07 23:35:33.908 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-07 23:35:34.071 -04:00 [DBG] Login Url: /Account/Login
2020-09-07 23:35:34.072 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-07 23:35:34.072 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-07 23:35:34.072 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-07 23:35:34.072 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-07 23:35:34.072 -04:00 [DBG] Error Url: /home/error
2020-09-07 23:35:34.072 -04:00 [DBG] Error Id Parameter: errorId
2020-09-07 23:35:36.531 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-09-07 23:35:38.258 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-09-07 23:36:03.532 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.com but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-07 23:36:03.621 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-09-07 23:36:04.815 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"-sTAuRxvwlBQSKV1V1HZB22LDQBseN4McuwSAsPe-aw","SubjectId":"16371f1f-9d5f-4e2c-bc92-b0ca9d3636d3","DisplayName":"Nguyen, Fuji D","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"8000001c-0002-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-08T03:36:04.0000000Z","ProcessId":15972,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-07 23:36:04.834 -04:00 [DBG] Augmenting SignInContext
2020-09-07 23:36:04.835 -04:00 [DBG] Adding amr claim with value: external
2020-09-07 23:36:04.837 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-07 23:36:04.839 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-07 23:36:04.899 -04:00 [DBG] 0 persisted grants found for 16371f1f-9d5f-4e2c-bc92-b0ca9d3636d3
2020-09-09 00:00:07.562 -04:00 [INF] Starting host...
2020-09-09 00:00:10.004 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-09 00:00:10.186 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-09 00:00:10.186 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-09 00:00:10.186 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-09 00:00:10.186 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-09 00:00:10.186 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-09 00:00:10.186 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-09 00:00:10.478 -04:00 [DBG] Login Url: /Account/Login
2020-09-09 00:00:10.479 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-09 00:00:10.479 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-09 00:00:10.479 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-09 00:00:10.479 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-09 00:00:10.479 -04:00 [DBG] Error Url: /home/error
2020-09-09 00:00:10.480 -04:00 [DBG] Error Id Parameter: errorId
2020-09-09 00:00:30.897 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-09 00:00:31.173 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 00:00:31.187 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 00:00:31.187 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 00:00:31.189 -04:00 [DBG] Start discovery request
2020-09-09 00:00:32.124 -04:00 [DBG] Origin https://localhost:4200 is allowed: false
2020-09-09 00:00:32.126 -04:00 [WRN] CorsPolicyService did not allow origin: https://localhost:4200
2020-09-09 00:00:32.127 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 00:00:32.128 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 00:00:32.128 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 00:00:32.128 -04:00 [DBG] Start discovery request
2020-09-09 00:00:32.406 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api"] as all scopes in database
2020-09-09 00:00:32.406 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api"] as all scopes in database
2020-09-09 00:00:32.492 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 00:00:32.493 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 00:00:32.493 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 00:00:32.494 -04:00 [DBG] Start key discovery request
2020-09-09 00:03:22.602 -04:00 [INF] Starting host...
2020-09-09 00:03:22.913 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-09 00:03:22.984 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-09 00:03:22.985 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-09 00:03:22.985 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-09 00:03:22.985 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-09 00:03:22.985 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-09 00:03:22.985 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-09 00:03:23.094 -04:00 [DBG] Login Url: /Account/Login
2020-09-09 00:03:23.095 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-09 00:03:23.095 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-09 00:03:23.095 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-09 00:03:23.095 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-09 00:03:23.095 -04:00 [DBG] Error Url: /home/error
2020-09-09 00:03:23.095 -04:00 [DBG] Error Id Parameter: errorId
2020-09-09 00:03:40.203 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-09 00:03:48.410 -04:00 [DBG] Origin https://localhost:4200 is allowed: false
2020-09-09 00:03:48.412 -04:00 [WRN] CorsPolicyService did not allow origin: https://localhost:4200
2020-09-09 00:03:48.413 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 00:03:48.423 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 00:03:48.424 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 00:03:48.424 -04:00 [DBG] Start discovery request
2020-09-09 00:03:48.739 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api"] as all scopes in database
2020-09-09 00:13:33.327 -04:00 [INF] Starting host...
2020-09-09 00:13:34.239 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-09 00:13:34.328 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-09 00:13:34.328 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-09 00:13:34.328 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-09 00:13:34.328 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-09 00:13:34.328 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-09 00:13:34.328 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-09 00:13:34.481 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-09 00:13:34.542 -04:00 [DBG] Login Url: /Account/Login
2020-09-09 00:13:34.542 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-09 00:13:34.542 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-09 00:13:34.542 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-09 00:13:34.542 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-09 00:13:34.542 -04:00 [DBG] Error Url: /home/error
2020-09-09 00:13:34.542 -04:00 [DBG] Error Id Parameter: errorId
2020-09-09 00:13:35.658 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 00:13:35.660 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 00:13:35.662 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 00:13:35.673 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 00:13:35.674 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 00:13:35.674 -04:00 [DBG] Start discovery request
2020-09-09 00:13:36.082 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 00:13:36.135 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-09 00:13:36.186 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 00:13:36.186 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 00:13:36.189 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 00:13:36.190 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 00:13:36.190 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 00:13:36.191 -04:00 [DBG] Start key discovery request
2020-09-09 00:13:37.232 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-09 00:13:37.235 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-09 00:13:37.235 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-09 00:13:37.237 -04:00 [DBG] Start authorize request
2020-09-09 00:13:37.241 -04:00 [DBG] No user present in authorize request
2020-09-09 00:13:37.242 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 00:13:37.688 -04:00 [DBG] angular_spa found in database: true
2020-09-09 00:13:37.692 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 00:13:37.704 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"angular_spa","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"aWZMMklmQmlySW1ZT2dUaHVUaXBNQjVHaWFkdURTYXhPWkFaUXY2VnExSExX","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"jM6CYmIpV7e30SgN6vbIZ_y6bY06RhuWpLr_FHyqPzA","code_challenge_method":"S256","nonce":"aWZMMklmQmlySW1ZT2dUaHVUaXBNQjVHaWFkdURTYXhPWkFaUXY2VnExSExX","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 00:13:37.708 -04:00 [ERR] Request validation failed
2020-09-09 00:13:37.708 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"angular_spa","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"aWZMMklmQmlySW1ZT2dUaHVUaXBNQjVHaWFkdURTYXhPWkFaUXY2VnExSExX","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"jM6CYmIpV7e30SgN6vbIZ_y6bY06RhuWpLr_FHyqPzA","code_challenge_method":"S256","nonce":"aWZMMklmQmlySW1ZT2dUaHVUaXBNQjVHaWFkdURTYXhPWkFaUXY2VnExSExX","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 00:13:37.712 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"angular_spa","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000012-0009-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-09T04:13:37.0000000Z","ProcessId":28608,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-09 00:13:46.937 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-09 00:13:46.941 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-09 00:13:46.941 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-09 00:13:46.942 -04:00 [DBG] Start authorize request
2020-09-09 00:13:46.942 -04:00 [DBG] No user present in authorize request
2020-09-09 00:13:46.942 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 00:13:47.104 -04:00 [DBG] angular_spa found in database: true
2020-09-09 00:13:47.104 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 00:13:47.105 -04:00 [DBG] Checking for PKCE parameters
2020-09-09 00:13:47.183 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-09-09 00:13:47.283 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 00:13:47.302 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-09-09 00:13:47.314 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 00:13:47.319 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-09 00:13:47.319 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"angular_spa","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email app.api.employeeprofile.read","State":"Q0J3ckFKNEtNbnpBVjJuZXh1Qm5zaXBUTGZYbmJXTmxOdkpoY09ZbE5JamlQsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"Q0J3ckFKNEtNbnpBVjJuZXh1Qm5zaXBUTGZYbmJXTmxOdkpoY09ZbE5JamlQ","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"Q0J3ckFKNEtNbnpBVjJuZXh1Qm5zaXBUTGZYbmJXTmxOdkpoY09ZbE5JamlQsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email app.api.employeeprofile.read","code_challenge":"wuq-bP6IhNG9G9jiQgC8wElLmGGnbudJCMK6sENgKOg","code_challenge_method":"S256","nonce":"Q0J3ckFKNEtNbnpBVjJuZXh1Qm5zaXBUTGZYbmJXTmxOdkpoY09ZbE5JamlQ"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 00:13:47.321 -04:00 [INF] Showing login: User is not authenticated
2020-09-09 00:13:47.338 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 00:13:47.469 -04:00 [DBG] angular_spa found in database: true
2020-09-09 00:13:47.469 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 00:13:47.469 -04:00 [DBG] Checking for PKCE parameters
2020-09-09 00:13:47.481 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-09-09 00:13:47.497 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 00:13:47.515 -04:00 [DBG] Found ["openid","profile","email"] identity scopes in database
2020-09-09 00:13:47.535 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 00:13:47.536 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-09 00:13:47.684 -04:00 [DBG] angular_spa found in database: true
2020-09-09 00:13:47.684 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 00:14:08.352 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-09 00:14:08.362 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-09 00:14:08.362 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-09 00:14:08.362 -04:00 [DBG] Start authorize request
2020-09-09 00:14:08.362 -04:00 [DBG] No user present in authorize request
2020-09-09 00:14:08.362 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 00:14:08.550 -04:00 [DBG] angular_spa found in database: true
2020-09-09 00:14:08.550 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 00:14:08.550 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"angular_spa","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"amF-RFQzWVJWSDZBaXJjcVNlaEZzT21aQ2lGaVdJSS01ai5sRGVRMnBLSlVM","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"FIgu1PFRv0s-68K_nvZwRFy-RQ8zObHGMx_8jMIoLPw","code_challenge_method":"S256","nonce":"amF-RFQzWVJWSDZBaXJjcVNlaEZzT21aQ2lGaVdJSS01ai5sRGVRMnBLSlVM","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 00:14:08.550 -04:00 [ERR] Request validation failed
2020-09-09 00:14:08.551 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"angular_spa","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"amF-RFQzWVJWSDZBaXJjcVNlaEZzT21aQ2lGaVdJSS01ai5sRGVRMnBLSlVM","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"FIgu1PFRv0s-68K_nvZwRFy-RQ8zObHGMx_8jMIoLPw","code_challenge_method":"S256","nonce":"amF-RFQzWVJWSDZBaXJjcVNlaEZzT21aQ2lGaVdJSS01ai5sRGVRMnBLSlVM","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 00:14:08.551 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"angular_spa","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000017-0004-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-09T04:14:08.0000000Z","ProcessId":28608,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-09 00:14:15.085 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-09 00:14:15.100 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 00:14:15.100 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 00:14:15.101 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 00:14:15.101 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 00:14:15.101 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 00:14:15.101 -04:00 [DBG] Start discovery request
2020-09-09 00:14:15.131 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 00:14:15.135 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-09 00:14:15.149 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 00:14:15.149 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 00:14:15.149 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 00:14:15.149 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 00:14:15.149 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 00:14:15.149 -04:00 [DBG] Start key discovery request
2020-09-09 00:14:16.159 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-09 00:14:16.160 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-09 00:14:16.160 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-09 00:14:16.160 -04:00 [DBG] Start authorize request
2020-09-09 00:14:16.161 -04:00 [DBG] No user present in authorize request
2020-09-09 00:14:16.161 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 00:14:16.280 -04:00 [DBG] angular_spa found in database: true
2020-09-09 00:14:16.280 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 00:14:16.281 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"angular_spa","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"UUtYQTE3QnVKZUpaVUhrcU55aFZNSFU3ZHhsWXZXSzhvNUwxZ0MwQ1lEZmFE","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"dNuAW6MFJE8bC8ofONlUqG_gVkThkJ-95lZZPTNVgrs","code_challenge_method":"S256","nonce":"UUtYQTE3QnVKZUpaVUhrcU55aFZNSFU3ZHhsWXZXSzhvNUwxZ0MwQ1lEZmFE","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 00:14:16.281 -04:00 [ERR] Request validation failed
2020-09-09 00:14:16.281 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"angular_spa","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"UUtYQTE3QnVKZUpaVUhrcU55aFZNSFU3ZHhsWXZXSzhvNUwxZ0MwQ1lEZmFE","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"dNuAW6MFJE8bC8ofONlUqG_gVkThkJ-95lZZPTNVgrs","code_challenge_method":"S256","nonce":"UUtYQTE3QnVKZUpaVUhrcU55aFZNSFU3ZHhsWXZXSzhvNUwxZ0MwQ1lEZmFE","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 00:14:16.281 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"angular_spa","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000000e-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-09T04:14:16.0000000Z","ProcessId":28608,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-09 00:14:22.527 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-09 00:14:22.528 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-09 00:14:22.528 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-09 00:14:22.528 -04:00 [DBG] Start authorize request
2020-09-09 00:14:22.529 -04:00 [DBG] No user present in authorize request
2020-09-09 00:14:22.529 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 00:14:22.647 -04:00 [DBG] angular_spa found in database: true
2020-09-09 00:14:22.647 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 00:14:22.648 -04:00 [DBG] Checking for PKCE parameters
2020-09-09 00:14:22.663 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 00:14:22.691 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 00:14:22.708 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 00:14:22.719 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 00:14:22.719 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-09 00:14:22.719 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"angular_spa","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"VTFwV2xxUFJQUzBhV1VGNS5TSzF0TXFXWTN4dWkzeGJsMWNFY2VHRDM0TVhUsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"VTFwV2xxUFJQUzBhV1VGNS5TSzF0TXFXWTN4dWkzeGJsMWNFY2VHRDM0TVhU","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"VTFwV2xxUFJQUzBhV1VGNS5TSzF0TXFXWTN4dWkzeGJsMWNFY2VHRDM0TVhUsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"lwTyThMfbIe1fbpPXnevT14t3WPwswCtvymiJTL9RPA","code_challenge_method":"S256","nonce":"VTFwV2xxUFJQUzBhV1VGNS5TSzF0TXFXWTN4dWkzeGJsMWNFY2VHRDM0TVhU"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 00:14:22.720 -04:00 [INF] Showing login: User is not authenticated
2020-09-09 00:14:22.725 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 00:14:22.840 -04:00 [DBG] angular_spa found in database: true
2020-09-09 00:14:22.840 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 00:14:22.840 -04:00 [DBG] Checking for PKCE parameters
2020-09-09 00:14:22.852 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 00:14:22.864 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 00:14:22.877 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 00:14:22.890 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 00:14:22.890 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-09 00:14:23.004 -04:00 [DBG] angular_spa found in database: true
2020-09-09 00:14:23.005 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 00:14:24.532 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-09 00:14:24.556 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 00:14:24.674 -04:00 [DBG] angular_spa found in database: true
2020-09-09 00:14:24.674 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 00:14:24.674 -04:00 [DBG] Checking for PKCE parameters
2020-09-09 00:14:24.688 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 00:14:24.704 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 00:14:24.717 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 00:14:24.732 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 00:14:24.732 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-09 00:14:24.942 -04:00 [DBG] Augmenting SignInContext
2020-09-09 00:14:24.943 -04:00 [DBG] Adding idp claim with value: local
2020-09-09 00:14:24.943 -04:00 [DBG] Adding auth_time claim with value: 1599624864
2020-09-09 00:14:24.950 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-09 00:14:24.964 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000066-0000-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-09T04:14:24.0000000Z","ProcessId":28608,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-09 00:14:25.066 -04:00 [DBG] angular_spa found in database: true
2020-09-09 00:14:25.066 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 00:14:25.077 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-09-09 00:14:25.077 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-09-09 00:14:25.077 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-09-09 00:14:25.079 -04:00 [DBG] Start authorize callback request
2020-09-09 00:14:25.080 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-09 00:14:25.080 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 00:14:25.211 -04:00 [DBG] angular_spa found in database: true
2020-09-09 00:14:25.211 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 00:14:25.211 -04:00 [DBG] Checking for PKCE parameters
2020-09-09 00:14:25.227 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 00:14:25.243 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 00:14:25.254 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 00:14:25.263 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 00:14:25.263 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-09 00:14:25.263 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"angular_spa","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"VTFwV2xxUFJQUzBhV1VGNS5TSzF0TXFXWTN4dWkzeGJsMWNFY2VHRDM0TVhUsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"VTFwV2xxUFJQUzBhV1VGNS5TSzF0TXFXWTN4dWkzeGJsMWNFY2VHRDM0TVhU","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"q57lWbdJdiU9MRipFJBI0A","Raw":{"response_type":"code","client_id":"angular_spa","state":"VTFwV2xxUFJQUzBhV1VGNS5TSzF0TXFXWTN4dWkzeGJsMWNFY2VHRDM0TVhUsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"lwTyThMfbIe1fbpPXnevT14t3WPwswCtvymiJTL9RPA","code_challenge_method":"S256","nonce":"VTFwV2xxUFJQUzBhV1VGNS5TSzF0TXFXWTN4dWkzeGJsMWNFY2VHRDM0TVhU"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 00:14:25.311 -04:00 [DBG] eExdRFBRf1V3ruMQVqYpU2dH8/vcePOUe0XJ7DBcKbo= found in database: false
2020-09-09 00:14:25.311 -04:00 [DBG] user_consent grant with value: angular_spa|34903727-3397-4344-9875-47f5e36788d3 not found in store.
2020-09-09 00:14:25.312 -04:00 [DBG] Found no prior consent from consent store, consent is required
2020-09-09 00:14:25.312 -04:00 [INF] Showing consent: User has not yet consented
2020-09-09 00:14:25.327 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 00:14:25.442 -04:00 [DBG] angular_spa found in database: true
2020-09-09 00:14:25.442 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 00:14:25.442 -04:00 [DBG] Checking for PKCE parameters
2020-09-09 00:14:25.456 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 00:14:25.469 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 00:14:25.483 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 00:14:25.493 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 00:14:25.493 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-09 00:14:25.611 -04:00 [DBG] angular_spa found in database: true
2020-09-09 00:14:25.611 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 00:14:25.629 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 00:14:25.643 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 00:14:33.155 -04:00 [DBG] CORS request made for path: /Consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-09 00:14:33.168 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 00:14:33.293 -04:00 [DBG] angular_spa found in database: true
2020-09-09 00:14:33.293 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 00:14:33.293 -04:00 [DBG] Checking for PKCE parameters
2020-09-09 00:14:33.306 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 00:14:33.318 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 00:14:33.330 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 00:14:33.341 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 00:14:33.341 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-09 00:14:33.343 -04:00 [INF] {"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"angular_spa","RequestedScopes":["openid","profile","email","roles","app.api.employeeprofile.read"],"GrantedScopes":["roles","openid","profile","email","app.api.employeeprofile.read"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"80000024-0001-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-09T04:14:33.0000000Z","ProcessId":28608,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2020-09-09 00:14:33.467 -04:00 [DBG] angular_spa found in database: true
2020-09-09 00:14:33.467 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 00:14:33.494 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-09-09 00:14:33.494 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-09-09 00:14:33.494 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-09-09 00:14:33.494 -04:00 [DBG] Start authorize callback request
2020-09-09 00:14:33.499 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-09 00:14:33.499 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 00:14:33.608 -04:00 [DBG] angular_spa found in database: true
2020-09-09 00:14:33.608 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 00:14:33.608 -04:00 [DBG] Checking for PKCE parameters
2020-09-09 00:14:33.620 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 00:14:33.633 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 00:14:33.649 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 00:14:33.659 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 00:14:33.659 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-09 00:14:33.659 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"angular_spa","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"VTFwV2xxUFJQUzBhV1VGNS5TSzF0TXFXWTN4dWkzeGJsMWNFY2VHRDM0TVhUsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"VTFwV2xxUFJQUzBhV1VGNS5TSzF0TXFXWTN4dWkzeGJsMWNFY2VHRDM0TVhU","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"q57lWbdJdiU9MRipFJBI0A","Raw":{"response_type":"code","client_id":"angular_spa","state":"VTFwV2xxUFJQUzBhV1VGNS5TSzF0TXFXWTN4dWkzeGJsMWNFY2VHRDM0TVhUsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"lwTyThMfbIe1fbpPXnevT14t3WPwswCtvymiJTL9RPA","code_challenge_method":"S256","nonce":"VTFwV2xxUFJQUzBhV1VGNS5TSzF0TXFXWTN4dWkzeGJsMWNFY2VHRDM0TVhU"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 00:14:33.686 -04:00 [DBG] eExdRFBRf1V3ruMQVqYpU2dH8/vcePOUe0XJ7DBcKbo= found in database: false
2020-09-09 00:14:33.686 -04:00 [DBG] user_consent grant with value: angular_spa|34903727-3397-4344-9875-47f5e36788d3 not found in store.
2020-09-09 00:14:33.686 -04:00 [DBG] Found no prior consent from consent store, consent is required
2020-09-09 00:14:33.689 -04:00 [INF] User consented to scopes: ["roles","openid","profile","email","app.api.employeeprofile.read"]
2020-09-09 00:14:33.689 -04:00 [DBG] User indicated to remember consent for scopes: ["openid","profile","email","roles","app.api.employeeprofile.read"]
2020-09-09 00:14:33.690 -04:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-09 00:14:33.715 -04:00 [DBG] eExdRFBRf1V3ruMQVqYpU2dH8/vcePOUe0XJ7DBcKbo= not found in database
2020-09-09 00:14:33.856 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-09 00:14:33.877 -04:00 [DBG] G//ViAQDN0nbNJKbFjCSUC38PTVSvx8oNajkSMHX3oM= not found in database
2020-09-09 00:14:33.923 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"angular_spa","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****VY9Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000026-0001-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-09T04:14:33.0000000Z","ProcessId":28608,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-09 00:14:33.923 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"VTFwV2xxUFJQUzBhV1VGNS5TSzF0TXFXWTN4dWkzeGJsMWNFY2VHRDM0TVhUsemicolon%2Fbasics%2Fhome","Scope":"openid profile email roles app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-09 00:14:33.927 -04:00 [DBG] Augmenting SignInContext
2020-09-09 00:14:33.927 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-09 00:14:34.068 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-09 00:14:34.079 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 00:14:34.079 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 00:14:34.079 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 00:14:34.081 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 00:14:34.081 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 00:14:34.081 -04:00 [DBG] Start discovery request
2020-09-09 00:14:34.110 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 00:14:34.119 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-09 00:14:34.130 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 00:14:34.130 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 00:14:34.131 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 00:14:34.132 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 00:14:34.132 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 00:14:34.132 -04:00 [DBG] Start key discovery request
2020-09-09 00:14:35.146 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-09 00:14:35.160 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 00:14:35.160 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 00:14:35.160 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-09 00:14:35.162 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-09 00:14:35.162 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-09 00:14:35.164 -04:00 [DBG] Start token request.
2020-09-09 00:14:35.165 -04:00 [DBG] Start client validation
2020-09-09 00:14:35.167 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-09 00:14:35.168 -04:00 [DBG] Start parsing for secret in post body
2020-09-09 00:14:35.168 -04:00 [DBG] client id without secret found
2020-09-09 00:14:35.169 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-09 00:14:35.169 -04:00 [DBG] Secret id found: angular_spa
2020-09-09 00:14:35.293 -04:00 [DBG] angular_spa found in database: true
2020-09-09 00:14:35.293 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 00:14:35.294 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-09 00:14:35.294 -04:00 [DBG] Client validation success
2020-09-09 00:14:35.294 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000006c-0000-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-09T04:14:35.0000000Z","ProcessId":28608,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-09 00:14:35.296 -04:00 [DBG] Start token request validation
2020-09-09 00:14:35.298 -04:00 [DBG] Start validation of authorization code token request
2020-09-09 00:14:35.314 -04:00 [DBG] G//ViAQDN0nbNJKbFjCSUC38PTVSvx8oNajkSMHX3oM= found in database: true
2020-09-09 00:14:35.347 -04:00 [DBG] removing G//ViAQDN0nbNJKbFjCSUC38PTVSvx8oNajkSMHX3oM= persisted grant from database
2020-09-09 00:14:35.397 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-09 00:14:35.408 -04:00 [DBG] Validation of authorization code token request success
2020-09-09 00:14:35.411 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"angular_spa","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"KZEMpe35vmCwgLQ8Ri1tMlV9lCSWsNQb-84wxnDVY9Q","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"KZEMpe35vmCwgLQ8Ri1tMlV9lCSWsNQb-84wxnDVY9Q","redirect_uri":"https://localhost:4200","code_verifier":"S3paZFhFcXQuWHB1M353WWF3aXRpUVRSN0lBeGhNTURnYk5BSGwwTTN5Sk9D","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-09-09 00:14:35.525 -04:00 [DBG] angular_spa found in database: true
2020-09-09 00:14:35.526 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 00:14:35.540 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 00:14:35.554 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 00:14:35.560 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-09-09 00:14:35.561 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-09 00:14:35.827 -04:00 [DBG] angular_spa found in database: true
2020-09-09 00:14:35.827 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 00:14:35.842 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 00:14:35.856 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 00:14:35.860 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: angular_spa
2020-09-09 00:14:35.860 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-09 00:14:35.862 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"angular_spa","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****twog","$type":"Token"},{"TokenType":"access_token","TokenValue":"****xuKQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000006c-0000-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-09T04:14:35.0000000Z","ProcessId":28608,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-09 00:14:35.863 -04:00 [DBG] Token request success.
2020-09-09 00:14:35.873 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-09 00:14:35.875 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-09 00:14:35.876 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-09 00:14:35.876 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-09 00:14:35.876 -04:00 [DBG] Rendering check session result
2020-09-09 00:14:35.888 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 00:14:35.888 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 00:14:35.890 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-09 00:14:35.901 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 00:14:35.901 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 00:14:35.901 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-09 00:14:35.902 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-09 00:14:35.902 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-09 00:14:35.904 -04:00 [DBG] Start userinfo request
2020-09-09 00:14:35.905 -04:00 [DBG] Bearer token found in header
2020-09-09 00:14:36.046 -04:00 [DBG] angular_spa found in database: true
2020-09-09 00:14:36.047 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 00:14:36.160 -04:00 [DBG] angular_spa found in database: true
2020-09-09 00:14:36.160 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 00:14:36.174 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-09 00:14:36.175 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599624875,"exp":1599628475,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599624864,"idp":"local","scope":["roles","openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-09 00:14:36.179 -04:00 [DBG] Creating userinfo response
2020-09-09 00:14:36.182 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-09 00:14:36.182 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-09 00:14:36.201 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 00:14:36.202 -04:00 [DBG] Requested claim types: role sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-09 00:14:36.203 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-09 00:14:36.217 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 00:14:36.268 -04:00 [INF] Profile service returned the following claim types: sub name role preferred_username email email_verified
2020-09-09 00:14:36.268 -04:00 [DBG] End userinfo request
2020-09-09 00:15:38.885 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-09 00:15:38.885 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-09 00:15:38.885 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-09 00:15:38.885 -04:00 [DBG] Start authorize request
2020-09-09 00:15:38.885 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-09 00:15:38.885 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 00:15:39.007 -04:00 [DBG] angular_spa found in database: true
2020-09-09 00:15:39.007 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 00:15:39.007 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"angular_spa","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"VWdzVXpGWVdUNTEtdzk0dnN1eC4yNEFDNnVKcVZheExQblZhY3NIUkUuQW5j","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"oclVxQgT3ug7if03XMJeRUItdqccisRZkquoZKCk6xE","code_challenge_method":"S256","nonce":"VWdzVXpGWVdUNTEtdzk0dnN1eC4yNEFDNnVKcVZheExQblZhY3NIUkUuQW5j","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 00:15:39.007 -04:00 [ERR] Request validation failed
2020-09-09 00:15:39.007 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"angular_spa","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"VWdzVXpGWVdUNTEtdzk0dnN1eC4yNEFDNnVKcVZheExQblZhY3NIUkUuQW5j","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"oclVxQgT3ug7if03XMJeRUItdqccisRZkquoZKCk6xE","code_challenge_method":"S256","nonce":"VWdzVXpGWVdUNTEtdzk0dnN1eC4yNEFDNnVKcVZheExQblZhY3NIUkUuQW5j","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 00:15:39.008 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"angular_spa","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000006e-0000-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-09T04:15:39.0000000Z","ProcessId":28608,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-09 00:22:29.962 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 00:22:29.964 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 00:22:29.964 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 00:22:29.964 -04:00 [DBG] Start discovery request
2020-09-09 00:22:30.202 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 00:22:36.148 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-09 00:22:36.148 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-09 00:22:36.148 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-09 00:22:36.148 -04:00 [DBG] Start token request.
2020-09-09 00:22:36.148 -04:00 [DBG] Start client validation
2020-09-09 00:22:36.149 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-09 00:22:36.149 -04:00 [DBG] Start parsing for secret in post body
2020-09-09 00:22:36.149 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-09 00:22:36.149 -04:00 [DBG] Secret id found: t8agr5xKt4$3
2020-09-09 00:22:36.170 -04:00 [INF] {"ClientId":"t8agr5xKt4$3","Category":"Authentication","Name":"Client Authentication Failure","EventType":"Failure","Id":1011,"Message":"Unknown client","ActivityId":"80000019-0009-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-09T04:22:36.0000000Z","ProcessId":28608,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationFailureEvent"}
2020-09-09 00:22:36.170 -04:00 [ERR] No client with id 't8agr5xKt4$3' found. aborting
2020-09-09 00:24:24.647 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 00:24:24.647 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 00:24:24.647 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 00:24:24.647 -04:00 [DBG] Start discovery request
2020-09-09 00:24:24.679 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 00:24:24.707 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 00:24:24.707 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 00:24:24.707 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 00:24:24.707 -04:00 [DBG] Start key discovery request
2020-09-09 00:26:13.227 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 00:26:13.227 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 00:26:13.227 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 00:26:13.227 -04:00 [DBG] Start discovery request
2020-09-09 00:26:13.258 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 00:26:13.285 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 00:26:13.285 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 00:26:13.285 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 00:26:13.285 -04:00 [DBG] Start key discovery request
2020-09-09 00:27:14.849 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 00:27:14.849 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 00:27:14.849 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 00:27:14.850 -04:00 [DBG] Start discovery request
2020-09-09 00:27:14.913 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 00:27:26.087 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-09 00:27:26.094 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-09 00:27:26.094 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-09 00:27:26.094 -04:00 [DBG] Start token request.
2020-09-09 00:27:26.094 -04:00 [DBG] Start client validation
2020-09-09 00:27:26.094 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-09 00:27:26.094 -04:00 [DBG] Start parsing for secret in post body
2020-09-09 00:27:26.094 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-09 00:27:26.094 -04:00 [DBG] Secret id found: 4X=nNv?Sgu$T
2020-09-09 00:27:26.287 -04:00 [DBG] 4X=nNv?Sgu$T found in database: true
2020-09-09 00:27:26.287 -04:00 [DBG] client configuration validation for client 4X=nNv?Sgu$T succeeded.
2020-09-09 00:27:26.292 -04:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-09-09 00:27:26.292 -04:00 [DBG] Client validation success
2020-09-09 00:27:26.293 -04:00 [INF] {"ClientId":"4X=nNv?Sgu$T","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000023-0003-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-09T04:27:26.0000000Z","ProcessId":28608,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-09 00:27:26.293 -04:00 [DBG] Start token request validation
2020-09-09 00:27:26.294 -04:00 [DBG] Start client credentials token request validation
2020-09-09 00:27:26.310 -04:00 [DBG] Found [] identity scopes in database
2020-09-09 00:27:26.326 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 00:27:26.339 -04:00 [DBG] Found [] identity scopes in database
2020-09-09 00:27:26.353 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 00:27:26.354 -04:00 [DBG] 4X=nNv?Sgu$T credentials token request validation success
2020-09-09 00:27:26.354 -04:00 [INF] Token request validation success, {"ClientId":"4X=nNv?Sgu$T","ClientName":"Sample Client Credential","GrantType":"client_credentials","Scopes":"app.api.employeeprofile.read app.api.employeeprofile.write","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"4X=nNv?Sgu$T","client_secret":"***REDACTED***","grant_type":"client_credentials","scope":"app.api.employeeprofile.read app.api.employeeprofile.write"},"$type":"TokenRequestValidationLog"}
2020-09-09 00:27:26.355 -04:00 [DBG] Getting claims for access token for client: 4X=nNv?Sgu$T
2020-09-09 00:27:26.357 -04:00 [INF] {"ClientId":"4X=nNv?Sgu$T","ClientName":"Sample Client Credential","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"app.api.employeeprofile.read app.api.employeeprofile.write","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****avDg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000023-0003-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-09T04:27:26.0000000Z","ProcessId":28608,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-09 00:27:26.357 -04:00 [DBG] Token request success.
2020-09-09 21:00:51.462 -04:00 [INF] Starting host...
2020-09-09 21:00:52.071 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-09 21:00:52.155 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-09 21:00:52.155 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-09 21:00:52.155 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-09 21:00:52.155 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-09 21:00:52.155 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-09 21:00:52.155 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-09 21:00:52.275 -04:00 [DBG] Login Url: /Account/Login
2020-09-09 21:00:52.276 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-09 21:00:52.276 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-09 21:00:52.276 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-09 21:00:52.276 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-09 21:00:52.276 -04:00 [DBG] Error Url: /home/error
2020-09-09 21:00:52.276 -04:00 [DBG] Error Id Parameter: errorId
2020-09-09 21:01:36.064 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-09 21:01:37.108 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:01:37.110 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:01:37.111 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 21:01:37.123 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 21:01:37.123 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 21:01:37.125 -04:00 [DBG] Start discovery request
2020-09-09 21:01:37.498 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 21:01:37.554 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-09 21:01:37.589 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:01:37.590 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:01:37.590 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 21:01:37.590 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 21:01:37.591 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 21:01:37.591 -04:00 [DBG] Start key discovery request
2020-09-09 21:01:38.656 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-09 21:01:38.659 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-09 21:01:38.660 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-09 21:01:38.660 -04:00 [DBG] Start authorize request
2020-09-09 21:01:38.664 -04:00 [DBG] No user present in authorize request
2020-09-09 21:01:38.665 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 21:01:38.965 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:01:38.969 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:01:38.981 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"QlM1S1huT3FGYk5yMC1wZ1k3cTdzRjBUd2Fhb2x2VUlqeWZ5U0VtNS1nT2tN","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"AsEYA7sCz3uEfdte2OydL3J06iMxcrrEH2ZgblLlQV4","code_challenge_method":"S256","nonce":"QlM1S1huT3FGYk5yMC1wZ1k3cTdzRjBUd2Fhb2x2VUlqeWZ5U0VtNS1nT2tN","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 21:01:38.985 -04:00 [ERR] Request validation failed
2020-09-09 21:01:38.985 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"QlM1S1huT3FGYk5yMC1wZ1k3cTdzRjBUd2Fhb2x2VUlqeWZ5U0VtNS1nT2tN","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"AsEYA7sCz3uEfdte2OydL3J06iMxcrrEH2ZgblLlQV4","code_challenge_method":"S256","nonce":"QlM1S1huT3FGYk5yMC1wZ1k3cTdzRjBUd2Fhb2x2VUlqeWZ5U0VtNS1nT2tN","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 21:01:38.990 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000040-0008-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-10T01:01:38.0000000Z","ProcessId":19352,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-09 21:01:55.100 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-09 21:01:55.102 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-09 21:01:55.103 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-09 21:01:55.104 -04:00 [DBG] Start authorize request
2020-09-09 21:01:55.105 -04:00 [DBG] No user present in authorize request
2020-09-09 21:01:55.105 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 21:01:55.228 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:01:55.228 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:01:55.229 -04:00 [DBG] Checking for PKCE parameters
2020-09-09 21:01:55.281 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:01:55.334 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:01:55.352 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:01:55.368 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:01:55.371 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-09 21:01:55.371 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"en5mRUp1RHhfUlZQWS1nfkRBUHJqSFV2bEpJeE1venkteFhYfjRVUVV3V1VWsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"en5mRUp1RHhfUlZQWS1nfkRBUHJqSFV2bEpJeE1venkteFhYfjRVUVV3V1VW","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"en5mRUp1RHhfUlZQWS1nfkRBUHJqSFV2bEpJeE1venkteFhYfjRVUVV3V1VWsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"qS3ZeLAwsv2k3nfGWvmsZ3i1hzUsJ9qI7JkYO1H0Bfc","code_challenge_method":"S256","nonce":"en5mRUp1RHhfUlZQWS1nfkRBUHJqSFV2bEpJeE1venkteFhYfjRVUVV3V1VW"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 21:01:55.373 -04:00 [INF] Showing login: User is not authenticated
2020-09-09 21:01:55.389 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 21:01:55.504 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:01:55.504 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:01:55.504 -04:00 [DBG] Checking for PKCE parameters
2020-09-09 21:01:55.518 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:01:55.533 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:01:55.553 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:01:55.570 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:01:55.570 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-09 21:01:55.748 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:01:55.748 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:01:58.377 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-09 21:01:58.403 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 21:01:58.980 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:01:58.980 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:01:58.980 -04:00 [DBG] Checking for PKCE parameters
2020-09-09 21:01:58.995 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:01:59.119 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:01:59.133 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:01:59.263 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:01:59.263 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-09 21:02:00.056 -04:00 [DBG] Augmenting SignInContext
2020-09-09 21:02:00.057 -04:00 [DBG] Adding idp claim with value: local
2020-09-09 21:02:00.057 -04:00 [DBG] Adding auth_time claim with value: 1599699720
2020-09-09 21:02:00.065 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-09 21:02:00.197 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"8000002e-0001-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-10T01:02:00.0000000Z","ProcessId":19352,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-09 21:02:00.655 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:02:00.656 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:02:00.668 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-09-09 21:02:00.668 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-09-09 21:02:00.668 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-09-09 21:02:00.669 -04:00 [DBG] Start authorize callback request
2020-09-09 21:02:00.671 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-09 21:02:00.671 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 21:02:01.021 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:02:01.021 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:02:01.021 -04:00 [DBG] Checking for PKCE parameters
2020-09-09 21:02:01.033 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:02:01.044 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:02:01.060 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:02:01.074 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:02:01.074 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-09 21:02:01.074 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"en5mRUp1RHhfUlZQWS1nfkRBUHJqSFV2bEpJeE1venkteFhYfjRVUVV3V1VWsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"en5mRUp1RHhfUlZQWS1nfkRBUHJqSFV2bEpJeE1venkteFhYfjRVUVV3V1VW","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e88xLtFGRU4ODrrNkVmDOA","Raw":{"response_type":"code","client_id":"angular_spa","state":"en5mRUp1RHhfUlZQWS1nfkRBUHJqSFV2bEpJeE1venkteFhYfjRVUVV3V1VWsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"qS3ZeLAwsv2k3nfGWvmsZ3i1hzUsJ9qI7JkYO1H0Bfc","code_challenge_method":"S256","nonce":"en5mRUp1RHhfUlZQWS1nfkRBUHJqSFV2bEpJeE1venkteFhYfjRVUVV3V1VW"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 21:02:01.128 -04:00 [DBG] eExdRFBRf1V3ruMQVqYpU2dH8/vcePOUe0XJ7DBcKbo= found in database: true
2020-09-09 21:02:01.136 -04:00 [DBG] Consent found in consent store is same as current request, consent is not required
2020-09-09 21:02:01.138 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-09 21:02:01.169 -04:00 [DBG] KIUqG+tYH+p7lD/gdJ/P5d2G0a8iSQICzwuI2hU0cp0= not found in database
2020-09-09 21:02:01.294 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****_31U","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000016-0002-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-10T01:02:01.0000000Z","ProcessId":19352,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-09 21:02:01.294 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"en5mRUp1RHhfUlZQWS1nfkRBUHJqSFV2bEpJeE1venkteFhYfjRVUVV3V1VWsemicolon%2Fbasics%2Fhome","Scope":"openid profile email roles app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-09 21:02:01.298 -04:00 [DBG] Augmenting SignInContext
2020-09-09 21:02:01.299 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-09 21:02:01.398 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-09 21:02:01.446 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:02:01.446 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:02:01.446 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 21:02:01.446 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 21:02:01.446 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 21:02:01.447 -04:00 [DBG] Start discovery request
2020-09-09 21:02:01.478 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 21:02:01.481 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-09 21:02:01.494 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:02:01.494 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:02:01.494 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 21:02:01.495 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 21:02:01.495 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 21:02:01.495 -04:00 [DBG] Start key discovery request
2020-09-09 21:02:02.504 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-09 21:02:02.517 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:02:02.517 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:02:02.517 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-09 21:02:02.520 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-09 21:02:02.520 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-09 21:02:02.521 -04:00 [DBG] Start token request.
2020-09-09 21:02:02.522 -04:00 [DBG] Start client validation
2020-09-09 21:02:02.525 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-09 21:02:02.525 -04:00 [DBG] Start parsing for secret in post body
2020-09-09 21:02:02.526 -04:00 [DBG] client id without secret found
2020-09-09 21:02:02.526 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-09 21:02:02.526 -04:00 [DBG] Secret id found: angular_spa
2020-09-09 21:02:02.713 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:02:02.713 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:02:02.714 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-09 21:02:02.714 -04:00 [DBG] Client validation success
2020-09-09 21:02:02.715 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000003e-000a-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-10T01:02:02.0000000Z","ProcessId":19352,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-09 21:02:02.716 -04:00 [DBG] Start token request validation
2020-09-09 21:02:02.718 -04:00 [DBG] Start validation of authorization code token request
2020-09-09 21:02:02.733 -04:00 [DBG] KIUqG+tYH+p7lD/gdJ/P5d2G0a8iSQICzwuI2hU0cp0= found in database: true
2020-09-09 21:02:02.760 -04:00 [DBG] removing KIUqG+tYH+p7lD/gdJ/P5d2G0a8iSQICzwuI2hU0cp0= persisted grant from database
2020-09-09 21:02:02.816 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-09 21:02:02.829 -04:00 [DBG] Validation of authorization code token request success
2020-09-09 21:02:02.831 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"QTg9mmjIyEz2ioQBz9aAYC7uepxiAP7I1AeVwsV_31U","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"QTg9mmjIyEz2ioQBz9aAYC7uepxiAP7I1AeVwsV_31U","redirect_uri":"https://localhost:4200","code_verifier":"ODZmYW9YfmFraG00c2YyOWEyd35YZW02TldRNkF2aVFjRU5MdHQwdzNTTVFY","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-09-09 21:02:02.947 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:02:02.947 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:02:02.960 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:02:02.974 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:02:02.981 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-09-09 21:02:02.981 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-09 21:02:03.198 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:02:03.198 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:02:03.289 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:02:03.302 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:02:03.305 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: angular_spa
2020-09-09 21:02:03.306 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-09 21:02:03.308 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****5GTg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****vrHg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000003e-000a-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-10T01:02:03.0000000Z","ProcessId":19352,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-09 21:02:03.308 -04:00 [DBG] Token request success.
2020-09-09 21:02:03.320 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-09 21:02:03.322 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-09 21:02:03.323 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-09 21:02:03.323 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-09 21:02:03.323 -04:00 [DBG] Rendering check session result
2020-09-09 21:02:03.336 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:02:03.336 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:02:03.339 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-09 21:02:03.352 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:02:03.352 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:02:03.352 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-09 21:02:03.353 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-09 21:02:03.353 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-09 21:02:03.354 -04:00 [DBG] Start userinfo request
2020-09-09 21:02:03.355 -04:00 [DBG] Bearer token found in header
2020-09-09 21:02:03.503 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:02:03.503 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:02:03.619 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:02:03.619 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:02:03.631 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-09 21:02:03.632 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599699723,"exp":1599703323,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599699720,"idp":"local","scope":["roles","openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-09 21:02:03.634 -04:00 [DBG] Creating userinfo response
2020-09-09 21:02:03.636 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-09 21:02:03.636 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-09 21:02:03.651 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:02:03.653 -04:00 [DBG] Requested claim types: role sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-09 21:02:03.653 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-09 21:02:03.668 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:02:03.714 -04:00 [INF] Profile service returned the following claim types: sub name role preferred_username email email_verified
2020-09-09 21:02:03.714 -04:00 [DBG] End userinfo request
2020-09-09 21:02:45.100 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-09 21:02:45.113 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:02:45.114 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:02:45.114 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 21:02:45.123 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 21:02:45.123 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 21:02:45.123 -04:00 [DBG] Start discovery request
2020-09-09 21:02:45.152 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 21:02:45.161 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-09 21:02:45.163 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-09 21:02:45.163 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-09 21:02:45.163 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-09 21:02:45.163 -04:00 [DBG] Rendering check session result
2020-09-09 21:02:45.173 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:02:45.173 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:02:45.173 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 21:02:45.174 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 21:02:45.175 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 21:02:45.175 -04:00 [DBG] Start key discovery request
2020-09-09 21:02:45.234 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 21:02:45.234 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 21:02:45.234 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 21:02:45.234 -04:00 [DBG] Start discovery request
2020-09-09 21:02:45.263 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 21:02:45.292 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 21:02:45.292 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 21:02:45.292 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 21:02:45.292 -04:00 [DBG] Start key discovery request
2020-09-09 21:03:14.958 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-09 21:03:14.991 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:03:14.991 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:03:14.991 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 21:03:14.991 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 21:03:14.991 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 21:03:14.991 -04:00 [DBG] Start discovery request
2020-09-09 21:03:15.021 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 21:03:15.039 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-09 21:03:15.039 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-09 21:03:15.039 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-09 21:03:15.039 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-09 21:03:15.039 -04:00 [DBG] Rendering check session result
2020-09-09 21:03:15.055 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:03:15.055 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:03:15.055 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 21:03:15.055 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 21:03:15.055 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 21:03:15.055 -04:00 [DBG] Start key discovery request
2020-09-09 21:11:34.388 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-09-09 21:11:34.389 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-09-09 21:11:34.389 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-09-09 21:11:34.390 -04:00 [DBG] Processing signout request for 34903727-3397-4344-9875-47f5e36788d3
2020-09-09 21:11:34.391 -04:00 [DBG] Start end session request validation
2020-09-09 21:11:34.393 -04:00 [INF] End session request validation success
{"ClientId":null,"ClientName":null,"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","PostLogOutUri":null,"State":null,"Raw":{},"$type":"EndSessionRequestValidationLog"}
2020-09-09 21:11:34.393 -04:00 [DBG] Success validating end session request from null
2020-09-09 21:11:35.818 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-09 21:11:35.835 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-09-09 21:11:35.835 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-09 21:11:35.835 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-09-09 21:11:35.836 -04:00 [INF] {"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"8000001c-0002-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-10T01:11:35.0000000Z","ProcessId":19352,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-09-09 21:11:35.858 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-09-09 21:11:35.860 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-09-09 21:11:35.860 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-09-09 21:11:35.861 -04:00 [DBG] Processing signout callback request
2020-09-09 21:11:36.223 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:11:36.223 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:11:36.224 -04:00 [DBG] No client front-channel logout URLs
2020-09-09 21:11:36.224 -04:00 [DBG] No client back-channel logout URLs
2020-09-09 21:11:36.225 -04:00 [INF] Successful signout callback.
2020-09-09 21:11:36.226 -04:00 [DBG] No client front-channel iframe urls
2020-09-09 21:11:36.226 -04:00 [DBG] No client back-channel iframe urls
2020-09-09 21:11:36.659 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-09 21:11:36.662 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-09 21:11:36.662 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-09 21:11:36.662 -04:00 [DBG] Start authorize request
2020-09-09 21:11:36.662 -04:00 [DBG] No user present in authorize request
2020-09-09 21:11:36.663 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 21:11:36.825 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:11:36.826 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:11:36.826 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"WXAtV091Q1prVVpEUEhlakZNN1NTbmxXYmFudFYzZGRyWjR5Uk5kbFRqUWlX","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"zu0pZPVmFZcL2BmUsd8ZMkdJTnU1OSi-HXvD5aN6pA8","code_challenge_method":"S256","nonce":"WXAtV091Q1prVVpEUEhlakZNN1NTbmxXYmFudFYzZGRyWjR5Uk5kbFRqUWlX","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 21:11:36.826 -04:00 [ERR] Request validation failed
2020-09-09 21:11:36.826 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"WXAtV091Q1prVVpEUEhlakZNN1NTbmxXYmFudFYzZGRyWjR5Uk5kbFRqUWlX","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"zu0pZPVmFZcL2BmUsd8ZMkdJTnU1OSi-HXvD5aN6pA8","code_challenge_method":"S256","nonce":"WXAtV091Q1prVVpEUEhlakZNN1NTbmxXYmFudFYzZGRyWjR5Uk5kbFRqUWlX","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 21:11:36.826 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000006-000a-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-10T01:11:36.0000000Z","ProcessId":19352,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-09 21:11:41.692 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-09-09 21:11:43.183 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-09-09 21:11:43.486 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-09 21:11:43.531 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-09-09 21:11:43.641 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"20acc5a4-a531-4492-bda2-ab56a53cd065","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000008-000a-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-10T01:11:43.0000000Z","ProcessId":19352,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-09 21:11:43.644 -04:00 [DBG] Augmenting SignInContext
2020-09-09 21:11:43.644 -04:00 [DBG] Adding amr claim with value: external
2020-09-09 21:11:43.645 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-09 21:11:43.645 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-09 21:11:43.677 -04:00 [DBG] 0 persisted grants found for 20acc5a4-a531-4492-bda2-ab56a53cd065
2020-09-09 21:11:54.939 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-09 21:11:54.939 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-09 21:11:54.939 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-09 21:11:54.939 -04:00 [DBG] Start authorize request
2020-09-09 21:11:54.940 -04:00 [DBG] User in authorize request: 20acc5a4-a531-4492-bda2-ab56a53cd065
2020-09-09 21:11:54.940 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 21:11:55.069 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:11:55.069 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:11:55.069 -04:00 [DBG] Checking for PKCE parameters
2020-09-09 21:11:55.082 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:11:55.097 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:11:55.112 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:11:55.158 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:11:55.159 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-09 21:11:55.159 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"20acc5a4-a531-4492-bda2-ab56a53cd065","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"ZjFpak5vWXllTFVnMk5XSkRGNDVlckdUS3lDTnNhLmpDM1VWa091OXhRNHNasemicolon%2Fshould-login","UiLocales":null,"Nonce":"ZjFpak5vWXllTFVnMk5XSkRGNDVlckdUS3lDTnNhLmpDM1VWa091OXhRNHNa","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"bJdhCTrUAqTlU0jF3khCyQ","Raw":{"response_type":"code","client_id":"angular_spa","state":"ZjFpak5vWXllTFVnMk5XSkRGNDVlckdUS3lDTnNhLmpDM1VWa091OXhRNHNasemicolon%2Fshould-login","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"PEObs-OFYTaGbvpVDQMtauUT7bUvtoh7y8G1pnNIVE0","code_challenge_method":"S256","nonce":"ZjFpak5vWXllTFVnMk5XSkRGNDVlckdUS3lDTnNhLmpDM1VWa091OXhRNHNa"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 21:11:55.187 -04:00 [DBG] W08MtYMxUpw+W0fG6QZqmD9nsPgo7NVKW4XD2Xo3RpA= found in database: false
2020-09-09 21:11:55.188 -04:00 [DBG] user_consent grant with value: angular_spa|20acc5a4-a531-4492-bda2-ab56a53cd065 not found in store.
2020-09-09 21:11:55.188 -04:00 [DBG] Found no prior consent from consent store, consent is required
2020-09-09 21:11:55.188 -04:00 [INF] Showing consent: User has not yet consented
2020-09-09 21:11:55.197 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 21:11:55.313 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:11:55.313 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:11:55.313 -04:00 [DBG] Checking for PKCE parameters
2020-09-09 21:11:55.328 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:11:55.342 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:11:55.358 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:11:55.369 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:11:55.369 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-09 21:11:55.489 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:11:55.489 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:11:55.506 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:11:55.524 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:12:00.495 -04:00 [DBG] CORS request made for path: /Consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-09 21:12:00.504 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 21:12:00.675 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:12:00.675 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:12:00.675 -04:00 [DBG] Checking for PKCE parameters
2020-09-09 21:12:00.688 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:12:00.702 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:12:00.713 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:12:00.727 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:12:00.727 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-09 21:12:00.729 -04:00 [INF] {"SubjectId":"20acc5a4-a531-4492-bda2-ab56a53cd065","ClientId":"angular_spa","RequestedScopes":["openid","profile","email","roles","app.api.employeeprofile.read"],"GrantedScopes":["roles","openid","profile","email","app.api.employeeprofile.read"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"8000000e-000a-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-10T01:12:00.0000000Z","ProcessId":19352,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2020-09-09 21:12:00.869 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:12:00.869 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:12:00.903 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-09-09 21:12:00.903 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-09-09 21:12:00.903 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-09-09 21:12:00.903 -04:00 [DBG] Start authorize callback request
2020-09-09 21:12:00.905 -04:00 [DBG] User in authorize request: 20acc5a4-a531-4492-bda2-ab56a53cd065
2020-09-09 21:12:00.905 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 21:12:01.019 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:12:01.019 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:12:01.019 -04:00 [DBG] Checking for PKCE parameters
2020-09-09 21:12:01.036 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:12:01.050 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:12:01.064 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:12:01.078 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:12:01.078 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-09 21:12:01.079 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"20acc5a4-a531-4492-bda2-ab56a53cd065","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"ZjFpak5vWXllTFVnMk5XSkRGNDVlckdUS3lDTnNhLmpDM1VWa091OXhRNHNasemicolon%2Fshould-login","UiLocales":null,"Nonce":"ZjFpak5vWXllTFVnMk5XSkRGNDVlckdUS3lDTnNhLmpDM1VWa091OXhRNHNa","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"bJdhCTrUAqTlU0jF3khCyQ","Raw":{"response_type":"code","client_id":"angular_spa","state":"ZjFpak5vWXllTFVnMk5XSkRGNDVlckdUS3lDTnNhLmpDM1VWa091OXhRNHNasemicolon%2Fshould-login","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"PEObs-OFYTaGbvpVDQMtauUT7bUvtoh7y8G1pnNIVE0","code_challenge_method":"S256","nonce":"ZjFpak5vWXllTFVnMk5XSkRGNDVlckdUS3lDTnNhLmpDM1VWa091OXhRNHNa"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 21:12:01.102 -04:00 [DBG] W08MtYMxUpw+W0fG6QZqmD9nsPgo7NVKW4XD2Xo3RpA= found in database: false
2020-09-09 21:12:01.102 -04:00 [DBG] user_consent grant with value: angular_spa|20acc5a4-a531-4492-bda2-ab56a53cd065 not found in store.
2020-09-09 21:12:01.102 -04:00 [DBG] Found no prior consent from consent store, consent is required
2020-09-09 21:12:01.104 -04:00 [INF] User consented to scopes: ["roles","openid","profile","email","app.api.employeeprofile.read"]
2020-09-09 21:12:01.104 -04:00 [DBG] User indicated to remember consent for scopes: ["openid","profile","email","roles","app.api.employeeprofile.read"]
2020-09-09 21:12:01.105 -04:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 20acc5a4-a531-4492-bda2-ab56a53cd065
2020-09-09 21:12:01.117 -04:00 [DBG] W08MtYMxUpw+W0fG6QZqmD9nsPgo7NVKW4XD2Xo3RpA= not found in database
2020-09-09 21:12:01.204 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-09 21:12:01.216 -04:00 [DBG] 0lPXCKCG3aWXPsEADkSPpmJY7DxUi4S74LaQ1uRch18= not found in database
2020-09-09 21:12:01.264 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"20acc5a4-a531-4492-bda2-ab56a53cd065","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****qn2E","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000006e-0008-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-10T01:12:01.0000000Z","ProcessId":19352,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-09 21:12:01.264 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"20acc5a4-a531-4492-bda2-ab56a53cd065","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"ZjFpak5vWXllTFVnMk5XSkRGNDVlckdUS3lDTnNhLmpDM1VWa091OXhRNHNasemicolon%2Fshould-login","Scope":"openid profile email roles app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-09 21:12:01.264 -04:00 [DBG] Augmenting SignInContext
2020-09-09 21:12:01.264 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-09 21:12:02.014 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-09 21:12:02.027 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:12:02.027 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:12:02.027 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 21:12:02.028 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 21:12:02.028 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 21:12:02.028 -04:00 [DBG] Start discovery request
2020-09-09 21:12:02.062 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 21:12:02.085 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-09 21:12:02.099 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:12:02.099 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:12:02.099 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 21:12:02.099 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 21:12:02.099 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 21:12:02.099 -04:00 [DBG] Start key discovery request
2020-09-09 21:12:03.124 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-09 21:12:03.137 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:12:03.138 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:12:03.138 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-09 21:12:03.138 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-09 21:12:03.138 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-09 21:12:03.138 -04:00 [DBG] Start token request.
2020-09-09 21:12:03.138 -04:00 [DBG] Start client validation
2020-09-09 21:12:03.138 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-09 21:12:03.138 -04:00 [DBG] Start parsing for secret in post body
2020-09-09 21:12:03.139 -04:00 [DBG] client id without secret found
2020-09-09 21:12:03.139 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-09 21:12:03.139 -04:00 [DBG] Secret id found: angular_spa
2020-09-09 21:12:03.257 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:12:03.257 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:12:03.257 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-09 21:12:03.257 -04:00 [DBG] Client validation success
2020-09-09 21:12:03.257 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000020-0002-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-10T01:12:03.0000000Z","ProcessId":19352,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-09 21:12:03.257 -04:00 [DBG] Start token request validation
2020-09-09 21:12:03.257 -04:00 [DBG] Start validation of authorization code token request
2020-09-09 21:12:03.270 -04:00 [DBG] 0lPXCKCG3aWXPsEADkSPpmJY7DxUi4S74LaQ1uRch18= found in database: true
2020-09-09 21:12:03.284 -04:00 [DBG] removing 0lPXCKCG3aWXPsEADkSPpmJY7DxUi4S74LaQ1uRch18= persisted grant from database
2020-09-09 21:12:03.328 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-09 21:12:03.342 -04:00 [DBG] Validation of authorization code token request success
2020-09-09 21:12:03.342 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"OiPhEMaWMgNFFrAwZ9XFs2JRaN1qj7NcYp8b5jAqn2E","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"OiPhEMaWMgNFFrAwZ9XFs2JRaN1qj7NcYp8b5jAqn2E","redirect_uri":"https://localhost:4200","code_verifier":"SjFwSnZxRHAwaldrV3BHSlhHc1lIOEVneVJwTUs4dnRHSF9BbDNLWk1mZ2JZ","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-09-09 21:12:03.495 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:12:03.495 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:12:03.509 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:12:03.524 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:12:03.524 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-09-09 21:12:03.524 -04:00 [DBG] Getting claims for access token for subject: 20acc5a4-a531-4492-bda2-ab56a53cd065
2020-09-09 21:12:03.666 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:12:03.666 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:12:03.680 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:12:03.694 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:12:03.695 -04:00 [DBG] Getting claims for identity token for subject: 20acc5a4-a531-4492-bda2-ab56a53cd065 and client: angular_spa
2020-09-09 21:12:03.695 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-09 21:12:03.696 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"20acc5a4-a531-4492-bda2-ab56a53cd065","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****JtFA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****3ZFQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000020-0002-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-10T01:12:03.0000000Z","ProcessId":19352,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-09 21:12:03.696 -04:00 [DBG] Token request success.
2020-09-09 21:12:03.707 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-09 21:12:03.710 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-09 21:12:03.710 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-09 21:12:03.710 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-09 21:12:03.710 -04:00 [DBG] Rendering check session result
2020-09-09 21:12:03.721 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:12:03.721 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:12:03.723 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-09 21:12:03.745 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:12:03.745 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:12:03.745 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-09 21:12:03.746 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-09 21:12:03.746 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-09 21:12:03.746 -04:00 [DBG] Start userinfo request
2020-09-09 21:12:03.746 -04:00 [DBG] Bearer token found in header
2020-09-09 21:12:03.896 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:12:03.896 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:12:04.013 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:12:04.013 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:12:04.027 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-09 21:12:04.027 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599700323,"exp":1599703923,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"20acc5a4-a531-4492-bda2-ab56a53cd065","auth_time":1599700303,"idp":"azuread","scope":["roles","openid","profile","email","app.api.employeeprofile.read"],"amr":"external"},"$type":"TokenValidationLog"}
2020-09-09 21:12:04.027 -04:00 [DBG] Creating userinfo response
2020-09-09 21:12:04.027 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-09 21:12:04.027 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-09 21:12:04.042 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:12:04.042 -04:00 [DBG] Requested claim types: role sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-09 21:12:04.042 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-09 21:12:04.084 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:12:04.105 -04:00 [INF] Profile service returned the following claim types: sub name sub preferred_username
2020-09-09 21:12:04.163 -04:00 [INF] {"Details":"System.InvalidOperationException: Sequence contains more than one matching element\r\n   at System.Linq.ThrowHelper.ThrowMoreThanOneMatchException()\r\n   at System.Linq.Enumerable.SingleOrDefault[TSource](IEnumerable`1 source, Func`2 predicate)\r\n   at IdentityServer4.ResponseHandling.UserInfoResponseGenerator.ProcessAsync(UserInfoRequestValidationResult validationResult)\r\n   at IdentityServer4.Endpoints.UserInfoEndpoint.ProcessUserInfoRequestAsync(HttpContext context)\r\n   at IdentityServer4.Endpoints.UserInfoEndpoint.ProcessAsync(HttpContext context)\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)","Category":"Error","Name":"Unhandled Exception","EventType":"Error","Id":3000,"Message":"Sequence contains more than one matching element","ActivityId":"80000070-0008-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-10T01:12:04.0000000Z","ProcessId":19352,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UnhandledExceptionEvent"}
2020-09-09 21:12:04.163 -04:00 [FTL] Unhandled exception: Sequence contains more than one matching element
System.InvalidOperationException: Sequence contains more than one matching element
   at System.Linq.ThrowHelper.ThrowMoreThanOneMatchException()
   at System.Linq.Enumerable.SingleOrDefault[TSource](IEnumerable`1 source, Func`2 predicate)
   at IdentityServer4.ResponseHandling.UserInfoResponseGenerator.ProcessAsync(UserInfoRequestValidationResult validationResult)
   at IdentityServer4.Endpoints.UserInfoEndpoint.ProcessUserInfoRequestAsync(HttpContext context)
   at IdentityServer4.Endpoints.UserInfoEndpoint.ProcessAsync(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
2020-09-09 21:12:04.168 -04:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Sequence contains more than one matching element
   at System.Linq.ThrowHelper.ThrowMoreThanOneMatchException()
   at System.Linq.Enumerable.SingleOrDefault[TSource](IEnumerable`1 source, Func`2 predicate)
   at IdentityServer4.ResponseHandling.UserInfoResponseGenerator.ProcessAsync(UserInfoRequestValidationResult validationResult)
   at IdentityServer4.Endpoints.UserInfoEndpoint.ProcessUserInfoRequestAsync(HttpContext context)
   at IdentityServer4.Endpoints.UserInfoEndpoint.ProcessAsync(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>g__InvokeCoreAwaited|15_0(HttpContext context, Task`1 policyTask)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-09-09 21:12:12.460 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-09 21:12:12.488 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:12:12.488 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:12:12.488 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 21:12:12.488 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 21:12:12.488 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 21:12:12.488 -04:00 [DBG] Start discovery request
2020-09-09 21:12:12.520 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 21:12:12.545 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-09 21:12:12.546 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-09 21:12:12.546 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-09 21:12:12.546 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-09 21:12:12.546 -04:00 [DBG] Rendering check session result
2020-09-09 21:12:12.583 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:12:12.583 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:12:12.583 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 21:12:12.583 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 21:12:12.583 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 21:12:12.583 -04:00 [DBG] Start key discovery request
2020-09-09 21:12:58.922 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-09 21:12:58.939 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:12:58.939 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:12:58.939 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 21:12:58.940 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 21:12:58.940 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 21:12:58.940 -04:00 [DBG] Start discovery request
2020-09-09 21:12:58.972 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 21:12:59.005 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-09 21:12:59.009 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-09 21:12:59.009 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-09 21:12:59.009 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-09 21:12:59.009 -04:00 [DBG] Rendering check session result
2020-09-09 21:12:59.019 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:12:59.019 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:12:59.019 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 21:12:59.019 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 21:12:59.019 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 21:12:59.019 -04:00 [DBG] Start key discovery request
2020-09-09 21:17:16.486 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 21:17:16.486 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 21:17:16.486 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 21:17:16.486 -04:00 [DBG] Start discovery request
2020-09-09 21:17:16.514 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 21:17:16.542 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 21:17:16.544 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 21:17:16.544 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 21:17:16.545 -04:00 [DBG] Start key discovery request
2020-09-09 21:17:41.907 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-09-09 21:17:41.907 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-09-09 21:17:41.907 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-09-09 21:17:41.907 -04:00 [DBG] Processing signout request for 20acc5a4-a531-4492-bda2-ab56a53cd065
2020-09-09 21:17:41.907 -04:00 [DBG] Start end session request validation
2020-09-09 21:17:41.910 -04:00 [DBG] Start identity token validation
2020-09-09 21:17:42.047 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:17:42.047 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:17:42.048 -04:00 [DBG] Client found: angular_spa / Sample SPA.PKCE
2020-09-09 21:17:42.063 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-09 21:17:42.063 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599700323,"exp":1599700623,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"ZjFpak5vWXllTFVnMk5XSkRGNDVlckdUS3lDTnNhLmpDM1VWa091OXhRNHNa","iat":1599700323,"at_hash":"PuoXyw7dMifwO4oqvzbJYA","s_hash":"8ajxC6fvW2ly3849V7lTfg","sid":"bJdhCTrUAqTlU0jF3khCyQ","sub":"20acc5a4-a531-4492-bda2-ab56a53cd065","auth_time":1599700303,"idp":"azuread","amr":"external"},"$type":"TokenValidationLog"}
2020-09-09 21:17:42.064 -04:00 [WRN] Invalid PostLogoutRedirectUri: https://localhost:4200
2020-09-09 21:17:42.073 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","SubjectId":"20acc5a4-a531-4492-bda2-ab56a53cd065","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-09-09 21:17:42.074 -04:00 [DBG] Success validating end session request from angular_spa
2020-09-09 21:17:42.080 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-09-09 21:17:42.080 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-09 21:17:42.080 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-09-09 21:17:42.080 -04:00 [INF] {"SubjectId":"20acc5a4-a531-4492-bda2-ab56a53cd065","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000043-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-10T01:17:42.0000000Z","ProcessId":19352,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-09-09 21:17:50.526 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-09 21:17:50.526 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-09 21:17:50.526 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-09 21:17:50.526 -04:00 [DBG] Start authorize request
2020-09-09 21:17:50.526 -04:00 [DBG] No user present in authorize request
2020-09-09 21:17:50.526 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 21:17:50.648 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:17:50.648 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:17:50.648 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"Q2ZOOVlHV3Bubmt6WlJQbmlGTzVTSU1KMTFpbFYubTlwQy5HWWdBcHJxRnJ0","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"Ag7iQadY87WsxoJEBAvfk6q5GkI4KaHX5vgccxQEE_8","code_challenge_method":"S256","nonce":"Q2ZOOVlHV3Bubmt6WlJQbmlGTzVTSU1KMTFpbFYubTlwQy5HWWdBcHJxRnJ0","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 21:17:50.648 -04:00 [ERR] Request validation failed
2020-09-09 21:17:50.648 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"Q2ZOOVlHV3Bubmt6WlJQbmlGTzVTSU1KMTFpbFYubTlwQy5HWWdBcHJxRnJ0","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"Ag7iQadY87WsxoJEBAvfk6q5GkI4KaHX5vgccxQEE_8","code_challenge_method":"S256","nonce":"Q2ZOOVlHV3Bubmt6WlJQbmlGTzVTSU1KMTFpbFYubTlwQy5HWWdBcHJxRnJ0","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 21:17:50.649 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000060-0000-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-10T01:17:50.0000000Z","ProcessId":19352,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-09 21:17:57.015 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-09 21:17:57.015 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-09 21:17:57.015 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-09 21:17:57.015 -04:00 [DBG] Start authorize request
2020-09-09 21:17:57.015 -04:00 [DBG] No user present in authorize request
2020-09-09 21:17:57.015 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 21:17:57.131 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:17:57.131 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:17:57.131 -04:00 [DBG] Checking for PKCE parameters
2020-09-09 21:17:57.144 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:17:57.158 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:17:57.172 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:17:57.187 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:17:57.187 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-09 21:17:57.187 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"TTl1Y0prdURXbXE0YkNCWHFHS29IfjNMemRDcUZEQlZjNE9GeUJxNWJZUDBOsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"TTl1Y0prdURXbXE0YkNCWHFHS29IfjNMemRDcUZEQlZjNE9GeUJxNWJZUDBO","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"TTl1Y0prdURXbXE0YkNCWHFHS29IfjNMemRDcUZEQlZjNE9GeUJxNWJZUDBOsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"FsoMojVjczIhjRrOm8nI2dot49qQiROW1rJmEXjGtVA","code_challenge_method":"S256","nonce":"TTl1Y0prdURXbXE0YkNCWHFHS29IfjNMemRDcUZEQlZjNE9GeUJxNWJZUDBO"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 21:17:57.187 -04:00 [INF] Showing login: User is not authenticated
2020-09-09 21:17:57.191 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 21:17:57.326 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:17:57.326 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:17:57.326 -04:00 [DBG] Checking for PKCE parameters
2020-09-09 21:17:57.340 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:17:57.353 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:17:57.364 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:17:57.375 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:17:57.375 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-09 21:17:57.488 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:17:57.488 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:17:59.198 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-09 21:17:59.200 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 21:17:59.367 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:17:59.367 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:17:59.368 -04:00 [DBG] Checking for PKCE parameters
2020-09-09 21:17:59.380 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:17:59.396 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:17:59.409 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:17:59.424 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:17:59.424 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-09 21:17:59.485 -04:00 [DBG] Augmenting SignInContext
2020-09-09 21:17:59.485 -04:00 [DBG] Adding idp claim with value: local
2020-09-09 21:17:59.485 -04:00 [DBG] Adding auth_time claim with value: 1599700679
2020-09-09 21:17:59.485 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-09 21:17:59.497 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000058-0004-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-10T01:17:59.0000000Z","ProcessId":19352,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-09 21:17:59.627 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:17:59.627 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:17:59.631 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-09-09 21:17:59.634 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-09-09 21:17:59.634 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-09-09 21:17:59.634 -04:00 [DBG] Start authorize callback request
2020-09-09 21:17:59.634 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-09 21:17:59.634 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 21:17:59.751 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:17:59.751 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:17:59.751 -04:00 [DBG] Checking for PKCE parameters
2020-09-09 21:17:59.770 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:17:59.785 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:17:59.801 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:17:59.853 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:17:59.853 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-09 21:17:59.854 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"TTl1Y0prdURXbXE0YkNCWHFHS29IfjNMemRDcUZEQlZjNE9GeUJxNWJZUDBOsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"TTl1Y0prdURXbXE0YkNCWHFHS29IfjNMemRDcUZEQlZjNE9GeUJxNWJZUDBO","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"Oc2KiyB5oXxJ2f7lfspDCg","Raw":{"response_type":"code","client_id":"angular_spa","state":"TTl1Y0prdURXbXE0YkNCWHFHS29IfjNMemRDcUZEQlZjNE9GeUJxNWJZUDBOsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"FsoMojVjczIhjRrOm8nI2dot49qQiROW1rJmEXjGtVA","code_challenge_method":"S256","nonce":"TTl1Y0prdURXbXE0YkNCWHFHS29IfjNMemRDcUZEQlZjNE9GeUJxNWJZUDBO"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 21:17:59.876 -04:00 [DBG] eExdRFBRf1V3ruMQVqYpU2dH8/vcePOUe0XJ7DBcKbo= found in database: true
2020-09-09 21:17:59.876 -04:00 [DBG] Consent found in consent store is same as current request, consent is not required
2020-09-09 21:17:59.876 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-09 21:17:59.887 -04:00 [DBG] PgxuYYO8jUaFXTTHR4c8Pd9sScr8GW0P6eFQbEcIR78= not found in database
2020-09-09 21:17:59.942 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****3-_4","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000005a-0004-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-10T01:17:59.0000000Z","ProcessId":19352,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-09 21:17:59.942 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"TTl1Y0prdURXbXE0YkNCWHFHS29IfjNMemRDcUZEQlZjNE9GeUJxNWJZUDBOsemicolon%2Fbasics%2Fhome","Scope":"openid profile email roles app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-09 21:17:59.942 -04:00 [DBG] Augmenting SignInContext
2020-09-09 21:17:59.943 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-09 21:18:00.753 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-09 21:18:00.764 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:18:00.764 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:18:00.764 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 21:18:00.764 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 21:18:00.764 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 21:18:00.764 -04:00 [DBG] Start discovery request
2020-09-09 21:18:00.790 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 21:18:00.805 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-09 21:18:00.817 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:18:00.817 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:18:00.817 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 21:18:00.817 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 21:18:00.817 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 21:18:00.817 -04:00 [DBG] Start key discovery request
2020-09-09 21:18:01.875 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-09 21:18:01.888 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:18:01.888 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:18:01.888 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-09 21:18:01.894 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-09 21:18:01.894 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-09 21:18:01.894 -04:00 [DBG] Start token request.
2020-09-09 21:18:01.894 -04:00 [DBG] Start client validation
2020-09-09 21:18:01.894 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-09 21:18:01.894 -04:00 [DBG] Start parsing for secret in post body
2020-09-09 21:18:01.895 -04:00 [DBG] client id without secret found
2020-09-09 21:18:01.895 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-09 21:18:01.895 -04:00 [DBG] Secret id found: angular_spa
2020-09-09 21:18:02.017 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:18:02.017 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:18:02.018 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-09 21:18:02.018 -04:00 [DBG] Client validation success
2020-09-09 21:18:02.018 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000045-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-10T01:18:02.0000000Z","ProcessId":19352,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-09 21:18:02.018 -04:00 [DBG] Start token request validation
2020-09-09 21:18:02.018 -04:00 [DBG] Start validation of authorization code token request
2020-09-09 21:18:02.047 -04:00 [DBG] PgxuYYO8jUaFXTTHR4c8Pd9sScr8GW0P6eFQbEcIR78= found in database: true
2020-09-09 21:18:02.059 -04:00 [DBG] removing PgxuYYO8jUaFXTTHR4c8Pd9sScr8GW0P6eFQbEcIR78= persisted grant from database
2020-09-09 21:18:02.117 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-09 21:18:02.129 -04:00 [DBG] Validation of authorization code token request success
2020-09-09 21:18:02.130 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"BdaruHM-LIpPcKbGYgRlJCZVc-5uxionHrFdMb53-_4","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"BdaruHM-LIpPcKbGYgRlJCZVc-5uxionHrFdMb53-_4","redirect_uri":"https://localhost:4200","code_verifier":"NWFaQ21Td0Jmd1ZPOU9oVGVjdzFqT0ZGTkFKdmM1anBZLWwzekdBSHB1Q2hj","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-09-09 21:18:02.257 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:18:02.257 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:18:02.272 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:18:02.285 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:18:02.285 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-09-09 21:18:02.285 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-09 21:18:02.456 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:18:02.456 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:18:02.468 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:18:02.483 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 21:18:02.483 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: angular_spa
2020-09-09 21:18:02.483 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-09 21:18:02.484 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****PoOg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****ZMNA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000045-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-10T01:18:02.0000000Z","ProcessId":19352,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-09 21:18:02.484 -04:00 [DBG] Token request success.
2020-09-09 21:18:02.494 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-09 21:18:02.497 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-09 21:18:02.497 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-09 21:18:02.497 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-09 21:18:02.497 -04:00 [DBG] Rendering check session result
2020-09-09 21:18:02.507 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:18:02.507 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:18:02.509 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-09 21:18:02.521 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:18:02.521 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:18:02.521 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-09 21:18:02.523 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-09 21:18:02.523 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-09 21:18:02.523 -04:00 [DBG] Start userinfo request
2020-09-09 21:18:02.523 -04:00 [DBG] Bearer token found in header
2020-09-09 21:18:02.657 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:18:02.657 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:18:02.767 -04:00 [DBG] angular_spa found in database: true
2020-09-09 21:18:02.767 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 21:18:02.824 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-09 21:18:02.824 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599700682,"exp":1599704282,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599700679,"idp":"local","scope":["roles","openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-09 21:18:02.824 -04:00 [DBG] Creating userinfo response
2020-09-09 21:18:02.824 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-09 21:18:02.824 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-09 21:18:02.839 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:18:02.839 -04:00 [DBG] Requested claim types: role sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-09 21:18:02.839 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-09 21:18:02.854 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 21:18:02.904 -04:00 [INF] Profile service returned the following claim types: sub name role preferred_username email email_verified
2020-09-09 21:18:02.904 -04:00 [DBG] End userinfo request
2020-09-09 21:18:04.754 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-09 21:18:04.769 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:18:04.769 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:18:04.769 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 21:18:04.769 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 21:18:04.769 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 21:18:04.769 -04:00 [DBG] Start discovery request
2020-09-09 21:18:04.798 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 21:18:04.818 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-09 21:18:04.818 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-09 21:18:04.818 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-09 21:18:04.818 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-09 21:18:04.818 -04:00 [DBG] Rendering check session result
2020-09-09 21:18:04.830 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:18:04.830 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:18:04.830 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 21:18:04.831 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 21:18:04.831 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 21:18:04.831 -04:00 [DBG] Start key discovery request
2020-09-09 21:26:31.267 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-09 21:26:31.420 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:26:31.420 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:26:31.420 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 21:26:31.420 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 21:26:31.420 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 21:26:31.420 -04:00 [DBG] Start discovery request
2020-09-09 21:26:31.457 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 21:26:31.462 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-09 21:26:31.483 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:26:31.483 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:26:31.483 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 21:26:31.483 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 21:26:31.483 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 21:26:31.483 -04:00 [DBG] Start key discovery request
2020-09-09 21:26:31.559 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 21:26:31.559 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 21:26:31.559 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 21:26:31.559 -04:00 [DBG] Start discovery request
2020-09-09 21:26:31.588 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 21:26:31.615 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 21:26:31.615 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 21:26:31.615 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 21:26:31.615 -04:00 [DBG] Start key discovery request
2020-09-09 21:26:58.347 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-09 21:26:58.361 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:26:58.361 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:26:58.361 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 21:26:58.361 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 21:26:58.361 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 21:26:58.361 -04:00 [DBG] Start discovery request
2020-09-09 21:26:58.396 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 21:26:58.409 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-09 21:26:58.419 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 21:26:58.420 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 21:26:58.420 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 21:26:58.420 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 21:26:58.420 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 21:26:58.420 -04:00 [DBG] Start key discovery request
2020-09-09 22:00:52.292 -04:00 [INF] Removing 4 grants
2020-09-09 22:00:52.384 -04:00 [INF] Removing 0 device flow codes
2020-09-09 23:00:52.611 -04:00 [INF] Removing 0 grants
2020-09-09 23:00:52.631 -04:00 [INF] Removing 0 device flow codes
2020-09-09 23:06:35.115 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-09 23:06:35.313 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 23:06:35.313 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 23:06:35.314 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 23:06:35.314 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 23:06:35.314 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 23:06:35.314 -04:00 [DBG] Start discovery request
2020-09-09 23:06:35.338 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 23:06:35.338 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 23:06:35.338 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 23:06:35.338 -04:00 [DBG] Start discovery request
2020-09-09 23:06:35.351 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 23:06:35.357 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-09 23:06:35.369 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 23:06:35.369 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 23:06:35.369 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 23:06:35.369 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 23:06:35.369 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 23:06:35.369 -04:00 [DBG] Start key discovery request
2020-09-09 23:06:35.576 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 23:06:35.604 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 23:06:35.604 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 23:06:35.604 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 23:06:35.604 -04:00 [DBG] Start key discovery request
2020-09-09 23:06:36.474 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-09 23:06:36.474 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-09 23:06:36.474 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-09 23:06:36.474 -04:00 [DBG] Start authorize request
2020-09-09 23:06:36.474 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-09 23:06:36.475 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 23:06:36.598 -04:00 [DBG] angular_spa found in database: true
2020-09-09 23:06:36.598 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 23:06:36.599 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"ZWZqTTBTSEduWU5LU3NxLmJrMDEzeVZobmUxVEt5YktFekFsc05oMn5ybE9q","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"OyzKFdinSGjgnGVTWoWc7etNiVB6j8_LG81ATFfeWMo","code_challenge_method":"S256","nonce":"ZWZqTTBTSEduWU5LU3NxLmJrMDEzeVZobmUxVEt5YktFekFsc05oMn5ybE9q","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 23:06:36.599 -04:00 [ERR] Request validation failed
2020-09-09 23:06:36.599 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"ZWZqTTBTSEduWU5LU3NxLmJrMDEzeVZobmUxVEt5YktFekFsc05oMn5ybE9q","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"OyzKFdinSGjgnGVTWoWc7etNiVB6j8_LG81ATFfeWMo","code_challenge_method":"S256","nonce":"ZWZqTTBTSEduWU5LU3NxLmJrMDEzeVZobmUxVEt5YktFekFsc05oMn5ybE9q","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 23:06:36.600 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000b2-0004-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-10T03:06:36.0000000Z","ProcessId":19352,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-09 23:06:44.867 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-09 23:06:44.884 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 23:06:44.884 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 23:06:44.884 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 23:06:44.884 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 23:06:44.884 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 23:06:44.884 -04:00 [DBG] Start discovery request
2020-09-09 23:06:44.917 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 23:06:44.926 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-09 23:06:44.943 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 23:06:44.943 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 23:06:44.944 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 23:06:44.944 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 23:06:44.944 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 23:06:44.944 -04:00 [DBG] Start key discovery request
2020-09-09 23:06:45.974 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-09 23:06:45.974 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-09 23:06:45.974 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-09 23:06:45.974 -04:00 [DBG] Start authorize request
2020-09-09 23:06:45.974 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-09 23:06:45.974 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 23:06:46.104 -04:00 [DBG] angular_spa found in database: true
2020-09-09 23:06:46.104 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 23:06:46.105 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"ak9WeEF6amdHQzUxdm9VZFNDTHZjLlBJTWZ-eEFyLW1CfjNVd0UzUWx1TEJj","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"porEIIm4itww-e5VM69_ZC5B2RXcO5TXYdt5-l1Ek_M","code_challenge_method":"S256","nonce":"ak9WeEF6amdHQzUxdm9VZFNDTHZjLlBJTWZ-eEFyLW1CfjNVd0UzUWx1TEJj","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 23:06:46.105 -04:00 [ERR] Request validation failed
2020-09-09 23:06:46.105 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"ak9WeEF6amdHQzUxdm9VZFNDTHZjLlBJTWZ-eEFyLW1CfjNVd0UzUWx1TEJj","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"porEIIm4itww-e5VM69_ZC5B2RXcO5TXYdt5-l1Ek_M","code_challenge_method":"S256","nonce":"ak9WeEF6amdHQzUxdm9VZFNDTHZjLlBJTWZ-eEFyLW1CfjNVd0UzUWx1TEJj","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 23:06:46.105 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000a1-0002-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-10T03:06:46.0000000Z","ProcessId":19352,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-09 23:07:23.182 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-09-09 23:07:23.185 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-09-09 23:07:23.185 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-09-09 23:07:23.185 -04:00 [DBG] Processing signout request for 34903727-3397-4344-9875-47f5e36788d3
2020-09-09 23:07:23.185 -04:00 [DBG] Start end session request validation
2020-09-09 23:07:23.185 -04:00 [DBG] Start identity token validation
2020-09-09 23:07:23.311 -04:00 [DBG] angular_spa found in database: true
2020-09-09 23:07:23.311 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 23:07:23.311 -04:00 [DBG] Client found: angular_spa / Sample SPA.PKCE
2020-09-09 23:07:23.325 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-09 23:07:23.325 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599700682,"exp":1599700982,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"TTl1Y0prdURXbXE0YkNCWHFHS29IfjNMemRDcUZEQlZjNE9GeUJxNWJZUDBO","iat":1599700682,"at_hash":"2pg_M6sekiEiYR-k-QDk8g","s_hash":"6FONqmvMb0dBCmc0Nnr8Fw","sid":"Oc2KiyB5oXxJ2f7lfspDCg","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599700679,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-09 23:07:23.326 -04:00 [WRN] Invalid PostLogoutRedirectUri: https://localhost:4200
2020-09-09 23:07:23.326 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-09-09 23:07:23.326 -04:00 [DBG] Success validating end session request from angular_spa
2020-09-09 23:07:23.331 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-09-09 23:07:23.331 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-09 23:07:23.331 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-09-09 23:07:23.331 -04:00 [INF] {"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"800000fe-0006-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-10T03:07:23.0000000Z","ProcessId":19352,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-09-09 23:07:23.362 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-09-09 23:07:23.366 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-09-09 23:07:23.366 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-09-09 23:07:23.366 -04:00 [DBG] Processing signout callback request
2020-09-09 23:07:23.488 -04:00 [DBG] angular_spa found in database: true
2020-09-09 23:07:23.488 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 23:07:23.488 -04:00 [DBG] No client front-channel logout URLs
2020-09-09 23:07:23.488 -04:00 [DBG] No client back-channel logout URLs
2020-09-09 23:07:23.488 -04:00 [INF] Successful signout callback.
2020-09-09 23:07:23.488 -04:00 [DBG] No client front-channel iframe urls
2020-09-09 23:07:23.488 -04:00 [DBG] No client back-channel iframe urls
2020-09-09 23:07:31.091 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-09 23:07:31.091 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-09 23:07:31.091 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-09 23:07:31.091 -04:00 [DBG] Start authorize request
2020-09-09 23:07:31.092 -04:00 [DBG] No user present in authorize request
2020-09-09 23:07:31.092 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 23:07:31.215 -04:00 [DBG] angular_spa found in database: true
2020-09-09 23:07:31.215 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 23:07:31.216 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"QnVqeU5mb2FqSzZudE1KQVhOWkZQMDFPek1sNWdZTkRFN3pNdC5ZLVhCMlFC","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"qaur5APlcXN7Ftc1DYjkRfompHCI_vByfA-VsNISsjw","code_challenge_method":"S256","nonce":"QnVqeU5mb2FqSzZudE1KQVhOWkZQMDFPek1sNWdZTkRFN3pNdC5ZLVhCMlFC","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 23:07:31.216 -04:00 [ERR] Request validation failed
2020-09-09 23:07:31.216 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"QnVqeU5mb2FqSzZudE1KQVhOWkZQMDFPek1sNWdZTkRFN3pNdC5ZLVhCMlFC","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"qaur5APlcXN7Ftc1DYjkRfompHCI_vByfA-VsNISsjw","code_challenge_method":"S256","nonce":"QnVqeU5mb2FqSzZudE1KQVhOWkZQMDFPek1sNWdZTkRFN3pNdC5ZLVhCMlFC","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 23:07:31.216 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000b4-0004-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-10T03:07:31.0000000Z","ProcessId":19352,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-09 23:07:37.200 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-09 23:07:37.200 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-09 23:07:37.200 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-09 23:07:37.200 -04:00 [DBG] Start authorize request
2020-09-09 23:07:37.201 -04:00 [DBG] No user present in authorize request
2020-09-09 23:07:37.201 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 23:07:37.339 -04:00 [DBG] angular_spa found in database: true
2020-09-09 23:07:37.339 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 23:07:37.339 -04:00 [DBG] Checking for PKCE parameters
2020-09-09 23:07:37.353 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 23:07:37.368 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 23:07:37.383 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 23:07:37.398 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 23:07:37.398 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-09 23:07:37.398 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"dEhBUEpQcG5PX09EdXV3cEx5Z1lleHhKUGJOb3VGTERheVJ-X0QyNFNWTTdFsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"dEhBUEpQcG5PX09EdXV3cEx5Z1lleHhKUGJOb3VGTERheVJ-X0QyNFNWTTdF","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"dEhBUEpQcG5PX09EdXV3cEx5Z1lleHhKUGJOb3VGTERheVJ-X0QyNFNWTTdFsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"12ynnrdiL9oLwZmUoAWUjU9GhwAKL9fmfTMWSRGnOVU","code_challenge_method":"S256","nonce":"dEhBUEpQcG5PX09EdXV3cEx5Z1lleHhKUGJOb3VGTERheVJ-X0QyNFNWTTdF"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 23:07:37.398 -04:00 [INF] Showing login: User is not authenticated
2020-09-09 23:07:37.404 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 23:07:37.527 -04:00 [DBG] angular_spa found in database: true
2020-09-09 23:07:37.527 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 23:07:37.527 -04:00 [DBG] Checking for PKCE parameters
2020-09-09 23:07:37.542 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 23:07:37.554 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 23:07:37.566 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 23:07:37.581 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 23:07:37.581 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-09 23:07:37.696 -04:00 [DBG] angular_spa found in database: true
2020-09-09 23:07:37.696 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 23:07:40.426 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-09 23:07:40.429 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 23:07:40.587 -04:00 [DBG] angular_spa found in database: true
2020-09-09 23:07:40.587 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 23:07:40.587 -04:00 [DBG] Checking for PKCE parameters
2020-09-09 23:07:40.601 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 23:07:40.614 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 23:07:40.629 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 23:07:40.645 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 23:07:40.645 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-09 23:07:40.713 -04:00 [DBG] Augmenting SignInContext
2020-09-09 23:07:40.713 -04:00 [DBG] Adding idp claim with value: local
2020-09-09 23:07:40.713 -04:00 [DBG] Adding auth_time claim with value: 1599707260
2020-09-09 23:07:40.714 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-09 23:07:40.736 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000075-0007-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-10T03:07:40.0000000Z","ProcessId":19352,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-09 23:07:40.874 -04:00 [DBG] angular_spa found in database: true
2020-09-09 23:07:40.874 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 23:07:40.879 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-09-09 23:07:40.880 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-09-09 23:07:40.880 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-09-09 23:07:40.880 -04:00 [DBG] Start authorize callback request
2020-09-09 23:07:40.880 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-09 23:07:40.880 -04:00 [DBG] Start authorize request protocol validation
2020-09-09 23:07:41.001 -04:00 [DBG] angular_spa found in database: true
2020-09-09 23:07:41.001 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 23:07:41.001 -04:00 [DBG] Checking for PKCE parameters
2020-09-09 23:07:41.017 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 23:07:41.031 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 23:07:41.051 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 23:07:41.064 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 23:07:41.064 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-09 23:07:41.065 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"dEhBUEpQcG5PX09EdXV3cEx5Z1lleHhKUGJOb3VGTERheVJ-X0QyNFNWTTdFsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"dEhBUEpQcG5PX09EdXV3cEx5Z1lleHhKUGJOb3VGTERheVJ-X0QyNFNWTTdF","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"zOoyhuEaC_8ooTzCIi1GkA","Raw":{"response_type":"code","client_id":"angular_spa","state":"dEhBUEpQcG5PX09EdXV3cEx5Z1lleHhKUGJOb3VGTERheVJ-X0QyNFNWTTdFsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"12ynnrdiL9oLwZmUoAWUjU9GhwAKL9fmfTMWSRGnOVU","code_challenge_method":"S256","nonce":"dEhBUEpQcG5PX09EdXV3cEx5Z1lleHhKUGJOb3VGTERheVJ-X0QyNFNWTTdF"},"$type":"AuthorizeRequestValidationLog"}
2020-09-09 23:07:41.095 -04:00 [DBG] eExdRFBRf1V3ruMQVqYpU2dH8/vcePOUe0XJ7DBcKbo= found in database: true
2020-09-09 23:07:41.095 -04:00 [DBG] Consent found in consent store is same as current request, consent is not required
2020-09-09 23:07:41.096 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-09 23:07:41.108 -04:00 [DBG] +E73l7J371/LDX84pa9PATiiBdeVYhnO909kIOOO1AY= not found in database
2020-09-09 23:07:41.195 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****C0TM","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000c8-0005-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-10T03:07:41.0000000Z","ProcessId":19352,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-09 23:07:41.195 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"dEhBUEpQcG5PX09EdXV3cEx5Z1lleHhKUGJOb3VGTERheVJ-X0QyNFNWTTdFsemicolon%2Fbasics%2Fhome","Scope":"openid profile email roles app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-09 23:07:41.195 -04:00 [DBG] Augmenting SignInContext
2020-09-09 23:07:41.195 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-09 23:07:42.000 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-09 23:07:42.030 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 23:07:42.030 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 23:07:42.030 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 23:07:42.031 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 23:07:42.031 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 23:07:42.031 -04:00 [DBG] Start discovery request
2020-09-09 23:07:42.065 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 23:07:42.124 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-09 23:07:42.141 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 23:07:42.141 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 23:07:42.141 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 23:07:42.141 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 23:07:42.141 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 23:07:42.141 -04:00 [DBG] Start key discovery request
2020-09-09 23:07:43.152 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-09 23:07:43.165 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 23:07:43.165 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 23:07:43.165 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-09 23:07:43.165 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-09 23:07:43.165 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-09 23:07:43.165 -04:00 [DBG] Start token request.
2020-09-09 23:07:43.165 -04:00 [DBG] Start client validation
2020-09-09 23:07:43.166 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-09 23:07:43.166 -04:00 [DBG] Start parsing for secret in post body
2020-09-09 23:07:43.166 -04:00 [DBG] client id without secret found
2020-09-09 23:07:43.166 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-09 23:07:43.166 -04:00 [DBG] Secret id found: angular_spa
2020-09-09 23:07:43.278 -04:00 [DBG] angular_spa found in database: true
2020-09-09 23:07:43.278 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 23:07:43.278 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-09 23:07:43.278 -04:00 [DBG] Client validation success
2020-09-09 23:07:43.279 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000035-0002-fa00-b63f-84710c7967bb","TimeStamp":"2020-09-10T03:07:43.0000000Z","ProcessId":19352,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-09 23:07:43.279 -04:00 [DBG] Start token request validation
2020-09-09 23:07:43.279 -04:00 [DBG] Start validation of authorization code token request
2020-09-09 23:07:43.293 -04:00 [DBG] +E73l7J371/LDX84pa9PATiiBdeVYhnO909kIOOO1AY= found in database: true
2020-09-09 23:07:43.307 -04:00 [DBG] removing +E73l7J371/LDX84pa9PATiiBdeVYhnO909kIOOO1AY= persisted grant from database
2020-09-09 23:07:43.347 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-09 23:07:43.363 -04:00 [DBG] Validation of authorization code token request success
2020-09-09 23:07:43.363 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"ERNWnsZXXFmSpxS7IYWbZLJ8KLSNEBSUf27dT7KC0TM","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"ERNWnsZXXFmSpxS7IYWbZLJ8KLSNEBSUf27dT7KC0TM","redirect_uri":"https://localhost:4200","code_verifier":"VjlzNEhHeVVqRktnMTRlSzEzNVJLVDlERzMyYlR5N0JYVG5OLXhjbmwuUS5T","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-09-09 23:07:43.502 -04:00 [DBG] angular_spa found in database: true
2020-09-09 23:07:43.502 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 23:07:43.516 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 23:07:43.530 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 23:07:43.530 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-09-09 23:07:43.530 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-09 23:07:43.718 -04:00 [DBG] angular_spa found in database: true
2020-09-09 23:07:43.718 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 23:07:43.736 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 23:07:43.749 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-09 23:07:43.749 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: angular_spa
2020-09-09 23:07:43.749 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-09 23:07:43.750 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****e58Q","$type":"Token"},{"TokenType":"access_token","TokenValue":"****XtfQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000035-0002-fa00-b63f-84710c7967bb","TimeStamp":"2020-09-10T03:07:43.0000000Z","ProcessId":19352,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-09 23:07:43.750 -04:00 [DBG] Token request success.
2020-09-09 23:07:43.759 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-09 23:07:43.760 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-09 23:07:43.760 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-09 23:07:43.760 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-09 23:07:43.761 -04:00 [DBG] Rendering check session result
2020-09-09 23:07:43.770 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 23:07:43.770 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 23:07:43.772 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-09 23:07:43.786 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 23:07:43.786 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 23:07:43.786 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-09 23:07:43.786 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-09 23:07:43.786 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-09 23:07:43.786 -04:00 [DBG] Start userinfo request
2020-09-09 23:07:43.786 -04:00 [DBG] Bearer token found in header
2020-09-09 23:07:43.903 -04:00 [DBG] angular_spa found in database: true
2020-09-09 23:07:43.903 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 23:07:44.020 -04:00 [DBG] angular_spa found in database: true
2020-09-09 23:07:44.021 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-09 23:07:44.042 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-09 23:07:44.042 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599707263,"exp":1599710863,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599707260,"idp":"local","scope":["roles","openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-09 23:07:44.043 -04:00 [DBG] Creating userinfo response
2020-09-09 23:07:44.043 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-09 23:07:44.043 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-09 23:07:44.056 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 23:07:44.056 -04:00 [DBG] Requested claim types: role sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-09 23:07:44.056 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-09 23:07:44.068 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-09 23:07:44.118 -04:00 [INF] Profile service returned the following claim types: sub name role preferred_username email email_verified
2020-09-09 23:07:44.118 -04:00 [DBG] End userinfo request
2020-09-09 23:13:30.411 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-09 23:13:30.602 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 23:13:30.602 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 23:13:30.602 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 23:13:30.602 -04:00 [DBG] Start discovery request
2020-09-09 23:13:30.618 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 23:13:30.618 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 23:13:30.618 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 23:13:30.618 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 23:13:30.618 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 23:13:30.618 -04:00 [DBG] Start discovery request
2020-09-09 23:13:30.644 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 23:13:30.649 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-09 23:13:30.664 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 23:13:30.664 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 23:13:30.664 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 23:13:30.664 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 23:13:30.664 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 23:13:30.664 -04:00 [DBG] Start key discovery request
2020-09-09 23:13:30.811 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 23:13:30.839 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 23:13:30.839 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 23:13:30.839 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 23:13:30.839 -04:00 [DBG] Start key discovery request
2020-09-09 23:15:11.310 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-09 23:15:11.326 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 23:15:11.326 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 23:15:11.326 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 23:15:11.327 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 23:15:11.327 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 23:15:11.327 -04:00 [DBG] Start discovery request
2020-09-09 23:15:11.385 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 23:15:11.407 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-09 23:15:11.422 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-09 23:15:11.422 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-09 23:15:11.422 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 23:15:11.422 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 23:15:11.422 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 23:15:11.422 -04:00 [DBG] Start key discovery request
2020-09-09 23:15:11.587 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-09 23:15:11.587 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-09 23:15:11.587 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-09 23:15:11.587 -04:00 [DBG] Start discovery request
2020-09-09 23:15:11.674 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-09 23:15:11.703 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-09 23:15:11.703 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-09 23:15:11.703 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-09 23:15:11.703 -04:00 [DBG] Start key discovery request
2020-09-10 07:10:44.063 -04:00 [INF] Starting host...
2020-09-10 07:10:46.024 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-10 07:10:46.144 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-10 07:10:46.144 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-10 07:10:46.144 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-10 07:10:46.144 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-10 07:10:46.145 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-10 07:10:46.145 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-10 07:10:46.394 -04:00 [DBG] Login Url: /Account/Login
2020-09-10 07:10:46.395 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-10 07:10:46.395 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-10 07:10:46.395 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-10 07:10:46.395 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-10 07:10:46.395 -04:00 [DBG] Error Url: /home/error
2020-09-10 07:10:46.395 -04:00 [DBG] Error Id Parameter: errorId
2020-09-10 07:17:08.491 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 07:17:09.499 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 07:17:09.500 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 07:17:09.504 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 07:17:09.516 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 07:17:09.516 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 07:17:09.517 -04:00 [DBG] Start discovery request
2020-09-10 07:17:09.874 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 07:17:09.934 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 07:17:09.966 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 07:17:09.966 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 07:17:09.971 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 07:17:09.975 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 07:17:09.980 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 07:17:09.981 -04:00 [DBG] Start key discovery request
2020-09-10 07:17:11.049 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 07:17:11.053 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 07:17:11.053 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 07:17:11.054 -04:00 [DBG] Start authorize request
2020-09-10 07:17:11.058 -04:00 [DBG] No user present in authorize request
2020-09-10 07:17:11.059 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 07:17:11.362 -04:00 [DBG] angular_spa found in database: true
2020-09-10 07:17:11.366 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 07:17:11.378 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"VmJ0U2M5flg2Q1R4N3dSYldSNUpuTG93bUdEaC5DaTZ5WkNWYzNXMS13M0x0","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"CbrJaPMba9IRhSvJkvhwsJoyNG3achkywboh0Jg5Z9I","code_challenge_method":"S256","nonce":"VmJ0U2M5flg2Q1R4N3dSYldSNUpuTG93bUdEaC5DaTZ5WkNWYzNXMS13M0x0","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 07:17:11.381 -04:00 [ERR] Request validation failed
2020-09-10 07:17:11.381 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"VmJ0U2M5flg2Q1R4N3dSYldSNUpuTG93bUdEaC5DaTZ5WkNWYzNXMS13M0x0","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"CbrJaPMba9IRhSvJkvhwsJoyNG3achkywboh0Jg5Z9I","code_challenge_method":"S256","nonce":"VmJ0U2M5flg2Q1R4N3dSYldSNUpuTG93bUdEaC5DaTZ5WkNWYzNXMS13M0x0","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 07:17:11.388 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000002-0002-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-10T11:17:11.0000000Z","ProcessId":9964,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-10 07:17:31.711 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 07:17:31.732 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 07:17:31.732 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 07:17:31.734 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 07:17:31.737 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 07:17:31.738 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 07:17:31.738 -04:00 [DBG] Start discovery request
2020-09-10 07:17:31.776 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 07:17:31.780 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 07:17:31.794 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 07:17:31.794 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 07:17:31.794 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 07:17:31.794 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 07:17:31.795 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 07:17:31.795 -04:00 [DBG] Start key discovery request
2020-09-10 07:17:32.808 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 07:17:32.810 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 07:17:32.810 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 07:17:32.810 -04:00 [DBG] Start authorize request
2020-09-10 07:17:32.810 -04:00 [DBG] No user present in authorize request
2020-09-10 07:17:32.810 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 07:17:32.968 -04:00 [DBG] angular_spa found in database: true
2020-09-10 07:17:32.969 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 07:17:32.969 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"dUJDUk5VbEtUY3hZdlNGOXhSdGIwSEUtUU9ZS35BcHRGWDBGNi1YdktISmM2","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"Gta2Xc86_hFNZdr3DSK8dU0yWyNjeBAZVXiIGUizMN8","code_challenge_method":"S256","nonce":"dUJDUk5VbEtUY3hZdlNGOXhSdGIwSEUtUU9ZS35BcHRGWDBGNi1YdktISmM2","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 07:17:32.969 -04:00 [ERR] Request validation failed
2020-09-10 07:17:32.969 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"dUJDUk5VbEtUY3hZdlNGOXhSdGIwSEUtUU9ZS35BcHRGWDBGNi1YdktISmM2","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"Gta2Xc86_hFNZdr3DSK8dU0yWyNjeBAZVXiIGUizMN8","code_challenge_method":"S256","nonce":"dUJDUk5VbEtUY3hZdlNGOXhSdGIwSEUtUU9ZS35BcHRGWDBGNi1YdktISmM2","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 07:17:32.969 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000002-0000-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-10T11:17:32.0000000Z","ProcessId":9964,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-10 07:17:45.756 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 07:17:45.776 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 07:17:45.777 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 07:17:45.777 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 07:17:45.786 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 07:17:45.786 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 07:17:45.786 -04:00 [DBG] Start discovery request
2020-09-10 07:17:45.818 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 07:17:45.839 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 07:17:45.852 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 07:17:45.852 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 07:17:45.853 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 07:17:45.854 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 07:17:45.854 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 07:17:45.854 -04:00 [DBG] Start key discovery request
2020-09-10 07:17:46.874 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 07:17:46.877 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 07:17:46.877 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 07:17:46.877 -04:00 [DBG] Start authorize request
2020-09-10 07:17:46.878 -04:00 [DBG] No user present in authorize request
2020-09-10 07:17:46.878 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 07:17:47.004 -04:00 [DBG] angular_spa found in database: true
2020-09-10 07:17:47.004 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 07:17:47.004 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"NUlmSE80cFBqbjkuanpYRS5ZSHBkS1d2R09PcW1RbGdiNlVNaHRPZk96NmJX","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"1OUwrveJSst5C12ACImxEhNCHoxOzi_tbOSusd8WkEs","code_challenge_method":"S256","nonce":"NUlmSE80cFBqbjkuanpYRS5ZSHBkS1d2R09PcW1RbGdiNlVNaHRPZk96NmJX","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 07:17:47.004 -04:00 [ERR] Request validation failed
2020-09-10 07:17:47.004 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"NUlmSE80cFBqbjkuanpYRS5ZSHBkS1d2R09PcW1RbGdiNlVNaHRPZk96NmJX","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"1OUwrveJSst5C12ACImxEhNCHoxOzi_tbOSusd8WkEs","code_challenge_method":"S256","nonce":"NUlmSE80cFBqbjkuanpYRS5ZSHBkS1d2R09PcW1RbGdiNlVNaHRPZk96NmJX","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 07:17:47.005 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000002-000a-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-10T11:17:47.0000000Z","ProcessId":9964,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-10 07:18:07.358 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 07:18:07.358 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 07:18:07.358 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 07:18:07.358 -04:00 [DBG] Start discovery request
2020-09-10 07:18:07.391 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 07:18:07.433 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 07:18:07.433 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 07:18:07.433 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 07:18:07.433 -04:00 [DBG] Start key discovery request
2020-09-10 07:18:13.720 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 07:18:13.741 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 07:18:13.741 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 07:18:13.741 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 07:18:13.742 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 07:18:13.742 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 07:18:13.742 -04:00 [DBG] Start discovery request
2020-09-10 07:18:13.772 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 07:18:13.788 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 07:18:13.804 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 07:18:13.804 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 07:18:13.805 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 07:18:13.805 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 07:18:13.805 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 07:18:13.805 -04:00 [DBG] Start key discovery request
2020-09-10 07:18:14.824 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 07:18:14.824 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 07:18:14.825 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 07:18:14.825 -04:00 [DBG] Start authorize request
2020-09-10 07:18:14.825 -04:00 [DBG] No user present in authorize request
2020-09-10 07:18:14.825 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 07:18:14.956 -04:00 [DBG] angular_spa found in database: true
2020-09-10 07:18:14.956 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 07:18:14.956 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"bzczaktjbmlacjRCQWRuVFhuQX5rLnZQRjVGflpXdFR6b0dMYy55UDNOfjh-","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"P5AHR42i4lmK59qmxk5I8RynQS64hsiNVyAY9us-mL8","code_challenge_method":"S256","nonce":"bzczaktjbmlacjRCQWRuVFhuQX5rLnZQRjVGflpXdFR6b0dMYy55UDNOfjh-","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 07:18:14.956 -04:00 [ERR] Request validation failed
2020-09-10 07:18:14.956 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"bzczaktjbmlacjRCQWRuVFhuQX5rLnZQRjVGflpXdFR6b0dMYy55UDNOfjh-","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"P5AHR42i4lmK59qmxk5I8RynQS64hsiNVyAY9us-mL8","code_challenge_method":"S256","nonce":"bzczaktjbmlacjRCQWRuVFhuQX5rLnZQRjVGflpXdFR6b0dMYy55UDNOfjh-","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 07:18:14.957 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000002-0000-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-10T11:18:14.0000000Z","ProcessId":9964,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-10 07:21:07.336 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 07:21:07.351 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 07:21:07.351 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 07:21:07.351 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 07:21:07.352 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 07:21:07.352 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 07:21:07.352 -04:00 [DBG] Start discovery request
2020-09-10 07:21:07.382 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 07:21:07.408 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 07:21:07.425 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 07:21:07.425 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 07:21:07.426 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 07:21:07.426 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 07:21:07.426 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 07:21:07.426 -04:00 [DBG] Start key discovery request
2020-09-10 07:21:07.556 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 07:21:07.556 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 07:21:07.556 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 07:21:07.556 -04:00 [DBG] Start discovery request
2020-09-10 07:21:07.585 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 07:21:07.614 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 07:21:07.614 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 07:21:07.614 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 07:21:07.614 -04:00 [DBG] Start key discovery request
2020-09-10 07:21:08.467 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 07:21:08.467 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 07:21:08.467 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 07:21:08.467 -04:00 [DBG] Start authorize request
2020-09-10 07:21:08.467 -04:00 [DBG] No user present in authorize request
2020-09-10 07:21:08.467 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 07:21:08.599 -04:00 [DBG] angular_spa found in database: true
2020-09-10 07:21:08.599 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 07:21:08.600 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"VjNHSXAwYl9LU1ZISVAyLi0tVkdJd3VjN0ZYUVIxNUguTnh4ZHktUDhySldU","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"xY7GVm5LqUIAP-_y4otAbgAEMJmRRH9ji3PEV7hcgUo","code_challenge_method":"S256","nonce":"VjNHSXAwYl9LU1ZISVAyLi0tVkdJd3VjN0ZYUVIxNUguTnh4ZHktUDhySldU","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 07:21:08.600 -04:00 [ERR] Request validation failed
2020-09-10 07:21:08.600 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"VjNHSXAwYl9LU1ZISVAyLi0tVkdJd3VjN0ZYUVIxNUguTnh4ZHktUDhySldU","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"xY7GVm5LqUIAP-_y4otAbgAEMJmRRH9ji3PEV7hcgUo","code_challenge_method":"S256","nonce":"VjNHSXAwYl9LU1ZISVAyLi0tVkdJd3VjN0ZYUVIxNUguTnh4ZHktUDhySldU","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 07:21:08.600 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000002-0004-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-10T11:21:08.0000000Z","ProcessId":9964,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-10 07:21:19.823 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 07:21:19.836 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 07:21:19.836 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 07:21:19.836 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 07:21:19.837 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 07:21:19.837 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 07:21:19.837 -04:00 [DBG] Start discovery request
2020-09-10 07:21:19.867 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 07:21:19.870 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 07:21:19.885 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 07:21:19.885 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 07:21:19.885 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 07:21:19.885 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 07:21:19.885 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 07:21:19.885 -04:00 [DBG] Start key discovery request
2020-09-10 07:21:20.895 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 07:21:20.895 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 07:21:20.896 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 07:21:20.896 -04:00 [DBG] Start authorize request
2020-09-10 07:21:20.896 -04:00 [DBG] No user present in authorize request
2020-09-10 07:21:20.896 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 07:21:21.018 -04:00 [DBG] angular_spa found in database: true
2020-09-10 07:21:21.018 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 07:21:21.019 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"VW1FNXpISHRVaH4xckw2LWdrT1haU1NNV3Quc0lQVWxlcFpMYl80d041akhY","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"1Xc6MODUMenKuEGZseKpEKFteOaVJUw71erP9ByRTRs","code_challenge_method":"S256","nonce":"VW1FNXpISHRVaH4xckw2LWdrT1haU1NNV3Quc0lQVWxlcFpMYl80d041akhY","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 07:21:21.019 -04:00 [ERR] Request validation failed
2020-09-10 07:21:21.019 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"VW1FNXpISHRVaH4xckw2LWdrT1haU1NNV3Quc0lQVWxlcFpMYl80d041akhY","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"1Xc6MODUMenKuEGZseKpEKFteOaVJUw71erP9ByRTRs","code_challenge_method":"S256","nonce":"VW1FNXpISHRVaH4xckw2LWdrT1haU1NNV3Quc0lQVWxlcFpMYl80d041akhY","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 07:21:21.019 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000006-0005-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-10T11:21:21.0000000Z","ProcessId":9964,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-10 07:21:32.818 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-09-10 07:21:32.819 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-09-10 07:21:32.819 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-09-10 07:21:32.821 -04:00 [DBG] Processing signout request for anonymous
2020-09-10 07:21:32.823 -04:00 [DBG] Start end session request validation
2020-09-10 07:21:32.825 -04:00 [DBG] Start identity token validation
2020-09-10 07:21:32.977 -04:00 [DBG] angular_spa found in database: true
2020-09-10 07:21:32.977 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 07:21:32.978 -04:00 [DBG] Client found: angular_spa / Sample SPA.PKCE
2020-09-10 07:21:33.100 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-10 07:21:33.100 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599707263,"exp":1599707563,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"dEhBUEpQcG5PX09EdXV3cEx5Z1lleHhKUGJOb3VGTERheVJ-X0QyNFNWTTdF","iat":1599707263,"at_hash":"w90RZwNJlA26VWMa4k5B6Q","s_hash":"LAjY1rZQRzPbkYxXP7SibQ","sid":"zOoyhuEaC_8ooTzCIi1GkA","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599707260,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-10 07:21:33.101 -04:00 [WRN] Invalid PostLogoutRedirectUri: https://localhost:4200
2020-09-10 07:21:33.102 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","SubjectId":"unknown","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-09-10 07:21:33.102 -04:00 [DBG] Success validating end session request from angular_spa
2020-09-10 07:21:42.360 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 07:21:42.360 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 07:21:42.360 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 07:21:42.360 -04:00 [DBG] Start authorize request
2020-09-10 07:21:42.360 -04:00 [DBG] No user present in authorize request
2020-09-10 07:21:42.360 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 07:21:42.493 -04:00 [DBG] angular_spa found in database: true
2020-09-10 07:21:42.493 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 07:21:42.493 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"YnlUcTEyWnctcGlnQ1JsZFlOSjdXR1NUTnJUNTJRYTFXT3BoYnFER1JNdkl3","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"oUfgTHsVyM0m8zUkE-pkvjZJ-hCImSntxePqHBufz8o","code_challenge_method":"S256","nonce":"YnlUcTEyWnctcGlnQ1JsZFlOSjdXR1NUTnJUNTJRYTFXT3BoYnFER1JNdkl3","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 07:21:42.493 -04:00 [ERR] Request validation failed
2020-09-10 07:21:42.494 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"YnlUcTEyWnctcGlnQ1JsZFlOSjdXR1NUTnJUNTJRYTFXT3BoYnFER1JNdkl3","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"oUfgTHsVyM0m8zUkE-pkvjZJ-hCImSntxePqHBufz8o","code_challenge_method":"S256","nonce":"YnlUcTEyWnctcGlnQ1JsZFlOSjdXR1NUTnJUNTJRYTFXT3BoYnFER1JNdkl3","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 07:21:42.494 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000000c-0001-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-10T11:21:42.0000000Z","ProcessId":9964,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-10 07:21:49.550 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 07:21:49.551 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 07:21:49.551 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 07:21:49.551 -04:00 [DBG] Start authorize request
2020-09-10 07:21:49.551 -04:00 [DBG] No user present in authorize request
2020-09-10 07:21:49.551 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 07:21:49.669 -04:00 [DBG] angular_spa found in database: true
2020-09-10 07:21:49.669 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 07:21:49.671 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 07:21:49.722 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 07:21:49.757 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 07:21:49.776 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 07:21:49.791 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 07:21:49.794 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 07:21:49.794 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"SXhkdG5mQzZxb0szTVVSdEVfb280WGltQ2t0ZW5xQllONGVrd0M2M09aMk5fsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"SXhkdG5mQzZxb0szTVVSdEVfb280WGltQ2t0ZW5xQllONGVrd0M2M09aMk5f","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"SXhkdG5mQzZxb0szTVVSdEVfb280WGltQ2t0ZW5xQllONGVrd0M2M09aMk5fsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"c6D9nlhi98IrD_M5A8uQukKQf1erpM7FZg0umkhXS0U","code_challenge_method":"S256","nonce":"SXhkdG5mQzZxb0szTVVSdEVfb280WGltQ2t0ZW5xQllONGVrd0M2M09aMk5f"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 07:21:49.797 -04:00 [INF] Showing login: User is not authenticated
2020-09-10 07:21:49.812 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 07:21:49.953 -04:00 [DBG] angular_spa found in database: true
2020-09-10 07:21:49.953 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 07:21:49.953 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 07:21:49.968 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 07:21:49.980 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 07:21:49.992 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 07:21:50.007 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 07:21:50.007 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 07:21:50.123 -04:00 [DBG] angular_spa found in database: true
2020-09-10 07:21:50.123 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 07:21:53.469 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-10 07:21:53.495 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 07:21:53.627 -04:00 [DBG] angular_spa found in database: true
2020-09-10 07:21:53.627 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 07:21:53.627 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 07:21:53.642 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 07:21:53.682 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 07:21:53.695 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 07:21:53.707 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 07:21:53.707 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 07:21:53.843 -04:00 [DBG] Augmenting SignInContext
2020-09-10 07:21:53.843 -04:00 [DBG] Adding idp claim with value: local
2020-09-10 07:21:53.843 -04:00 [DBG] Adding auth_time claim with value: 1599736913
2020-09-10 07:21:53.856 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-10 07:21:53.867 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000009-0006-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-10T11:21:53.0000000Z","ProcessId":9964,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-10 07:21:54.025 -04:00 [DBG] angular_spa found in database: true
2020-09-10 07:21:54.025 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 07:21:54.036 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-09-10 07:21:54.037 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-09-10 07:21:54.037 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-09-10 07:21:54.038 -04:00 [DBG] Start authorize callback request
2020-09-10 07:21:54.040 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 07:21:54.040 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 07:21:54.197 -04:00 [DBG] angular_spa found in database: true
2020-09-10 07:21:54.197 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 07:21:54.198 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 07:21:54.210 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 07:21:54.225 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 07:21:54.238 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 07:21:54.253 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 07:21:54.253 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 07:21:54.253 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"SXhkdG5mQzZxb0szTVVSdEVfb280WGltQ2t0ZW5xQllONGVrd0M2M09aMk5fsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"SXhkdG5mQzZxb0szTVVSdEVfb280WGltQ2t0ZW5xQllONGVrd0M2M09aMk5f","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"h5qrBLNZEFj2WnSObSQaAA","Raw":{"response_type":"code","client_id":"angular_spa","state":"SXhkdG5mQzZxb0szTVVSdEVfb280WGltQ2t0ZW5xQllONGVrd0M2M09aMk5fsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"c6D9nlhi98IrD_M5A8uQukKQf1erpM7FZg0umkhXS0U","code_challenge_method":"S256","nonce":"SXhkdG5mQzZxb0szTVVSdEVfb280WGltQ2t0ZW5xQllONGVrd0M2M09aMk5f"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 07:21:54.300 -04:00 [DBG] eExdRFBRf1V3ruMQVqYpU2dH8/vcePOUe0XJ7DBcKbo= found in database: true
2020-09-10 07:21:54.310 -04:00 [DBG] Consent found in consent store is same as current request, consent is not required
2020-09-10 07:21:54.312 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-10 07:21:54.358 -04:00 [DBG] voJQN5GlUbso4lzvmEBEOKrCA1Q+7HwQ1Z9gyg8S9qk= not found in database
2020-09-10 07:21:54.522 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****kdT8","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000008-0002-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-10T11:21:54.0000000Z","ProcessId":9964,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 07:21:54.523 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"SXhkdG5mQzZxb0szTVVSdEVfb280WGltQ2t0ZW5xQllONGVrd0M2M09aMk5fsemicolon%2Fbasics%2Fhome","Scope":"openid profile email roles app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-10 07:21:54.527 -04:00 [DBG] Augmenting SignInContext
2020-09-10 07:21:54.527 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-10 07:21:54.663 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 07:21:54.676 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 07:21:54.676 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 07:21:54.676 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 07:21:54.676 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 07:21:54.676 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 07:21:54.676 -04:00 [DBG] Start discovery request
2020-09-10 07:21:54.705 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 07:21:54.727 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 07:21:54.739 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 07:21:54.739 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 07:21:54.739 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 07:21:54.739 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 07:21:54.739 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 07:21:54.739 -04:00 [DBG] Start key discovery request
2020-09-10 07:21:55.758 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-10 07:21:55.769 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 07:21:55.769 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 07:21:55.769 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-10 07:21:55.772 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-10 07:21:55.772 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-10 07:21:55.774 -04:00 [DBG] Start token request.
2020-09-10 07:21:55.776 -04:00 [DBG] Start client validation
2020-09-10 07:21:55.778 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-10 07:21:55.779 -04:00 [DBG] Start parsing for secret in post body
2020-09-10 07:21:55.779 -04:00 [DBG] client id without secret found
2020-09-10 07:21:55.779 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-10 07:21:55.779 -04:00 [DBG] Secret id found: angular_spa
2020-09-10 07:21:55.947 -04:00 [DBG] angular_spa found in database: true
2020-09-10 07:21:55.947 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 07:21:55.948 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-10 07:21:55.948 -04:00 [DBG] Client validation success
2020-09-10 07:21:55.949 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000012-0008-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-10T11:21:55.0000000Z","ProcessId":9964,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-10 07:21:55.952 -04:00 [DBG] Start token request validation
2020-09-10 07:21:55.955 -04:00 [DBG] Start validation of authorization code token request
2020-09-10 07:21:55.967 -04:00 [DBG] voJQN5GlUbso4lzvmEBEOKrCA1Q+7HwQ1Z9gyg8S9qk= found in database: true
2020-09-10 07:21:55.993 -04:00 [DBG] removing voJQN5GlUbso4lzvmEBEOKrCA1Q+7HwQ1Z9gyg8S9qk= persisted grant from database
2020-09-10 07:21:56.055 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-10 07:21:56.075 -04:00 [DBG] Validation of authorization code token request success
2020-09-10 07:21:56.077 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"8MuBKqk64kAl-Orfuknvykd-2v57eC6ROI6dlTikdT8","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"8MuBKqk64kAl-Orfuknvykd-2v57eC6ROI6dlTikdT8","redirect_uri":"https://localhost:4200","code_verifier":"WFY4Q2xzZ1FDR1hjdFY4ZDB3MXJVQ1JRSXZReUtsR2l0RER1VkQtWFVLcVll","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-09-10 07:21:56.204 -04:00 [DBG] angular_spa found in database: true
2020-09-10 07:21:56.204 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 07:21:56.218 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 07:21:56.233 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 07:21:56.240 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-09-10 07:21:56.240 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 07:21:56.435 -04:00 [DBG] angular_spa found in database: true
2020-09-10 07:21:56.435 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 07:21:56.450 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 07:21:56.464 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 07:21:56.468 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: angular_spa
2020-09-10 07:21:56.468 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-10 07:21:56.470 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****v4lA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****-SKw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000012-0008-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-10T11:21:56.0000000Z","ProcessId":9964,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 07:21:56.471 -04:00 [DBG] Token request success.
2020-09-10 07:21:56.484 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 07:21:56.485 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-10 07:21:56.485 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-10 07:21:56.486 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-10 07:21:56.487 -04:00 [DBG] Rendering check session result
2020-09-10 07:21:56.499 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 07:21:56.499 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 07:21:56.502 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 07:21:56.513 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 07:21:56.514 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 07:21:56.514 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-10 07:21:56.515 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-10 07:21:56.515 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-10 07:21:56.517 -04:00 [DBG] Start userinfo request
2020-09-10 07:21:56.519 -04:00 [DBG] Bearer token found in header
2020-09-10 07:21:56.647 -04:00 [DBG] angular_spa found in database: true
2020-09-10 07:21:56.647 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 07:21:56.764 -04:00 [DBG] angular_spa found in database: true
2020-09-10 07:21:56.765 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 07:21:56.777 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-10 07:21:56.777 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599736916,"exp":1599740516,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599736913,"idp":"local","scope":["roles","openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-10 07:21:56.780 -04:00 [DBG] Creating userinfo response
2020-09-10 07:21:56.782 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 07:21:56.782 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 07:21:56.798 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 07:21:56.800 -04:00 [DBG] Requested claim types: role sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-10 07:21:56.801 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 07:21:56.817 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 07:21:56.870 -04:00 [INF] Profile service returned the following claim types: sub name role preferred_username email email_verified
2020-09-10 07:21:56.870 -04:00 [DBG] End userinfo request
2020-09-10 07:21:59.924 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 07:21:59.937 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 07:21:59.937 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 07:21:59.937 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 07:21:59.937 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 07:21:59.937 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 07:21:59.937 -04:00 [DBG] Start discovery request
2020-09-10 07:21:59.970 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 07:21:59.990 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 07:21:59.997 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-10 07:21:59.997 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-10 07:21:59.997 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-10 07:21:59.997 -04:00 [DBG] Rendering check session result
2020-09-10 07:22:00.015 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 07:22:00.015 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 07:22:00.015 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 07:22:00.015 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 07:22:00.015 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 07:22:00.015 -04:00 [DBG] Start key discovery request
2020-09-10 07:22:55.371 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 07:22:55.382 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 07:22:55.382 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 07:22:55.384 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 07:22:55.384 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 07:22:55.384 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 07:22:55.384 -04:00 [DBG] Start discovery request
2020-09-10 07:22:55.413 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 07:22:55.445 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 07:22:55.446 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-10 07:22:55.446 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-10 07:22:55.446 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-10 07:22:55.446 -04:00 [DBG] Rendering check session result
2020-09-10 07:22:55.458 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 07:22:55.458 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 07:22:55.458 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 07:22:55.458 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 07:22:55.458 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 07:22:55.458 -04:00 [DBG] Start key discovery request
2020-09-10 07:22:58.837 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 07:22:58.850 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 07:22:58.851 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 07:22:58.851 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 07:22:58.851 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 07:22:58.851 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 07:22:58.851 -04:00 [DBG] Start discovery request
2020-09-10 07:22:58.879 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 07:22:58.884 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 07:22:58.884 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-10 07:22:58.884 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-10 07:22:58.884 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-10 07:22:58.884 -04:00 [DBG] Rendering check session result
2020-09-10 07:22:58.898 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 07:22:58.898 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 07:22:58.898 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 07:22:58.899 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 07:22:58.899 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 07:22:58.899 -04:00 [DBG] Start key discovery request
2020-09-10 07:23:06.095 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 07:23:06.109 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 07:23:06.109 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 07:23:06.109 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 07:23:06.109 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 07:23:06.109 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 07:23:06.109 -04:00 [DBG] Start discovery request
2020-09-10 07:23:06.140 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 07:23:06.162 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 07:23:06.162 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-10 07:23:06.162 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-10 07:23:06.162 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-10 07:23:06.162 -04:00 [DBG] Rendering check session result
2020-09-10 07:23:06.176 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 07:23:06.177 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 07:23:06.177 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 07:23:06.177 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 07:23:06.177 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 07:23:06.177 -04:00 [DBG] Start key discovery request
2020-09-10 07:23:17.280 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 07:23:17.280 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 07:23:17.280 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 07:23:17.280 -04:00 [DBG] Start discovery request
2020-09-10 07:23:17.309 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 07:23:17.349 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 07:23:17.349 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 07:23:17.349 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 07:23:17.349 -04:00 [DBG] Start key discovery request
2020-09-10 07:23:26.150 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 07:23:26.163 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 07:23:26.163 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 07:23:26.163 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 07:23:26.164 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 07:23:26.166 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 07:23:26.166 -04:00 [DBG] Start discovery request
2020-09-10 07:23:26.192 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 07:23:26.210 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 07:23:26.211 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-10 07:23:26.211 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-10 07:23:26.211 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-10 07:23:26.211 -04:00 [DBG] Rendering check session result
2020-09-10 07:23:26.224 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 07:23:26.224 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 07:23:26.224 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 07:23:26.225 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 07:23:26.225 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 07:23:26.225 -04:00 [DBG] Start key discovery request
2020-09-10 07:24:07.604 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-09-10 07:24:07.616 -04:00 [DBG] Origin https://jwt.io is allowed: false
2020-09-10 07:24:07.616 -04:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-09-10 07:24:07.616 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 07:24:07.616 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 07:24:07.616 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 07:24:07.616 -04:00 [DBG] Start discovery request
2020-09-10 07:24:07.647 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 07:24:31.603 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-09-10 07:24:31.615 -04:00 [DBG] Origin https://jwt.io is allowed: false
2020-09-10 07:24:31.615 -04:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-09-10 07:24:31.615 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 07:24:31.615 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 07:24:31.615 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 07:24:31.615 -04:00 [DBG] Start discovery request
2020-09-10 07:24:31.636 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 07:53:08.939 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-09-10 07:53:09.112 -04:00 [DBG] Origin https://jwt.io is allowed: false
2020-09-10 07:53:09.112 -04:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-09-10 07:53:09.112 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 07:53:09.112 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 07:53:09.112 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 07:53:09.112 -04:00 [DBG] Start discovery request
2020-09-10 07:53:09.142 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 08:10:46.222 -04:00 [INF] Removing 0 grants
2020-09-10 08:10:46.282 -04:00 [INF] Removing 0 device flow codes
2020-09-10 12:16:26.585 -04:00 [INF] Starting host...
2020-09-10 12:16:27.720 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-10 12:16:27.807 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-10 12:16:27.807 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-10 12:16:27.807 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-10 12:16:27.807 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-10 12:16:27.807 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-10 12:16:27.807 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-10 12:16:27.992 -04:00 [DBG] Login Url: /Account/Login
2020-09-10 12:16:27.993 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-10 12:16:27.993 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-10 12:16:27.993 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-10 12:16:27.993 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-10 12:16:27.993 -04:00 [DBG] Error Url: /home/error
2020-09-10 12:16:27.993 -04:00 [DBG] Error Id Parameter: errorId
2020-09-10 12:16:28.005 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:16:28.009 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:18:06.543 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 12:18:07.491 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 12:18:07.492 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 12:18:07.494 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 12:18:07.506 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 12:18:07.506 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 12:18:07.507 -04:00 [DBG] Start discovery request
2020-09-10 12:18:07.912 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 12:18:07.969 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 12:18:08.001 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 12:18:08.001 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 12:18:08.002 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 12:18:08.002 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 12:18:08.002 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 12:18:08.003 -04:00 [DBG] Start key discovery request
2020-09-10 12:18:09.069 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:18:09.069 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:18:09.069 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 12:18:09.071 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 12:18:09.071 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 12:18:09.072 -04:00 [DBG] Start authorize request
2020-09-10 12:18:09.075 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:18:09.076 -04:00 [DBG] No user present in authorize request
2020-09-10 12:18:09.077 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 12:18:09.400 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:18:09.404 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:18:09.416 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"UG1HYnpKeG0uQmp5clBLeGdjazRSNjNSX05ILmZySEpCZGRhalhJZH5BdnFw","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"kxTKiXgg8SI4ES5lpiwN54LWin8UmeENcgwhqpcAsO0","code_challenge_method":"S256","nonce":"UG1HYnpKeG0uQmp5clBLeGdjazRSNjNSX05ILmZySEpCZGRhalhJZH5BdnFw","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 12:18:09.419 -04:00 [ERR] Request validation failed
2020-09-10 12:18:09.419 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"UG1HYnpKeG0uQmp5clBLeGdjazRSNjNSX05ILmZySEpCZGRhalhJZH5BdnFw","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"kxTKiXgg8SI4ES5lpiwN54LWin8UmeENcgwhqpcAsO0","code_challenge_method":"S256","nonce":"UG1HYnpKeG0uQmp5clBLeGdjazRSNjNSX05ILmZySEpCZGRhalhJZH5BdnFw","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 12:18:09.424 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000002a-0000-fb00-b63f-84710c7967bb","TimeStamp":"2020-09-10T16:18:09.0000000Z","ProcessId":18856,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-10 12:18:09.437 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:18:09.437 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:18:14.795 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:18:14.795 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:18:14.796 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 12:18:14.797 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 12:18:14.798 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 12:18:14.798 -04:00 [DBG] Start authorize request
2020-09-10 12:18:14.799 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:18:14.800 -04:00 [DBG] No user present in authorize request
2020-09-10 12:18:14.800 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 12:18:14.924 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:18:14.924 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:18:14.926 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 12:18:14.980 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 12:18:15.017 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 12:18:15.035 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 12:18:15.048 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 12:18:15.052 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 12:18:15.052 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"dkhIUDJNZEdMeUxpOE1lUDZVcXJpbHBjbFg3cmxHVnU5ajJQMC5LWnVpSFhBsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"dkhIUDJNZEdMeUxpOE1lUDZVcXJpbHBjbFg3cmxHVnU5ajJQMC5LWnVpSFhB","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"dkhIUDJNZEdMeUxpOE1lUDZVcXJpbHBjbFg3cmxHVnU5ajJQMC5LWnVpSFhBsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"n295-HwAn90kE5mCR4RXJODPv2cZZoXOyXqNR7rHfP4","code_challenge_method":"S256","nonce":"dkhIUDJNZEdMeUxpOE1lUDZVcXJpbHBjbFg3cmxHVnU5ajJQMC5LWnVpSFhB"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 12:18:15.054 -04:00 [INF] Showing login: User is not authenticated
2020-09-10 12:18:15.062 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:18:15.062 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:18:15.071 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:18:15.071 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 12:18:15.186 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:18:15.187 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:18:15.187 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 12:18:15.199 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 12:18:15.213 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 12:18:15.228 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 12:18:15.242 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 12:18:15.242 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 12:18:15.373 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:18:15.374 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:18:19.811 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-10 12:18:19.814 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:18:19.814 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:18:19.836 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:18:19.836 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 12:18:19.997 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:18:19.997 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:18:19.997 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 12:18:20.010 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 12:18:20.024 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 12:18:20.035 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 12:18:20.047 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 12:18:20.047 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 12:18:20.249 -04:00 [DBG] Augmenting SignInContext
2020-09-10 12:18:20.250 -04:00 [DBG] Adding idp claim with value: local
2020-09-10 12:18:20.250 -04:00 [DBG] Adding auth_time claim with value: 1599754700
2020-09-10 12:18:20.250 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:18:20.256 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-10 12:18:20.269 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000cc-0008-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-10T16:18:20.0000000Z","ProcessId":18856,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-10 12:18:20.386 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:18:20.386 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:18:20.397 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-09-10 12:18:20.398 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-09-10 12:18:20.398 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-09-10 12:18:20.399 -04:00 [DBG] Start authorize callback request
2020-09-10 12:18:20.401 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 12:18:20.401 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 12:18:20.525 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:18:20.525 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:18:20.525 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 12:18:20.537 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 12:18:20.556 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 12:18:20.572 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 12:18:20.588 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 12:18:20.589 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 12:18:20.590 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"dkhIUDJNZEdMeUxpOE1lUDZVcXJpbHBjbFg3cmxHVnU5ajJQMC5LWnVpSFhBsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"dkhIUDJNZEdMeUxpOE1lUDZVcXJpbHBjbFg3cmxHVnU5ajJQMC5LWnVpSFhB","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"z2lsxwMHwpfEINSIkFeRrw","Raw":{"response_type":"code","client_id":"angular_spa","state":"dkhIUDJNZEdMeUxpOE1lUDZVcXJpbHBjbFg3cmxHVnU5ajJQMC5LWnVpSFhBsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"n295-HwAn90kE5mCR4RXJODPv2cZZoXOyXqNR7rHfP4","code_challenge_method":"S256","nonce":"dkhIUDJNZEdMeUxpOE1lUDZVcXJpbHBjbFg3cmxHVnU5ajJQMC5LWnVpSFhB"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 12:18:20.645 -04:00 [DBG] eExdRFBRf1V3ruMQVqYpU2dH8/vcePOUe0XJ7DBcKbo= found in database: true
2020-09-10 12:18:20.654 -04:00 [DBG] Consent found in consent store is same as current request, consent is not required
2020-09-10 12:18:20.656 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-10 12:18:20.687 -04:00 [DBG] wUIihKjWMJRpXKGcYZ4dz/Q4lMJxAlZOOKaee+HBGHE= not found in database
2020-09-10 12:18:20.819 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****3L9E","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000005d-000a-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-10T16:18:20.0000000Z","ProcessId":18856,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 12:18:20.820 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"dkhIUDJNZEdMeUxpOE1lUDZVcXJpbHBjbFg3cmxHVnU5ajJQMC5LWnVpSFhBsemicolon%2Fbasics%2Fhome","Scope":"openid profile email roles app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-10 12:18:20.824 -04:00 [DBG] Augmenting SignInContext
2020-09-10 12:18:20.825 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-10 12:18:20.911 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 12:18:20.927 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 12:18:20.927 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 12:18:20.927 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 12:18:20.927 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 12:18:20.928 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 12:18:20.928 -04:00 [DBG] Start discovery request
2020-09-10 12:18:20.954 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 12:18:20.960 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 12:18:20.972 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 12:18:20.972 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 12:18:20.972 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 12:18:20.973 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 12:18:20.973 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 12:18:20.973 -04:00 [DBG] Start key discovery request
2020-09-10 12:18:21.980 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-10 12:18:21.995 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 12:18:21.995 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 12:18:21.996 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-10 12:18:21.999 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-10 12:18:21.999 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-10 12:18:22.001 -04:00 [DBG] Start token request.
2020-09-10 12:18:22.003 -04:00 [DBG] Start client validation
2020-09-10 12:18:22.006 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-10 12:18:22.006 -04:00 [DBG] Start parsing for secret in post body
2020-09-10 12:18:22.007 -04:00 [DBG] client id without secret found
2020-09-10 12:18:22.007 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-10 12:18:22.007 -04:00 [DBG] Secret id found: angular_spa
2020-09-10 12:18:22.124 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:18:22.124 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:18:22.125 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-10 12:18:22.125 -04:00 [DBG] Client validation success
2020-09-10 12:18:22.125 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000036-0006-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-10T16:18:22.0000000Z","ProcessId":18856,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-10 12:18:22.128 -04:00 [DBG] Start token request validation
2020-09-10 12:18:22.131 -04:00 [DBG] Start validation of authorization code token request
2020-09-10 12:18:22.144 -04:00 [DBG] wUIihKjWMJRpXKGcYZ4dz/Q4lMJxAlZOOKaee+HBGHE= found in database: true
2020-09-10 12:18:22.173 -04:00 [DBG] removing wUIihKjWMJRpXKGcYZ4dz/Q4lMJxAlZOOKaee+HBGHE= persisted grant from database
2020-09-10 12:18:22.230 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-10 12:18:22.242 -04:00 [DBG] Validation of authorization code token request success
2020-09-10 12:18:22.244 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"BPC9wMeMkNedetI7CmnyFMf2Yq-QBvFWQlP0Pxn3L9E","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"BPC9wMeMkNedetI7CmnyFMf2Yq-QBvFWQlP0Pxn3L9E","redirect_uri":"https://localhost:4200","code_verifier":"bFdhWHNBeUdpTFJ3TEd0d05mMDVtemlybzY4NGUwUGpDdk1QQ2liaGZaMmlD","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-09-10 12:18:22.370 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:18:22.370 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:18:22.384 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 12:18:22.397 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 12:18:22.403 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-09-10 12:18:22.404 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 12:18:22.604 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:18:22.604 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:18:22.615 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 12:18:22.632 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 12:18:22.636 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: angular_spa
2020-09-10 12:18:22.636 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-10 12:18:22.638 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****a3jw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****idjg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000036-0006-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-10T16:18:22.0000000Z","ProcessId":18856,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 12:18:22.638 -04:00 [DBG] Token request success.
2020-09-10 12:18:22.648 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 12:18:22.650 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-10 12:18:22.651 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-10 12:18:22.651 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-10 12:18:22.651 -04:00 [DBG] Rendering check session result
2020-09-10 12:18:22.681 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 12:18:22.681 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 12:18:22.683 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 12:18:22.697 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 12:18:22.697 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 12:18:22.697 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-10 12:18:22.698 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-10 12:18:22.698 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-10 12:18:22.699 -04:00 [DBG] Start userinfo request
2020-09-10 12:18:22.700 -04:00 [DBG] Bearer token found in header
2020-09-10 12:18:22.851 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:18:22.851 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:18:22.965 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:18:22.965 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:18:22.981 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-10 12:18:22.982 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599754702,"exp":1599758302,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599754700,"idp":"local","scope":["roles","openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-10 12:18:22.985 -04:00 [DBG] Creating userinfo response
2020-09-10 12:18:22.988 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 12:18:22.990 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 12:18:23.006 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 12:18:23.008 -04:00 [DBG] Requested claim types: role sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-10 12:18:23.008 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 12:18:23.020 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 12:18:23.071 -04:00 [INF] Profile service returned the following claim types: sub name role preferred_username email email_verified
2020-09-10 12:18:23.071 -04:00 [DBG] End userinfo request
2020-09-10 12:18:29.478 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-09-10 12:18:29.478 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-09-10 12:18:29.478 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-09-10 12:18:29.480 -04:00 [DBG] Processing signout request for 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 12:18:29.481 -04:00 [DBG] Start end session request validation
2020-09-10 12:18:29.482 -04:00 [DBG] Start identity token validation
2020-09-10 12:18:29.669 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:18:29.669 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:18:29.670 -04:00 [DBG] Client found: angular_spa / Sample SPA.PKCE
2020-09-10 12:18:29.683 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-10 12:18:29.684 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599754702,"exp":1599755002,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"dkhIUDJNZEdMeUxpOE1lUDZVcXJpbHBjbFg3cmxHVnU5ajJQMC5LWnVpSFhB","iat":1599754702,"at_hash":"-rqvZFc3NmOGspxmPm-WEw","s_hash":"SYJFO_Nap0BlLzARNdwa2w","sid":"z2lsxwMHwpfEINSIkFeRrw","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599754700,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-10 12:18:29.685 -04:00 [WRN] Invalid PostLogoutRedirectUri: https://localhost:4200
2020-09-10 12:18:29.686 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","PostLogOutUri":null,"State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-09-10 12:18:29.687 -04:00 [DBG] Success validating end session request from angular_spa
2020-09-10 12:18:29.714 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-09-10 12:18:29.714 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-10 12:18:29.714 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-09-10 12:18:29.715 -04:00 [INF] {"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"800000ce-0008-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-10T16:18:29.0000000Z","ProcessId":18856,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-09-10 12:18:29.743 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-09-10 12:18:29.744 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-09-10 12:18:29.745 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-09-10 12:18:29.746 -04:00 [DBG] Processing signout callback request
2020-09-10 12:18:29.861 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:18:29.861 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:18:29.862 -04:00 [DBG] No client front-channel logout URLs
2020-09-10 12:18:29.862 -04:00 [DBG] No client back-channel logout URLs
2020-09-10 12:18:29.863 -04:00 [INF] Successful signout callback.
2020-09-10 12:18:29.863 -04:00 [DBG] No client front-channel iframe urls
2020-09-10 12:18:29.863 -04:00 [DBG] No client back-channel iframe urls
2020-09-10 12:18:37.238 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 12:18:37.242 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 12:18:37.242 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 12:18:37.242 -04:00 [DBG] Start authorize request
2020-09-10 12:18:37.242 -04:00 [DBG] No user present in authorize request
2020-09-10 12:18:37.242 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 12:18:37.370 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:18:37.370 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:18:37.370 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"ZHBQSHRoTlRQSEliZ19WTjUzQUx0bHlVV3Z1YTBaS0dOQ0ZoNWlZTV80MG80","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"nBqcTVxZpFNuqQMMvI0KF4JK7TcpPojBD1DNTeGWDvc","code_challenge_method":"S256","nonce":"ZHBQSHRoTlRQSEliZ19WTjUzQUx0bHlVV3Z1YTBaS0dOQ0ZoNWlZTV80MG80","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 12:18:37.370 -04:00 [ERR] Request validation failed
2020-09-10 12:18:37.370 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200/auth-callback","https://localhost:4200"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"ZHBQSHRoTlRQSEliZ19WTjUzQUx0bHlVV3Z1YTBaS0dOQ0ZoNWlZTV80MG80","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"nBqcTVxZpFNuqQMMvI0KF4JK7TcpPojBD1DNTeGWDvc","code_challenge_method":"S256","nonce":"ZHBQSHRoTlRQSEliZ19WTjUzQUx0bHlVV3Z1YTBaS0dOQ0ZoNWlZTV80MG80","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 12:18:37.370 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000061-000a-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-10T16:18:37.0000000Z","ProcessId":18856,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-10 12:19:37.482 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 12:19:37.495 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 12:19:37.495 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 12:19:37.496 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 12:19:37.497 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 12:19:37.497 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 12:19:37.497 -04:00 [DBG] Start discovery request
2020-09-10 12:19:37.578 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 12:19:37.582 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 12:19:37.592 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 12:19:37.592 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 12:19:37.592 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 12:19:37.594 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 12:19:37.594 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 12:19:37.594 -04:00 [DBG] Start key discovery request
2020-09-10 12:19:38.606 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:19:38.606 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:19:38.606 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 12:19:38.607 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 12:19:38.607 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 12:19:38.607 -04:00 [DBG] Start authorize request
2020-09-10 12:19:38.607 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:19:38.607 -04:00 [DBG] No user present in authorize request
2020-09-10 12:19:38.607 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 12:19:38.726 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:19:38.727 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:19:38.727 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"NG9IbXExcUlwSlY2cFRkcGR6MXRzVUlXWm5WRTg0OTd-N3VTb2VBYlJJMlQ2","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"HUPHhxR9C65DGL-e8ql5gdcC5VPThA1sM2_gBZe0IIU","code_challenge_method":"S256","nonce":"NG9IbXExcUlwSlY2cFRkcGR6MXRzVUlXWm5WRTg0OTd-N3VTb2VBYlJJMlQ2","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 12:19:38.727 -04:00 [ERR] Request validation failed
2020-09-10 12:19:38.727 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"NG9IbXExcUlwSlY2cFRkcGR6MXRzVUlXWm5WRTg0OTd-N3VTb2VBYlJJMlQ2","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"HUPHhxR9C65DGL-e8ql5gdcC5VPThA1sM2_gBZe0IIU","code_challenge_method":"S256","nonce":"NG9IbXExcUlwSlY2cFRkcGR6MXRzVUlXWm5WRTg0OTd-N3VTb2VBYlJJMlQ2","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 12:19:38.727 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000047-0002-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-10T16:19:38.0000000Z","ProcessId":18856,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-10 12:19:38.731 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:19:38.731 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:19:44.379 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:19:44.379 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:19:44.379 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 12:19:44.379 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 12:19:44.379 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 12:19:44.379 -04:00 [DBG] Start authorize request
2020-09-10 12:19:44.379 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:19:44.379 -04:00 [DBG] No user present in authorize request
2020-09-10 12:19:44.379 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 12:19:44.503 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:19:44.503 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:19:44.503 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 12:19:44.520 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 12:19:44.535 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 12:19:44.550 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 12:19:44.577 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 12:19:44.577 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 12:19:44.577 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"NWlTaFpyejI5dFFIWnZBLlZRTVB4ZWpGfnRMRzd0Ml84UjJKZk9kYU9ETTBGsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"NWlTaFpyejI5dFFIWnZBLlZRTVB4ZWpGfnRMRzd0Ml84UjJKZk9kYU9ETTBG","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"NWlTaFpyejI5dFFIWnZBLlZRTVB4ZWpGfnRMRzd0Ml84UjJKZk9kYU9ETTBGsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"j6x2IXQep7WMIe1FbPdqv0fK__39sXMoGGCaRvtWKGU","code_challenge_method":"S256","nonce":"NWlTaFpyejI5dFFIWnZBLlZRTVB4ZWpGfnRMRzd0Ml84UjJKZk9kYU9ETTBG"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 12:19:44.578 -04:00 [INF] Showing login: User is not authenticated
2020-09-10 12:19:44.581 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:19:44.581 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:19:44.582 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:19:44.582 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 12:19:44.706 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:19:44.706 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:19:44.706 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 12:19:44.718 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 12:19:44.735 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 12:19:44.752 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 12:19:44.764 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 12:19:44.765 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 12:19:44.911 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:19:44.912 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:19:47.052 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-10 12:19:47.053 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:19:47.053 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:19:47.055 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:19:47.055 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 12:19:47.179 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:19:47.179 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:19:47.180 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 12:19:47.192 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 12:19:47.203 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 12:19:47.218 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 12:19:47.232 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 12:19:47.232 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 12:19:47.294 -04:00 [DBG] Augmenting SignInContext
2020-09-10 12:19:47.294 -04:00 [DBG] Adding idp claim with value: local
2020-09-10 12:19:47.294 -04:00 [DBG] Adding auth_time claim with value: 1599754787
2020-09-10 12:19:47.294 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 12:19:47.294 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-10 12:19:47.305 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000006-0005-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-10T16:19:47.0000000Z","ProcessId":18856,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-10 12:19:47.419 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:19:47.419 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:19:47.424 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-09-10 12:19:47.424 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-09-10 12:19:47.424 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-09-10 12:19:47.424 -04:00 [DBG] Start authorize callback request
2020-09-10 12:19:47.424 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 12:19:47.425 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 12:19:47.534 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:19:47.535 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:19:47.535 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 12:19:47.581 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 12:19:47.592 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 12:19:47.608 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 12:19:47.622 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 12:19:47.622 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 12:19:47.622 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"NWlTaFpyejI5dFFIWnZBLlZRTVB4ZWpGfnRMRzd0Ml84UjJKZk9kYU9ETTBGsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"NWlTaFpyejI5dFFIWnZBLlZRTVB4ZWpGfnRMRzd0Ml84UjJKZk9kYU9ETTBG","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"rsP2n3axx1dXXoqixTFG4w","Raw":{"response_type":"code","client_id":"angular_spa","state":"NWlTaFpyejI5dFFIWnZBLlZRTVB4ZWpGfnRMRzd0Ml84UjJKZk9kYU9ETTBGsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"j6x2IXQep7WMIe1FbPdqv0fK__39sXMoGGCaRvtWKGU","code_challenge_method":"S256","nonce":"NWlTaFpyejI5dFFIWnZBLlZRTVB4ZWpGfnRMRzd0Ml84UjJKZk9kYU9ETTBG"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 12:19:47.662 -04:00 [DBG] eExdRFBRf1V3ruMQVqYpU2dH8/vcePOUe0XJ7DBcKbo= found in database: true
2020-09-10 12:19:47.663 -04:00 [DBG] Consent found in consent store is same as current request, consent is not required
2020-09-10 12:19:47.663 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-10 12:19:47.677 -04:00 [DBG] /RDYHR1aswcEDJgbRqk7E8T8TKEe52ohX4YYGD5kOlA= not found in database
2020-09-10 12:19:47.728 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****Y0l8","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000008-0005-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-10T16:19:47.0000000Z","ProcessId":18856,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 12:19:47.728 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"NWlTaFpyejI5dFFIWnZBLlZRTVB4ZWpGfnRMRzd0Ml84UjJKZk9kYU9ETTBGsemicolon%2Fbasics%2Fhome","Scope":"openid profile email roles app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-10 12:19:47.728 -04:00 [DBG] Augmenting SignInContext
2020-09-10 12:19:47.728 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-10 12:19:47.886 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 12:19:47.898 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 12:19:47.898 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 12:19:47.898 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 12:19:47.899 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 12:19:47.899 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 12:19:47.899 -04:00 [DBG] Start discovery request
2020-09-10 12:19:47.945 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 12:19:47.965 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 12:19:47.979 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 12:19:47.979 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 12:19:47.979 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 12:19:47.979 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 12:19:47.979 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 12:19:47.979 -04:00 [DBG] Start key discovery request
2020-09-10 12:19:48.986 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-10 12:19:49.000 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 12:19:49.000 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 12:19:49.000 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-10 12:19:49.001 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-10 12:19:49.001 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-10 12:19:49.001 -04:00 [DBG] Start token request.
2020-09-10 12:19:49.001 -04:00 [DBG] Start client validation
2020-09-10 12:19:49.001 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-10 12:19:49.001 -04:00 [DBG] Start parsing for secret in post body
2020-09-10 12:19:49.001 -04:00 [DBG] client id without secret found
2020-09-10 12:19:49.001 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-10 12:19:49.001 -04:00 [DBG] Secret id found: angular_spa
2020-09-10 12:19:49.159 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:19:49.159 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:19:49.159 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-10 12:19:49.159 -04:00 [DBG] Client validation success
2020-09-10 12:19:49.160 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"800000d6-0008-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-10T16:19:49.0000000Z","ProcessId":18856,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-10 12:19:49.160 -04:00 [DBG] Start token request validation
2020-09-10 12:19:49.160 -04:00 [DBG] Start validation of authorization code token request
2020-09-10 12:19:49.173 -04:00 [DBG] /RDYHR1aswcEDJgbRqk7E8T8TKEe52ohX4YYGD5kOlA= found in database: true
2020-09-10 12:19:49.187 -04:00 [DBG] removing /RDYHR1aswcEDJgbRqk7E8T8TKEe52ohX4YYGD5kOlA= persisted grant from database
2020-09-10 12:19:49.241 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-10 12:19:49.253 -04:00 [DBG] Validation of authorization code token request success
2020-09-10 12:19:49.253 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"lYPdDLiYAoXBReYzB41ugIhTGAYHPY6ISFCIjMwY0l8","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"lYPdDLiYAoXBReYzB41ugIhTGAYHPY6ISFCIjMwY0l8","redirect_uri":"https://localhost:4200","code_verifier":"UDJhU1Q0TDdqQnJJaDRPQjJLNDlJUmYubk9UX3VLbmNpYXRLSUNkdlpFeWdE","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-09-10 12:19:49.384 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:19:49.384 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:19:49.395 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 12:19:49.409 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 12:19:49.409 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-09-10 12:19:49.409 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 12:19:49.581 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:19:49.581 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:19:49.595 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 12:19:49.609 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 12:19:49.609 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: angular_spa
2020-09-10 12:19:49.609 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-10 12:19:49.610 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****vJ5g","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Qt3A","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000d6-0008-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-10T16:19:49.0000000Z","ProcessId":18856,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 12:19:49.610 -04:00 [DBG] Token request success.
2020-09-10 12:19:49.617 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 12:19:49.620 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-10 12:19:49.620 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-10 12:19:49.620 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-10 12:19:49.620 -04:00 [DBG] Rendering check session result
2020-09-10 12:19:49.630 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 12:19:49.630 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 12:19:49.631 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 12:19:49.644 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 12:19:49.644 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 12:19:49.644 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-10 12:19:49.644 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-10 12:19:49.644 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-10 12:19:49.644 -04:00 [DBG] Start userinfo request
2020-09-10 12:19:49.644 -04:00 [DBG] Bearer token found in header
2020-09-10 12:19:49.798 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:19:49.798 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:19:49.945 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:19:49.945 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:19:49.957 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-10 12:19:49.957 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599754789,"exp":1599758389,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599754787,"idp":"local","scope":["roles","openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-10 12:19:49.958 -04:00 [DBG] Creating userinfo response
2020-09-10 12:19:49.958 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 12:19:49.958 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 12:19:50.006 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 12:19:50.006 -04:00 [DBG] Requested claim types: role sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-10 12:19:50.006 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 12:19:50.019 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 12:19:50.077 -04:00 [INF] Profile service returned the following claim types: sub name role preferred_username email email_verified
2020-09-10 12:19:50.077 -04:00 [DBG] End userinfo request
2020-09-10 12:19:50.397 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-09-10 12:19:50.398 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-09-10 12:19:50.398 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-09-10 12:19:50.398 -04:00 [DBG] Processing signout request for 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 12:19:50.398 -04:00 [DBG] Start end session request validation
2020-09-10 12:19:50.398 -04:00 [DBG] Start identity token validation
2020-09-10 12:19:50.525 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:19:50.525 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:19:50.525 -04:00 [DBG] Client found: angular_spa / Sample SPA.PKCE
2020-09-10 12:19:50.540 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-10 12:19:50.540 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599754789,"exp":1599755089,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"NWlTaFpyejI5dFFIWnZBLlZRTVB4ZWpGfnRMRzd0Ml84UjJKZk9kYU9ETTBG","iat":1599754789,"at_hash":"9JQ99jQkc87ZId53dUqTZw","s_hash":"aIjr2bCF83A5NkI_9AV8YQ","sid":"rsP2n3axx1dXXoqixTFG4w","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599754787,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-10 12:19:50.540 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-09-10 12:19:50.541 -04:00 [DBG] Success validating end session request from angular_spa
2020-09-10 12:19:50.546 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-09-10 12:19:50.546 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-10 12:19:50.546 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-09-10 12:19:50.546 -04:00 [INF] {"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000030-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-10T16:19:50.0000000Z","ProcessId":18856,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-09-10 12:19:50.573 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-09-10 12:19:50.573 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-09-10 12:19:50.573 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-09-10 12:19:50.573 -04:00 [DBG] Processing signout callback request
2020-09-10 12:19:50.737 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:19:50.737 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:19:50.737 -04:00 [DBG] No client front-channel logout URLs
2020-09-10 12:19:50.737 -04:00 [DBG] No client back-channel logout URLs
2020-09-10 12:19:50.737 -04:00 [INF] Successful signout callback.
2020-09-10 12:19:50.737 -04:00 [DBG] No client front-channel iframe urls
2020-09-10 12:19:50.737 -04:00 [DBG] No client back-channel iframe urls
2020-09-10 12:19:54.241 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 12:19:54.257 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 12:19:54.257 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 12:19:54.257 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 12:19:54.257 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 12:19:54.257 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 12:19:54.258 -04:00 [DBG] Start discovery request
2020-09-10 12:19:54.288 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 12:19:54.293 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 12:19:54.305 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 12:19:54.306 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 12:19:54.306 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 12:19:54.306 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 12:19:54.306 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 12:19:54.306 -04:00 [DBG] Start key discovery request
2020-09-10 12:19:55.318 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 12:19:55.318 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 12:19:55.319 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 12:19:55.319 -04:00 [DBG] Start authorize request
2020-09-10 12:19:55.319 -04:00 [DBG] No user present in authorize request
2020-09-10 12:19:55.319 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 12:19:55.432 -04:00 [DBG] angular_spa found in database: true
2020-09-10 12:19:55.432 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 12:19:55.433 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"SkR2clV-ekFwazJLcDFNMUtRWVJYTXZ0aFEzS1YxT0wuaVVBcDhnRnlYMkM3","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"7lk_a8PBIJmOTkR5hEmQc94EFa7L8zTCosnc8vXmVOg","code_challenge_method":"S256","nonce":"SkR2clV-ekFwazJLcDFNMUtRWVJYTXZ0aFEzS1YxT0wuaVVBcDhnRnlYMkM3","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 12:19:55.433 -04:00 [ERR] Request validation failed
2020-09-10 12:19:55.433 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"SkR2clV-ekFwazJLcDFNMUtRWVJYTXZ0aFEzS1YxT0wuaVVBcDhnRnlYMkM3","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"7lk_a8PBIJmOTkR5hEmQc94EFa7L8zTCosnc8vXmVOg","code_challenge_method":"S256","nonce":"SkR2clV-ekFwazJLcDFNMUtRWVJYTXZ0aFEzS1YxT0wuaVVBcDhnRnlYMkM3","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 12:19:55.433 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000008b-0002-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-10T16:19:55.0000000Z","ProcessId":18856,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-10 13:19:31.419 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 13:19:31.641 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 13:19:31.641 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 13:19:31.641 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 13:19:31.641 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 13:19:31.642 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 13:19:31.642 -04:00 [DBG] Start discovery request
2020-09-10 13:19:31.671 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 13:19:31.679 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 13:19:31.695 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 13:19:31.695 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 13:19:31.695 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 13:19:31.695 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 13:19:31.695 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 13:19:31.695 -04:00 [DBG] Start key discovery request
2020-09-10 13:19:34.835 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 13:19:34.838 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 13:19:34.838 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 13:19:34.838 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 13:19:34.838 -04:00 [DBG] Start authorize request
2020-09-10 13:19:34.838 -04:00 [DBG] No user present in authorize request
2020-09-10 13:19:34.838 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 13:19:34.851 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 13:19:34.851 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 13:19:34.852 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 13:19:34.852 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 13:19:34.852 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 13:19:34.852 -04:00 [DBG] Start discovery request
2020-09-10 13:19:34.880 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 13:19:34.884 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 13:19:34.899 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 13:19:34.899 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 13:19:34.899 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 13:19:34.899 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 13:19:34.899 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 13:19:34.899 -04:00 [DBG] Start key discovery request
2020-09-10 13:19:35.181 -04:00 [DBG] angular_spa found in database: true
2020-09-10 13:19:35.182 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 13:19:35.182 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"ZDh2VUJjTnRXSnEyZWxLTm1PQzFrNFFMb1dZZVJfVXlQUHZjT2VBX0ZldDFS","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"x-s6aMLGEnBnBVlFM2ggKZU0lU9b59jXKYbt5YuzAmY","code_challenge_method":"S256","nonce":"ZDh2VUJjTnRXSnEyZWxLTm1PQzFrNFFMb1dZZVJfVXlQUHZjT2VBX0ZldDFS","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 13:19:35.182 -04:00 [ERR] Request validation failed
2020-09-10 13:19:35.182 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"ZDh2VUJjTnRXSnEyZWxLTm1PQzFrNFFMb1dZZVJfVXlQUHZjT2VBX0ZldDFS","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"x-s6aMLGEnBnBVlFM2ggKZU0lU9b59jXKYbt5YuzAmY","code_challenge_method":"S256","nonce":"ZDh2VUJjTnRXSnEyZWxLTm1PQzFrNFFMb1dZZVJfVXlQUHZjT2VBX0ZldDFS","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 13:19:35.183 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000054-000b-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-10T17:19:35.0000000Z","ProcessId":18856,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-10 13:19:35.910 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 13:19:35.910 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 13:19:35.910 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 13:19:35.910 -04:00 [DBG] Start authorize request
2020-09-10 13:19:35.910 -04:00 [DBG] No user present in authorize request
2020-09-10 13:19:35.910 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 13:19:36.055 -04:00 [DBG] angular_spa found in database: true
2020-09-10 13:19:36.056 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 13:19:36.056 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"dzEyV2NocW8wbjJoZX5hQWJNYmV2TGNrfjkxUDM2R1FXZGFubWlOWkRBdEM1","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"LBlWXrs5hF6_TFs-rlondMykU8DZEQHtgr2BdEqPtrw","code_challenge_method":"S256","nonce":"dzEyV2NocW8wbjJoZX5hQWJNYmV2TGNrfjkxUDM2R1FXZGFubWlOWkRBdEM1","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 13:19:36.056 -04:00 [ERR] Request validation failed
2020-09-10 13:19:36.056 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"dzEyV2NocW8wbjJoZX5hQWJNYmV2TGNrfjkxUDM2R1FXZGFubWlOWkRBdEM1","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"LBlWXrs5hF6_TFs-rlondMykU8DZEQHtgr2BdEqPtrw","code_challenge_method":"S256","nonce":"dzEyV2NocW8wbjJoZX5hQWJNYmV2TGNrfjkxUDM2R1FXZGFubWlOWkRBdEM1","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 13:19:36.057 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000007a-0002-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-10T17:19:36.0000000Z","ProcessId":18856,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-10 13:35:55.124 -04:00 [INF] Starting host...
2020-09-10 13:35:56.291 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-10 13:35:56.385 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-10 13:35:56.385 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-10 13:35:56.385 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-10 13:35:56.385 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-10 13:35:56.385 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-10 13:35:56.385 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-10 13:35:56.609 -04:00 [DBG] Login Url: /Account/Login
2020-09-10 13:35:56.610 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-10 13:35:56.610 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-10 13:35:56.610 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-10 13:35:56.610 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-10 13:35:56.610 -04:00 [DBG] Error Url: /home/error
2020-09-10 13:35:56.610 -04:00 [DBG] Error Id Parameter: errorId
2020-09-10 13:35:56.624 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 13:35:56.624 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 13:36:26.289 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 13:36:26.419 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 13:36:26.436 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 13:36:26.436 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 13:36:26.437 -04:00 [DBG] Start discovery request
2020-09-10 13:36:27.753 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 13:36:27.754 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 13:36:27.756 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 13:36:27.757 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 13:36:27.757 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 13:36:27.757 -04:00 [DBG] Start discovery request
2020-09-10 13:36:28.040 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 13:36:28.125 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 13:36:28.126 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 13:36:28.126 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 13:36:28.127 -04:00 [DBG] Start key discovery request
2020-09-10 13:36:28.233 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 13:36:28.238 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 13:36:28.311 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 13:36:28.311 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 13:36:28.312 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 13:36:28.312 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 13:36:28.312 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 13:36:28.312 -04:00 [DBG] Start key discovery request
2020-09-10 13:36:30.754 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 13:36:30.755 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 13:36:30.755 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 13:36:30.757 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 13:36:30.757 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 13:36:30.758 -04:00 [DBG] Start authorize request
2020-09-10 13:36:30.761 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 13:36:30.762 -04:00 [DBG] No user present in authorize request
2020-09-10 13:36:30.764 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 13:36:31.782 -04:00 [DBG] angular_spa found in database: true
2020-09-10 13:36:31.787 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 13:36:31.795 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 13:36:31.855 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 13:36:31.905 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 13:36:31.940 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 13:36:31.965 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 13:36:31.969 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 13:36:31.976 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"TGx3V0tHZy1LdUEySG9XR1VOenJEdktGR1ZJYl9JY0x1M2tEYjVZTGIzMnZ5semicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"TGx3V0tHZy1LdUEySG9XR1VOenJEdktGR1ZJYl9JY0x1M2tEYjVZTGIzMnZ5","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"TGx3V0tHZy1LdUEySG9XR1VOenJEdktGR1ZJYl9JY0x1M2tEYjVZTGIzMnZ5semicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"hP640uGs19ezILkN6dMcP8xfLWeUGMP6uSnBwBglYsU","code_challenge_method":"S256","nonce":"TGx3V0tHZy1LdUEySG9XR1VOenJEdktGR1ZJYl9JY0x1M2tEYjVZTGIzMnZ5"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 13:36:31.980 -04:00 [INF] Showing login: User is not authenticated
2020-09-10 13:36:31.993 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 13:36:31.994 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 13:36:32.018 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 13:36:32.019 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 13:36:32.639 -04:00 [DBG] angular_spa found in database: true
2020-09-10 13:36:32.639 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 13:36:32.639 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 13:36:32.654 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 13:36:33.676 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 13:36:33.714 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 13:36:33.752 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 13:36:33.753 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 13:36:34.608 -04:00 [DBG] angular_spa found in database: true
2020-09-10 13:36:34.608 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 13:36:37.254 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-10 13:36:37.257 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 13:36:37.258 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 13:36:37.284 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 13:36:37.284 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 13:36:37.531 -04:00 [DBG] angular_spa found in database: true
2020-09-10 13:36:37.532 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 13:36:37.532 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 13:36:37.550 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 13:36:37.580 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 13:36:37.593 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 13:36:37.611 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 13:36:37.612 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 13:36:37.829 -04:00 [DBG] Augmenting SignInContext
2020-09-10 13:36:37.829 -04:00 [DBG] Adding idp claim with value: local
2020-09-10 13:36:37.830 -04:00 [DBG] Adding auth_time claim with value: 1599759397
2020-09-10 13:36:37.830 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 13:36:37.837 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-10 13:36:37.854 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"8000004b-0000-fb00-b63f-84710c7967bb","TimeStamp":"2020-09-10T17:36:37.0000000Z","ProcessId":33736,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-10 13:36:38.717 -04:00 [DBG] angular_spa found in database: true
2020-09-10 13:36:38.717 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 13:36:38.730 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-09-10 13:36:38.731 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-09-10 13:36:38.731 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-09-10 13:36:38.732 -04:00 [DBG] Start authorize callback request
2020-09-10 13:36:38.734 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 13:36:38.734 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 13:36:39.971 -04:00 [DBG] angular_spa found in database: true
2020-09-10 13:36:39.971 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 13:36:39.971 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 13:36:39.990 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 13:36:40.011 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 13:36:40.032 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 13:36:40.055 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 13:36:40.055 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 13:36:40.056 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"TGx3V0tHZy1LdUEySG9XR1VOenJEdktGR1ZJYl9JY0x1M2tEYjVZTGIzMnZ5semicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"TGx3V0tHZy1LdUEySG9XR1VOenJEdktGR1ZJYl9JY0x1M2tEYjVZTGIzMnZ5","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"E5WiyjqRMhnTIeQhflzj-w","Raw":{"response_type":"code","client_id":"angular_spa","state":"TGx3V0tHZy1LdUEySG9XR1VOenJEdktGR1ZJYl9JY0x1M2tEYjVZTGIzMnZ5semicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"hP640uGs19ezILkN6dMcP8xfLWeUGMP6uSnBwBglYsU","code_challenge_method":"S256","nonce":"TGx3V0tHZy1LdUEySG9XR1VOenJEdktGR1ZJYl9JY0x1M2tEYjVZTGIzMnZ5"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 13:36:40.163 -04:00 [DBG] eExdRFBRf1V3ruMQVqYpU2dH8/vcePOUe0XJ7DBcKbo= found in database: true
2020-09-10 13:36:40.172 -04:00 [DBG] Consent found in consent store is same as current request, consent is not required
2020-09-10 13:36:40.174 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-10 13:36:40.223 -04:00 [DBG] 5Zi85KmgMpmxtA/eVZoaH4lH+heiyitYt9VhnXyyFO8= not found in database
2020-09-10 13:36:40.427 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****yFuc","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000004d-0000-fb00-b63f-84710c7967bb","TimeStamp":"2020-09-10T17:36:40.0000000Z","ProcessId":33736,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 13:36:40.428 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"TGx3V0tHZy1LdUEySG9XR1VOenJEdktGR1ZJYl9JY0x1M2tEYjVZTGIzMnZ5semicolon%2Fbasics%2Fhome","Scope":"openid profile email roles app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-10 13:36:40.433 -04:00 [DBG] Augmenting SignInContext
2020-09-10 13:36:40.433 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-10 13:36:40.544 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 13:36:40.561 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 13:36:40.561 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 13:36:40.561 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 13:36:40.570 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 13:36:40.570 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 13:36:40.570 -04:00 [DBG] Start discovery request
2020-09-10 13:36:40.601 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 13:36:40.609 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 13:36:40.629 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 13:36:40.630 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 13:36:40.630 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 13:36:40.631 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 13:36:40.631 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 13:36:40.631 -04:00 [DBG] Start key discovery request
2020-09-10 13:36:41.641 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-10 13:36:41.685 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 13:36:41.685 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 13:36:41.686 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-10 13:36:41.688 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-10 13:36:41.688 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-10 13:36:41.690 -04:00 [DBG] Start token request.
2020-09-10 13:36:41.691 -04:00 [DBG] Start client validation
2020-09-10 13:36:41.693 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-10 13:36:41.695 -04:00 [DBG] Start parsing for secret in post body
2020-09-10 13:36:41.695 -04:00 [DBG] client id without secret found
2020-09-10 13:36:41.696 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-10 13:36:41.696 -04:00 [DBG] Secret id found: angular_spa
2020-09-10 13:36:42.778 -04:00 [DBG] angular_spa found in database: true
2020-09-10 13:36:42.778 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 13:36:42.779 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-10 13:36:42.779 -04:00 [DBG] Client validation success
2020-09-10 13:36:42.780 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000085-0004-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-10T17:36:42.0000000Z","ProcessId":33736,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-10 13:36:42.782 -04:00 [DBG] Start token request validation
2020-09-10 13:36:42.784 -04:00 [DBG] Start validation of authorization code token request
2020-09-10 13:36:42.799 -04:00 [DBG] 5Zi85KmgMpmxtA/eVZoaH4lH+heiyitYt9VhnXyyFO8= found in database: true
2020-09-10 13:36:42.841 -04:00 [DBG] removing 5Zi85KmgMpmxtA/eVZoaH4lH+heiyitYt9VhnXyyFO8= persisted grant from database
2020-09-10 13:36:43.157 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-10 13:36:43.182 -04:00 [DBG] Validation of authorization code token request success
2020-09-10 13:36:43.185 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"wQhVqp8f75NRqn3Zyxu4tRCHmY6SG5Qp68CqwDXyFuc","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"wQhVqp8f75NRqn3Zyxu4tRCHmY6SG5Qp68CqwDXyFuc","redirect_uri":"https://localhost:4200","code_verifier":"eU5Xd2UuNHM0SjFlUTNHTXlDfjZ1bTJ6Z1c2N0ZzM1ZzZDFGSGdmNFQzRFZC","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-09-10 13:36:43.566 -04:00 [DBG] angular_spa found in database: true
2020-09-10 13:36:43.566 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 13:36:43.597 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 13:36:43.633 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 13:36:43.641 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-09-10 13:36:43.641 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 13:36:45.224 -04:00 [DBG] angular_spa found in database: true
2020-09-10 13:36:45.224 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 13:36:45.262 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 13:36:45.308 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 13:36:45.312 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: angular_spa
2020-09-10 13:36:45.312 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-10 13:36:45.315 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****0KLA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****npUQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000085-0004-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-10T17:36:45.0000000Z","ProcessId":33736,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 13:36:45.315 -04:00 [DBG] Token request success.
2020-09-10 13:36:45.332 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 13:36:45.336 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-10 13:36:45.337 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-10 13:36:45.337 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-10 13:36:45.337 -04:00 [DBG] Rendering check session result
2020-09-10 13:36:45.365 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 13:36:45.365 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 13:36:45.368 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 13:36:45.400 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 13:36:45.400 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 13:36:45.400 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-10 13:36:45.401 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-10 13:36:45.401 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-10 13:36:45.403 -04:00 [DBG] Start userinfo request
2020-09-10 13:36:45.404 -04:00 [DBG] Bearer token found in header
2020-09-10 13:36:45.763 -04:00 [DBG] angular_spa found in database: true
2020-09-10 13:36:45.763 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 13:36:46.285 -04:00 [DBG] angular_spa found in database: true
2020-09-10 13:36:46.286 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 13:36:46.308 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-10 13:36:46.309 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599759403,"exp":1599763003,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599759397,"idp":"local","scope":["roles","openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-10 13:36:46.312 -04:00 [DBG] Creating userinfo response
2020-09-10 13:36:46.314 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 13:36:46.315 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 13:36:46.328 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 13:36:46.330 -04:00 [DBG] Requested claim types: role sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-10 13:36:46.331 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 13:36:46.343 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 13:36:46.408 -04:00 [INF] Profile service returned the following claim types: sub name role preferred_username email email_verified
2020-09-10 13:36:46.408 -04:00 [DBG] End userinfo request
2020-09-10 13:37:02.350 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-09-10 13:37:02.365 -04:00 [DBG] Origin https://jwt.io is allowed: false
2020-09-10 13:37:02.366 -04:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-09-10 13:37:02.366 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 13:37:02.366 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 13:37:02.366 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 13:37:02.366 -04:00 [DBG] Start discovery request
2020-09-10 13:37:02.403 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 13:38:27.784 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-09-10 13:38:27.942 -04:00 [DBG] Origin https://jwt.io is allowed: false
2020-09-10 13:38:27.942 -04:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-09-10 13:38:27.943 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 13:38:27.943 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 13:38:27.943 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 13:38:27.943 -04:00 [DBG] Start discovery request
2020-09-10 13:38:28.216 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 13:45:34.548 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 13:45:35.958 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 13:45:35.958 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 13:45:35.958 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 13:45:35.958 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 13:45:35.958 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 13:45:35.958 -04:00 [DBG] Start discovery request
2020-09-10 13:45:36.314 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 13:45:36.319 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 13:45:36.792 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 13:45:36.793 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 13:45:36.793 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 13:45:36.793 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 13:45:36.793 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 13:45:36.793 -04:00 [DBG] Start key discovery request
2020-09-10 13:45:51.429 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-09-10 13:45:51.908 -04:00 [DBG] Origin https://jwt.io is allowed: false
2020-09-10 13:45:51.908 -04:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-09-10 13:45:51.908 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 13:45:51.908 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 13:45:51.908 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 13:45:51.908 -04:00 [DBG] Start discovery request
2020-09-10 13:45:52.372 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 14:20:27.805 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-09-10 14:20:27.806 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-09-10 14:20:27.806 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-09-10 14:20:27.808 -04:00 [DBG] Processing signout request for 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 14:20:27.810 -04:00 [DBG] Start end session request validation
2020-09-10 14:20:27.811 -04:00 [DBG] Start identity token validation
2020-09-10 14:20:28.047 -04:00 [DBG] angular_spa found in database: true
2020-09-10 14:20:28.047 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 14:20:28.048 -04:00 [DBG] Client found: angular_spa / Sample SPA.PKCE
2020-09-10 14:20:28.049 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-10 14:20:28.049 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599759405,"exp":1599759705,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"TGx3V0tHZy1LdUEySG9XR1VOenJEdktGR1ZJYl9JY0x1M2tEYjVZTGIzMnZ5","iat":1599759405,"at_hash":"YYGtVHtKrQP-L39myLIVRg","s_hash":"9x2nXpcbdFX_7xqCgLcbLQ","sid":"E5WiyjqRMhnTIeQhflzj-w","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599759397,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-10 14:20:28.051 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-09-10 14:20:28.052 -04:00 [DBG] Success validating end session request from angular_spa
2020-09-10 14:20:28.095 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-09-10 14:20:28.095 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-10 14:20:28.096 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-09-10 14:20:28.096 -04:00 [INF] {"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"800000a8-0006-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-10T18:20:28.0000000Z","ProcessId":33736,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-09-10 14:20:28.130 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-09-10 14:20:28.133 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-09-10 14:20:28.133 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-09-10 14:20:28.134 -04:00 [DBG] Processing signout callback request
2020-09-10 14:20:28.331 -04:00 [DBG] angular_spa found in database: true
2020-09-10 14:20:28.331 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 14:20:28.332 -04:00 [DBG] No client front-channel logout URLs
2020-09-10 14:20:28.332 -04:00 [DBG] No client back-channel logout URLs
2020-09-10 14:20:28.333 -04:00 [INF] Successful signout callback.
2020-09-10 14:20:28.333 -04:00 [DBG] No client front-channel iframe urls
2020-09-10 14:20:28.333 -04:00 [DBG] No client back-channel iframe urls
2020-09-10 14:20:31.159 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 14:20:31.174 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 14:20:31.174 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 14:20:31.175 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 14:20:31.175 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 14:20:31.175 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 14:20:31.175 -04:00 [DBG] Start discovery request
2020-09-10 14:20:31.209 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 14:20:31.241 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 14:20:31.257 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 14:20:31.257 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 14:20:31.257 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 14:20:31.258 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 14:20:31.258 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 14:20:31.258 -04:00 [DBG] Start key discovery request
2020-09-10 14:20:32.273 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 14:20:32.274 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 14:20:32.274 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 14:20:32.274 -04:00 [DBG] Start authorize request
2020-09-10 14:20:32.274 -04:00 [DBG] No user present in authorize request
2020-09-10 14:20:32.274 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 14:20:32.433 -04:00 [DBG] angular_spa found in database: true
2020-09-10 14:20:32.433 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 14:20:32.434 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"cGR5UFNyRWI2YWtZMGFIWjFWUV9KXzJxQVhBSnVWbkZQcn44YU5BTmJSc0ww","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"YnYEEJOUP0tHEWjMBz5avjX2SLOWTOEZiqnKKnpfDMg","code_challenge_method":"S256","nonce":"cGR5UFNyRWI2YWtZMGFIWjFWUV9KXzJxQVhBSnVWbkZQcn44YU5BTmJSc0ww","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 14:20:32.435 -04:00 [ERR] Request validation failed
2020-09-10 14:20:32.435 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"cGR5UFNyRWI2YWtZMGFIWjFWUV9KXzJxQVhBSnVWbkZQcn44YU5BTmJSc0ww","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"YnYEEJOUP0tHEWjMBz5avjX2SLOWTOEZiqnKKnpfDMg","code_challenge_method":"S256","nonce":"cGR5UFNyRWI2YWtZMGFIWjFWUV9KXzJxQVhBSnVWbkZQcn44YU5BTmJSc0ww","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 14:20:32.436 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000075-0007-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-10T18:20:32.0000000Z","ProcessId":33736,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-10 14:20:46.184 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 14:20:46.188 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 14:20:46.188 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 14:20:46.188 -04:00 [DBG] Start authorize request
2020-09-10 14:20:46.189 -04:00 [DBG] No user present in authorize request
2020-09-10 14:20:46.189 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 14:20:46.351 -04:00 [DBG] angular_spa found in database: true
2020-09-10 14:20:46.352 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 14:20:46.352 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 14:20:46.367 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 14:20:46.381 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 14:20:46.396 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 14:20:46.411 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 14:20:46.412 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 14:20:46.412 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"UUR3N2xLeGFzTXBoVzZucGlHMU15VV9jQmNoakZxRE5YeGt2OW9BVHZDTXRUsemicolon%2Fextras%2Fadmin2","UiLocales":null,"Nonce":"UUR3N2xLeGFzTXBoVzZucGlHMU15VV9jQmNoakZxRE5YeGt2OW9BVHZDTXRU","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"UUR3N2xLeGFzTXBoVzZucGlHMU15VV9jQmNoakZxRE5YeGt2OW9BVHZDTXRUsemicolon%2Fextras%2Fadmin2","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"b2DWMitganvTM4hyU5nkYnerIKxAVHp0iWy7UFmDQ40","code_challenge_method":"S256","nonce":"UUR3N2xLeGFzTXBoVzZucGlHMU15VV9jQmNoakZxRE5YeGt2OW9BVHZDTXRU"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 14:20:46.412 -04:00 [INF] Showing login: User is not authenticated
2020-09-10 14:20:46.419 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 14:20:46.554 -04:00 [DBG] angular_spa found in database: true
2020-09-10 14:20:46.554 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 14:20:46.554 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 14:20:46.572 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 14:20:46.585 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 14:20:46.596 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 14:20:46.613 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 14:20:46.613 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 14:20:46.742 -04:00 [DBG] angular_spa found in database: true
2020-09-10 14:20:46.742 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 14:20:55.065 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-10 14:20:55.067 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 14:20:55.232 -04:00 [DBG] angular_spa found in database: true
2020-09-10 14:20:55.232 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 14:20:55.232 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 14:20:55.247 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 14:20:55.262 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 14:20:55.277 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 14:20:55.287 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 14:20:55.288 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 14:20:55.366 -04:00 [DBG] Augmenting SignInContext
2020-09-10 14:20:55.367 -04:00 [DBG] Adding idp claim with value: local
2020-09-10 14:20:55.367 -04:00 [DBG] Adding auth_time claim with value: 1599762055
2020-09-10 14:20:55.367 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-10 14:20:55.381 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"8000004a-0004-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-10T18:20:55.0000000Z","ProcessId":33736,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-10 14:20:55.509 -04:00 [DBG] angular_spa found in database: true
2020-09-10 14:20:55.509 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 14:20:55.515 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-09-10 14:20:55.515 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-09-10 14:20:55.515 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-09-10 14:20:55.515 -04:00 [DBG] Start authorize callback request
2020-09-10 14:20:55.516 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 14:20:55.516 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 14:20:55.640 -04:00 [DBG] angular_spa found in database: true
2020-09-10 14:20:55.640 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 14:20:55.640 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 14:20:55.655 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 14:20:55.670 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 14:20:55.685 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 14:20:55.700 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 14:20:55.700 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 14:20:55.700 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"UUR3N2xLeGFzTXBoVzZucGlHMU15VV9jQmNoakZxRE5YeGt2OW9BVHZDTXRUsemicolon%2Fextras%2Fadmin2","UiLocales":null,"Nonce":"UUR3N2xLeGFzTXBoVzZucGlHMU15VV9jQmNoakZxRE5YeGt2OW9BVHZDTXRU","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"AdpLpJcyuYIIFiKw6Lj0UQ","Raw":{"response_type":"code","client_id":"angular_spa","state":"UUR3N2xLeGFzTXBoVzZucGlHMU15VV9jQmNoakZxRE5YeGt2OW9BVHZDTXRUsemicolon%2Fextras%2Fadmin2","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"b2DWMitganvTM4hyU5nkYnerIKxAVHp0iWy7UFmDQ40","code_challenge_method":"S256","nonce":"UUR3N2xLeGFzTXBoVzZucGlHMU15VV9jQmNoakZxRE5YeGt2OW9BVHZDTXRU"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 14:20:55.737 -04:00 [DBG] eExdRFBRf1V3ruMQVqYpU2dH8/vcePOUe0XJ7DBcKbo= found in database: true
2020-09-10 14:20:55.737 -04:00 [DBG] Consent found in consent store is same as current request, consent is not required
2020-09-10 14:20:55.737 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-10 14:20:55.751 -04:00 [DBG] 5SJ3E8CcJoeVGEJ2dSXPnb9sZFxlp8imVSrSxs1xGdk= not found in database
2020-09-10 14:20:55.819 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****HX_Y","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000061-000a-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-10T18:20:55.0000000Z","ProcessId":33736,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 14:20:55.819 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"UUR3N2xLeGFzTXBoVzZucGlHMU15VV9jQmNoakZxRE5YeGt2OW9BVHZDTXRUsemicolon%2Fextras%2Fadmin2","Scope":"openid profile email roles app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-10 14:20:55.820 -04:00 [DBG] Augmenting SignInContext
2020-09-10 14:20:55.820 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-10 14:20:56.051 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 14:20:56.064 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 14:20:56.064 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 14:20:56.064 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 14:20:56.064 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 14:20:56.064 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 14:20:56.064 -04:00 [DBG] Start discovery request
2020-09-10 14:20:56.102 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 14:20:56.120 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 14:20:56.131 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 14:20:56.131 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 14:20:56.132 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 14:20:56.132 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 14:20:56.132 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 14:20:56.132 -04:00 [DBG] Start key discovery request
2020-09-10 14:20:57.160 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-10 14:20:57.175 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 14:20:57.175 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 14:20:57.176 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-10 14:20:57.176 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-10 14:20:57.176 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-10 14:20:57.176 -04:00 [DBG] Start token request.
2020-09-10 14:20:57.176 -04:00 [DBG] Start client validation
2020-09-10 14:20:57.176 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-10 14:20:57.176 -04:00 [DBG] Start parsing for secret in post body
2020-09-10 14:20:57.177 -04:00 [DBG] client id without secret found
2020-09-10 14:20:57.177 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-10 14:20:57.177 -04:00 [DBG] Secret id found: angular_spa
2020-09-10 14:20:57.328 -04:00 [DBG] angular_spa found in database: true
2020-09-10 14:20:57.328 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 14:20:57.328 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-10 14:20:57.328 -04:00 [DBG] Client validation success
2020-09-10 14:20:57.329 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"800000aa-0006-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-10T18:20:57.0000000Z","ProcessId":33736,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-10 14:20:57.329 -04:00 [DBG] Start token request validation
2020-09-10 14:20:57.329 -04:00 [DBG] Start validation of authorization code token request
2020-09-10 14:20:57.344 -04:00 [DBG] 5SJ3E8CcJoeVGEJ2dSXPnb9sZFxlp8imVSrSxs1xGdk= found in database: true
2020-09-10 14:20:57.358 -04:00 [DBG] removing 5SJ3E8CcJoeVGEJ2dSXPnb9sZFxlp8imVSrSxs1xGdk= persisted grant from database
2020-09-10 14:20:57.447 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-10 14:20:57.463 -04:00 [DBG] Validation of authorization code token request success
2020-09-10 14:20:57.463 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"YmXgDPcUZI3Qz7TIrezrjkD4QCETDtwE6uQovTuHX_Y","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"YmXgDPcUZI3Qz7TIrezrjkD4QCETDtwE6uQovTuHX_Y","redirect_uri":"https://localhost:4200","code_verifier":"WU5GLW41NVl1S2MzV0ZaWm1QazNNaldtcn5KRTQ5Rzg0MEJOSDQyRnRLTUtK","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-09-10 14:20:57.692 -04:00 [DBG] angular_spa found in database: true
2020-09-10 14:20:57.692 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 14:20:57.705 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 14:20:57.718 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 14:20:57.718 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-09-10 14:20:57.718 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 14:20:57.970 -04:00 [DBG] angular_spa found in database: true
2020-09-10 14:20:57.970 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 14:20:57.983 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 14:20:57.997 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 14:20:57.997 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: angular_spa
2020-09-10 14:20:57.997 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-10 14:20:57.999 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****vOcw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****LIrA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000aa-0006-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-10T18:20:57.0000000Z","ProcessId":33736,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 14:20:57.999 -04:00 [DBG] Token request success.
2020-09-10 14:20:58.013 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 14:20:58.016 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-10 14:20:58.016 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-10 14:20:58.016 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-10 14:20:58.016 -04:00 [DBG] Rendering check session result
2020-09-10 14:20:58.028 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 14:20:58.029 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 14:20:58.031 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 14:20:58.043 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 14:20:58.043 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 14:20:58.043 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-10 14:20:58.044 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-10 14:20:58.044 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-10 14:20:58.044 -04:00 [DBG] Start userinfo request
2020-09-10 14:20:58.044 -04:00 [DBG] Bearer token found in header
2020-09-10 14:20:58.316 -04:00 [DBG] angular_spa found in database: true
2020-09-10 14:20:58.316 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 14:20:58.482 -04:00 [DBG] angular_spa found in database: true
2020-09-10 14:20:58.482 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 14:20:58.497 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-10 14:20:58.498 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599762057,"exp":1599765657,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599762055,"idp":"local","scope":["roles","openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-10 14:20:58.498 -04:00 [DBG] Creating userinfo response
2020-09-10 14:20:58.498 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 14:20:58.498 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 14:20:58.512 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 14:20:58.513 -04:00 [DBG] Requested claim types: role sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-10 14:20:58.513 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 14:20:58.530 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 14:20:58.585 -04:00 [INF] Profile service returned the following claim types: sub name role preferred_username email email_verified
2020-09-10 14:20:58.585 -04:00 [DBG] End userinfo request
2020-09-10 14:27:34.035 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 14:27:34.036 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 14:27:34.036 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 14:27:34.036 -04:00 [DBG] Start authorize request
2020-09-10 14:27:34.036 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 14:27:34.036 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 14:27:34.330 -04:00 [DBG] angular_spa found in database: true
2020-09-10 14:27:34.330 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 14:27:34.330 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"ZHBmNWJwdmVBUjBqNE9UcGxMYURFRGYwSnhRX0ZSMGswRy1xUi5WZllZX0ho","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"cNyxJnjBJjig08Jdh27bDxRUHynSneejZLclzYHxsl0","code_challenge_method":"S256","nonce":"ZHBmNWJwdmVBUjBqNE9UcGxMYURFRGYwSnhRX0ZSMGswRy1xUi5WZllZX0ho","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 14:27:34.330 -04:00 [ERR] Request validation failed
2020-09-10 14:27:34.330 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"ZHBmNWJwdmVBUjBqNE9UcGxMYURFRGYwSnhRX0ZSMGswRy1xUi5WZllZX0ho","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"cNyxJnjBJjig08Jdh27bDxRUHynSneejZLclzYHxsl0","code_challenge_method":"S256","nonce":"ZHBmNWJwdmVBUjBqNE9UcGxMYURFRGYwSnhRX0ZSMGswRy1xUi5WZllZX0ho","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 14:27:34.331 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000006a-000b-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-10T18:27:34.0000000Z","ProcessId":33736,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-10 14:35:56.450 -04:00 [INF] Removing 0 grants
2020-09-10 14:35:56.592 -04:00 [INF] Removing 0 device flow codes
2020-09-10 14:57:06.743 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 14:57:06.744 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 14:57:06.744 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 14:57:06.744 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 14:57:06.744 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 14:57:06.744 -04:00 [DBG] Start authorize request
2020-09-10 14:57:06.744 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 14:57:06.744 -04:00 [DBG] No user present in authorize request
2020-09-10 14:57:06.744 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 14:57:07.060 -04:00 [DBG] angular_spa found in database: true
2020-09-10 14:57:07.061 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 14:57:07.061 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 14:57:07.073 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 14:57:07.097 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 14:57:07.111 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 14:57:07.122 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 14:57:07.122 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 14:57:07.122 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"S0pjVXZWa0tvTlpPNVBUODZTT3dXalRTYi1td0lObS04QkVvRWhuTXhnbFBHsemicolon%2Fshould-login","UiLocales":null,"Nonce":"S0pjVXZWa0tvTlpPNVBUODZTT3dXalRTYi1td0lObS04QkVvRWhuTXhnbFBH","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"S0pjVXZWa0tvTlpPNVBUODZTT3dXalRTYi1td0lObS04QkVvRWhuTXhnbFBHsemicolon%2Fshould-login","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"k7PkdH9qbjWlSTHfl-ifI3xeBqOHmRMHXY-zIUOr6B8","code_challenge_method":"S256","nonce":"S0pjVXZWa0tvTlpPNVBUODZTT3dXalRTYi1td0lObS04QkVvRWhuTXhnbFBH"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 14:57:07.122 -04:00 [INF] Showing login: User is not authenticated
2020-09-10 14:57:07.126 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 14:57:07.126 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 14:57:07.127 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 14:57:07.127 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 14:57:07.264 -04:00 [DBG] angular_spa found in database: true
2020-09-10 14:57:07.264 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 14:57:07.264 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 14:57:07.277 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 14:57:07.296 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 14:57:07.309 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 14:57:07.326 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 14:57:07.326 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 14:57:07.551 -04:00 [DBG] angular_spa found in database: true
2020-09-10 14:57:07.551 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 14:57:09.168 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-10 14:57:09.168 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 14:57:09.168 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 14:57:09.171 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 14:57:09.171 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 14:57:09.289 -04:00 [DBG] angular_spa found in database: true
2020-09-10 14:57:09.290 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 14:57:09.290 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 14:57:09.311 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 14:57:09.326 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 14:57:09.340 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 14:57:09.352 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 14:57:09.352 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 14:57:09.410 -04:00 [DBG] Augmenting SignInContext
2020-09-10 14:57:09.410 -04:00 [DBG] Adding idp claim with value: local
2020-09-10 14:57:09.410 -04:00 [DBG] Adding auth_time claim with value: 1599764229
2020-09-10 14:57:09.410 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-10 14:57:09.411 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-10 14:57:09.428 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000b9-0002-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-10T18:57:09.0000000Z","ProcessId":33736,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-10 14:57:09.542 -04:00 [DBG] angular_spa found in database: true
2020-09-10 14:57:09.542 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 14:57:09.549 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-09-10 14:57:09.553 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-09-10 14:57:09.553 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-09-10 14:57:09.553 -04:00 [DBG] Start authorize callback request
2020-09-10 14:57:09.553 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 14:57:09.553 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 14:57:09.668 -04:00 [DBG] angular_spa found in database: true
2020-09-10 14:57:09.668 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 14:57:09.668 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 14:57:09.682 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 14:57:09.698 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 14:57:09.713 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 14:57:09.725 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 14:57:09.725 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 14:57:09.725 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"S0pjVXZWa0tvTlpPNVBUODZTT3dXalRTYi1td0lObS04QkVvRWhuTXhnbFBHsemicolon%2Fshould-login","UiLocales":null,"Nonce":"S0pjVXZWa0tvTlpPNVBUODZTT3dXalRTYi1td0lObS04QkVvRWhuTXhnbFBH","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"IA_6exWAv1p9QLS8M4XzFw","Raw":{"response_type":"code","client_id":"angular_spa","state":"S0pjVXZWa0tvTlpPNVBUODZTT3dXalRTYi1td0lObS04QkVvRWhuTXhnbFBHsemicolon%2Fshould-login","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"k7PkdH9qbjWlSTHfl-ifI3xeBqOHmRMHXY-zIUOr6B8","code_challenge_method":"S256","nonce":"S0pjVXZWa0tvTlpPNVBUODZTT3dXalRTYi1td0lObS04QkVvRWhuTXhnbFBH"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 14:57:09.752 -04:00 [DBG] eExdRFBRf1V3ruMQVqYpU2dH8/vcePOUe0XJ7DBcKbo= found in database: true
2020-09-10 14:57:09.753 -04:00 [DBG] Consent found in consent store is same as current request, consent is not required
2020-09-10 14:57:09.753 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-10 14:57:09.763 -04:00 [DBG] /WLPFpNLt1dkGGvOsLJwSN6gdKl2SjwYNSt50dFZ0jY= not found in database
2020-09-10 14:57:09.810 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****XLDQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000bb-0002-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-10T18:57:09.0000000Z","ProcessId":33736,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 14:57:09.810 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"S0pjVXZWa0tvTlpPNVBUODZTT3dXalRTYi1td0lObS04QkVvRWhuTXhnbFBHsemicolon%2Fshould-login","Scope":"openid profile email roles app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-10 14:57:09.810 -04:00 [DBG] Augmenting SignInContext
2020-09-10 14:57:09.811 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-10 14:57:10.643 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 14:57:10.657 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 14:57:10.657 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 14:57:10.657 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 14:57:10.657 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 14:57:10.657 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 14:57:10.657 -04:00 [DBG] Start discovery request
2020-09-10 14:57:10.685 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 14:57:10.729 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 14:57:10.742 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 14:57:10.742 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 14:57:10.742 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 14:57:10.742 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 14:57:10.742 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 14:57:10.742 -04:00 [DBG] Start key discovery request
2020-09-10 14:57:11.769 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-10 14:57:11.807 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 14:57:11.807 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 14:57:11.807 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-10 14:57:11.814 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-10 14:57:11.814 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-10 14:57:11.814 -04:00 [DBG] Start token request.
2020-09-10 14:57:11.814 -04:00 [DBG] Start client validation
2020-09-10 14:57:11.814 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-10 14:57:11.815 -04:00 [DBG] Start parsing for secret in post body
2020-09-10 14:57:11.815 -04:00 [DBG] client id without secret found
2020-09-10 14:57:11.815 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-10 14:57:11.815 -04:00 [DBG] Secret id found: angular_spa
2020-09-10 14:57:11.970 -04:00 [DBG] angular_spa found in database: true
2020-09-10 14:57:11.970 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 14:57:11.970 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-10 14:57:11.970 -04:00 [DBG] Client validation success
2020-09-10 14:57:11.971 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000052-0004-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-10T18:57:11.0000000Z","ProcessId":33736,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-10 14:57:11.971 -04:00 [DBG] Start token request validation
2020-09-10 14:57:11.971 -04:00 [DBG] Start validation of authorization code token request
2020-09-10 14:57:11.985 -04:00 [DBG] /WLPFpNLt1dkGGvOsLJwSN6gdKl2SjwYNSt50dFZ0jY= found in database: true
2020-09-10 14:57:12.028 -04:00 [DBG] removing /WLPFpNLt1dkGGvOsLJwSN6gdKl2SjwYNSt50dFZ0jY= persisted grant from database
2020-09-10 14:57:12.068 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-10 14:57:12.082 -04:00 [DBG] Validation of authorization code token request success
2020-09-10 14:57:12.082 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"xVw0YgdYpIXwjVbJe47dAqDHPEl_ipKrv_OgF0aXLDQ","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"xVw0YgdYpIXwjVbJe47dAqDHPEl_ipKrv_OgF0aXLDQ","redirect_uri":"https://localhost:4200","code_verifier":"Mi5GfjBjaW1aQURGSXlKcUtWN29qZDFrWlRvfn4ycmtBQmxlVWUyQWEwdTlL","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-09-10 14:57:12.203 -04:00 [DBG] angular_spa found in database: true
2020-09-10 14:57:12.203 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 14:57:12.217 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 14:57:12.235 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 14:57:12.235 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-09-10 14:57:12.235 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 14:57:12.416 -04:00 [DBG] angular_spa found in database: true
2020-09-10 14:57:12.416 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 14:57:12.431 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 14:57:12.443 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 14:57:12.443 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: angular_spa
2020-09-10 14:57:12.444 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-10 14:57:12.445 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****LU6A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****jCEQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000052-0004-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-10T18:57:12.0000000Z","ProcessId":33736,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 14:57:12.445 -04:00 [DBG] Token request success.
2020-09-10 14:57:12.456 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 14:57:12.457 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-10 14:57:12.458 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-10 14:57:12.458 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-10 14:57:12.458 -04:00 [DBG] Rendering check session result
2020-09-10 14:57:12.470 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 14:57:12.470 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 14:57:12.474 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 14:57:12.488 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 14:57:12.489 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 14:57:12.489 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-10 14:57:12.493 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-10 14:57:12.493 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-10 14:57:12.493 -04:00 [DBG] Start userinfo request
2020-09-10 14:57:12.493 -04:00 [DBG] Bearer token found in header
2020-09-10 14:57:12.612 -04:00 [DBG] angular_spa found in database: true
2020-09-10 14:57:12.612 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 14:57:12.732 -04:00 [DBG] angular_spa found in database: true
2020-09-10 14:57:12.732 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 14:57:12.745 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-10 14:57:12.745 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599764232,"exp":1599767832,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599764229,"idp":"local","scope":["roles","openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-10 14:57:12.746 -04:00 [DBG] Creating userinfo response
2020-09-10 14:57:12.746 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 14:57:12.746 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 14:57:12.760 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 14:57:12.760 -04:00 [DBG] Requested claim types: role sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-10 14:57:12.760 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 14:57:12.775 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 14:57:12.831 -04:00 [INF] Profile service returned the following claim types: sub name role preferred_username email email_verified
2020-09-10 14:57:12.831 -04:00 [DBG] End userinfo request
2020-09-10 17:11:36.437 -04:00 [INF] Starting host...
2020-09-10 17:11:37.680 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-10 17:11:37.778 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-10 17:11:37.778 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-10 17:11:37.778 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-10 17:11:37.778 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-10 17:11:37.778 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-10 17:11:37.778 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-10 17:11:38.023 -04:00 [DBG] Login Url: /Account/Login
2020-09-10 17:11:38.024 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-10 17:11:38.024 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-10 17:11:38.024 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-10 17:11:38.024 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-10 17:11:38.024 -04:00 [DBG] Error Url: /home/error
2020-09-10 17:11:38.024 -04:00 [DBG] Error Id Parameter: errorId
2020-09-10 17:11:57.816 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 17:11:58.003 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:11:58.005 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:11:58.009 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 17:11:58.011 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 17:11:58.011 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 17:11:58.012 -04:00 [DBG] Start discovery request
2020-09-10 17:11:58.406 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 17:11:58.465 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 17:11:58.491 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:11:58.491 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:11:58.494 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 17:11:58.495 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 17:11:58.495 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 17:11:58.496 -04:00 [DBG] Start key discovery request
2020-09-10 17:11:59.536 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 17:11:59.537 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 17:11:59.538 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 17:11:59.539 -04:00 [DBG] Start authorize request
2020-09-10 17:11:59.542 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 17:11:59.543 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 17:11:59.806 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:11:59.810 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:11:59.823 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"c2NsNGNKa0RERnVPdlIzYkVORmlqdFhNVmNWMlg5MzlnNVJzY0NaUFNHR3R2","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"y1vo12FPVYi1XsJXi8VdLjp40pCeG2VDnBgJax35TZA","code_challenge_method":"S256","nonce":"c2NsNGNKa0RERnVPdlIzYkVORmlqdFhNVmNWMlg5MzlnNVJzY0NaUFNHR3R2","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 17:11:59.827 -04:00 [ERR] Request validation failed
2020-09-10 17:11:59.827 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"c2NsNGNKa0RERnVPdlIzYkVORmlqdFhNVmNWMlg5MzlnNVJzY0NaUFNHR3R2","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"y1vo12FPVYi1XsJXi8VdLjp40pCeG2VDnBgJax35TZA","code_challenge_method":"S256","nonce":"c2NsNGNKa0RERnVPdlIzYkVORmlqdFhNVmNWMlg5MzlnNVJzY0NaUFNHR3R2","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 17:11:59.834 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000066-0004-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-10T21:11:59.0000000Z","ProcessId":18036,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-10 17:12:07.894 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 17:12:07.897 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 17:12:07.897 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 17:12:07.898 -04:00 [DBG] Start authorize request
2020-09-10 17:12:07.899 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 17:12:07.900 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 17:12:08.044 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:12:08.044 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:12:08.046 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 17:12:08.095 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:12:08.358 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:12:08.378 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:12:08.392 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:12:08.395 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 17:12:08.396 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"VW5CWncwU1JZMWp3fk9OTTBCMGJydS43dS12ck84cko5cldjcnFrZWZkQlZnsemicolon%2Fshould-login","UiLocales":null,"Nonce":"VW5CWncwU1JZMWp3fk9OTTBCMGJydS43dS12ck84cko5cldjcnFrZWZkQlZn","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"IA_6exWAv1p9QLS8M4XzFw","Raw":{"response_type":"code","client_id":"angular_spa","state":"VW5CWncwU1JZMWp3fk9OTTBCMGJydS43dS12ck84cko5cldjcnFrZWZkQlZnsemicolon%2Fshould-login","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"UW8VNwelc67IxzZQSDPfI51VOq53bGheN573s-A0sFw","code_challenge_method":"S256","nonce":"VW5CWncwU1JZMWp3fk9OTTBCMGJydS43dS12ck84cko5cldjcnFrZWZkQlZn"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 17:12:08.450 -04:00 [DBG] eExdRFBRf1V3ruMQVqYpU2dH8/vcePOUe0XJ7DBcKbo= found in database: true
2020-09-10 17:12:08.460 -04:00 [DBG] Consent found in consent store is same as current request, consent is not required
2020-09-10 17:12:08.462 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-10 17:12:08.493 -04:00 [DBG] jcXdmEECubirniL0+s7neMzGg9Xy43YnaIlH/9LgJD8= not found in database
2020-09-10 17:12:08.640 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****vvbk","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000053-0003-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-10T21:12:08.0000000Z","ProcessId":18036,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 17:12:08.641 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"VW5CWncwU1JZMWp3fk9OTTBCMGJydS43dS12ck84cko5cldjcnFrZWZkQlZnsemicolon%2Fshould-login","Scope":"openid profile email roles app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-10 17:12:09.485 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 17:12:09.499 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:12:09.499 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:12:09.500 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 17:12:09.500 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 17:12:09.500 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 17:12:09.500 -04:00 [DBG] Start discovery request
2020-09-10 17:12:09.530 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 17:12:09.551 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 17:12:09.562 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:12:09.563 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:12:09.563 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 17:12:09.563 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 17:12:09.563 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 17:12:09.563 -04:00 [DBG] Start key discovery request
2020-09-10 17:12:10.584 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-10 17:12:10.600 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:12:10.600 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:12:10.601 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-10 17:12:10.603 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-10 17:12:10.604 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-10 17:12:10.606 -04:00 [DBG] Start token request.
2020-09-10 17:12:10.607 -04:00 [DBG] Start client validation
2020-09-10 17:12:10.609 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-10 17:12:10.610 -04:00 [DBG] Start parsing for secret in post body
2020-09-10 17:12:10.616 -04:00 [DBG] client id without secret found
2020-09-10 17:12:10.616 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-10 17:12:10.616 -04:00 [DBG] Secret id found: angular_spa
2020-09-10 17:12:10.736 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:12:10.736 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:12:10.737 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-10 17:12:10.737 -04:00 [DBG] Client validation success
2020-09-10 17:12:10.738 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000070-0006-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-10T21:12:10.0000000Z","ProcessId":18036,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-10 17:12:10.740 -04:00 [DBG] Start token request validation
2020-09-10 17:12:10.742 -04:00 [DBG] Start validation of authorization code token request
2020-09-10 17:12:10.753 -04:00 [DBG] jcXdmEECubirniL0+s7neMzGg9Xy43YnaIlH/9LgJD8= found in database: true
2020-09-10 17:12:10.783 -04:00 [DBG] removing jcXdmEECubirniL0+s7neMzGg9Xy43YnaIlH/9LgJD8= persisted grant from database
2020-09-10 17:12:10.837 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-10 17:12:10.853 -04:00 [DBG] Validation of authorization code token request success
2020-09-10 17:12:10.855 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"oETPppnCf0xaaOUv4vUbuduiEbg3FGjD1e0fvpdvvbk","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"oETPppnCf0xaaOUv4vUbuduiEbg3FGjD1e0fvpdvvbk","redirect_uri":"https://localhost:4200","code_verifier":"LXo0cW15bXpjc3B5NXlkMDlZNGhvMU42TTZ3YUJVdGRrUE00S0NCeXIzWm14","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-09-10 17:12:11.015 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:12:11.015 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:12:11.038 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:12:11.070 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:12:11.077 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-09-10 17:12:11.077 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 17:12:11.278 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:12:11.278 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:12:11.293 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:12:11.309 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:12:11.313 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: angular_spa
2020-09-10 17:12:11.313 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-10 17:12:11.315 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****qkSg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****9I3Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000070-0006-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-10T21:12:11.0000000Z","ProcessId":18036,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 17:12:11.315 -04:00 [DBG] Token request success.
2020-09-10 17:12:11.330 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 17:12:11.334 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-10 17:12:11.334 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-10 17:12:11.334 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-10 17:12:11.335 -04:00 [DBG] Rendering check session result
2020-09-10 17:12:11.343 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:12:11.343 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:12:11.346 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 17:12:11.357 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:12:11.357 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:12:11.357 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-10 17:12:11.358 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-10 17:12:11.358 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-10 17:12:11.361 -04:00 [DBG] Start userinfo request
2020-09-10 17:12:11.362 -04:00 [DBG] Bearer token found in header
2020-09-10 17:12:11.518 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:12:11.518 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:12:11.630 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:12:11.630 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:12:11.643 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-10 17:12:11.643 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599772331,"exp":1599775931,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599764229,"idp":"local","role":"STSAdmRole","scope":["roles","openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-10 17:12:11.646 -04:00 [DBG] Creating userinfo response
2020-09-10 17:12:11.648 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 17:12:11.649 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 17:12:11.661 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:12:11.663 -04:00 [DBG] Requested claim types: role sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-10 17:12:11.663 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 17:12:11.675 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:12:11.731 -04:00 [INF] Profile service returned the following claim types: sub name role preferred_username email email_verified
2020-09-10 17:12:11.732 -04:00 [DBG] End userinfo request
2020-09-10 17:12:51.982 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-09-10 17:12:52.001 -04:00 [DBG] Origin https://jwt.io is allowed: false
2020-09-10 17:12:52.002 -04:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-09-10 17:12:52.002 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 17:12:52.003 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 17:12:52.003 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 17:12:52.003 -04:00 [DBG] Start discovery request
2020-09-10 17:12:52.032 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 17:19:47.565 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 17:19:47.826 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:19:47.826 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:19:47.826 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 17:19:47.827 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 17:19:47.827 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 17:19:47.827 -04:00 [DBG] Start discovery request
2020-09-10 17:19:47.861 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 17:19:47.867 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 17:19:47.891 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:19:47.891 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:19:47.891 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 17:19:47.892 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 17:19:47.892 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 17:19:47.892 -04:00 [DBG] Start key discovery request
2020-09-10 17:19:56.802 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-09-10 17:19:56.804 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-09-10 17:19:56.804 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-09-10 17:19:56.805 -04:00 [DBG] Processing signout request for 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 17:19:56.806 -04:00 [DBG] Start end session request validation
2020-09-10 17:19:56.808 -04:00 [DBG] Start identity token validation
2020-09-10 17:19:56.945 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:19:56.945 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:19:56.946 -04:00 [DBG] Client found: angular_spa / Sample SPA.PKCE
2020-09-10 17:19:56.961 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-10 17:19:56.962 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599772331,"exp":1599772631,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"VW5CWncwU1JZMWp3fk9OTTBCMGJydS43dS12ck84cko5cldjcnFrZWZkQlZn","iat":1599772331,"at_hash":"HLKWbZbfctajjga2YmXvEg","s_hash":"44hGEBvzpeum6At-Y9oE9A","sid":"IA_6exWAv1p9QLS8M4XzFw","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599764229,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-10 17:19:56.963 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-09-10 17:19:56.964 -04:00 [DBG] Success validating end session request from angular_spa
2020-09-10 17:19:57.001 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-09-10 17:19:57.001 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-10 17:19:57.002 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-09-10 17:19:57.002 -04:00 [INF] {"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"8000006a-0004-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-10T21:19:57.0000000Z","ProcessId":18036,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-09-10 17:19:57.035 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-09-10 17:19:57.038 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-09-10 17:19:57.038 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-09-10 17:19:57.040 -04:00 [DBG] Processing signout callback request
2020-09-10 17:19:57.201 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:19:57.201 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:19:57.202 -04:00 [DBG] No client front-channel logout URLs
2020-09-10 17:19:57.202 -04:00 [DBG] No client back-channel logout URLs
2020-09-10 17:19:57.203 -04:00 [INF] Successful signout callback.
2020-09-10 17:19:57.203 -04:00 [DBG] No client front-channel iframe urls
2020-09-10 17:19:57.203 -04:00 [DBG] No client back-channel iframe urls
2020-09-10 17:19:58.872 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 17:19:58.897 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:19:58.897 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:19:58.898 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 17:19:58.899 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 17:19:58.899 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 17:19:58.899 -04:00 [DBG] Start discovery request
2020-09-10 17:19:58.932 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 17:19:58.957 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 17:19:58.971 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:19:58.971 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:19:58.972 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 17:19:58.972 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 17:19:58.972 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 17:19:58.972 -04:00 [DBG] Start key discovery request
2020-09-10 17:19:59.991 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 17:19:59.996 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 17:19:59.996 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 17:19:59.996 -04:00 [DBG] Start authorize request
2020-09-10 17:19:59.997 -04:00 [DBG] No user present in authorize request
2020-09-10 17:19:59.997 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 17:20:00.145 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:20:00.145 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:20:00.146 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"QlRiVERjWWd6VUhHZHJYTjJpX1F2VXQ0QmxNazdpMy4zemdlUW10MWRTQ28u","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"T2QEKZlZpAb72b_FTaTNw3NdQ15BNQsyLwIZJ7JydgY","code_challenge_method":"S256","nonce":"QlRiVERjWWd6VUhHZHJYTjJpX1F2VXQ0QmxNazdpMy4zemdlUW10MWRTQ28u","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 17:20:00.146 -04:00 [ERR] Request validation failed
2020-09-10 17:20:00.146 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"QlRiVERjWWd6VUhHZHJYTjJpX1F2VXQ0QmxNazdpMy4zemdlUW10MWRTQ28u","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"T2QEKZlZpAb72b_FTaTNw3NdQ15BNQsyLwIZJ7JydgY","code_challenge_method":"S256","nonce":"QlRiVERjWWd6VUhHZHJYTjJpX1F2VXQ0QmxNazdpMy4zemdlUW10MWRTQ28u","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 17:20:00.146 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000c4-0006-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-10T21:20:00.0000000Z","ProcessId":18036,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-10 17:20:06.282 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 17:20:06.282 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 17:20:06.282 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 17:20:06.282 -04:00 [DBG] Start authorize request
2020-09-10 17:20:06.283 -04:00 [DBG] No user present in authorize request
2020-09-10 17:20:06.283 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 17:20:06.441 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:20:06.442 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:20:06.442 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 17:20:06.460 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:20:06.474 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:20:06.491 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:20:06.504 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:20:06.504 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 17:20:06.504 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"WUhkdEI5RXFSaURUVjZSRFdMV2xFb1o1X001Z3RXVnJaVVM2VDJWVDM3M0hCsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"WUhkdEI5RXFSaURUVjZSRFdMV2xFb1o1X001Z3RXVnJaVVM2VDJWVDM3M0hC","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"WUhkdEI5RXFSaURUVjZSRFdMV2xFb1o1X001Z3RXVnJaVVM2VDJWVDM3M0hCsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"Q0HNj5HTEGZvS1hRbbvU9f5ZUzjpUceQ6qQhupIZdA0","code_challenge_method":"S256","nonce":"WUhkdEI5RXFSaURUVjZSRFdMV2xFb1o1X001Z3RXVnJaVVM2VDJWVDM3M0hC"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 17:20:06.504 -04:00 [INF] Showing login: User is not authenticated
2020-09-10 17:20:06.520 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 17:20:06.640 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:20:06.641 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:20:06.641 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 17:20:06.654 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:20:06.667 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:20:06.682 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:20:06.699 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:20:06.700 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 17:20:06.834 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:20:06.835 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:20:08.857 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-10 17:20:08.876 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 17:20:09.014 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:20:09.015 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:20:09.015 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 17:20:09.032 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:20:09.045 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:20:09.058 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:20:09.071 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:20:09.072 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 17:20:09.182 -04:00 [DBG] Augmenting SignInContext
2020-09-10 17:20:09.183 -04:00 [DBG] Adding idp claim with value: local
2020-09-10 17:20:09.183 -04:00 [DBG] Adding auth_time claim with value: 1599772809
2020-09-10 17:20:09.186 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-10 17:20:09.201 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000c6-0006-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-10T21:20:09.0000000Z","ProcessId":18036,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-10 17:20:09.327 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:20:09.327 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:20:09.337 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-09-10 17:20:09.337 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-09-10 17:20:09.337 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-09-10 17:20:09.339 -04:00 [DBG] Start authorize callback request
2020-09-10 17:20:09.340 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 17:20:09.340 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 17:20:09.463 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:20:09.463 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:20:09.463 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 17:20:09.476 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:20:09.490 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:20:09.504 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:20:09.518 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:20:09.518 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 17:20:09.519 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"WUhkdEI5RXFSaURUVjZSRFdMV2xFb1o1X001Z3RXVnJaVVM2VDJWVDM3M0hCsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"WUhkdEI5RXFSaURUVjZSRFdMV2xFb1o1X001Z3RXVnJaVVM2VDJWVDM3M0hC","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"FEmh8Pg0Ys5o0DQxJ_44lg","Raw":{"response_type":"code","client_id":"angular_spa","state":"WUhkdEI5RXFSaURUVjZSRFdMV2xFb1o1X001Z3RXVnJaVVM2VDJWVDM3M0hCsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"Q0HNj5HTEGZvS1hRbbvU9f5ZUzjpUceQ6qQhupIZdA0","code_challenge_method":"S256","nonce":"WUhkdEI5RXFSaURUVjZSRFdMV2xFb1o1X001Z3RXVnJaVVM2VDJWVDM3M0hC"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 17:20:09.550 -04:00 [DBG] eExdRFBRf1V3ruMQVqYpU2dH8/vcePOUe0XJ7DBcKbo= found in database: true
2020-09-10 17:20:09.550 -04:00 [DBG] Consent found in consent store is same as current request, consent is not required
2020-09-10 17:20:09.550 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-10 17:20:09.565 -04:00 [DBG] xOU+C6MTdaLQ30/TiGYojEuCraoxdyTwa0E+YjhiAxg= not found in database
2020-09-10 17:20:09.628 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****R77c","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000070-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-10T21:20:09.0000000Z","ProcessId":18036,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 17:20:09.628 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"WUhkdEI5RXFSaURUVjZSRFdMV2xFb1o1X001Z3RXVnJaVVM2VDJWVDM3M0hCsemicolon%2Fbasics%2Fhome","Scope":"openid profile email roles app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-10 17:20:09.631 -04:00 [DBG] Augmenting SignInContext
2020-09-10 17:20:09.632 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-10 17:20:10.408 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 17:20:10.422 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:20:10.422 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:20:10.422 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 17:20:10.423 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 17:20:10.423 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 17:20:10.423 -04:00 [DBG] Start discovery request
2020-09-10 17:20:10.457 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 17:20:10.490 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 17:20:10.507 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:20:10.507 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:20:10.507 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 17:20:10.508 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 17:20:10.508 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 17:20:10.508 -04:00 [DBG] Start key discovery request
2020-09-10 17:20:11.541 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-10 17:20:11.555 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:20:11.555 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:20:11.556 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-10 17:20:11.557 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-10 17:20:11.557 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-10 17:20:11.557 -04:00 [DBG] Start token request.
2020-09-10 17:20:11.558 -04:00 [DBG] Start client validation
2020-09-10 17:20:11.558 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-10 17:20:11.558 -04:00 [DBG] Start parsing for secret in post body
2020-09-10 17:20:11.558 -04:00 [DBG] client id without secret found
2020-09-10 17:20:11.558 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-10 17:20:11.558 -04:00 [DBG] Secret id found: angular_spa
2020-09-10 17:20:11.697 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:20:11.697 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:20:11.697 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-10 17:20:11.697 -04:00 [DBG] Client validation success
2020-09-10 17:20:11.697 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000006e-0004-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-10T21:20:11.0000000Z","ProcessId":18036,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-10 17:20:11.697 -04:00 [DBG] Start token request validation
2020-09-10 17:20:11.698 -04:00 [DBG] Start validation of authorization code token request
2020-09-10 17:20:11.710 -04:00 [DBG] xOU+C6MTdaLQ30/TiGYojEuCraoxdyTwa0E+YjhiAxg= found in database: true
2020-09-10 17:20:11.726 -04:00 [DBG] removing xOU+C6MTdaLQ30/TiGYojEuCraoxdyTwa0E+YjhiAxg= persisted grant from database
2020-09-10 17:20:11.783 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-10 17:20:11.798 -04:00 [DBG] Validation of authorization code token request success
2020-09-10 17:20:11.798 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"A8RRL-4nWqwkeZNx41ncRmcGF934q0namjrOVcxR77c","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"A8RRL-4nWqwkeZNx41ncRmcGF934q0namjrOVcxR77c","redirect_uri":"https://localhost:4200","code_verifier":"QVZmSDh0RnVpQnlEdGkydElrWHFHUDVvb0lXb3Z6enBFMzE3Z0tvaUZMSnVI","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-09-10 17:20:11.990 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:20:11.990 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:20:12.004 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:20:12.019 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:20:12.019 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-09-10 17:20:12.019 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 17:20:12.210 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:20:12.210 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:20:12.223 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:20:12.237 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:20:12.237 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: angular_spa
2020-09-10 17:20:12.237 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-10 17:20:12.238 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****n7_A","$type":"Token"},{"TokenType":"access_token","TokenValue":"****HOGg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000006e-0004-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-10T21:20:12.0000000Z","ProcessId":18036,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 17:20:12.238 -04:00 [DBG] Token request success.
2020-09-10 17:20:12.248 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 17:20:12.250 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-10 17:20:12.250 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-10 17:20:12.250 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-10 17:20:12.250 -04:00 [DBG] Rendering check session result
2020-09-10 17:20:12.261 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:20:12.261 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:20:12.264 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 17:20:12.276 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:20:12.276 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:20:12.276 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-10 17:20:12.276 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-10 17:20:12.276 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-10 17:20:12.276 -04:00 [DBG] Start userinfo request
2020-09-10 17:20:12.277 -04:00 [DBG] Bearer token found in header
2020-09-10 17:20:12.402 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:20:12.402 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:20:12.526 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:20:12.526 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:20:12.542 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-10 17:20:12.542 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599772812,"exp":1599776412,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599772809,"idp":"local","role":"STSAdmRole","scope":["roles","openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-10 17:20:12.542 -04:00 [DBG] Creating userinfo response
2020-09-10 17:20:12.542 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 17:20:12.542 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 17:20:12.558 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:20:12.559 -04:00 [DBG] Requested claim types: role sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-10 17:20:12.559 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 17:20:12.571 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:20:12.621 -04:00 [INF] Profile service returned the following claim types: sub name role preferred_username email email_verified
2020-09-10 17:20:12.621 -04:00 [DBG] End userinfo request
2020-09-10 17:20:46.999 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 17:20:46.999 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 17:20:46.999 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 17:20:46.999 -04:00 [DBG] Start authorize request
2020-09-10 17:20:46.999 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 17:20:46.999 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 17:20:47.128 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:20:47.128 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:20:47.128 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 17:20:47.141 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:20:47.155 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:20:47.170 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:20:47.184 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:20:47.184 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 17:20:47.184 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"Vmp3UWZnYmR0c1FZbG5XaGg1SmxEUFRwTklzbWNaR1RLajNzSlBuc25UVElFsemicolon%2Fshould-login","UiLocales":null,"Nonce":"Vmp3UWZnYmR0c1FZbG5XaGg1SmxEUFRwTklzbWNaR1RLajNzSlBuc25UVElF","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"FEmh8Pg0Ys5o0DQxJ_44lg","Raw":{"response_type":"code","client_id":"angular_spa","state":"Vmp3UWZnYmR0c1FZbG5XaGg1SmxEUFRwTklzbWNaR1RLajNzSlBuc25UVElFsemicolon%2Fshould-login","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"Dt9OE7bEhbBaF-tpHdqIjVkOkOPEmhNgWJvkTJbepiw","code_challenge_method":"S256","nonce":"Vmp3UWZnYmR0c1FZbG5XaGg1SmxEUFRwTklzbWNaR1RLajNzSlBuc25UVElF"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 17:20:47.211 -04:00 [DBG] eExdRFBRf1V3ruMQVqYpU2dH8/vcePOUe0XJ7DBcKbo= found in database: true
2020-09-10 17:20:47.211 -04:00 [DBG] Consent found in consent store is same as current request, consent is not required
2020-09-10 17:20:47.211 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-10 17:20:47.226 -04:00 [DBG] +gJhXseaOaTgkhOJOfzj95pR/g0U8NJHJ3g7KgWB/mk= not found in database
2020-09-10 17:20:47.280 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****3Eus","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000089-0008-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-10T21:20:47.0000000Z","ProcessId":18036,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 17:20:47.280 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"Vmp3UWZnYmR0c1FZbG5XaGg1SmxEUFRwTklzbWNaR1RLajNzSlBuc25UVElFsemicolon%2Fshould-login","Scope":"openid profile email roles app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-10 17:20:48.068 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 17:20:48.084 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:20:48.085 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:20:48.085 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 17:20:48.085 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 17:20:48.085 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 17:20:48.085 -04:00 [DBG] Start discovery request
2020-09-10 17:20:48.120 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 17:20:48.145 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 17:20:48.161 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:20:48.161 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:20:48.161 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 17:20:48.161 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 17:20:48.161 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 17:20:48.161 -04:00 [DBG] Start key discovery request
2020-09-10 17:20:49.184 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-10 17:20:49.200 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:20:49.200 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:20:49.200 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-10 17:20:49.207 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-10 17:20:49.207 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-10 17:20:49.207 -04:00 [DBG] Start token request.
2020-09-10 17:20:49.207 -04:00 [DBG] Start client validation
2020-09-10 17:20:49.207 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-10 17:20:49.207 -04:00 [DBG] Start parsing for secret in post body
2020-09-10 17:20:49.208 -04:00 [DBG] client id without secret found
2020-09-10 17:20:49.208 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-10 17:20:49.208 -04:00 [DBG] Secret id found: angular_spa
2020-09-10 17:20:49.356 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:20:49.357 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:20:49.357 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-10 17:20:49.357 -04:00 [DBG] Client validation success
2020-09-10 17:20:49.357 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000045-0005-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-10T21:20:49.0000000Z","ProcessId":18036,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-10 17:20:49.357 -04:00 [DBG] Start token request validation
2020-09-10 17:20:49.357 -04:00 [DBG] Start validation of authorization code token request
2020-09-10 17:20:49.372 -04:00 [DBG] +gJhXseaOaTgkhOJOfzj95pR/g0U8NJHJ3g7KgWB/mk= found in database: true
2020-09-10 17:20:49.386 -04:00 [DBG] removing +gJhXseaOaTgkhOJOfzj95pR/g0U8NJHJ3g7KgWB/mk= persisted grant from database
2020-09-10 17:20:49.430 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-10 17:20:49.446 -04:00 [DBG] Validation of authorization code token request success
2020-09-10 17:20:49.446 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"SR1jr65QvzHOnxcwyohpYSAJrhFQZJbQ6c6-3Bw3Eus","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"SR1jr65QvzHOnxcwyohpYSAJrhFQZJbQ6c6-3Bw3Eus","redirect_uri":"https://localhost:4200","code_verifier":"cFhzeUh1RDBXSn5QS0twd0tSRWdHTjl0MkwzendGeX5-NjBaMS5vYTAubFBQ","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-09-10 17:20:49.574 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:20:49.574 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:20:49.588 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:20:49.600 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:20:49.600 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-09-10 17:20:49.601 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 17:20:49.764 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:20:49.764 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:20:49.778 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:20:49.800 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:20:49.800 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: angular_spa
2020-09-10 17:20:49.800 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-10 17:20:49.802 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****bGKA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****ZynQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000045-0005-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-10T21:20:49.0000000Z","ProcessId":18036,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 17:20:49.802 -04:00 [DBG] Token request success.
2020-09-10 17:20:49.811 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 17:20:49.812 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-10 17:20:49.813 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-10 17:20:49.813 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-10 17:20:49.813 -04:00 [DBG] Rendering check session result
2020-09-10 17:20:49.826 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:20:49.826 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:20:49.828 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 17:20:49.843 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:20:49.843 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:20:49.843 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-10 17:20:49.846 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-10 17:20:49.846 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-10 17:20:49.846 -04:00 [DBG] Start userinfo request
2020-09-10 17:20:49.846 -04:00 [DBG] Bearer token found in header
2020-09-10 17:20:49.987 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:20:49.987 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:20:50.104 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:20:50.105 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:20:50.120 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-10 17:20:50.120 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599772849,"exp":1599776449,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599772809,"idp":"local","role":"STSAdmRole","scope":["roles","openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-10 17:20:50.120 -04:00 [DBG] Creating userinfo response
2020-09-10 17:20:50.121 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 17:20:50.121 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 17:20:50.135 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:20:50.135 -04:00 [DBG] Requested claim types: role sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-10 17:20:50.135 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 17:20:50.150 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:20:50.205 -04:00 [INF] Profile service returned the following claim types: sub name role preferred_username email email_verified
2020-09-10 17:20:50.205 -04:00 [DBG] End userinfo request
2020-09-10 17:21:00.234 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-09-10 17:21:00.246 -04:00 [DBG] Origin https://jwt.io is allowed: false
2020-09-10 17:21:00.246 -04:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-09-10 17:21:00.246 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 17:21:00.247 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 17:21:00.247 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 17:21:00.247 -04:00 [DBG] Start discovery request
2020-09-10 17:21:00.276 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 17:21:23.218 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-09-10 17:21:23.219 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-09-10 17:21:23.219 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-09-10 17:21:23.219 -04:00 [DBG] Processing signout request for 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 17:21:23.219 -04:00 [DBG] Start end session request validation
2020-09-10 17:21:23.219 -04:00 [DBG] Start identity token validation
2020-09-10 17:21:23.354 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:21:23.355 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:21:23.355 -04:00 [DBG] Client found: angular_spa / Sample SPA.PKCE
2020-09-10 17:21:23.368 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-10 17:21:23.368 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599772849,"exp":1599773149,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"Vmp3UWZnYmR0c1FZbG5XaGg1SmxEUFRwTklzbWNaR1RLajNzSlBuc25UVElF","iat":1599772849,"at_hash":"wOrIAmk5vNl9TtZp8aVnGw","s_hash":"MYN327ypBQSzNnVa79gjDg","sid":"FEmh8Pg0Ys5o0DQxJ_44lg","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599772809,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-10 17:21:23.369 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-09-10 17:21:23.369 -04:00 [DBG] Success validating end session request from angular_spa
2020-09-10 17:21:23.375 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-09-10 17:21:23.375 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-10 17:21:23.375 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-09-10 17:21:23.376 -04:00 [INF] {"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000006-0009-fa00-b63f-84710c7967bb","TimeStamp":"2020-09-10T21:21:23.0000000Z","ProcessId":18036,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-09-10 17:21:23.418 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-09-10 17:21:23.419 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-09-10 17:21:23.419 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-09-10 17:21:23.419 -04:00 [DBG] Processing signout callback request
2020-09-10 17:21:23.556 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:21:23.556 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:21:23.556 -04:00 [DBG] No client front-channel logout URLs
2020-09-10 17:21:23.556 -04:00 [DBG] No client back-channel logout URLs
2020-09-10 17:21:23.556 -04:00 [INF] Successful signout callback.
2020-09-10 17:21:23.556 -04:00 [DBG] No client front-channel iframe urls
2020-09-10 17:21:23.556 -04:00 [DBG] No client back-channel iframe urls
2020-09-10 17:21:25.203 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 17:21:25.219 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:21:25.219 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:21:25.219 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 17:21:25.219 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 17:21:25.219 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 17:21:25.219 -04:00 [DBG] Start discovery request
2020-09-10 17:21:25.251 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 17:21:25.285 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 17:21:25.300 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:21:25.300 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:21:25.301 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 17:21:25.301 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 17:21:25.301 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 17:21:25.301 -04:00 [DBG] Start key discovery request
2020-09-10 17:21:26.330 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 17:21:26.330 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 17:21:26.330 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 17:21:26.330 -04:00 [DBG] Start authorize request
2020-09-10 17:21:26.330 -04:00 [DBG] No user present in authorize request
2020-09-10 17:21:26.330 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 17:21:26.472 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:21:26.472 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:21:26.472 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"Zlgzbnl4YXRwaTVUSWVKSEhHZlBWU0xCeWpfU2E2UG15VnNPcTYwSm9pbjM0","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"8jyveeataO9wt6166bTCTPLgcPmUIh2bhfRDMpEwyf4","code_challenge_method":"S256","nonce":"Zlgzbnl4YXRwaTVUSWVKSEhHZlBWU0xCeWpfU2E2UG15VnNPcTYwSm9pbjM0","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 17:21:26.472 -04:00 [ERR] Request validation failed
2020-09-10 17:21:26.472 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"Zlgzbnl4YXRwaTVUSWVKSEhHZlBWU0xCeWpfU2E2UG15VnNPcTYwSm9pbjM0","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"8jyveeataO9wt6166bTCTPLgcPmUIh2bhfRDMpEwyf4","code_challenge_method":"S256","nonce":"Zlgzbnl4YXRwaTVUSWVKSEhHZlBWU0xCeWpfU2E2UG15VnNPcTYwSm9pbjM0","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 17:21:26.472 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000059-0003-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-10T21:21:26.0000000Z","ProcessId":18036,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-10 17:21:35.633 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 17:21:35.633 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 17:21:35.633 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 17:21:35.633 -04:00 [DBG] Start authorize request
2020-09-10 17:21:35.633 -04:00 [DBG] No user present in authorize request
2020-09-10 17:21:35.633 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 17:21:35.757 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:21:35.757 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:21:35.757 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 17:21:35.771 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:21:35.809 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:21:35.825 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:21:35.840 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:21:35.841 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 17:21:35.841 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"S0xnT3oyTVluY3NLZS5CeHlPbWdMR2hNNEs0aUFaZFlIX2phUENEUnhNNWx4semicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"S0xnT3oyTVluY3NLZS5CeHlPbWdMR2hNNEs0aUFaZFlIX2phUENEUnhNNWx4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"S0xnT3oyTVluY3NLZS5CeHlPbWdMR2hNNEs0aUFaZFlIX2phUENEUnhNNWx4semicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"Id0R0D-plzFhGryhTt4Deu301OqRUxVYvj6LZkWcgMc","code_challenge_method":"S256","nonce":"S0xnT3oyTVluY3NLZS5CeHlPbWdMR2hNNEs0aUFaZFlIX2phUENEUnhNNWx4"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 17:21:35.841 -04:00 [INF] Showing login: User is not authenticated
2020-09-10 17:21:35.845 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 17:21:35.965 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:21:35.965 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:21:35.966 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 17:21:35.980 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:21:35.992 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:21:36.031 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:21:36.046 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:21:36.047 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 17:21:36.176 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:21:36.176 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:21:37.629 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-10 17:21:37.632 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 17:21:38.197 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:21:38.197 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:21:38.197 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 17:21:38.212 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:21:38.231 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:21:38.248 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:21:38.263 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:21:38.263 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 17:21:38.334 -04:00 [DBG] Augmenting SignInContext
2020-09-10 17:21:38.334 -04:00 [DBG] Adding idp claim with value: local
2020-09-10 17:21:38.334 -04:00 [DBG] Adding auth_time claim with value: 1599772898
2020-09-10 17:21:38.335 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-10 17:21:38.351 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000072-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-10T21:21:38.0000000Z","ProcessId":18036,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-10 17:21:38.492 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:21:38.492 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:21:38.498 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-09-10 17:21:38.498 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-09-10 17:21:38.498 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-09-10 17:21:38.498 -04:00 [DBG] Start authorize callback request
2020-09-10 17:21:38.499 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 17:21:38.499 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 17:21:38.652 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:21:38.652 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:21:38.652 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 17:21:38.667 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:21:38.683 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:21:38.695 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:21:38.712 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:21:38.712 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 17:21:38.712 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"S0xnT3oyTVluY3NLZS5CeHlPbWdMR2hNNEs0aUFaZFlIX2phUENEUnhNNWx4semicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"S0xnT3oyTVluY3NLZS5CeHlPbWdMR2hNNEs0aUFaZFlIX2phUENEUnhNNWx4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"3o1C6r-Gb7UJGPTuexxX9g","Raw":{"response_type":"code","client_id":"angular_spa","state":"S0xnT3oyTVluY3NLZS5CeHlPbWdMR2hNNEs0aUFaZFlIX2phUENEUnhNNWx4semicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"Id0R0D-plzFhGryhTt4Deu301OqRUxVYvj6LZkWcgMc","code_challenge_method":"S256","nonce":"S0xnT3oyTVluY3NLZS5CeHlPbWdMR2hNNEs0aUFaZFlIX2phUENEUnhNNWx4"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 17:21:38.740 -04:00 [DBG] eExdRFBRf1V3ruMQVqYpU2dH8/vcePOUe0XJ7DBcKbo= found in database: true
2020-09-10 17:21:38.740 -04:00 [DBG] Consent found in consent store is same as current request, consent is not required
2020-09-10 17:21:38.740 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-10 17:21:38.754 -04:00 [DBG] p96Te1WL1T1WnYk459YrBRiC4Zo219qlqj9HSTeN/IA= not found in database
2020-09-10 17:21:38.804 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****PGa8","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000004b-0005-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-10T21:21:38.0000000Z","ProcessId":18036,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 17:21:38.804 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"S0xnT3oyTVluY3NLZS5CeHlPbWdMR2hNNEs0aUFaZFlIX2phUENEUnhNNWx4semicolon%2Fbasics%2Fhome","Scope":"openid profile email roles app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-10 17:21:38.804 -04:00 [DBG] Augmenting SignInContext
2020-09-10 17:21:38.805 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-10 17:21:39.586 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 17:21:39.600 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:21:39.600 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:21:39.600 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 17:21:39.601 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 17:21:39.601 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 17:21:39.601 -04:00 [DBG] Start discovery request
2020-09-10 17:21:39.655 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 17:21:39.665 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 17:21:39.683 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:21:39.683 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:21:39.684 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 17:21:39.684 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 17:21:39.684 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 17:21:39.684 -04:00 [DBG] Start key discovery request
2020-09-10 17:21:40.708 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-10 17:21:40.723 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:21:40.723 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:21:40.724 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-10 17:21:40.724 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-10 17:21:40.724 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-10 17:21:40.724 -04:00 [DBG] Start token request.
2020-09-10 17:21:40.724 -04:00 [DBG] Start client validation
2020-09-10 17:21:40.724 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-10 17:21:40.724 -04:00 [DBG] Start parsing for secret in post body
2020-09-10 17:21:40.725 -04:00 [DBG] client id without secret found
2020-09-10 17:21:40.725 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-10 17:21:40.725 -04:00 [DBG] Secret id found: angular_spa
2020-09-10 17:21:40.887 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:21:40.887 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:21:40.887 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-10 17:21:40.887 -04:00 [DBG] Client validation success
2020-09-10 17:21:40.887 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000076-0006-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-10T21:21:40.0000000Z","ProcessId":18036,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-10 17:21:40.888 -04:00 [DBG] Start token request validation
2020-09-10 17:21:40.888 -04:00 [DBG] Start validation of authorization code token request
2020-09-10 17:21:40.901 -04:00 [DBG] p96Te1WL1T1WnYk459YrBRiC4Zo219qlqj9HSTeN/IA= found in database: true
2020-09-10 17:21:40.918 -04:00 [DBG] removing p96Te1WL1T1WnYk459YrBRiC4Zo219qlqj9HSTeN/IA= persisted grant from database
2020-09-10 17:21:40.966 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-10 17:21:40.980 -04:00 [DBG] Validation of authorization code token request success
2020-09-10 17:21:40.980 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"aZb0FGLEZd5hhP4UFvXD9A4N7BmZMC798NK92MdPGa8","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"aZb0FGLEZd5hhP4UFvXD9A4N7BmZMC798NK92MdPGa8","redirect_uri":"https://localhost:4200","code_verifier":"dElrc1dGN2puWWJaUFcyX3drMlFVZG1jamMybFFnUmdLdHdZczJibkFsZTNo","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-09-10 17:21:41.147 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:21:41.147 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:21:41.163 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:21:41.178 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:21:41.178 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-09-10 17:21:41.178 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 17:21:41.384 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:21:41.384 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:21:41.396 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:21:41.411 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:21:41.411 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: angular_spa
2020-09-10 17:21:41.411 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-10 17:21:41.412 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****PKnQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****CbwQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000076-0006-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-10T21:21:41.0000000Z","ProcessId":18036,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 17:21:41.412 -04:00 [DBG] Token request success.
2020-09-10 17:21:41.424 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-10 17:21:41.424 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-10 17:21:41.424 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-10 17:21:41.424 -04:00 [DBG] Rendering check session result
2020-09-10 17:21:41.424 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 17:21:41.441 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:21:41.441 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:21:41.443 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 17:21:41.456 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:21:41.456 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:21:41.456 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-10 17:21:41.456 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-10 17:21:41.456 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-10 17:21:41.456 -04:00 [DBG] Start userinfo request
2020-09-10 17:21:41.456 -04:00 [DBG] Bearer token found in header
2020-09-10 17:21:41.584 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:21:41.584 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:21:41.734 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:21:41.734 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:21:41.747 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-10 17:21:41.747 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599772901,"exp":1599776501,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599772898,"idp":"local","scope":["roles","openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-10 17:21:41.747 -04:00 [DBG] Creating userinfo response
2020-09-10 17:21:41.747 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 17:21:41.747 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 17:21:41.763 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:21:41.763 -04:00 [DBG] Requested claim types: role sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-10 17:21:41.763 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 17:21:41.780 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:21:41.831 -04:00 [INF] Profile service returned the following claim types: sub name role preferred_username email email_verified
2020-09-10 17:21:41.832 -04:00 [DBG] End userinfo request
2020-09-10 17:21:51.995 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-09-10 17:21:52.008 -04:00 [DBG] Origin https://jwt.io is allowed: false
2020-09-10 17:21:52.008 -04:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-09-10 17:21:52.008 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 17:21:52.008 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 17:21:52.008 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 17:21:52.008 -04:00 [DBG] Start discovery request
2020-09-10 17:21:52.038 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 17:22:20.533 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-09-10 17:22:20.536 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-09-10 17:22:20.537 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-09-10 17:22:20.537 -04:00 [DBG] Processing signout request for 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 17:22:20.537 -04:00 [DBG] Start end session request validation
2020-09-10 17:22:20.537 -04:00 [DBG] Start identity token validation
2020-09-10 17:22:20.700 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:22:20.700 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:22:20.700 -04:00 [DBG] Client found: angular_spa / Sample SPA.PKCE
2020-09-10 17:22:20.715 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-10 17:22:20.715 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599772901,"exp":1599773201,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"S0xnT3oyTVluY3NLZS5CeHlPbWdMR2hNNEs0aUFaZFlIX2phUENEUnhNNWx4","iat":1599772901,"at_hash":"PW-MboKY2KGTKkKn_j06Fg","s_hash":"5FZXSGnyAULgvieNC3AC6g","sid":"3o1C6r-Gb7UJGPTuexxX9g","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599772898,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-10 17:22:20.716 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-09-10 17:22:20.716 -04:00 [DBG] Success validating end session request from angular_spa
2020-09-10 17:22:20.722 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-09-10 17:22:20.722 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-10 17:22:20.722 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-09-10 17:22:20.723 -04:00 [INF] {"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000076-0004-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-10T21:22:20.0000000Z","ProcessId":18036,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-09-10 17:22:20.762 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-09-10 17:22:20.765 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-09-10 17:22:20.766 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-09-10 17:22:20.766 -04:00 [DBG] Processing signout callback request
2020-09-10 17:22:20.920 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:22:20.920 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:22:20.920 -04:00 [DBG] No client front-channel logout URLs
2020-09-10 17:22:20.920 -04:00 [DBG] No client back-channel logout URLs
2020-09-10 17:22:20.920 -04:00 [INF] Successful signout callback.
2020-09-10 17:22:20.920 -04:00 [DBG] No client front-channel iframe urls
2020-09-10 17:22:20.920 -04:00 [DBG] No client back-channel iframe urls
2020-09-10 17:22:21.881 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 17:22:21.894 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:22:21.894 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:22:21.895 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 17:22:21.895 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 17:22:21.895 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 17:22:21.895 -04:00 [DBG] Start discovery request
2020-09-10 17:22:21.926 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 17:22:21.949 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 17:22:21.970 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:22:21.970 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:22:21.970 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 17:22:21.970 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 17:22:21.970 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 17:22:21.970 -04:00 [DBG] Start key discovery request
2020-09-10 17:22:23.008 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 17:22:23.009 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 17:22:23.009 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 17:22:23.009 -04:00 [DBG] Start authorize request
2020-09-10 17:22:23.009 -04:00 [DBG] No user present in authorize request
2020-09-10 17:22:23.009 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 17:22:23.151 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:22:23.151 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:22:23.151 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"bU9OUTkxb0pPY0FaYnRJNVFlOFZUTmh3V19BSzNNaW5kUVFUei5jdTJ2elht","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"x0qAJFE7EPa5WIGyEC69KjuAF51Y0wK-ATR2x7xeVU8","code_challenge_method":"S256","nonce":"bU9OUTkxb0pPY0FaYnRJNVFlOFZUTmh3V19BSzNNaW5kUVFUei5jdTJ2elht","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 17:22:23.151 -04:00 [ERR] Request validation failed
2020-09-10 17:22:23.151 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"bU9OUTkxb0pPY0FaYnRJNVFlOFZUTmh3V19BSzNNaW5kUVFUei5jdTJ2elht","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"x0qAJFE7EPa5WIGyEC69KjuAF51Y0wK-ATR2x7xeVU8","code_challenge_method":"S256","nonce":"bU9OUTkxb0pPY0FaYnRJNVFlOFZUTmh3V19BSzNNaW5kUVFUei5jdTJ2elht","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 17:22:23.151 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000073-0001-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-10T21:22:23.0000000Z","ProcessId":18036,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-10 17:22:29.054 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 17:22:29.054 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 17:22:29.054 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 17:22:29.054 -04:00 [DBG] Start authorize request
2020-09-10 17:22:29.055 -04:00 [DBG] No user present in authorize request
2020-09-10 17:22:29.055 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 17:22:29.184 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:22:29.184 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:22:29.184 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 17:22:29.197 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:22:29.212 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:22:29.226 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:22:29.241 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:22:29.241 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 17:22:29.241 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"RG9aZXhVTlgyUFBBaFY1RDlrbXVqdzhDSEppbzZiWnZQWE9tOXp4bEFwTVpZsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"RG9aZXhVTlgyUFBBaFY1RDlrbXVqdzhDSEppbzZiWnZQWE9tOXp4bEFwTVpZ","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"RG9aZXhVTlgyUFBBaFY1RDlrbXVqdzhDSEppbzZiWnZQWE9tOXp4bEFwTVpZsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"nfzf7lA5iSkBy1gaHI2Q81xbzojSNG2dVEDy8NlbTO4","code_challenge_method":"S256","nonce":"RG9aZXhVTlgyUFBBaFY1RDlrbXVqdzhDSEppbzZiWnZQWE9tOXp4bEFwTVpZ"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 17:22:29.241 -04:00 [INF] Showing login: User is not authenticated
2020-09-10 17:22:29.246 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 17:22:29.369 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:22:29.369 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:22:29.369 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 17:22:29.384 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:22:29.399 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:22:29.413 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:22:29.427 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:22:29.427 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 17:22:29.543 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:22:29.543 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:22:31.355 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-10 17:22:31.356 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 17:22:31.483 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:22:31.483 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:22:31.483 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 17:22:31.497 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:22:31.511 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:22:31.526 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:22:31.539 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:22:31.539 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 17:22:31.604 -04:00 [DBG] Augmenting SignInContext
2020-09-10 17:22:31.604 -04:00 [DBG] Adding idp claim with value: local
2020-09-10 17:22:31.604 -04:00 [DBG] Adding auth_time claim with value: 1599772951
2020-09-10 17:22:31.604 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-10 17:22:31.618 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"8000005d-0003-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-10T21:22:31.0000000Z","ProcessId":18036,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-10 17:22:31.754 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:22:31.754 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:22:31.759 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-09-10 17:22:31.763 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-09-10 17:22:31.763 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-09-10 17:22:31.763 -04:00 [DBG] Start authorize callback request
2020-09-10 17:22:31.763 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 17:22:31.763 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 17:22:31.924 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:22:31.925 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:22:31.925 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 17:22:31.937 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:22:31.955 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:22:31.972 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:22:31.990 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:22:31.990 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 17:22:31.990 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"RG9aZXhVTlgyUFBBaFY1RDlrbXVqdzhDSEppbzZiWnZQWE9tOXp4bEFwTVpZsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"RG9aZXhVTlgyUFBBaFY1RDlrbXVqdzhDSEppbzZiWnZQWE9tOXp4bEFwTVpZ","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"TEfY68Q7gIAKt7loiwZqig","Raw":{"response_type":"code","client_id":"angular_spa","state":"RG9aZXhVTlgyUFBBaFY1RDlrbXVqdzhDSEppbzZiWnZQWE9tOXp4bEFwTVpZsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"nfzf7lA5iSkBy1gaHI2Q81xbzojSNG2dVEDy8NlbTO4","code_challenge_method":"S256","nonce":"RG9aZXhVTlgyUFBBaFY1RDlrbXVqdzhDSEppbzZiWnZQWE9tOXp4bEFwTVpZ"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 17:22:32.018 -04:00 [DBG] eExdRFBRf1V3ruMQVqYpU2dH8/vcePOUe0XJ7DBcKbo= found in database: true
2020-09-10 17:22:32.018 -04:00 [DBG] Consent found in consent store is same as current request, consent is not required
2020-09-10 17:22:32.018 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-10 17:22:32.029 -04:00 [DBG] yTM6HaPJe4SQJ9VmXI3BjANDgVuwSf1CsOx4ZlmROQk= not found in database
2020-09-10 17:22:32.074 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****-OkQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000075-0001-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-10T21:22:32.0000000Z","ProcessId":18036,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 17:22:32.074 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"RG9aZXhVTlgyUFBBaFY1RDlrbXVqdzhDSEppbzZiWnZQWE9tOXp4bEFwTVpZsemicolon%2Fbasics%2Fhome","Scope":"openid profile email roles app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-10 17:22:32.074 -04:00 [DBG] Augmenting SignInContext
2020-09-10 17:22:32.074 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-10 17:22:32.855 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 17:22:32.871 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:22:32.871 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:22:32.871 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 17:22:32.871 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 17:22:32.871 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 17:22:32.871 -04:00 [DBG] Start discovery request
2020-09-10 17:22:32.902 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 17:22:32.915 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 17:22:32.930 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:22:32.930 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:22:32.931 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 17:22:32.931 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 17:22:32.931 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 17:22:32.931 -04:00 [DBG] Start key discovery request
2020-09-10 17:22:33.955 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-10 17:22:33.968 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:22:33.968 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:22:33.968 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-10 17:22:33.968 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-10 17:22:33.968 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-10 17:22:33.968 -04:00 [DBG] Start token request.
2020-09-10 17:22:33.968 -04:00 [DBG] Start client validation
2020-09-10 17:22:33.968 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-10 17:22:33.968 -04:00 [DBG] Start parsing for secret in post body
2020-09-10 17:22:33.969 -04:00 [DBG] client id without secret found
2020-09-10 17:22:33.969 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-10 17:22:33.969 -04:00 [DBG] Secret id found: angular_spa
2020-09-10 17:22:34.083 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:22:34.083 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:22:34.083 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-10 17:22:34.083 -04:00 [DBG] Client validation success
2020-09-10 17:22:34.083 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000008-0009-fa00-b63f-84710c7967bb","TimeStamp":"2020-09-10T21:22:34.0000000Z","ProcessId":18036,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-10 17:22:34.083 -04:00 [DBG] Start token request validation
2020-09-10 17:22:34.083 -04:00 [DBG] Start validation of authorization code token request
2020-09-10 17:22:34.100 -04:00 [DBG] yTM6HaPJe4SQJ9VmXI3BjANDgVuwSf1CsOx4ZlmROQk= found in database: true
2020-09-10 17:22:34.115 -04:00 [DBG] removing yTM6HaPJe4SQJ9VmXI3BjANDgVuwSf1CsOx4ZlmROQk= persisted grant from database
2020-09-10 17:22:34.187 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-10 17:22:34.202 -04:00 [DBG] Validation of authorization code token request success
2020-09-10 17:22:34.202 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"E66MwEyADwnIa-MOJ0YA6ljKuYqlWD3_6v0jkzN-OkQ","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"E66MwEyADwnIa-MOJ0YA6ljKuYqlWD3_6v0jkzN-OkQ","redirect_uri":"https://localhost:4200","code_verifier":"a0d1SloweFdpNkFyUGIyd3dPd1c2RDJYM3BmRTJES0NTLnMtd1lzWGRsSHp-","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-09-10 17:22:34.336 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:22:34.337 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:22:34.352 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:22:34.365 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:22:34.365 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-09-10 17:22:34.365 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 17:22:34.549 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:22:34.549 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:22:34.563 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:22:34.576 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 17:22:34.576 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: angular_spa
2020-09-10 17:22:34.576 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-10 17:22:34.578 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****ZpOw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****LK3Q","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000008-0009-fa00-b63f-84710c7967bb","TimeStamp":"2020-09-10T21:22:34.0000000Z","ProcessId":18036,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 17:22:34.578 -04:00 [DBG] Token request success.
2020-09-10 17:22:34.590 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 17:22:34.593 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-10 17:22:34.593 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-10 17:22:34.593 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-10 17:22:34.593 -04:00 [DBG] Rendering check session result
2020-09-10 17:22:34.604 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:22:34.604 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:22:34.606 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 17:22:34.618 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 17:22:34.618 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 17:22:34.618 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-10 17:22:34.618 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-10 17:22:34.619 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-10 17:22:34.619 -04:00 [DBG] Start userinfo request
2020-09-10 17:22:34.619 -04:00 [DBG] Bearer token found in header
2020-09-10 17:22:34.733 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:22:34.733 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:22:34.854 -04:00 [DBG] angular_spa found in database: true
2020-09-10 17:22:34.854 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 17:22:34.876 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-10 17:22:34.876 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599772954,"exp":1599776554,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599772951,"idp":"local","role":"STSAdmRole","scope":["roles","openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-10 17:22:34.876 -04:00 [DBG] Creating userinfo response
2020-09-10 17:22:34.876 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 17:22:34.876 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 17:22:34.890 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:22:34.890 -04:00 [DBG] Requested claim types: role sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-10 17:22:34.890 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 17:22:34.905 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 17:22:34.954 -04:00 [INF] Profile service returned the following claim types: sub name role preferred_username email email_verified
2020-09-10 17:22:34.954 -04:00 [DBG] End userinfo request
2020-09-10 17:22:49.185 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-09-10 17:22:49.198 -04:00 [DBG] Origin https://jwt.io is allowed: false
2020-09-10 17:22:49.198 -04:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-09-10 17:22:49.198 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 17:22:49.198 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 17:22:49.198 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 17:22:49.198 -04:00 [DBG] Start discovery request
2020-09-10 17:22:49.230 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 23:32:01.980 -04:00 [INF] Starting host...
2020-09-10 23:32:03.889 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-10 23:32:04.100 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-10 23:32:04.100 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-10 23:32:04.100 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-10 23:32:04.100 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-10 23:32:04.100 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-10 23:32:04.100 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-10 23:32:04.443 -04:00 [DBG] Login Url: /Account/Login
2020-09-10 23:32:04.444 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-10 23:32:04.444 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-10 23:32:04.444 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-10 23:32:04.444 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-10 23:32:04.444 -04:00 [DBG] Error Url: /home/error
2020-09-10 23:32:04.444 -04:00 [DBG] Error Id Parameter: errorId
2020-09-10 23:45:08.854 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 23:45:09.112 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 23:45:09.127 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 23:45:09.127 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 23:45:09.128 -04:00 [DBG] Start discovery request
2020-09-10 23:45:09.890 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:45:09.891 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:45:09.893 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 23:45:09.893 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 23:45:09.894 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 23:45:09.897 -04:00 [DBG] Start discovery request
2020-09-10 23:45:10.145 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 23:45:10.145 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 23:45:10.209 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 23:45:10.236 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 23:45:10.237 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 23:45:10.237 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 23:45:10.238 -04:00 [DBG] Start key discovery request
2020-09-10 23:45:10.256 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:45:10.256 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:45:10.256 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 23:45:10.257 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 23:45:10.257 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 23:45:10.257 -04:00 [DBG] Start key discovery request
2020-09-10 23:45:11.308 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 23:45:11.310 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 23:45:11.310 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 23:45:11.311 -04:00 [DBG] Start authorize request
2020-09-10 23:45:11.314 -04:00 [DBG] No user present in authorize request
2020-09-10 23:45:11.316 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 23:45:11.646 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:45:11.652 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:45:11.664 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"X1VfMHp2M2d0V0Y5WlN0Z1FLemVxZ2xPcWExVGkuRE5LYUtJQUlLamZvNUts","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"ZSZ4m6pM4tujsmO9GBeTQP0UyXIgvuMa8Ul4WETUKDc","code_challenge_method":"S256","nonce":"X1VfMHp2M2d0V0Y5WlN0Z1FLemVxZ2xPcWExVGkuRE5LYUtJQUlLamZvNUts","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 23:45:11.669 -04:00 [ERR] Request validation failed
2020-09-10 23:45:11.669 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"X1VfMHp2M2d0V0Y5WlN0Z1FLemVxZ2xPcWExVGkuRE5LYUtJQUlLamZvNUts","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"ZSZ4m6pM4tujsmO9GBeTQP0UyXIgvuMa8Ul4WETUKDc","code_challenge_method":"S256","nonce":"X1VfMHp2M2d0V0Y5WlN0Z1FLemVxZ2xPcWExVGkuRE5LYUtJQUlLamZvNUts","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 23:45:11.674 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000017-0000-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-11T03:45:11.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-10 23:46:37.184 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 23:46:37.199 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:46:37.200 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:46:37.200 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 23:46:37.209 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 23:46:37.209 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 23:46:37.209 -04:00 [DBG] Start discovery request
2020-09-10 23:46:37.239 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 23:46:37.257 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 23:46:37.268 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:46:37.268 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:46:37.269 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 23:46:37.270 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 23:46:37.270 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 23:46:37.270 -04:00 [DBG] Start key discovery request
2020-09-10 23:46:38.293 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 23:46:38.294 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 23:46:38.295 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 23:46:38.295 -04:00 [DBG] Start authorize request
2020-09-10 23:46:38.295 -04:00 [DBG] No user present in authorize request
2020-09-10 23:46:38.296 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 23:46:38.433 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:46:38.433 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:46:38.434 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"ekV-MEFHbFlKRUNnTmh2X0VpVVVSbkpVVXFNbDlyS2ZQeXFKMlMxOXFDUm5H","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"rCMIe3uiOZRw0VtW-RAzNWryII0KbTekETuBcBZRFFo","code_challenge_method":"S256","nonce":"ekV-MEFHbFlKRUNnTmh2X0VpVVVSbkpVVXFNbDlyS2ZQeXFKMlMxOXFDUm5H","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 23:46:38.434 -04:00 [ERR] Request validation failed
2020-09-10 23:46:38.434 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"ekV-MEFHbFlKRUNnTmh2X0VpVVVSbkpVVXFNbDlyS2ZQeXFKMlMxOXFDUm5H","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"rCMIe3uiOZRw0VtW-RAzNWryII0KbTekETuBcBZRFFo","code_challenge_method":"S256","nonce":"ekV-MEFHbFlKRUNnTmh2X0VpVVVSbkpVVXFNbDlyS2ZQeXFKMlMxOXFDUm5H","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 23:46:38.434 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000048-0007-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-11T03:46:38.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-10 23:46:44.974 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-09-10 23:46:44.976 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-09-10 23:46:44.976 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-09-10 23:46:44.977 -04:00 [DBG] Processing signout request for anonymous
2020-09-10 23:46:44.979 -04:00 [DBG] Start end session request validation
2020-09-10 23:46:44.980 -04:00 [DBG] Start identity token validation
2020-09-10 23:46:45.123 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:46:45.123 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:46:45.124 -04:00 [DBG] Client found: angular_spa / Sample SPA.PKCE
2020-09-10 23:46:45.245 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-10 23:46:45.246 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599772954,"exp":1599773254,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"RG9aZXhVTlgyUFBBaFY1RDlrbXVqdzhDSEppbzZiWnZQWE9tOXp4bEFwTVpZ","iat":1599772954,"at_hash":"oFx4Il6ai-2FllhV6H7OOw","s_hash":"9IoDK1MF7PQAFo6JE4ng_w","sid":"TEfY68Q7gIAKt7loiwZqig","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599772951,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-10 23:46:45.247 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","SubjectId":"unknown","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-09-10 23:46:45.248 -04:00 [DBG] Success validating end session request from angular_spa
2020-09-10 23:46:47.259 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 23:46:47.275 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:46:47.275 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:46:47.276 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 23:46:47.277 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 23:46:47.277 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 23:46:47.277 -04:00 [DBG] Start discovery request
2020-09-10 23:46:47.314 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 23:46:47.320 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 23:46:47.336 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:46:47.336 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:46:47.336 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 23:46:47.336 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 23:46:47.336 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 23:46:47.336 -04:00 [DBG] Start key discovery request
2020-09-10 23:46:48.347 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 23:46:48.350 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 23:46:48.350 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 23:46:48.350 -04:00 [DBG] Start authorize request
2020-09-10 23:46:48.350 -04:00 [DBG] No user present in authorize request
2020-09-10 23:46:48.350 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 23:46:48.476 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:46:48.476 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:46:48.477 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"d2RKUVk3RVY1Sm1sZWlkZVNzbUFaNHNycWtCMGZDWUpDaW9YclRyTUNZaWtG","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"qMyXpG5Xykt8-rdkhs6H7zAHdhUPuzinPtcNL_q20O0","code_challenge_method":"S256","nonce":"d2RKUVk3RVY1Sm1sZWlkZVNzbUFaNHNycWtCMGZDWUpDaW9YclRyTUNZaWtG","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 23:46:48.477 -04:00 [ERR] Request validation failed
2020-09-10 23:46:48.477 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"d2RKUVk3RVY1Sm1sZWlkZVNzbUFaNHNycWtCMGZDWUpDaW9YclRyTUNZaWtG","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"qMyXpG5Xykt8-rdkhs6H7zAHdhUPuzinPtcNL_q20O0","code_challenge_method":"S256","nonce":"d2RKUVk3RVY1Sm1sZWlkZVNzbUFaNHNycWtCMGZDWUpDaW9YclRyTUNZaWtG","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 23:46:48.477 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000088-0006-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-11T03:46:48.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-10 23:46:54.353 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 23:46:54.353 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 23:46:54.353 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 23:46:54.353 -04:00 [DBG] Start authorize request
2020-09-10 23:46:54.354 -04:00 [DBG] No user present in authorize request
2020-09-10 23:46:54.354 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 23:46:54.478 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:46:54.478 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:46:54.480 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 23:46:54.569 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:46:54.605 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 23:46:54.622 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:46:54.637 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 23:46:54.640 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 23:46:54.641 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"dmZSVTVEZHlOZ3NDVnA0d3BrVkdQQjNkeWMzSXNSdnlHaTcudmNMQXdkQWhlsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"dmZSVTVEZHlOZ3NDVnA0d3BrVkdQQjNkeWMzSXNSdnlHaTcudmNMQXdkQWhl","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"dmZSVTVEZHlOZ3NDVnA0d3BrVkdQQjNkeWMzSXNSdnlHaTcudmNMQXdkQWhlsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"tb8qbIT-Yf2hhv3ypH7Imcvmh9KDq5fLyZMZ6JckcQs","code_challenge_method":"S256","nonce":"dmZSVTVEZHlOZ3NDVnA0d3BrVkdQQjNkeWMzSXNSdnlHaTcudmNMQXdkQWhl"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 23:46:54.642 -04:00 [INF] Showing login: User is not authenticated
2020-09-10 23:46:54.656 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 23:46:54.821 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:46:54.822 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:46:54.822 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 23:46:54.834 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:46:54.847 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 23:46:54.863 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:46:54.881 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 23:46:54.881 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 23:46:55.024 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:46:55.024 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:46:56.892 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-10 23:46:56.912 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 23:46:57.359 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:46:57.359 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:46:57.359 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 23:46:57.487 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:46:57.503 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 23:46:57.552 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:46:57.567 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 23:46:57.567 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 23:46:57.725 -04:00 [DBG] Augmenting SignInContext
2020-09-10 23:46:57.726 -04:00 [DBG] Adding idp claim with value: local
2020-09-10 23:46:57.726 -04:00 [DBG] Adding auth_time claim with value: 1599796017
2020-09-10 23:46:57.732 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-10 23:46:57.746 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"8000001d-0000-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-11T03:46:57.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-10 23:46:57.935 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:46:57.935 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:46:57.945 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-09-10 23:46:57.946 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-09-10 23:46:57.946 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-09-10 23:46:57.947 -04:00 [DBG] Start authorize callback request
2020-09-10 23:46:57.949 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 23:46:57.949 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 23:46:58.066 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:46:58.066 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:46:58.067 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 23:46:58.079 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:46:58.094 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 23:46:58.109 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:46:58.129 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 23:46:58.130 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 23:46:58.130 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"dmZSVTVEZHlOZ3NDVnA0d3BrVkdQQjNkeWMzSXNSdnlHaTcudmNMQXdkQWhlsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"dmZSVTVEZHlOZ3NDVnA0d3BrVkdQQjNkeWMzSXNSdnlHaTcudmNMQXdkQWhl","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"4TwUdc1VeKQD5G35AFFmgw","Raw":{"response_type":"code","client_id":"angular_spa","state":"dmZSVTVEZHlOZ3NDVnA0d3BrVkdQQjNkeWMzSXNSdnlHaTcudmNMQXdkQWhlsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"tb8qbIT-Yf2hhv3ypH7Imcvmh9KDq5fLyZMZ6JckcQs","code_challenge_method":"S256","nonce":"dmZSVTVEZHlOZ3NDVnA0d3BrVkdQQjNkeWMzSXNSdnlHaTcudmNMQXdkQWhl"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 23:46:58.178 -04:00 [DBG] eExdRFBRf1V3ruMQVqYpU2dH8/vcePOUe0XJ7DBcKbo= found in database: true
2020-09-10 23:46:58.185 -04:00 [DBG] Consent found in consent store is same as current request, consent is not required
2020-09-10 23:46:58.187 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-10 23:46:58.228 -04:00 [DBG] SI4EcTev1tyuxywg4VKhf4ApjlKrypiNvw7wHP/8cmc= not found in database
2020-09-10 23:46:58.390 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****kJt8","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000005e-0008-fb00-b63f-84710c7967bb","TimeStamp":"2020-09-11T03:46:58.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 23:46:58.390 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"dmZSVTVEZHlOZ3NDVnA0d3BrVkdQQjNkeWMzSXNSdnlHaTcudmNMQXdkQWhlsemicolon%2Fbasics%2Fhome","Scope":"openid profile email roles app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-10 23:46:58.394 -04:00 [DBG] Augmenting SignInContext
2020-09-10 23:46:58.394 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-10 23:46:59.148 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 23:46:59.165 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:46:59.165 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:46:59.166 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 23:46:59.166 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 23:46:59.166 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 23:46:59.166 -04:00 [DBG] Start discovery request
2020-09-10 23:46:59.196 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 23:46:59.218 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 23:46:59.234 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:46:59.234 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:46:59.234 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 23:46:59.234 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 23:46:59.234 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 23:46:59.234 -04:00 [DBG] Start key discovery request
2020-09-10 23:47:00.242 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-10 23:47:00.256 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:47:00.256 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:47:00.256 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-10 23:47:00.258 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-10 23:47:00.258 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-10 23:47:00.260 -04:00 [DBG] Start token request.
2020-09-10 23:47:00.261 -04:00 [DBG] Start client validation
2020-09-10 23:47:00.263 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-10 23:47:00.264 -04:00 [DBG] Start parsing for secret in post body
2020-09-10 23:47:00.265 -04:00 [DBG] client id without secret found
2020-09-10 23:47:00.265 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-10 23:47:00.265 -04:00 [DBG] Secret id found: angular_spa
2020-09-10 23:47:00.383 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:47:00.383 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:47:00.384 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-10 23:47:00.384 -04:00 [DBG] Client validation success
2020-09-10 23:47:00.385 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000007a-0001-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-11T03:47:00.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-10 23:47:00.386 -04:00 [DBG] Start token request validation
2020-09-10 23:47:00.388 -04:00 [DBG] Start validation of authorization code token request
2020-09-10 23:47:00.401 -04:00 [DBG] SI4EcTev1tyuxywg4VKhf4ApjlKrypiNvw7wHP/8cmc= found in database: true
2020-09-10 23:47:00.427 -04:00 [DBG] removing SI4EcTev1tyuxywg4VKhf4ApjlKrypiNvw7wHP/8cmc= persisted grant from database
2020-09-10 23:47:00.482 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-10 23:47:00.497 -04:00 [DBG] Validation of authorization code token request success
2020-09-10 23:47:00.500 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"xpoeUuICnYrnWDT3KvE7p5fcTQOU-zInFvWBbSEkJt8","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"xpoeUuICnYrnWDT3KvE7p5fcTQOU-zInFvWBbSEkJt8","redirect_uri":"https://localhost:4200","code_verifier":"TktwRTBQejlnWFJNX3BET09yek44azVrMFFFbmtiY0ZLZHZDZjJDMTBCNTFq","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-09-10 23:47:00.630 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:47:00.630 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:47:00.647 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:47:00.658 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 23:47:00.665 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-09-10 23:47:00.666 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 23:47:00.873 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:47:00.873 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:47:00.887 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:47:00.901 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 23:47:00.904 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: angular_spa
2020-09-10 23:47:00.905 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-10 23:47:00.907 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****CvzA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****i9sQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000007a-0001-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-11T03:47:00.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 23:47:00.907 -04:00 [DBG] Token request success.
2020-09-10 23:47:00.917 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 23:47:00.919 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-10 23:47:00.920 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-10 23:47:00.920 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-10 23:47:00.920 -04:00 [DBG] Rendering check session result
2020-09-10 23:47:00.932 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:47:00.932 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:47:00.937 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 23:47:00.950 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:47:00.950 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:47:00.950 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-10 23:47:00.951 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-10 23:47:00.951 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-10 23:47:00.952 -04:00 [DBG] Start userinfo request
2020-09-10 23:47:00.953 -04:00 [DBG] Bearer token found in header
2020-09-10 23:47:01.090 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:47:01.090 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:47:01.208 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:47:01.208 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:47:01.220 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-10 23:47:01.221 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599796020,"exp":1599799620,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599796017,"idp":"local","role":"STSAdmRole","scope":["roles","openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-10 23:47:01.223 -04:00 [DBG] Creating userinfo response
2020-09-10 23:47:01.225 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 23:47:01.226 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 23:47:01.238 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:47:01.242 -04:00 [DBG] Requested claim types: role sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-10 23:47:01.242 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 23:47:01.255 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:47:01.306 -04:00 [INF] Profile service returned the following claim types: sub name role preferred_username email email_verified
2020-09-10 23:47:01.307 -04:00 [DBG] End userinfo request
2020-09-10 23:47:03.366 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 23:47:03.379 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:47:03.379 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:47:03.380 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 23:47:03.380 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 23:47:03.380 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 23:47:03.380 -04:00 [DBG] Start discovery request
2020-09-10 23:47:03.414 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 23:47:03.420 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 23:47:03.422 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-10 23:47:03.422 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-10 23:47:03.422 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-10 23:47:03.422 -04:00 [DBG] Rendering check session result
2020-09-10 23:47:03.436 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:47:03.436 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:47:03.436 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 23:47:03.436 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 23:47:03.436 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 23:47:03.436 -04:00 [DBG] Start key discovery request
2020-09-10 23:47:11.542 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 23:47:11.556 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:47:11.556 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:47:11.556 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 23:47:11.557 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 23:47:11.557 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 23:47:11.557 -04:00 [DBG] Start discovery request
2020-09-10 23:47:11.587 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 23:47:11.633 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 23:47:11.645 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:47:11.645 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:47:11.646 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 23:47:11.646 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 23:47:11.646 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 23:47:11.646 -04:00 [DBG] Start key discovery request
2020-09-10 23:47:11.646 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-10 23:47:11.647 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-10 23:47:11.647 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-10 23:47:11.647 -04:00 [DBG] Rendering check session result
2020-09-10 23:48:21.247 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 23:48:21.261 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:48:21.261 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:48:21.261 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 23:48:21.261 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 23:48:21.262 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 23:48:21.262 -04:00 [DBG] Start discovery request
2020-09-10 23:48:21.294 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 23:48:21.310 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 23:48:21.312 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-10 23:48:21.312 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-10 23:48:21.312 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-10 23:48:21.312 -04:00 [DBG] Rendering check session result
2020-09-10 23:48:21.321 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:48:21.321 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:48:21.321 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 23:48:21.321 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 23:48:21.321 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 23:48:21.321 -04:00 [DBG] Start key discovery request
2020-09-10 23:48:21.473 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 23:48:21.473 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 23:48:21.473 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 23:48:21.473 -04:00 [DBG] Start discovery request
2020-09-10 23:48:21.501 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 23:48:21.528 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 23:48:21.528 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 23:48:21.528 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 23:48:21.528 -04:00 [DBG] Start key discovery request
2020-09-10 23:48:54.286 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-09-10 23:48:54.299 -04:00 [DBG] Origin https://jwt.io is allowed: false
2020-09-10 23:48:54.299 -04:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-09-10 23:48:54.300 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 23:48:54.300 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 23:48:54.300 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 23:48:54.300 -04:00 [DBG] Start discovery request
2020-09-10 23:48:54.327 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 23:54:36.864 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 23:54:36.865 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 23:54:36.865 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 23:54:36.865 -04:00 [DBG] Start authorize request
2020-09-10 23:54:36.865 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 23:54:36.865 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 23:54:37.232 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:54:37.233 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:54:37.233 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"bDhhbnZWMlR5UG5XNlpPV35kT0lVOXMwVzZVSGJjQ3FRaU1MRmt5ZnVUYk1Q","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"ct1GS0ClsxojLpqrDB6nN0Lt6EuP4_I07wA4RttpPwo","code_challenge_method":"S256","nonce":"bDhhbnZWMlR5UG5XNlpPV35kT0lVOXMwVzZVSGJjQ3FRaU1MRmt5ZnVUYk1Q","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 23:54:37.233 -04:00 [ERR] Request validation failed
2020-09-10 23:54:37.234 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"bDhhbnZWMlR5UG5XNlpPV35kT0lVOXMwVzZVSGJjQ3FRaU1MRmt5ZnVUYk1Q","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"ct1GS0ClsxojLpqrDB6nN0Lt6EuP4_I07wA4RttpPwo","code_challenge_method":"S256","nonce":"bDhhbnZWMlR5UG5XNlpPV35kT0lVOXMwVzZVSGJjQ3FRaU1MRmt5ZnVUYk1Q","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 23:54:37.234 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000086-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-11T03:54:37.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-10 23:59:21.025 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 23:59:21.025 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 23:59:21.025 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 23:59:21.025 -04:00 [DBG] Start authorize request
2020-09-10 23:59:21.025 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 23:59:21.025 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 23:59:21.415 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:59:21.415 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:59:21.415 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 23:59:21.427 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:59:21.441 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 23:59:21.452 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:59:21.463 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 23:59:21.463 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 23:59:21.463 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"ZlF1VWVEdVo2bk56WUpKZUdvQ21MdGx5U3UzT0FaMXRkMXhDfmNjZE5OeERKsemicolon%2Fshould-login","UiLocales":null,"Nonce":"ZlF1VWVEdVo2bk56WUpKZUdvQ21MdGx5U3UzT0FaMXRkMXhDfmNjZE5OeERK","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"4TwUdc1VeKQD5G35AFFmgw","Raw":{"response_type":"code","client_id":"angular_spa","state":"ZlF1VWVEdVo2bk56WUpKZUdvQ21MdGx5U3UzT0FaMXRkMXhDfmNjZE5OeERKsemicolon%2Fshould-login","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"3P43mfXu1AXxeB3rl4889qk15ODafpzwDYMAwzna9cU","code_challenge_method":"S256","nonce":"ZlF1VWVEdVo2bk56WUpKZUdvQ21MdGx5U3UzT0FaMXRkMXhDfmNjZE5OeERK"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 23:59:21.488 -04:00 [DBG] eExdRFBRf1V3ruMQVqYpU2dH8/vcePOUe0XJ7DBcKbo= found in database: true
2020-09-10 23:59:21.488 -04:00 [DBG] Consent found in consent store is same as current request, consent is not required
2020-09-10 23:59:21.488 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-10 23:59:21.499 -04:00 [DBG] Bj873JiUQ6OmOJrxRUzgUd8KUxERbjZ3PCi3beCd934= not found in database
2020-09-10 23:59:21.570 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****W8YU","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000046-0009-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-11T03:59:21.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 23:59:21.570 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"ZlF1VWVEdVo2bk56WUpKZUdvQ21MdGx5U3UzT0FaMXRkMXhDfmNjZE5OeERKsemicolon%2Fshould-login","Scope":"openid profile email roles app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-10 23:59:22.275 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 23:59:22.350 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:59:22.350 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:59:22.350 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 23:59:22.351 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 23:59:22.351 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 23:59:22.351 -04:00 [DBG] Start discovery request
2020-09-10 23:59:22.380 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 23:59:22.389 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 23:59:22.401 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:59:22.401 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:59:22.401 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 23:59:22.401 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 23:59:22.401 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 23:59:22.401 -04:00 [DBG] Start key discovery request
2020-09-10 23:59:23.409 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-10 23:59:23.421 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:59:23.421 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:59:23.421 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-10 23:59:23.421 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-10 23:59:23.421 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-10 23:59:23.421 -04:00 [DBG] Start token request.
2020-09-10 23:59:23.421 -04:00 [DBG] Start client validation
2020-09-10 23:59:23.421 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-10 23:59:23.421 -04:00 [DBG] Start parsing for secret in post body
2020-09-10 23:59:23.422 -04:00 [DBG] client id without secret found
2020-09-10 23:59:23.422 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-10 23:59:23.422 -04:00 [DBG] Secret id found: angular_spa
2020-09-10 23:59:23.536 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:59:23.536 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:59:23.536 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-10 23:59:23.536 -04:00 [DBG] Client validation success
2020-09-10 23:59:23.537 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000005e-0005-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-11T03:59:23.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-10 23:59:23.537 -04:00 [DBG] Start token request validation
2020-09-10 23:59:23.537 -04:00 [DBG] Start validation of authorization code token request
2020-09-10 23:59:23.550 -04:00 [DBG] Bj873JiUQ6OmOJrxRUzgUd8KUxERbjZ3PCi3beCd934= found in database: true
2020-09-10 23:59:23.564 -04:00 [DBG] removing Bj873JiUQ6OmOJrxRUzgUd8KUxERbjZ3PCi3beCd934= persisted grant from database
2020-09-10 23:59:23.607 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-10 23:59:23.622 -04:00 [DBG] Validation of authorization code token request success
2020-09-10 23:59:23.622 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"tBqyy8cHaeARf7XPFVZQwYiEvQptAYNbKurkDXtW8YU","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"tBqyy8cHaeARf7XPFVZQwYiEvQptAYNbKurkDXtW8YU","redirect_uri":"https://localhost:4200","code_verifier":"bXBQLWJEajhpR3NuUUFQVzR6Q0Y0b0RFcnVPcXVzbVVTQ3BxaVpLck9kMHB3","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-09-10 23:59:23.736 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:59:23.736 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:59:23.757 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:59:23.772 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 23:59:23.772 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-09-10 23:59:23.772 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 23:59:23.958 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:59:23.958 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:59:23.974 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:59:23.988 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 23:59:23.988 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: angular_spa
2020-09-10 23:59:23.988 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-10 23:59:23.989 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****LkTA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****s7Qg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000005e-0005-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-11T03:59:23.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 23:59:23.989 -04:00 [DBG] Token request success.
2020-09-10 23:59:23.997 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 23:59:23.999 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-10 23:59:23.999 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-10 23:59:24.000 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-10 23:59:24.000 -04:00 [DBG] Rendering check session result
2020-09-10 23:59:24.012 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:59:24.012 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:59:24.014 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 23:59:24.026 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:59:24.026 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:59:24.026 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-10 23:59:24.027 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-10 23:59:24.027 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-10 23:59:24.027 -04:00 [DBG] Start userinfo request
2020-09-10 23:59:24.027 -04:00 [DBG] Bearer token found in header
2020-09-10 23:59:24.144 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:59:24.144 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:59:24.260 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:59:24.260 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:59:24.272 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-10 23:59:24.272 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599796763,"exp":1599800363,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599796017,"idp":"local","role":"STSAdmRole","scope":["roles","openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-10 23:59:24.273 -04:00 [DBG] Creating userinfo response
2020-09-10 23:59:24.273 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 23:59:24.273 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 23:59:24.288 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:59:24.288 -04:00 [DBG] Requested claim types: role sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-10 23:59:24.288 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 23:59:24.300 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:59:24.351 -04:00 [INF] Profile service returned the following claim types: sub name role preferred_username email email_verified
2020-09-10 23:59:24.351 -04:00 [DBG] End userinfo request
2020-09-10 23:59:35.011 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 23:59:35.023 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:59:35.023 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:59:35.023 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 23:59:35.023 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 23:59:35.023 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 23:59:35.023 -04:00 [DBG] Start discovery request
2020-09-10 23:59:35.055 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 23:59:35.062 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 23:59:35.064 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-10 23:59:35.064 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-10 23:59:35.064 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-10 23:59:35.064 -04:00 [DBG] Rendering check session result
2020-09-10 23:59:35.076 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:59:35.076 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:59:35.076 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 23:59:35.076 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 23:59:35.076 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 23:59:35.076 -04:00 [DBG] Start key discovery request
2020-09-10 23:59:37.910 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-09-10 23:59:37.911 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-09-10 23:59:37.911 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-09-10 23:59:37.911 -04:00 [DBG] Processing signout request for 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 23:59:37.911 -04:00 [DBG] Start end session request validation
2020-09-10 23:59:37.911 -04:00 [DBG] Start identity token validation
2020-09-10 23:59:38.061 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:59:38.061 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:59:38.061 -04:00 [DBG] Client found: angular_spa / Sample SPA.PKCE
2020-09-10 23:59:38.074 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-10 23:59:38.074 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599796763,"exp":1599797063,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"ZlF1VWVEdVo2bk56WUpKZUdvQ21MdGx5U3UzT0FaMXRkMXhDfmNjZE5OeERK","iat":1599796763,"at_hash":"g1STEbO3uUSUkDR7Fl9AxA","s_hash":"pXHxgUft61liTPLrJoi_gQ","sid":"4TwUdc1VeKQD5G35AFFmgw","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599796017,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-10 23:59:38.075 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-09-10 23:59:38.075 -04:00 [DBG] Success validating end session request from angular_spa
2020-09-10 23:59:38.085 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-09-10 23:59:38.085 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-10 23:59:38.086 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-09-10 23:59:38.086 -04:00 [INF] {"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"8000008c-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-11T03:59:38.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-09-10 23:59:38.113 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-09-10 23:59:38.115 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-09-10 23:59:38.115 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-09-10 23:59:38.117 -04:00 [DBG] Processing signout callback request
2020-09-10 23:59:38.245 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:59:38.246 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:59:38.246 -04:00 [DBG] No client front-channel logout URLs
2020-09-10 23:59:38.247 -04:00 [DBG] No client back-channel logout URLs
2020-09-10 23:59:38.248 -04:00 [INF] Successful signout callback.
2020-09-10 23:59:38.248 -04:00 [DBG] No client front-channel iframe urls
2020-09-10 23:59:38.248 -04:00 [DBG] No client back-channel iframe urls
2020-09-10 23:59:39.819 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 23:59:39.833 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:59:39.833 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:59:39.833 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 23:59:39.834 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 23:59:39.834 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 23:59:39.834 -04:00 [DBG] Start discovery request
2020-09-10 23:59:39.864 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 23:59:39.868 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 23:59:39.881 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:59:39.881 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:59:39.881 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 23:59:39.881 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 23:59:39.881 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 23:59:39.881 -04:00 [DBG] Start key discovery request
2020-09-10 23:59:40.892 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 23:59:40.892 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 23:59:40.892 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 23:59:40.892 -04:00 [DBG] Start authorize request
2020-09-10 23:59:40.892 -04:00 [DBG] No user present in authorize request
2020-09-10 23:59:40.892 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 23:59:41.012 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:59:41.012 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:59:41.012 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"Z0lyNEdHUUU1bkpObklmNjV-Z2MxVkpYbE9-cnY4dzZReUd6Mm9vOFRDSVNs","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"GNvyoZFatWQd3QKOAh3ljVc8UgdI2drw-SN1-6Y6fmI","code_challenge_method":"S256","nonce":"Z0lyNEdHUUU1bkpObklmNjV-Z2MxVkpYbE9-cnY4dzZReUd6Mm9vOFRDSVNs","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 23:59:41.012 -04:00 [ERR] Request validation failed
2020-09-10 23:59:41.012 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"Z0lyNEdHUUU1bkpObklmNjV-Z2MxVkpYbE9-cnY4dzZReUd6Mm9vOFRDSVNs","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"GNvyoZFatWQd3QKOAh3ljVc8UgdI2drw-SN1-6Y6fmI","code_challenge_method":"S256","nonce":"Z0lyNEdHUUU1bkpObklmNjV-Z2MxVkpYbE9-cnY4dzZReUd6Mm9vOFRDSVNs","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 23:59:41.013 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000f0-000a-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-11T03:59:41.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-10 23:59:46.912 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-10 23:59:46.912 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-10 23:59:46.912 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-10 23:59:46.912 -04:00 [DBG] Start authorize request
2020-09-10 23:59:46.913 -04:00 [DBG] No user present in authorize request
2020-09-10 23:59:46.913 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 23:59:47.090 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:59:47.090 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:59:47.090 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 23:59:47.103 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:59:47.116 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 23:59:47.128 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:59:47.142 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 23:59:47.143 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 23:59:47.143 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"Y1FHQ1lHLVVydlYtckU1RjVoczM2cE9FZGptTU5XSS5FREtuSW5iUlFoMGtYsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"Y1FHQ1lHLVVydlYtckU1RjVoczM2cE9FZGptTU5XSS5FREtuSW5iUlFoMGtY","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"Y1FHQ1lHLVVydlYtckU1RjVoczM2cE9FZGptTU5XSS5FREtuSW5iUlFoMGtYsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"kvlsOkI458Y-6ntkzTteaLTz-WDC4svzLs5UBREjeZc","code_challenge_method":"S256","nonce":"Y1FHQ1lHLVVydlYtckU1RjVoczM2cE9FZGptTU5XSS5FREtuSW5iUlFoMGtY"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 23:59:47.143 -04:00 [INF] Showing login: User is not authenticated
2020-09-10 23:59:47.146 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 23:59:47.297 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:59:47.297 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:59:47.298 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 23:59:47.309 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:59:47.332 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 23:59:47.344 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:59:47.355 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 23:59:47.355 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 23:59:47.530 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:59:47.530 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:59:48.997 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-10 23:59:48.999 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 23:59:49.118 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:59:49.118 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:59:49.118 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 23:59:49.129 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:59:49.141 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 23:59:49.154 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:59:49.169 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 23:59:49.169 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 23:59:49.231 -04:00 [DBG] Augmenting SignInContext
2020-09-10 23:59:49.231 -04:00 [DBG] Adding idp claim with value: local
2020-09-10 23:59:49.231 -04:00 [DBG] Adding auth_time claim with value: 1599796789
2020-09-10 23:59:49.231 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-10 23:59:49.243 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"8000005d-0006-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-11T03:59:49.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-10 23:59:49.348 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:59:49.348 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:59:49.352 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-09-10 23:59:49.352 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-09-10 23:59:49.352 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-09-10 23:59:49.352 -04:00 [DBG] Start authorize callback request
2020-09-10 23:59:49.352 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 23:59:49.352 -04:00 [DBG] Start authorize request protocol validation
2020-09-10 23:59:49.481 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:59:49.481 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:59:49.482 -04:00 [DBG] Checking for PKCE parameters
2020-09-10 23:59:49.495 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:59:49.507 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 23:59:49.520 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:59:49.535 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 23:59:49.535 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-10 23:59:49.536 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"Y1FHQ1lHLVVydlYtckU1RjVoczM2cE9FZGptTU5XSS5FREtuSW5iUlFoMGtYsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"Y1FHQ1lHLVVydlYtckU1RjVoczM2cE9FZGptTU5XSS5FREtuSW5iUlFoMGtY","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"bYAOEVZ5_oCbBL_0-XpMiw","Raw":{"response_type":"code","client_id":"angular_spa","state":"Y1FHQ1lHLVVydlYtckU1RjVoczM2cE9FZGptTU5XSS5FREtuSW5iUlFoMGtYsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"kvlsOkI458Y-6ntkzTteaLTz-WDC4svzLs5UBREjeZc","code_challenge_method":"S256","nonce":"Y1FHQ1lHLVVydlYtckU1RjVoczM2cE9FZGptTU5XSS5FREtuSW5iUlFoMGtY"},"$type":"AuthorizeRequestValidationLog"}
2020-09-10 23:59:49.559 -04:00 [DBG] eExdRFBRf1V3ruMQVqYpU2dH8/vcePOUe0XJ7DBcKbo= found in database: true
2020-09-10 23:59:49.559 -04:00 [DBG] Consent found in consent store is same as current request, consent is not required
2020-09-10 23:59:49.559 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-10 23:59:49.573 -04:00 [DBG] ww2se2mcAvLscatM7hsit96M8uPq+bZR+xRkm4f1iIA= not found in database
2020-09-10 23:59:49.614 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****Ypnw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000004d-0004-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-11T03:59:49.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 23:59:49.614 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"Y1FHQ1lHLVVydlYtckU1RjVoczM2cE9FZGptTU5XSS5FREtuSW5iUlFoMGtYsemicolon%2Fbasics%2Fhome","Scope":"openid profile email roles app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-10 23:59:49.614 -04:00 [DBG] Augmenting SignInContext
2020-09-10 23:59:49.614 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-10 23:59:50.363 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 23:59:50.375 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:59:50.375 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:59:50.375 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 23:59:50.375 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 23:59:50.375 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 23:59:50.375 -04:00 [DBG] Start discovery request
2020-09-10 23:59:50.406 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 23:59:50.413 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 23:59:50.427 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:59:50.427 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:59:50.428 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 23:59:50.428 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 23:59:50.428 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 23:59:50.428 -04:00 [DBG] Start key discovery request
2020-09-10 23:59:51.440 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-10 23:59:51.452 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:59:51.452 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:59:51.452 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-10 23:59:51.458 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-10 23:59:51.458 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-10 23:59:51.458 -04:00 [DBG] Start token request.
2020-09-10 23:59:51.458 -04:00 [DBG] Start client validation
2020-09-10 23:59:51.458 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-10 23:59:51.458 -04:00 [DBG] Start parsing for secret in post body
2020-09-10 23:59:51.458 -04:00 [DBG] client id without secret found
2020-09-10 23:59:51.458 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-10 23:59:51.458 -04:00 [DBG] Secret id found: angular_spa
2020-09-10 23:59:51.571 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:59:51.571 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:59:51.571 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-10 23:59:51.571 -04:00 [DBG] Client validation success
2020-09-10 23:59:51.571 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000005f-0006-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-11T03:59:51.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-10 23:59:51.571 -04:00 [DBG] Start token request validation
2020-09-10 23:59:51.571 -04:00 [DBG] Start validation of authorization code token request
2020-09-10 23:59:51.584 -04:00 [DBG] ww2se2mcAvLscatM7hsit96M8uPq+bZR+xRkm4f1iIA= found in database: true
2020-09-10 23:59:51.595 -04:00 [DBG] removing ww2se2mcAvLscatM7hsit96M8uPq+bZR+xRkm4f1iIA= persisted grant from database
2020-09-10 23:59:51.639 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-10 23:59:51.652 -04:00 [DBG] Validation of authorization code token request success
2020-09-10 23:59:51.653 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"RJ7FxXFMnAsrmZfo3MLwYPHwGTXewWgFSfwhPYDYpnw","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"RJ7FxXFMnAsrmZfo3MLwYPHwGTXewWgFSfwhPYDYpnw","redirect_uri":"https://localhost:4200","code_verifier":"Yn5lbm5vbGFibUJ6VGxXMHh-eThKSXlrcXZPTXJrcl85eU9vSVdXM3AyaUtS","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-09-10 23:59:51.821 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:59:51.821 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:59:51.836 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:59:51.851 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 23:59:51.851 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-09-10 23:59:51.851 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-10 23:59:52.053 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:59:52.053 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:59:52.066 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:59:52.079 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-10 23:59:52.079 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: angular_spa
2020-09-10 23:59:52.079 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-10 23:59:52.081 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****N0MQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****CWGA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000005f-0006-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-11T03:59:52.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-10 23:59:52.081 -04:00 [DBG] Token request success.
2020-09-10 23:59:52.088 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 23:59:52.090 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-10 23:59:52.090 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-10 23:59:52.090 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-10 23:59:52.090 -04:00 [DBG] Rendering check session result
2020-09-10 23:59:52.101 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:59:52.101 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:59:52.102 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-10 23:59:52.115 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:59:52.115 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:59:52.115 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-10 23:59:52.117 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-10 23:59:52.117 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-10 23:59:52.117 -04:00 [DBG] Start userinfo request
2020-09-10 23:59:52.117 -04:00 [DBG] Bearer token found in header
2020-09-10 23:59:52.259 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:59:52.259 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:59:52.373 -04:00 [DBG] angular_spa found in database: true
2020-09-10 23:59:52.373 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-10 23:59:52.397 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-10 23:59:52.398 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599796791,"exp":1599800391,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599796789,"idp":"local","role":"STSAdmRole","scope":["roles","openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-10 23:59:52.398 -04:00 [DBG] Creating userinfo response
2020-09-10 23:59:52.398 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 23:59:52.398 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 23:59:52.410 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:59:52.410 -04:00 [DBG] Requested claim types: role sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-10 23:59:52.410 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-10 23:59:52.421 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-10 23:59:52.471 -04:00 [INF] Profile service returned the following claim types: sub name role preferred_username email email_verified
2020-09-10 23:59:52.471 -04:00 [DBG] End userinfo request
2020-09-10 23:59:54.702 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-10 23:59:54.716 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:59:54.717 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:59:54.717 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 23:59:54.717 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 23:59:54.717 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 23:59:54.717 -04:00 [DBG] Start discovery request
2020-09-10 23:59:54.745 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 23:59:54.751 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-10 23:59:54.753 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-10 23:59:54.753 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-10 23:59:54.753 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-10 23:59:54.753 -04:00 [DBG] Rendering check session result
2020-09-10 23:59:54.764 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-10 23:59:54.765 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-10 23:59:54.765 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 23:59:54.765 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 23:59:54.765 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 23:59:54.765 -04:00 [DBG] Start key discovery request
2020-09-10 23:59:54.821 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-10 23:59:54.822 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-10 23:59:54.822 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-10 23:59:54.822 -04:00 [DBG] Start discovery request
2020-09-10 23:59:54.848 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-10 23:59:54.874 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-10 23:59:54.874 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-10 23:59:54.874 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-10 23:59:54.874 -04:00 [DBG] Start key discovery request
2020-09-11 00:00:04.571 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:00:04.626 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:00:04.626 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:00:04.626 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:00:04.626 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:00:04.626 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:00:04.626 -04:00 [DBG] Start discovery request
2020-09-11 00:00:04.658 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:00:04.672 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:00:04.673 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-11 00:00:04.673 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-11 00:00:04.673 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-11 00:00:04.673 -04:00 [DBG] Rendering check session result
2020-09-11 00:00:04.699 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:00:04.699 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:00:04.699 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:00:04.699 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:00:04.699 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:00:04.699 -04:00 [DBG] Start key discovery request
2020-09-11 00:00:13.644 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:00:13.663 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:00:13.663 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:00:13.663 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:00:13.663 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:00:13.663 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:00:13.663 -04:00 [DBG] Start discovery request
2020-09-11 00:00:13.751 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:00:13.758 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:00:13.759 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-11 00:00:13.759 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-11 00:00:13.759 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-11 00:00:13.759 -04:00 [DBG] Rendering check session result
2020-09-11 00:00:13.769 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:00:13.769 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:00:13.769 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:00:13.770 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:00:13.770 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:00:13.770 -04:00 [DBG] Start key discovery request
2020-09-11 00:00:17.084 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-09-11 00:00:17.087 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-09-11 00:00:17.087 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-09-11 00:00:17.087 -04:00 [DBG] Processing signout request for 34903727-3397-4344-9875-47f5e36788d3
2020-09-11 00:00:17.087 -04:00 [DBG] Start end session request validation
2020-09-11 00:00:17.087 -04:00 [DBG] Start identity token validation
2020-09-11 00:00:17.247 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:00:17.247 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:00:17.247 -04:00 [DBG] Client found: angular_spa / Sample SPA.PKCE
2020-09-11 00:00:17.264 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-11 00:00:17.264 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599796792,"exp":1599797092,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"Y1FHQ1lHLVVydlYtckU1RjVoczM2cE9FZGptTU5XSS5FREtuSW5iUlFoMGtY","iat":1599796792,"at_hash":"P25TjabV9EFD_RNuMo3GLw","s_hash":"onoVRBOHFntezGNsKPJJeg","sid":"bYAOEVZ5_oCbBL_0-XpMiw","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599796789,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-11 00:00:17.264 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-09-11 00:00:17.264 -04:00 [DBG] Success validating end session request from angular_spa
2020-09-11 00:00:17.270 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-09-11 00:00:17.270 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-11 00:00:17.270 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-09-11 00:00:17.270 -04:00 [INF] {"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000055-0004-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:00:17.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-09-11 00:00:17.302 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-09-11 00:00:17.303 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-09-11 00:00:17.303 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-09-11 00:00:17.303 -04:00 [DBG] Processing signout callback request
2020-09-11 00:00:17.448 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:00:17.448 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:00:17.448 -04:00 [DBG] No client front-channel logout URLs
2020-09-11 00:00:17.448 -04:00 [DBG] No client back-channel logout URLs
2020-09-11 00:00:17.448 -04:00 [INF] Successful signout callback.
2020-09-11 00:00:17.448 -04:00 [DBG] No client front-channel iframe urls
2020-09-11 00:00:17.448 -04:00 [DBG] No client back-channel iframe urls
2020-09-11 00:00:20.175 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:00:20.188 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:00:20.188 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:00:20.188 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:00:20.188 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:00:20.188 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:00:20.188 -04:00 [DBG] Start discovery request
2020-09-11 00:00:20.217 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:00:20.236 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:00:20.252 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:00:20.252 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:00:20.252 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:00:20.252 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:00:20.252 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:00:20.252 -04:00 [DBG] Start key discovery request
2020-09-11 00:00:21.289 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-11 00:00:21.289 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-11 00:00:21.289 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-11 00:00:21.289 -04:00 [DBG] Start authorize request
2020-09-11 00:00:21.289 -04:00 [DBG] No user present in authorize request
2020-09-11 00:00:21.289 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:00:21.412 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:00:21.412 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:00:21.412 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"T1VUQ2R4WHQyTkRsUm1abldmMGZxWEN5eE1yemJ2V3JpYVowc3NPRlpvYnlv","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"nvgqa0WZPW52x0-K7iJDdc-svvE18nPERumcWVUCxXs","code_challenge_method":"S256","nonce":"T1VUQ2R4WHQyTkRsUm1abldmMGZxWEN5eE1yemJ2V3JpYVowc3NPRlpvYnlv","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-11 00:00:21.412 -04:00 [ERR] Request validation failed
2020-09-11 00:00:21.413 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"T1VUQ2R4WHQyTkRsUm1abldmMGZxWEN5eE1yemJ2V3JpYVowc3NPRlpvYnlv","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"nvgqa0WZPW52x0-K7iJDdc-svvE18nPERumcWVUCxXs","code_challenge_method":"S256","nonce":"T1VUQ2R4WHQyTkRsUm1abldmMGZxWEN5eE1yemJ2V3JpYVowc3NPRlpvYnlv","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-11 00:00:21.413 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000096-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:00:21.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-11 00:00:27.708 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-11 00:00:27.708 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-11 00:00:27.708 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-11 00:00:27.708 -04:00 [DBG] Start authorize request
2020-09-11 00:00:27.708 -04:00 [DBG] No user present in authorize request
2020-09-11 00:00:27.708 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:00:27.851 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:00:27.851 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:00:27.851 -04:00 [DBG] Checking for PKCE parameters
2020-09-11 00:00:27.874 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:00:27.886 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:00:27.901 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:00:27.915 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:00:27.916 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-11 00:00:27.916 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"T3NtMkJLRFhUaV9OM1NOZUFRZE82OVlmaHNOcWxvV2NHUXZncTNxRzF1QXpusemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"T3NtMkJLRFhUaV9OM1NOZUFRZE82OVlmaHNOcWxvV2NHUXZncTNxRzF1QXpu","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"T3NtMkJLRFhUaV9OM1NOZUFRZE82OVlmaHNOcWxvV2NHUXZncTNxRzF1QXpusemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"iOueh6GeLjwKBLMNfz0rDX62ToyqgRIZbLo1QIp3S2E","code_challenge_method":"S256","nonce":"T3NtMkJLRFhUaV9OM1NOZUFRZE82OVlmaHNOcWxvV2NHUXZncTNxRzF1QXpu"},"$type":"AuthorizeRequestValidationLog"}
2020-09-11 00:00:27.916 -04:00 [INF] Showing login: User is not authenticated
2020-09-11 00:00:27.920 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:00:28.052 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:00:28.052 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:00:28.052 -04:00 [DBG] Checking for PKCE parameters
2020-09-11 00:00:28.065 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:00:28.078 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:00:28.093 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:00:28.105 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:00:28.105 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-11 00:00:28.226 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:00:28.226 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:00:29.689 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-11 00:00:29.691 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:00:29.811 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:00:29.811 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:00:29.811 -04:00 [DBG] Checking for PKCE parameters
2020-09-11 00:00:29.825 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:00:29.838 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:00:29.851 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:00:29.864 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:00:29.865 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-11 00:00:29.924 -04:00 [DBG] Augmenting SignInContext
2020-09-11 00:00:29.924 -04:00 [DBG] Adding idp claim with value: local
2020-09-11 00:00:29.924 -04:00 [DBG] Adding auth_time claim with value: 1599796829
2020-09-11 00:00:29.925 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-11 00:00:29.935 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"8000002c-0002-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:00:29.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-11 00:00:30.053 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:00:30.053 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:00:30.058 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-09-11 00:00:30.061 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-09-11 00:00:30.061 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-09-11 00:00:30.061 -04:00 [DBG] Start authorize callback request
2020-09-11 00:00:30.061 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-11 00:00:30.062 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:00:30.186 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:00:30.186 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:00:30.186 -04:00 [DBG] Checking for PKCE parameters
2020-09-11 00:00:30.199 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:00:30.214 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:00:30.228 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:00:30.240 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:00:30.241 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-11 00:00:30.241 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"T3NtMkJLRFhUaV9OM1NOZUFRZE82OVlmaHNOcWxvV2NHUXZncTNxRzF1QXpusemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"T3NtMkJLRFhUaV9OM1NOZUFRZE82OVlmaHNOcWxvV2NHUXZncTNxRzF1QXpu","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"xCATFTLnNUbZpapxCzsuQw","Raw":{"response_type":"code","client_id":"angular_spa","state":"T3NtMkJLRFhUaV9OM1NOZUFRZE82OVlmaHNOcWxvV2NHUXZncTNxRzF1QXpusemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"iOueh6GeLjwKBLMNfz0rDX62ToyqgRIZbLo1QIp3S2E","code_challenge_method":"S256","nonce":"T3NtMkJLRFhUaV9OM1NOZUFRZE82OVlmaHNOcWxvV2NHUXZncTNxRzF1QXpu"},"$type":"AuthorizeRequestValidationLog"}
2020-09-11 00:00:30.266 -04:00 [DBG] eExdRFBRf1V3ruMQVqYpU2dH8/vcePOUe0XJ7DBcKbo= found in database: true
2020-09-11 00:00:30.266 -04:00 [DBG] Consent found in consent store is same as current request, consent is not required
2020-09-11 00:00:30.266 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-11 00:00:30.278 -04:00 [DBG] JdUY2P/7mSKz7D4IjtYtZz4jltHYRZ4HDJgJsAOOEz4= not found in database
2020-09-11 00:00:30.332 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****o3xI","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000059-0004-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:00:30.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-11 00:00:30.332 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"T3NtMkJLRFhUaV9OM1NOZUFRZE82OVlmaHNOcWxvV2NHUXZncTNxRzF1QXpusemicolon%2Fbasics%2Fhome","Scope":"openid profile email roles app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-11 00:00:30.332 -04:00 [DBG] Augmenting SignInContext
2020-09-11 00:00:30.333 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-11 00:00:31.136 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:00:31.149 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:00:31.149 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:00:31.149 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:00:31.149 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:00:31.149 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:00:31.149 -04:00 [DBG] Start discovery request
2020-09-11 00:00:31.181 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:00:31.200 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:00:31.214 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:00:31.214 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:00:31.214 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:00:31.214 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:00:31.214 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:00:31.214 -04:00 [DBG] Start key discovery request
2020-09-11 00:00:32.262 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-11 00:00:32.280 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:00:32.280 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:00:32.280 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-11 00:00:32.280 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-11 00:00:32.280 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-11 00:00:32.280 -04:00 [DBG] Start token request.
2020-09-11 00:00:32.280 -04:00 [DBG] Start client validation
2020-09-11 00:00:32.280 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-11 00:00:32.280 -04:00 [DBG] Start parsing for secret in post body
2020-09-11 00:00:32.281 -04:00 [DBG] client id without secret found
2020-09-11 00:00:32.281 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-11 00:00:32.281 -04:00 [DBG] Secret id found: angular_spa
2020-09-11 00:00:32.437 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:00:32.437 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:00:32.437 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-11 00:00:32.437 -04:00 [DBG] Client validation success
2020-09-11 00:00:32.438 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000062-0005-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:00:32.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-11 00:00:32.438 -04:00 [DBG] Start token request validation
2020-09-11 00:00:32.438 -04:00 [DBG] Start validation of authorization code token request
2020-09-11 00:00:32.450 -04:00 [DBG] JdUY2P/7mSKz7D4IjtYtZz4jltHYRZ4HDJgJsAOOEz4= found in database: true
2020-09-11 00:00:32.465 -04:00 [DBG] removing JdUY2P/7mSKz7D4IjtYtZz4jltHYRZ4HDJgJsAOOEz4= persisted grant from database
2020-09-11 00:00:32.508 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-11 00:00:32.523 -04:00 [DBG] Validation of authorization code token request success
2020-09-11 00:00:32.523 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"X9dCeX1sJ9TUK7YKx4XLe_wuCPEpHXV-6BygaLVo3xI","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"X9dCeX1sJ9TUK7YKx4XLe_wuCPEpHXV-6BygaLVo3xI","redirect_uri":"https://localhost:4200","code_verifier":"R1k3Yzh-ZEpuUTA1OGMtRXV5VjlFUzBZSHdQbk9sVVQyRHhqLXBCQ1pYZzNq","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-09-11 00:00:32.683 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:00:32.683 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:00:32.695 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:00:32.710 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:00:32.710 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-09-11 00:00:32.710 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-11 00:00:32.871 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:00:32.871 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:00:32.882 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:00:32.898 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:00:32.898 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: angular_spa
2020-09-11 00:00:32.898 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-11 00:00:32.900 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****b2CA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****esQA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000062-0005-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:00:32.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-11 00:00:32.900 -04:00 [DBG] Token request success.
2020-09-11 00:00:32.910 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-11 00:00:32.910 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-11 00:00:32.910 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-11 00:00:32.910 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-11 00:00:32.911 -04:00 [DBG] Rendering check session result
2020-09-11 00:00:32.925 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:00:32.925 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:00:32.945 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-11 00:00:32.960 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:00:32.960 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:00:32.960 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-11 00:00:32.960 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-11 00:00:32.960 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-11 00:00:32.961 -04:00 [DBG] Start userinfo request
2020-09-11 00:00:32.961 -04:00 [DBG] Bearer token found in header
2020-09-11 00:00:33.082 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:00:33.082 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:00:33.410 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:00:33.410 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:00:33.421 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-11 00:00:33.421 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599796832,"exp":1599800432,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599796829,"idp":"local","role":"STSAdmRole","scope":["roles","openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-11 00:00:33.422 -04:00 [DBG] Creating userinfo response
2020-09-11 00:00:33.422 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-11 00:00:33.422 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-11 00:00:33.433 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:00:33.433 -04:00 [DBG] Requested claim types: role sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-11 00:00:33.433 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-11 00:00:33.444 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:00:33.488 -04:00 [INF] Profile service returned the following claim types: sub name role preferred_username email email_verified
2020-09-11 00:00:33.488 -04:00 [DBG] End userinfo request
2020-09-11 00:02:01.542 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-09-11 00:02:01.556 -04:00 [DBG] Origin https://jwt.io is allowed: false
2020-09-11 00:02:01.556 -04:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-09-11 00:02:01.556 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:02:01.556 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:02:01.556 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:02:01.556 -04:00 [DBG] Start discovery request
2020-09-11 00:02:01.586 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:02:32.662 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-09-11 00:02:32.662 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-09-11 00:02:32.662 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-09-11 00:02:32.663 -04:00 [DBG] Processing signout request for 34903727-3397-4344-9875-47f5e36788d3
2020-09-11 00:02:32.663 -04:00 [DBG] Start end session request validation
2020-09-11 00:02:32.663 -04:00 [DBG] Start identity token validation
2020-09-11 00:02:32.791 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:02:32.791 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:02:32.791 -04:00 [DBG] Client found: angular_spa / Sample SPA.PKCE
2020-09-11 00:02:32.804 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-11 00:02:32.804 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599796832,"exp":1599797132,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"T3NtMkJLRFhUaV9OM1NOZUFRZE82OVlmaHNOcWxvV2NHUXZncTNxRzF1QXpu","iat":1599796832,"at_hash":"jkUbdSTbVp-gn6TfilLWvQ","s_hash":"Em8GZwUUO9EHzGObwxzF-g","sid":"xCATFTLnNUbZpapxCzsuQw","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599796829,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-11 00:02:32.805 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-09-11 00:02:32.805 -04:00 [DBG] Success validating end session request from angular_spa
2020-09-11 00:02:32.809 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-09-11 00:02:32.809 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-11 00:02:32.809 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-09-11 00:02:32.809 -04:00 [INF] {"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000096-0004-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:02:32.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-09-11 00:02:32.840 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-09-11 00:02:32.843 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-09-11 00:02:32.843 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-09-11 00:02:32.843 -04:00 [DBG] Processing signout callback request
2020-09-11 00:02:32.990 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:02:32.990 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:02:32.990 -04:00 [DBG] No client front-channel logout URLs
2020-09-11 00:02:32.990 -04:00 [DBG] No client back-channel logout URLs
2020-09-11 00:02:32.991 -04:00 [INF] Successful signout callback.
2020-09-11 00:02:32.991 -04:00 [DBG] No client front-channel iframe urls
2020-09-11 00:02:32.991 -04:00 [DBG] No client back-channel iframe urls
2020-09-11 00:02:35.251 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:02:35.263 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:02:35.263 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:02:35.263 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:02:35.263 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:02:35.263 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:02:35.263 -04:00 [DBG] Start discovery request
2020-09-11 00:02:35.294 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:02:35.310 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:02:35.323 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:02:35.323 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:02:35.323 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:02:35.323 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:02:35.323 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:02:35.323 -04:00 [DBG] Start key discovery request
2020-09-11 00:02:36.346 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-11 00:02:36.346 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-11 00:02:36.346 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-11 00:02:36.347 -04:00 [DBG] Start authorize request
2020-09-11 00:02:36.347 -04:00 [DBG] No user present in authorize request
2020-09-11 00:02:36.347 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:02:36.475 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:02:36.475 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:02:36.476 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"UTd0ckladjhrWjdSTWpPajE3TlRveVRXZ3k1NmhhNFJucDJJdXpmcm1RRzVW","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"jTvisWFUv1n_rRygHbBoNzE6QL6-SlquGvmO4lX76i0","code_challenge_method":"S256","nonce":"UTd0ckladjhrWjdSTWpPajE3TlRveVRXZ3k1NmhhNFJucDJJdXpmcm1RRzVW","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-11 00:02:36.476 -04:00 [ERR] Request validation failed
2020-09-11 00:02:36.476 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"UTd0ckladjhrWjdSTWpPajE3TlRveVRXZ3k1NmhhNFJucDJJdXpmcm1RRzVW","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"jTvisWFUv1n_rRygHbBoNzE6QL6-SlquGvmO4lX76i0","code_challenge_method":"S256","nonce":"UTd0ckladjhrWjdSTWpPajE3TlRveVRXZ3k1NmhhNFJucDJJdXpmcm1RRzVW","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-11 00:02:36.476 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000004c-0009-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:02:36.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-11 00:02:45.610 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-11 00:02:45.610 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-11 00:02:45.610 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-11 00:02:45.610 -04:00 [DBG] Start authorize request
2020-09-11 00:02:45.610 -04:00 [DBG] No user present in authorize request
2020-09-11 00:02:45.611 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:02:45.728 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:02:45.728 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:02:45.729 -04:00 [DBG] Checking for PKCE parameters
2020-09-11 00:02:45.740 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:02:45.754 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:02:45.768 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:02:45.782 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:02:45.782 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-11 00:02:45.782 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"SmxLMkZ4U0x4bF9GZ2tOZWljVGNQTGxmYzQ1M3ZLT2l4Wmk1SVBxNWkySTlzsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"SmxLMkZ4U0x4bF9GZ2tOZWljVGNQTGxmYzQ1M3ZLT2l4Wmk1SVBxNWkySTlz","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"SmxLMkZ4U0x4bF9GZ2tOZWljVGNQTGxmYzQ1M3ZLT2l4Wmk1SVBxNWkySTlzsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"MSvgEmvETkDRExi0DA24sgzo__Wrb84IM--WEnZiSTk","code_challenge_method":"S256","nonce":"SmxLMkZ4U0x4bF9GZ2tOZWljVGNQTGxmYzQ1M3ZLT2l4Wmk1SVBxNWkySTlz"},"$type":"AuthorizeRequestValidationLog"}
2020-09-11 00:02:45.782 -04:00 [INF] Showing login: User is not authenticated
2020-09-11 00:02:45.786 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:02:45.899 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:02:45.899 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:02:45.899 -04:00 [DBG] Checking for PKCE parameters
2020-09-11 00:02:45.912 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:02:45.925 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:02:45.945 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:02:45.957 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:02:45.957 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-11 00:02:46.066 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:02:46.066 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:02:48.362 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-11 00:02:48.364 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:02:48.490 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:02:48.490 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:02:48.490 -04:00 [DBG] Checking for PKCE parameters
2020-09-11 00:02:48.503 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:02:48.517 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:02:48.531 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:02:48.546 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:02:48.546 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-11 00:02:48.639 -04:00 [DBG] Augmenting SignInContext
2020-09-11 00:02:48.639 -04:00 [DBG] Adding idp claim with value: local
2020-09-11 00:02:48.639 -04:00 [DBG] Adding auth_time claim with value: 1599796968
2020-09-11 00:02:48.639 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-11 00:02:48.650 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000002-0006-fa00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:02:48.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-11 00:02:48.758 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:02:48.758 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:02:48.763 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-09-11 00:02:48.763 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-09-11 00:02:48.763 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-09-11 00:02:48.763 -04:00 [DBG] Start authorize callback request
2020-09-11 00:02:48.763 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-11 00:02:48.764 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:02:48.885 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:02:48.885 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:02:48.885 -04:00 [DBG] Checking for PKCE parameters
2020-09-11 00:02:48.899 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:02:48.911 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:02:48.924 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:02:48.938 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:02:48.938 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-11 00:02:48.938 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"SmxLMkZ4U0x4bF9GZ2tOZWljVGNQTGxmYzQ1M3ZLT2l4Wmk1SVBxNWkySTlzsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"SmxLMkZ4U0x4bF9GZ2tOZWljVGNQTGxmYzQ1M3ZLT2l4Wmk1SVBxNWkySTlz","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"HHAWImtSzBGII93phaoN5g","Raw":{"response_type":"code","client_id":"angular_spa","state":"SmxLMkZ4U0x4bF9GZ2tOZWljVGNQTGxmYzQ1M3ZLT2l4Wmk1SVBxNWkySTlzsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"MSvgEmvETkDRExi0DA24sgzo__Wrb84IM--WEnZiSTk","code_challenge_method":"S256","nonce":"SmxLMkZ4U0x4bF9GZ2tOZWljVGNQTGxmYzQ1M3ZLT2l4Wmk1SVBxNWkySTlz"},"$type":"AuthorizeRequestValidationLog"}
2020-09-11 00:02:48.963 -04:00 [DBG] eExdRFBRf1V3ruMQVqYpU2dH8/vcePOUe0XJ7DBcKbo= found in database: true
2020-09-11 00:02:48.963 -04:00 [DBG] Consent found in consent store is same as current request, consent is not required
2020-09-11 00:02:48.963 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-11 00:02:48.977 -04:00 [DBG] 8XZRWZX6CDMaL3T8QQcvbjY2JIvrWtXaiNqlaa5u7Wg= not found in database
2020-09-11 00:02:49.027 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****oyf8","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000026-0003-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:02:49.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-11 00:02:49.027 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"SmxLMkZ4U0x4bF9GZ2tOZWljVGNQTGxmYzQ1M3ZLT2l4Wmk1SVBxNWkySTlzsemicolon%2Fbasics%2Fhome","Scope":"openid profile email roles app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-11 00:02:49.027 -04:00 [DBG] Augmenting SignInContext
2020-09-11 00:02:49.028 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-11 00:02:49.795 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:02:49.809 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:02:49.809 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:02:49.809 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:02:49.809 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:02:49.809 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:02:49.809 -04:00 [DBG] Start discovery request
2020-09-11 00:02:49.839 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:02:49.853 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:02:49.865 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:02:49.865 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:02:49.865 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:02:49.865 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:02:49.865 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:02:49.865 -04:00 [DBG] Start key discovery request
2020-09-11 00:02:50.885 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-11 00:02:50.900 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:02:50.900 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:02:50.900 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-11 00:02:50.901 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-11 00:02:50.901 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-11 00:02:50.901 -04:00 [DBG] Start token request.
2020-09-11 00:02:50.901 -04:00 [DBG] Start client validation
2020-09-11 00:02:50.901 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-11 00:02:50.901 -04:00 [DBG] Start parsing for secret in post body
2020-09-11 00:02:50.901 -04:00 [DBG] client id without secret found
2020-09-11 00:02:50.901 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-11 00:02:50.901 -04:00 [DBG] Secret id found: angular_spa
2020-09-11 00:02:51.024 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:02:51.024 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:02:51.024 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-11 00:02:51.024 -04:00 [DBG] Client validation success
2020-09-11 00:02:51.025 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"800000a0-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:02:51.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-11 00:02:51.025 -04:00 [DBG] Start token request validation
2020-09-11 00:02:51.025 -04:00 [DBG] Start validation of authorization code token request
2020-09-11 00:02:51.039 -04:00 [DBG] 8XZRWZX6CDMaL3T8QQcvbjY2JIvrWtXaiNqlaa5u7Wg= found in database: true
2020-09-11 00:02:51.052 -04:00 [DBG] removing 8XZRWZX6CDMaL3T8QQcvbjY2JIvrWtXaiNqlaa5u7Wg= persisted grant from database
2020-09-11 00:02:51.107 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-11 00:02:51.118 -04:00 [DBG] Validation of authorization code token request success
2020-09-11 00:02:51.119 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"WvAFKyFd4PmPZb1PWueijmX6_WceOB1Rwub3ySPoyf8","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"WvAFKyFd4PmPZb1PWueijmX6_WceOB1Rwub3ySPoyf8","redirect_uri":"https://localhost:4200","code_verifier":"dV9NMmJ-aFhxU28xMjJBcDNPZVN-RXhNZi1BdnQzd0xBc2cwM34xbjFKYWJk","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-09-11 00:02:51.235 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:02:51.236 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:02:51.249 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:02:51.264 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:02:51.264 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-09-11 00:02:51.264 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-11 00:02:51.427 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:02:51.427 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:02:51.440 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:02:51.454 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:02:51.454 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: angular_spa
2020-09-11 00:02:51.454 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-11 00:02:51.455 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****aPnA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****4sPA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000a0-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:02:51.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-11 00:02:51.455 -04:00 [DBG] Token request success.
2020-09-11 00:02:51.467 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-11 00:02:51.467 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-11 00:02:51.467 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-11 00:02:51.467 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-11 00:02:51.467 -04:00 [DBG] Rendering check session result
2020-09-11 00:02:51.480 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:02:51.480 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:02:51.483 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-11 00:02:51.497 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:02:51.497 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:02:51.497 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-11 00:02:51.498 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-11 00:02:51.498 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-11 00:02:51.498 -04:00 [DBG] Start userinfo request
2020-09-11 00:02:51.498 -04:00 [DBG] Bearer token found in header
2020-09-11 00:02:51.607 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:02:51.607 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:02:51.724 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:02:51.724 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:02:51.738 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-11 00:02:51.738 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599796971,"exp":1599800571,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599796968,"idp":"local","scope":["roles","openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-11 00:02:51.738 -04:00 [DBG] Creating userinfo response
2020-09-11 00:02:51.738 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-11 00:02:51.738 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-11 00:02:51.755 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:02:51.755 -04:00 [DBG] Requested claim types: role sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-11 00:02:51.755 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-11 00:02:51.768 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:02:51.813 -04:00 [INF] Profile service returned the following claim types: sub name role preferred_username email email_verified
2020-09-11 00:02:51.813 -04:00 [DBG] End userinfo request
2020-09-11 00:02:53.187 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:02:53.199 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:02:53.199 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:02:53.199 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:02:53.199 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:02:53.199 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:02:53.199 -04:00 [DBG] Start discovery request
2020-09-11 00:02:53.230 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:02:53.257 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:02:53.258 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-11 00:02:53.258 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-11 00:02:53.258 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-11 00:02:53.258 -04:00 [DBG] Rendering check session result
2020-09-11 00:02:53.272 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:02:53.272 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:02:53.272 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:02:53.272 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:02:53.272 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:02:53.272 -04:00 [DBG] Start key discovery request
2020-09-11 00:02:55.203 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:02:55.216 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:02:55.216 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:02:55.216 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:02:55.216 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:02:55.216 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:02:55.216 -04:00 [DBG] Start discovery request
2020-09-11 00:02:55.248 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:02:55.267 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:02:55.268 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-11 00:02:55.268 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-11 00:02:55.268 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-11 00:02:55.268 -04:00 [DBG] Rendering check session result
2020-09-11 00:02:55.281 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:02:55.281 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:02:55.281 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:02:55.281 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:02:55.281 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:02:55.281 -04:00 [DBG] Start key discovery request
2020-09-11 00:05:11.841 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-09-11 00:05:11.841 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-09-11 00:05:11.841 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-09-11 00:05:11.841 -04:00 [DBG] Processing signout request for 34903727-3397-4344-9875-47f5e36788d3
2020-09-11 00:05:11.841 -04:00 [DBG] Start end session request validation
2020-09-11 00:05:11.841 -04:00 [DBG] Start identity token validation
2020-09-11 00:05:12.042 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:05:12.042 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:05:12.043 -04:00 [DBG] Client found: angular_spa / Sample SPA.PKCE
2020-09-11 00:05:12.054 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-11 00:05:12.054 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599796971,"exp":1599797271,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"SmxLMkZ4U0x4bF9GZ2tOZWljVGNQTGxmYzQ1M3ZLT2l4Wmk1SVBxNWkySTlz","iat":1599796971,"at_hash":"rNzLRSfuSu49dGpvc-cEDg","s_hash":"RiOBC3zaClyYUOFkjwXxnw","sid":"HHAWImtSzBGII93phaoN5g","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599796968,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-11 00:05:12.055 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-09-11 00:05:12.055 -04:00 [DBG] Success validating end session request from angular_spa
2020-09-11 00:05:12.059 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-09-11 00:05:12.059 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-11 00:05:12.059 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-09-11 00:05:12.059 -04:00 [INF] {"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"800000b0-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:05:12.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-09-11 00:05:12.091 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-09-11 00:05:12.091 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-09-11 00:05:12.091 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-09-11 00:05:12.091 -04:00 [DBG] Processing signout callback request
2020-09-11 00:05:12.317 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:05:12.317 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:05:12.317 -04:00 [DBG] No client front-channel logout URLs
2020-09-11 00:05:12.317 -04:00 [DBG] No client back-channel logout URLs
2020-09-11 00:05:12.317 -04:00 [INF] Successful signout callback.
2020-09-11 00:05:12.317 -04:00 [DBG] No client front-channel iframe urls
2020-09-11 00:05:12.317 -04:00 [DBG] No client back-channel iframe urls
2020-09-11 00:05:14.687 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:05:14.702 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:05:14.702 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:05:14.702 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:05:14.702 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:05:14.702 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:05:14.702 -04:00 [DBG] Start discovery request
2020-09-11 00:05:14.733 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:05:14.743 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:05:14.757 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:05:14.757 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:05:14.757 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:05:14.757 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:05:14.757 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:05:14.757 -04:00 [DBG] Start key discovery request
2020-09-11 00:05:15.777 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-11 00:05:15.777 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-11 00:05:15.777 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-11 00:05:15.777 -04:00 [DBG] Start authorize request
2020-09-11 00:05:15.778 -04:00 [DBG] No user present in authorize request
2020-09-11 00:05:15.778 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:05:15.900 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:05:15.900 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:05:15.900 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"SGZ-UDlFamVZcHBQUmNuamtRa2dWTFB3U2lWck9ZX2lEQzM3YS5Rc21FTXJS","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"d3m2_NQ5qJh9FIjNWk9JYh6XQ1ZoDKlvmlFX-7RDXqk","code_challenge_method":"S256","nonce":"SGZ-UDlFamVZcHBQUmNuamtRa2dWTFB3U2lWck9ZX2lEQzM3YS5Rc21FTXJS","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-11 00:05:15.900 -04:00 [ERR] Request validation failed
2020-09-11 00:05:15.901 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"SGZ-UDlFamVZcHBQUmNuamtRa2dWTFB3U2lWck9ZX2lEQzM3YS5Rc21FTXJS","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"d3m2_NQ5qJh9FIjNWk9JYh6XQ1ZoDKlvmlFX-7RDXqk","code_challenge_method":"S256","nonce":"SGZ-UDlFamVZcHBQUmNuamtRa2dWTFB3U2lWck9ZX2lEQzM3YS5Rc21FTXJS","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-11 00:05:15.901 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000a0-0004-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:05:15.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-11 00:05:21.522 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-11 00:05:21.522 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-11 00:05:21.522 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-11 00:05:21.522 -04:00 [DBG] Start authorize request
2020-09-11 00:05:21.522 -04:00 [DBG] No user present in authorize request
2020-09-11 00:05:21.522 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:05:21.648 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:05:21.648 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:05:21.648 -04:00 [DBG] Checking for PKCE parameters
2020-09-11 00:05:21.663 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:05:21.676 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:05:21.691 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:05:21.707 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:05:21.707 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-11 00:05:21.707 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"YXc4bW5KWDd5amtaUkRsU18zYXBzSkZaVFh2SFJMRVBPNjRBVUE0R2RUOUdBsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"YXc4bW5KWDd5amtaUkRsU18zYXBzSkZaVFh2SFJMRVBPNjRBVUE0R2RUOUdB","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"YXc4bW5KWDd5amtaUkRsU18zYXBzSkZaVFh2SFJMRVBPNjRBVUE0R2RUOUdBsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"oBCZSFT1-H_WkMpK4gcWzNrZfNGPBJW2Kk90uMmbq7E","code_challenge_method":"S256","nonce":"YXc4bW5KWDd5amtaUkRsU18zYXBzSkZaVFh2SFJMRVBPNjRBVUE0R2RUOUdB"},"$type":"AuthorizeRequestValidationLog"}
2020-09-11 00:05:21.707 -04:00 [INF] Showing login: User is not authenticated
2020-09-11 00:05:21.711 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:05:21.839 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:05:21.840 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:05:21.840 -04:00 [DBG] Checking for PKCE parameters
2020-09-11 00:05:21.854 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:05:21.870 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:05:21.885 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:05:21.897 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:05:21.897 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-11 00:05:22.007 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:05:22.007 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:05:23.425 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-11 00:05:23.427 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:05:23.544 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:05:23.544 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:05:23.544 -04:00 [DBG] Checking for PKCE parameters
2020-09-11 00:05:23.557 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:05:23.571 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:05:23.585 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:05:23.597 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:05:23.597 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-11 00:05:23.652 -04:00 [DBG] Augmenting SignInContext
2020-09-11 00:05:23.652 -04:00 [DBG] Adding idp claim with value: local
2020-09-11 00:05:23.652 -04:00 [DBG] Adding auth_time claim with value: 1599797123
2020-09-11 00:05:23.652 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-11 00:05:23.663 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000a4-0004-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:05:23.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-11 00:05:23.779 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:05:23.779 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:05:23.784 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-09-11 00:05:23.784 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-09-11 00:05:23.784 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-09-11 00:05:23.784 -04:00 [DBG] Start authorize callback request
2020-09-11 00:05:23.784 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-11 00:05:23.784 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:05:23.905 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:05:23.905 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:05:23.905 -04:00 [DBG] Checking for PKCE parameters
2020-09-11 00:05:23.931 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:05:23.941 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:05:23.954 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:05:23.967 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:05:23.967 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-11 00:05:23.968 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"YXc4bW5KWDd5amtaUkRsU18zYXBzSkZaVFh2SFJMRVBPNjRBVUE0R2RUOUdBsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"YXc4bW5KWDd5amtaUkRsU18zYXBzSkZaVFh2SFJMRVBPNjRBVUE0R2RUOUdB","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"6VE9xd8zZ2k3kk-2NqF3Bg","Raw":{"response_type":"code","client_id":"angular_spa","state":"YXc4bW5KWDd5amtaUkRsU18zYXBzSkZaVFh2SFJMRVBPNjRBVUE0R2RUOUdBsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"oBCZSFT1-H_WkMpK4gcWzNrZfNGPBJW2Kk90uMmbq7E","code_challenge_method":"S256","nonce":"YXc4bW5KWDd5amtaUkRsU18zYXBzSkZaVFh2SFJMRVBPNjRBVUE0R2RUOUdB"},"$type":"AuthorizeRequestValidationLog"}
2020-09-11 00:05:23.992 -04:00 [DBG] eExdRFBRf1V3ruMQVqYpU2dH8/vcePOUe0XJ7DBcKbo= found in database: true
2020-09-11 00:05:23.992 -04:00 [DBG] Consent found in consent store is same as current request, consent is not required
2020-09-11 00:05:23.992 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-11 00:05:24.003 -04:00 [DBG] 53fQThdR8zu9We5PuL3347DBOSmDXt9VSy6N5ZSuxIs= not found in database
2020-09-11 00:05:24.048 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****uqjs","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000a6-0004-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:05:24.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-11 00:05:24.048 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"YXc4bW5KWDd5amtaUkRsU18zYXBzSkZaVFh2SFJMRVBPNjRBVUE0R2RUOUdBsemicolon%2Fbasics%2Fhome","Scope":"openid profile email roles app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-11 00:05:24.049 -04:00 [DBG] Augmenting SignInContext
2020-09-11 00:05:24.049 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-11 00:05:24.884 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:05:24.905 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:05:24.905 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:05:24.906 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:05:24.906 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:05:24.906 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:05:24.906 -04:00 [DBG] Start discovery request
2020-09-11 00:05:24.933 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:05:24.950 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:05:24.964 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:05:24.964 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:05:24.964 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:05:24.964 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:05:24.964 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:05:24.964 -04:00 [DBG] Start key discovery request
2020-09-11 00:05:25.984 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-11 00:05:25.998 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:05:25.998 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:05:25.998 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-11 00:05:25.998 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-11 00:05:25.998 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-11 00:05:25.998 -04:00 [DBG] Start token request.
2020-09-11 00:05:25.998 -04:00 [DBG] Start client validation
2020-09-11 00:05:25.998 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-11 00:05:25.998 -04:00 [DBG] Start parsing for secret in post body
2020-09-11 00:05:25.999 -04:00 [DBG] client id without secret found
2020-09-11 00:05:25.999 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-11 00:05:25.999 -04:00 [DBG] Secret id found: angular_spa
2020-09-11 00:05:26.145 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:05:26.145 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:05:26.146 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-11 00:05:26.146 -04:00 [DBG] Client validation success
2020-09-11 00:05:26.146 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"800000a8-0004-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:05:26.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-11 00:05:26.146 -04:00 [DBG] Start token request validation
2020-09-11 00:05:26.146 -04:00 [DBG] Start validation of authorization code token request
2020-09-11 00:05:26.157 -04:00 [DBG] 53fQThdR8zu9We5PuL3347DBOSmDXt9VSy6N5ZSuxIs= found in database: true
2020-09-11 00:05:26.168 -04:00 [DBG] removing 53fQThdR8zu9We5PuL3347DBOSmDXt9VSy6N5ZSuxIs= persisted grant from database
2020-09-11 00:05:26.211 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-11 00:05:26.223 -04:00 [DBG] Validation of authorization code token request success
2020-09-11 00:05:26.223 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"zcRtFQMjEX844deDdRb_fwYFCOBUqy9DJb6pDMPuqjs","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"zcRtFQMjEX844deDdRb_fwYFCOBUqy9DJb6pDMPuqjs","redirect_uri":"https://localhost:4200","code_verifier":"ZkR6VU5aT20wSkdBbndKUldGUHFvR05NQWIyeEZkOFh4anZuRFhxVURuTmJC","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-09-11 00:05:26.338 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:05:26.338 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:05:26.353 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:05:26.365 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:05:26.365 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-09-11 00:05:26.365 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-11 00:05:26.545 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:05:26.546 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:05:26.560 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:05:26.574 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:05:26.574 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: angular_spa
2020-09-11 00:05:26.574 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-11 00:05:26.575 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****8pcA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****6jbA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000a8-0004-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:05:26.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-11 00:05:26.575 -04:00 [DBG] Token request success.
2020-09-11 00:05:26.584 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-11 00:05:26.585 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-11 00:05:26.585 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-11 00:05:26.585 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-11 00:05:26.585 -04:00 [DBG] Rendering check session result
2020-09-11 00:05:26.599 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:05:26.599 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:05:26.601 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-11 00:05:26.614 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:05:26.614 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:05:26.615 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-11 00:05:26.615 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-11 00:05:26.615 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-11 00:05:26.615 -04:00 [DBG] Start userinfo request
2020-09-11 00:05:26.615 -04:00 [DBG] Bearer token found in header
2020-09-11 00:05:26.737 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:05:26.737 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:05:26.867 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:05:26.867 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:05:26.881 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-11 00:05:26.881 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599797126,"exp":1599800726,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599797123,"idp":"local","scope":["roles","openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-11 00:05:26.881 -04:00 [DBG] Creating userinfo response
2020-09-11 00:05:26.881 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-11 00:05:26.881 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-11 00:05:26.896 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:05:26.896 -04:00 [DBG] Requested claim types: role sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-11 00:05:26.897 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-11 00:05:26.910 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:05:26.973 -04:00 [INF] Profile service returned the following claim types: sub name role preferred_username email email_verified
2020-09-11 00:05:26.973 -04:00 [DBG] End userinfo request
2020-09-11 00:05:37.454 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-09-11 00:05:37.468 -04:00 [DBG] Origin https://jwt.io is allowed: false
2020-09-11 00:05:37.468 -04:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-09-11 00:05:37.468 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:05:37.468 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:05:37.468 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:05:37.468 -04:00 [DBG] Start discovery request
2020-09-11 00:05:37.499 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:06:14.940 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-09-11 00:06:14.940 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-09-11 00:06:14.940 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-09-11 00:06:14.941 -04:00 [DBG] Processing signout request for 34903727-3397-4344-9875-47f5e36788d3
2020-09-11 00:06:14.941 -04:00 [DBG] Start end session request validation
2020-09-11 00:06:14.941 -04:00 [DBG] Start identity token validation
2020-09-11 00:06:15.082 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:06:15.082 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:06:15.082 -04:00 [DBG] Client found: angular_spa / Sample SPA.PKCE
2020-09-11 00:06:15.094 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-11 00:06:15.094 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599797126,"exp":1599797426,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"YXc4bW5KWDd5amtaUkRsU18zYXBzSkZaVFh2SFJMRVBPNjRBVUE0R2RUOUdB","iat":1599797126,"at_hash":"DrCts0rFyymFcqv3KokmxQ","s_hash":"K13u0JDleR5yi2Kx1FLaKA","sid":"6VE9xd8zZ2k3kk-2NqF3Bg","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599797123,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-11 00:06:15.094 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-09-11 00:06:15.094 -04:00 [DBG] Success validating end session request from angular_spa
2020-09-11 00:06:15.099 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-09-11 00:06:15.099 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-11 00:06:15.099 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-09-11 00:06:15.100 -04:00 [INF] {"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000005-0006-fb00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:06:15.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-09-11 00:06:15.128 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-09-11 00:06:15.129 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-09-11 00:06:15.129 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-09-11 00:06:15.129 -04:00 [DBG] Processing signout callback request
2020-09-11 00:06:15.276 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:06:15.276 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:06:15.276 -04:00 [DBG] No client front-channel logout URLs
2020-09-11 00:06:15.276 -04:00 [DBG] No client back-channel logout URLs
2020-09-11 00:06:15.276 -04:00 [INF] Successful signout callback.
2020-09-11 00:06:15.276 -04:00 [DBG] No client front-channel iframe urls
2020-09-11 00:06:15.276 -04:00 [DBG] No client back-channel iframe urls
2020-09-11 00:06:17.785 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:06:17.798 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:06:17.798 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:06:17.798 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:06:17.799 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:06:17.799 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:06:17.799 -04:00 [DBG] Start discovery request
2020-09-11 00:06:17.829 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:06:17.840 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:06:17.855 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:06:17.855 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:06:17.855 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:06:17.855 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:06:17.855 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:06:17.855 -04:00 [DBG] Start key discovery request
2020-09-11 00:06:18.875 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-11 00:06:18.875 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-11 00:06:18.875 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-11 00:06:18.875 -04:00 [DBG] Start authorize request
2020-09-11 00:06:18.875 -04:00 [DBG] No user present in authorize request
2020-09-11 00:06:18.875 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:06:19.062 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:06:19.062 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:06:19.062 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"ckVJZlpLNzAySlg0NWZvMG1FZzJidTEyUEV1MkNabWZ2fnVrZ3l4QXdacnBo","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"qWXpISkAuhuNzlCjAs_VQY-cbV70ybTqIfVosB1hUPM","code_challenge_method":"S256","nonce":"ckVJZlpLNzAySlg0NWZvMG1FZzJidTEyUEV1MkNabWZ2fnVrZ3l4QXdacnBo","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-11 00:06:19.062 -04:00 [ERR] Request validation failed
2020-09-11 00:06:19.063 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"ckVJZlpLNzAySlg0NWZvMG1FZzJidTEyUEV1MkNabWZ2fnVrZ3l4QXdacnBo","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"qWXpISkAuhuNzlCjAs_VQY-cbV70ybTqIfVosB1hUPM","code_challenge_method":"S256","nonce":"ckVJZlpLNzAySlg0NWZvMG1FZzJidTEyUEV1MkNabWZ2fnVrZ3l4QXdacnBo","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-11 00:06:19.063 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000b4-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:06:19.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-11 00:06:25.103 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-11 00:06:25.103 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-11 00:06:25.103 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-11 00:06:25.103 -04:00 [DBG] Start authorize request
2020-09-11 00:06:25.104 -04:00 [DBG] No user present in authorize request
2020-09-11 00:06:25.104 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:06:25.221 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:06:25.222 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:06:25.222 -04:00 [DBG] Checking for PKCE parameters
2020-09-11 00:06:25.236 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:06:25.251 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:06:25.264 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:06:25.280 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:06:25.280 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-11 00:06:25.280 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"bkp5TWNuYUQ5aS4zRVl0X2RRfmxrVHpVOHVCUGIuMGc0Uk1FSUh2UmFyQy5Jsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"bkp5TWNuYUQ5aS4zRVl0X2RRfmxrVHpVOHVCUGIuMGc0Uk1FSUh2UmFyQy5J","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"bkp5TWNuYUQ5aS4zRVl0X2RRfmxrVHpVOHVCUGIuMGc0Uk1FSUh2UmFyQy5Jsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"_Ope1VzvoOxWt5OP6zuUgj4sQGUXXMEjA0Uz533OSWM","code_challenge_method":"S256","nonce":"bkp5TWNuYUQ5aS4zRVl0X2RRfmxrVHpVOHVCUGIuMGc0Uk1FSUh2UmFyQy5J"},"$type":"AuthorizeRequestValidationLog"}
2020-09-11 00:06:25.280 -04:00 [INF] Showing login: User is not authenticated
2020-09-11 00:06:25.284 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:06:25.409 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:06:25.410 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:06:25.410 -04:00 [DBG] Checking for PKCE parameters
2020-09-11 00:06:25.424 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:06:25.437 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:06:25.448 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:06:25.463 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:06:25.463 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-11 00:06:25.579 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:06:25.579 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:06:27.028 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-11 00:06:27.030 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:06:27.147 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:06:27.147 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:06:27.147 -04:00 [DBG] Checking for PKCE parameters
2020-09-11 00:06:27.161 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:06:27.173 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:06:27.187 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:06:27.200 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:06:27.200 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-11 00:06:27.280 -04:00 [DBG] Augmenting SignInContext
2020-09-11 00:06:27.280 -04:00 [DBG] Adding idp claim with value: local
2020-09-11 00:06:27.280 -04:00 [DBG] Adding auth_time claim with value: 1599797187
2020-09-11 00:06:27.280 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-11 00:06:27.291 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000078-0005-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:06:27.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-11 00:06:27.413 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:06:27.413 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:06:27.417 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-09-11 00:06:27.417 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-09-11 00:06:27.417 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-09-11 00:06:27.417 -04:00 [DBG] Start authorize callback request
2020-09-11 00:06:27.417 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-11 00:06:27.417 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:06:27.532 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:06:27.532 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:06:27.532 -04:00 [DBG] Checking for PKCE parameters
2020-09-11 00:06:27.545 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:06:27.555 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:06:27.569 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:06:27.580 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:06:27.580 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-11 00:06:27.580 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"bkp5TWNuYUQ5aS4zRVl0X2RRfmxrVHpVOHVCUGIuMGc0Uk1FSUh2UmFyQy5Jsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"bkp5TWNuYUQ5aS4zRVl0X2RRfmxrVHpVOHVCUGIuMGc0Uk1FSUh2UmFyQy5J","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"ScHElAVDeWSZ4UcNbawS8Q","Raw":{"response_type":"code","client_id":"angular_spa","state":"bkp5TWNuYUQ5aS4zRVl0X2RRfmxrVHpVOHVCUGIuMGc0Uk1FSUh2UmFyQy5Jsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"_Ope1VzvoOxWt5OP6zuUgj4sQGUXXMEjA0Uz533OSWM","code_challenge_method":"S256","nonce":"bkp5TWNuYUQ5aS4zRVl0X2RRfmxrVHpVOHVCUGIuMGc0Uk1FSUh2UmFyQy5J"},"$type":"AuthorizeRequestValidationLog"}
2020-09-11 00:06:27.606 -04:00 [DBG] eExdRFBRf1V3ruMQVqYpU2dH8/vcePOUe0XJ7DBcKbo= found in database: true
2020-09-11 00:06:27.606 -04:00 [DBG] Consent found in consent store is same as current request, consent is not required
2020-09-11 00:06:27.606 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-11 00:06:27.618 -04:00 [DBG] gofkxD3FuQX6pwfDWwmswuvzGWfmni3YySSzCQHBPBA= not found in database
2020-09-11 00:06:27.668 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****qG84","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000010c-000a-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:06:27.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-11 00:06:27.668 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"bkp5TWNuYUQ5aS4zRVl0X2RRfmxrVHpVOHVCUGIuMGc0Uk1FSUh2UmFyQy5Jsemicolon%2Fbasics%2Fhome","Scope":"openid profile email roles app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-11 00:06:27.668 -04:00 [DBG] Augmenting SignInContext
2020-09-11 00:06:27.668 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-11 00:06:28.473 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:06:28.487 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:06:28.487 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:06:28.487 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:06:28.487 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:06:28.487 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:06:28.487 -04:00 [DBG] Start discovery request
2020-09-11 00:06:28.513 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:06:28.530 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:06:28.543 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:06:28.543 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:06:28.544 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:06:28.544 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:06:28.544 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:06:28.544 -04:00 [DBG] Start key discovery request
2020-09-11 00:06:29.591 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-11 00:06:29.605 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:06:29.605 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:06:29.605 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-11 00:06:29.605 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-11 00:06:29.605 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-11 00:06:29.605 -04:00 [DBG] Start token request.
2020-09-11 00:06:29.605 -04:00 [DBG] Start client validation
2020-09-11 00:06:29.605 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-11 00:06:29.605 -04:00 [DBG] Start parsing for secret in post body
2020-09-11 00:06:29.605 -04:00 [DBG] client id without secret found
2020-09-11 00:06:29.605 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-11 00:06:29.606 -04:00 [DBG] Secret id found: angular_spa
2020-09-11 00:06:29.727 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:06:29.727 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:06:29.727 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-11 00:06:29.727 -04:00 [DBG] Client validation success
2020-09-11 00:06:29.727 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000110-000a-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:06:29.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-11 00:06:29.727 -04:00 [DBG] Start token request validation
2020-09-11 00:06:29.727 -04:00 [DBG] Start validation of authorization code token request
2020-09-11 00:06:29.739 -04:00 [DBG] gofkxD3FuQX6pwfDWwmswuvzGWfmni3YySSzCQHBPBA= found in database: true
2020-09-11 00:06:29.750 -04:00 [DBG] removing gofkxD3FuQX6pwfDWwmswuvzGWfmni3YySSzCQHBPBA= persisted grant from database
2020-09-11 00:06:29.803 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-11 00:06:29.815 -04:00 [DBG] Validation of authorization code token request success
2020-09-11 00:06:29.815 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"cf5iTr9cTdhf78mq9bEKb8wGDbjB5dh7mZfzC0hqG84","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"cf5iTr9cTdhf78mq9bEKb8wGDbjB5dh7mZfzC0hqG84","redirect_uri":"https://localhost:4200","code_verifier":"eE55OXgzZFViNWgyMkJocy1uZ3EzV1RvVThHR1F5bVNFSlQ4VHpWU1RUc2lW","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-09-11 00:06:29.934 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:06:29.934 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:06:29.948 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:06:29.963 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:06:29.964 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-09-11 00:06:29.964 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-11 00:06:30.130 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:06:30.130 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:06:30.141 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:06:30.156 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:06:30.156 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: angular_spa
2020-09-11 00:06:30.156 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-11 00:06:30.157 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****XUiA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****Nrag","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000110-000a-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:06:30.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-11 00:06:30.157 -04:00 [DBG] Token request success.
2020-09-11 00:06:30.167 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-11 00:06:30.167 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-11 00:06:30.167 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-11 00:06:30.167 -04:00 [DBG] Rendering check session result
2020-09-11 00:06:30.168 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-11 00:06:30.182 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:06:30.182 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:06:30.184 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-11 00:06:30.194 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:06:30.194 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:06:30.195 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-11 00:06:30.195 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-11 00:06:30.195 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-11 00:06:30.195 -04:00 [DBG] Start userinfo request
2020-09-11 00:06:30.195 -04:00 [DBG] Bearer token found in header
2020-09-11 00:06:30.331 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:06:30.331 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:06:30.452 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:06:30.452 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:06:30.473 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-11 00:06:30.473 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599797190,"exp":1599800790,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599797187,"idp":"local","scope":["roles","openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-11 00:06:30.473 -04:00 [DBG] Creating userinfo response
2020-09-11 00:06:30.473 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-11 00:06:30.473 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-11 00:06:30.488 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:06:30.488 -04:00 [DBG] Requested claim types: role sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-11 00:06:30.488 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-11 00:06:30.502 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:06:30.552 -04:00 [INF] Profile service returned the following claim types: sub name role preferred_username email email_verified
2020-09-11 00:06:30.552 -04:00 [DBG] End userinfo request
2020-09-11 00:06:43.003 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-09-11 00:06:43.018 -04:00 [DBG] Origin https://jwt.io is allowed: false
2020-09-11 00:06:43.018 -04:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-09-11 00:06:43.018 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:06:43.018 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:06:43.018 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:06:43.018 -04:00 [DBG] Start discovery request
2020-09-11 00:06:43.044 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:08:12.263 -04:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-09-11 00:08:12.263 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-09-11 00:08:12.263 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-09-11 00:08:12.263 -04:00 [DBG] Processing signout request for 34903727-3397-4344-9875-47f5e36788d3
2020-09-11 00:08:12.264 -04:00 [DBG] Start end session request validation
2020-09-11 00:08:12.264 -04:00 [DBG] Start identity token validation
2020-09-11 00:08:12.383 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:08:12.383 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:08:12.383 -04:00 [DBG] Client found: angular_spa / Sample SPA.PKCE
2020-09-11 00:08:12.395 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-11 00:08:12.395 -04:00 [DBG] Token validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","ValidateLifetime":false,"AccessTokenType":null,"ExpectedScope":null,"TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599797190,"exp":1599797490,"iss":"https://localhost:44354","aud":"angular_spa","nonce":"bkp5TWNuYUQ5aS4zRVl0X2RRfmxrVHpVOHVCUGIuMGc0Uk1FSUh2UmFyQy5J","iat":1599797190,"at_hash":"lGwXomg6UT0Siaz7PxbPoQ","s_hash":"GnpOaJ21e_L8o2JorVTRpg","sid":"ScHElAVDeWSZ4UcNbawS8Q","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599797187,"idp":"local","amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-11 00:08:12.395 -04:00 [INF] End session request validation success
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","PostLogOutUri":"https://localhost:4200","State":null,"Raw":{"id_token_hint":"***REDACTED***","post_logout_redirect_uri":"https://localhost:4200"},"$type":"EndSessionRequestValidationLog"}
2020-09-11 00:08:12.395 -04:00 [DBG] Success validating end session request from angular_spa
2020-09-11 00:08:12.399 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-09-11 00:08:12.399 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-11 00:08:12.399 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-09-11 00:08:12.399 -04:00 [INF] {"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000038-0003-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:08:12.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-09-11 00:08:12.430 -04:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-09-11 00:08:12.430 -04:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-09-11 00:08:12.430 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-09-11 00:08:12.430 -04:00 [DBG] Processing signout callback request
2020-09-11 00:08:12.554 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:08:12.554 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:08:12.554 -04:00 [DBG] No client front-channel logout URLs
2020-09-11 00:08:12.554 -04:00 [DBG] No client back-channel logout URLs
2020-09-11 00:08:12.554 -04:00 [INF] Successful signout callback.
2020-09-11 00:08:12.554 -04:00 [DBG] No client front-channel iframe urls
2020-09-11 00:08:12.554 -04:00 [DBG] No client back-channel iframe urls
2020-09-11 00:08:15.354 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:08:15.369 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:08:15.369 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:08:15.369 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:08:15.370 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:08:15.370 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:08:15.370 -04:00 [DBG] Start discovery request
2020-09-11 00:08:15.404 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:08:15.432 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:08:15.444 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:08:15.444 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:08:15.444 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:08:15.445 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:08:15.445 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:08:15.445 -04:00 [DBG] Start key discovery request
2020-09-11 00:08:16.461 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-11 00:08:16.461 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-11 00:08:16.461 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-11 00:08:16.461 -04:00 [DBG] Start authorize request
2020-09-11 00:08:16.461 -04:00 [DBG] No user present in authorize request
2020-09-11 00:08:16.461 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:08:16.583 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:08:16.583 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:08:16.583 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"TVh5M01EMnFMQVY5LUl-a3BTT1BwcHdOMEZwd1g3LW5NMGdJYmNOQXZQdmdf","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"1sCHt5jneqat07QIWe4q3G0vBzTclYwL2TlwHlK9BCs","code_challenge_method":"S256","nonce":"TVh5M01EMnFMQVY5LUl-a3BTT1BwcHdOMEZwd1g3LW5NMGdJYmNOQXZQdmdf","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-11 00:08:16.583 -04:00 [ERR] Request validation failed
2020-09-11 00:08:16.583 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"TVh5M01EMnFMQVY5LUl-a3BTT1BwcHdOMEZwd1g3LW5NMGdJYmNOQXZQdmdf","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"1sCHt5jneqat07QIWe4q3G0vBzTclYwL2TlwHlK9BCs","code_challenge_method":"S256","nonce":"TVh5M01EMnFMQVY5LUl-a3BTT1BwcHdOMEZwd1g3LW5NMGdJYmNOQXZQdmdf","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-11 00:08:16.583 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"80000079-0006-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:08:16.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-11 00:08:22.541 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-11 00:08:22.542 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-11 00:08:22.542 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-11 00:08:22.542 -04:00 [DBG] Start authorize request
2020-09-11 00:08:22.542 -04:00 [DBG] No user present in authorize request
2020-09-11 00:08:22.542 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:08:22.656 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:08:22.656 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:08:22.656 -04:00 [DBG] Checking for PKCE parameters
2020-09-11 00:08:22.668 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:08:22.683 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:08:22.698 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:08:22.710 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:08:22.710 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-11 00:08:22.710 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"UDlqYzJwM1l3V2R4dHpwNDRXcnVIUFRaeVdwVFFqZmhuYUJ5TkFLZy5vQ0FNsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"UDlqYzJwM1l3V2R4dHpwNDRXcnVIUFRaeVdwVFFqZmhuYUJ5TkFLZy5vQ0FN","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"response_type":"code","client_id":"angular_spa","state":"UDlqYzJwM1l3V2R4dHpwNDRXcnVIUFRaeVdwVFFqZmhuYUJ5TkFLZy5vQ0FNsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"j5aC-zvTJ-M54oZqYr4D5d6u4Sw5xYnP-xSLSKjJfXc","code_challenge_method":"S256","nonce":"UDlqYzJwM1l3V2R4dHpwNDRXcnVIUFRaeVdwVFFqZmhuYUJ5TkFLZy5vQ0FN"},"$type":"AuthorizeRequestValidationLog"}
2020-09-11 00:08:22.710 -04:00 [INF] Showing login: User is not authenticated
2020-09-11 00:08:22.715 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:08:22.939 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:08:22.939 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:08:22.940 -04:00 [DBG] Checking for PKCE parameters
2020-09-11 00:08:22.954 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:08:22.969 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:08:22.983 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:08:22.996 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:08:22.996 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-11 00:08:23.141 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:08:23.141 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:08:24.603 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-11 00:08:24.605 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:08:24.716 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:08:24.716 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:08:24.717 -04:00 [DBG] Checking for PKCE parameters
2020-09-11 00:08:24.730 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:08:24.754 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:08:24.780 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:08:24.797 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:08:24.797 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-11 00:08:24.864 -04:00 [DBG] Augmenting SignInContext
2020-09-11 00:08:24.864 -04:00 [DBG] Adding idp claim with value: local
2020-09-11 00:08:24.864 -04:00 [DBG] Adding auth_time claim with value: 1599797304
2020-09-11 00:08:24.864 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-11 00:08:24.896 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000046-0004-fb00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:08:24.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-11 00:08:25.063 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:08:25.063 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:08:25.068 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-09-11 00:08:25.068 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-09-11 00:08:25.068 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-09-11 00:08:25.068 -04:00 [DBG] Start authorize callback request
2020-09-11 00:08:25.068 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-11 00:08:25.069 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:08:25.191 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:08:25.191 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:08:25.191 -04:00 [DBG] Checking for PKCE parameters
2020-09-11 00:08:25.204 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:08:25.221 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:08:25.236 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:08:25.252 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:08:25.252 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-11 00:08:25.252 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"UDlqYzJwM1l3V2R4dHpwNDRXcnVIUFRaeVdwVFFqZmhuYUJ5TkFLZy5vQ0FNsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"UDlqYzJwM1l3V2R4dHpwNDRXcnVIUFRaeVdwVFFqZmhuYUJ5TkFLZy5vQ0FN","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b2TMQKZecjGw_oqoWRiEmA","Raw":{"response_type":"code","client_id":"angular_spa","state":"UDlqYzJwM1l3V2R4dHpwNDRXcnVIUFRaeVdwVFFqZmhuYUJ5TkFLZy5vQ0FNsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"j5aC-zvTJ-M54oZqYr4D5d6u4Sw5xYnP-xSLSKjJfXc","code_challenge_method":"S256","nonce":"UDlqYzJwM1l3V2R4dHpwNDRXcnVIUFRaeVdwVFFqZmhuYUJ5TkFLZy5vQ0FN"},"$type":"AuthorizeRequestValidationLog"}
2020-09-11 00:08:25.278 -04:00 [DBG] eExdRFBRf1V3ruMQVqYpU2dH8/vcePOUe0XJ7DBcKbo= found in database: true
2020-09-11 00:08:25.278 -04:00 [DBG] Consent found in consent store is same as current request, consent is not required
2020-09-11 00:08:25.279 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-11 00:08:25.293 -04:00 [DBG] 7+0nKJyJlqxt3Q8vThPNiLelfAuo/m7Nj2SPpnLNVHw= not found in database
2020-09-11 00:08:25.344 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****9VuM","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000120-000a-fe00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:08:25.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-11 00:08:25.344 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"UDlqYzJwM1l3V2R4dHpwNDRXcnVIUFRaeVdwVFFqZmhuYUJ5TkFLZy5vQ0FNsemicolon%2Fbasics%2Fhome","Scope":"openid profile email roles app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-11 00:08:25.344 -04:00 [DBG] Augmenting SignInContext
2020-09-11 00:08:25.344 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-11 00:08:26.125 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:08:26.139 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:08:26.139 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:08:26.139 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:08:26.139 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:08:26.139 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:08:26.139 -04:00 [DBG] Start discovery request
2020-09-11 00:08:26.167 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:08:26.189 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:08:26.201 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:08:26.201 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:08:26.201 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:08:26.201 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:08:26.201 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:08:26.201 -04:00 [DBG] Start key discovery request
2020-09-11 00:08:27.227 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-11 00:08:27.240 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:08:27.241 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:08:27.241 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-11 00:08:27.241 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-11 00:08:27.241 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-11 00:08:27.241 -04:00 [DBG] Start token request.
2020-09-11 00:08:27.241 -04:00 [DBG] Start client validation
2020-09-11 00:08:27.241 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-11 00:08:27.241 -04:00 [DBG] Start parsing for secret in post body
2020-09-11 00:08:27.241 -04:00 [DBG] client id without secret found
2020-09-11 00:08:27.241 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-11 00:08:27.241 -04:00 [DBG] Secret id found: angular_spa
2020-09-11 00:08:27.362 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:08:27.362 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:08:27.362 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-11 00:08:27.362 -04:00 [DBG] Client validation success
2020-09-11 00:08:27.362 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000003a-0003-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:08:27.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-11 00:08:27.362 -04:00 [DBG] Start token request validation
2020-09-11 00:08:27.362 -04:00 [DBG] Start validation of authorization code token request
2020-09-11 00:08:27.375 -04:00 [DBG] 7+0nKJyJlqxt3Q8vThPNiLelfAuo/m7Nj2SPpnLNVHw= found in database: true
2020-09-11 00:08:27.388 -04:00 [DBG] removing 7+0nKJyJlqxt3Q8vThPNiLelfAuo/m7Nj2SPpnLNVHw= persisted grant from database
2020-09-11 00:08:27.498 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-11 00:08:27.512 -04:00 [DBG] Validation of authorization code token request success
2020-09-11 00:08:27.512 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"J6IvxOmwdCJmynYddckJw4hSgRcg1y5VuJ6JqHl9VuM","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"J6IvxOmwdCJmynYddckJw4hSgRcg1y5VuJ6JqHl9VuM","redirect_uri":"https://localhost:4200","code_verifier":"bkJIcndNTjdjVk1NanAuQWQubjBvNWI1cFRNZ1lWRkpNX3AzLm5uRVg2bDRt","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-09-11 00:08:27.639 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:08:27.639 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:08:27.653 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:08:27.665 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:08:27.665 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-09-11 00:08:27.665 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-11 00:08:27.879 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:08:27.879 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:08:27.894 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:08:27.908 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:08:27.909 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: angular_spa
2020-09-11 00:08:27.909 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-11 00:08:27.910 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****CnqA","$type":"Token"},{"TokenType":"access_token","TokenValue":"****KAGw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000003a-0003-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:08:27.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-11 00:08:27.910 -04:00 [DBG] Token request success.
2020-09-11 00:08:27.920 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-11 00:08:27.920 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-11 00:08:27.920 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-11 00:08:27.920 -04:00 [DBG] Rendering check session result
2020-09-11 00:08:27.923 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-11 00:08:27.937 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:08:27.937 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:08:27.939 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-11 00:08:27.953 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:08:27.953 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:08:27.953 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-11 00:08:27.953 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-11 00:08:27.953 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-11 00:08:27.953 -04:00 [DBG] Start userinfo request
2020-09-11 00:08:27.953 -04:00 [DBG] Bearer token found in header
2020-09-11 00:08:28.082 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:08:28.082 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:08:28.207 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:08:28.207 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:08:28.219 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-11 00:08:28.219 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599797307,"exp":1599800907,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599797304,"idp":"local","role":"STSAdmRole","scope":["roles","openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-11 00:08:28.219 -04:00 [DBG] Creating userinfo response
2020-09-11 00:08:28.219 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-11 00:08:28.219 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-11 00:08:28.234 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:08:28.234 -04:00 [DBG] Requested claim types: role sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-11 00:08:28.234 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-11 00:08:28.253 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:08:28.312 -04:00 [INF] Profile service returned the following claim types: sub name role preferred_username email email_verified
2020-09-11 00:08:28.312 -04:00 [DBG] End userinfo request
2020-09-11 00:08:30.020 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:08:30.034 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:08:30.034 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:08:30.034 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:08:30.034 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:08:30.034 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:08:30.034 -04:00 [DBG] Start discovery request
2020-09-11 00:08:30.069 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:08:30.090 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:08:30.091 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-11 00:08:30.091 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-11 00:08:30.091 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-11 00:08:30.091 -04:00 [DBG] Rendering check session result
2020-09-11 00:08:30.101 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:08:30.101 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:08:30.101 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:08:30.101 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:08:30.101 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:08:30.102 -04:00 [DBG] Start key discovery request
2020-09-11 00:09:10.022 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:09:10.034 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:09:10.034 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:09:10.034 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:09:10.034 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:09:10.034 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:09:10.034 -04:00 [DBG] Start discovery request
2020-09-11 00:09:10.064 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:09:10.072 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:09:10.121 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:09:10.121 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:09:10.121 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:09:10.121 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:09:10.121 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:09:10.122 -04:00 [DBG] Start key discovery request
2020-09-11 00:09:11.137 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-11 00:09:11.137 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-11 00:09:11.137 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-11 00:09:11.138 -04:00 [DBG] Start authorize request
2020-09-11 00:09:11.138 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-11 00:09:11.138 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:09:11.254 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:09:11.254 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:09:11.254 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"TUJsaUhiVkV0TWFCOVBBU1lEclFoQ1E1MFZVa0VqTENiaUZwWC02YzlIWWlv","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"GLxMWbA_PFMlGur9wxQAkQM4e7wzgWC6Z6rewIFEjf0","code_challenge_method":"S256","nonce":"TUJsaUhiVkV0TWFCOVBBU1lEclFoQ1E1MFZVa0VqTENiaUZwWC02YzlIWWlv","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-11 00:09:11.254 -04:00 [ERR] Request validation failed
2020-09-11 00:09:11.254 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"TUJsaUhiVkV0TWFCOVBBU1lEclFoQ1E1MFZVa0VqTENiaUZwWC02YzlIWWlv","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"GLxMWbA_PFMlGur9wxQAkQM4e7wzgWC6Z6rewIFEjf0","code_challenge_method":"S256","nonce":"TUJsaUhiVkV0TWFCOVBBU1lEclFoQ1E1MFZVa0VqTENiaUZwWC02YzlIWWlv","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-11 00:09:11.254 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000c2-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:09:11.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-11 00:09:12.917 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:09:12.932 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:09:12.932 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:09:12.932 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:09:12.932 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:09:12.932 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:09:12.932 -04:00 [DBG] Start discovery request
2020-09-11 00:09:12.970 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:09:12.986 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:09:13.013 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:09:13.013 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:09:13.013 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:09:13.013 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:09:13.013 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:09:13.013 -04:00 [DBG] Start key discovery request
2020-09-11 00:09:14.743 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:09:14.756 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:09:14.756 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:09:14.756 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:09:14.757 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:09:14.757 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:09:14.757 -04:00 [DBG] Start discovery request
2020-09-11 00:09:14.790 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:09:14.822 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:09:14.835 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:09:14.835 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:09:14.835 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:09:14.835 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:09:14.835 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:09:14.835 -04:00 [DBG] Start key discovery request
2020-09-11 00:09:15.889 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-11 00:09:15.889 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-11 00:09:15.889 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-11 00:09:15.889 -04:00 [DBG] Start authorize request
2020-09-11 00:09:15.889 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-11 00:09:15.889 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:09:16.019 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:09:16.019 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:09:16.019 -04:00 [ERR] Invalid redirect_uri: https://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"b1pLNUVpRmM1ZnEuWU9RLlhqcC5RRUdpSHY1ZlB4Wk1yUkR5c1ZJZ3R6TmtP","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"IMqUfAmNEXueBzoc3vlBp_-vpKtZfsJuknp5-UgPz8M","code_challenge_method":"S256","nonce":"b1pLNUVpRmM1ZnEuWU9RLlhqcC5RRUdpSHY1ZlB4Wk1yUkR5c1ZJZ3R6TmtP","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-11 00:09:16.019 -04:00 [ERR] Request validation failed
2020-09-11 00:09:16.019 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"code","client_id":"angular_spa","state":"b1pLNUVpRmM1ZnEuWU9RLlhqcC5RRUdpSHY1ZlB4Wk1yUkR5c1ZJZ3R6TmtP","redirect_uri":"https://localhost:4200/silent-refresh.html","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"IMqUfAmNEXueBzoc3vlBp_-vpKtZfsJuknp5-UgPz8M","code_challenge_method":"S256","nonce":"b1pLNUVpRmM1ZnEuWU9RLlhqcC5RRUdpSHY1ZlB4Wk1yUkR5c1ZJZ3R6TmtP","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2020-09-11 00:09:16.019 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Invalid redirect_uri","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800000c8-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:09:16.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-11 00:09:23.927 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-11 00:09:23.927 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-11 00:09:23.927 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-11 00:09:23.927 -04:00 [DBG] Start authorize request
2020-09-11 00:09:23.927 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-11 00:09:23.927 -04:00 [DBG] Start authorize request protocol validation
2020-09-11 00:09:24.076 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:09:24.077 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:09:24.077 -04:00 [DBG] Checking for PKCE parameters
2020-09-11 00:09:24.090 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:09:24.103 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:09:24.114 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:09:24.129 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:09:24.129 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-11 00:09:24.129 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"V2x6R2V2VjY3Zll1Q1FUNWF6X2FpRHJDNFBnbjNRdWxub0U4SUd6WjhtOEtEsemicolon%2Fbasics%2Fhome","UiLocales":null,"Nonce":"V2x6R2V2VjY3Zll1Q1FUNWF6X2FpRHJDNFBnbjNRdWxub0U4SUd6WjhtOEtE","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"b2TMQKZecjGw_oqoWRiEmA","Raw":{"response_type":"code","client_id":"angular_spa","state":"V2x6R2V2VjY3Zll1Q1FUNWF6X2FpRHJDNFBnbjNRdWxub0U4SUd6WjhtOEtEsemicolon%2Fbasics%2Fhome","redirect_uri":"https://localhost:4200","scope":"openid profile email roles app.api.employeeprofile.read","code_challenge":"cfyKzXGvqiSdsnXPxx10LSEwsCs-LK28JbWoQaCFuP0","code_challenge_method":"S256","nonce":"V2x6R2V2VjY3Zll1Q1FUNWF6X2FpRHJDNFBnbjNRdWxub0U4SUd6WjhtOEtE"},"$type":"AuthorizeRequestValidationLog"}
2020-09-11 00:09:24.156 -04:00 [DBG] eExdRFBRf1V3ruMQVqYpU2dH8/vcePOUe0XJ7DBcKbo= found in database: true
2020-09-11 00:09:24.156 -04:00 [DBG] Consent found in consent store is same as current request, consent is not required
2020-09-11 00:09:24.156 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-11 00:09:24.169 -04:00 [DBG] Ny+18KV4UwEGJqmHoc3bWQkND+pP2MtZH6s5Sc3Bod8= not found in database
2020-09-11 00:09:24.219 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****gNbk","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000ca-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:09:24.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-11 00:09:24.219 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"angular_spa","RedirectUri":"https://localhost:4200","State":"V2x6R2V2VjY3Zll1Q1FUNWF6X2FpRHJDNFBnbjNRdWxub0U4SUd6WjhtOEtEsemicolon%2Fbasics%2Fhome","Scope":"openid profile email roles app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-11 00:09:25.066 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:09:25.079 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:09:25.079 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:09:25.079 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:09:25.079 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:09:25.079 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:09:25.079 -04:00 [DBG] Start discovery request
2020-09-11 00:09:25.108 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:09:25.124 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:09:25.137 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:09:25.137 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:09:25.137 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:09:25.137 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:09:25.137 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:09:25.137 -04:00 [DBG] Start key discovery request
2020-09-11 00:09:26.158 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-11 00:09:26.169 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:09:26.170 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:09:26.170 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-11 00:09:26.170 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-11 00:09:26.170 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-11 00:09:26.170 -04:00 [DBG] Start token request.
2020-09-11 00:09:26.170 -04:00 [DBG] Start client validation
2020-09-11 00:09:26.170 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-11 00:09:26.170 -04:00 [DBG] Start parsing for secret in post body
2020-09-11 00:09:26.170 -04:00 [DBG] client id without secret found
2020-09-11 00:09:26.170 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-11 00:09:26.170 -04:00 [DBG] Secret id found: angular_spa
2020-09-11 00:09:26.289 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:09:26.289 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:09:26.289 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-11 00:09:26.289 -04:00 [DBG] Client validation success
2020-09-11 00:09:26.289 -04:00 [INF] {"ClientId":"angular_spa","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"800000cc-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:09:26.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-11 00:09:26.289 -04:00 [DBG] Start token request validation
2020-09-11 00:09:26.289 -04:00 [DBG] Start validation of authorization code token request
2020-09-11 00:09:26.302 -04:00 [DBG] Ny+18KV4UwEGJqmHoc3bWQkND+pP2MtZH6s5Sc3Bod8= found in database: true
2020-09-11 00:09:26.316 -04:00 [DBG] removing Ny+18KV4UwEGJqmHoc3bWQkND+pP2MtZH6s5Sc3Bod8= persisted grant from database
2020-09-11 00:09:26.357 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-11 00:09:26.371 -04:00 [DBG] Validation of authorization code token request success
2020-09-11 00:09:26.371 -04:00 [INF] Token request validation success, {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"T5HevfMTD4zGV4cg40AqCroaGtQhbZq1i51cVTRgNbk","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"authorization_code","code":"T5HevfMTD4zGV4cg40AqCroaGtQhbZq1i51cVTRgNbk","redirect_uri":"https://localhost:4200","code_verifier":"LVJpV2hnNG4xWi1wNHp5Q2dLNWZlTjdHQmhQc0dGWGFLWH4xNG9pNGtYZjVp","client_id":"angular_spa"},"$type":"TokenRequestValidationLog"}
2020-09-11 00:09:26.514 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:09:26.515 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:09:26.526 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:09:26.539 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:09:26.540 -04:00 [DBG] Getting claims for access token for client: angular_spa
2020-09-11 00:09:26.540 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-11 00:09:26.708 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:09:26.708 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:09:26.720 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:09:26.732 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-11 00:09:26.733 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: angular_spa
2020-09-11 00:09:26.733 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-11 00:09:26.734 -04:00 [INF] {"ClientId":"angular_spa","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****XfIw","$type":"Token"},{"TokenType":"access_token","TokenValue":"****EKig","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000cc-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-11T04:09:26.0000000Z","ProcessId":22232,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-11 00:09:26.734 -04:00 [DBG] Token request success.
2020-09-11 00:09:26.742 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-11 00:09:26.743 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-11 00:09:26.744 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-11 00:09:26.744 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-11 00:09:26.744 -04:00 [DBG] Rendering check session result
2020-09-11 00:09:26.756 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:09:26.756 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:09:26.757 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-11 00:09:26.771 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:09:26.771 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:09:26.771 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-11 00:09:26.771 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-11 00:09:26.771 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-11 00:09:26.771 -04:00 [DBG] Start userinfo request
2020-09-11 00:09:26.771 -04:00 [DBG] Bearer token found in header
2020-09-11 00:09:26.886 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:09:26.887 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:09:27.043 -04:00 [DBG] angular_spa found in database: true
2020-09-11 00:09:27.043 -04:00 [DBG] client configuration validation for client angular_spa succeeded.
2020-09-11 00:09:27.057 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-11 00:09:27.057 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1599797366,"exp":1599800966,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"angular_spa","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1599797304,"idp":"local","role":"STSAdmRole","scope":["roles","openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-11 00:09:27.058 -04:00 [DBG] Creating userinfo response
2020-09-11 00:09:27.058 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-11 00:09:27.058 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-11 00:09:27.072 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:09:27.072 -04:00 [DBG] Requested claim types: role sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-11 00:09:27.072 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-11 00:09:27.086 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-11 00:09:27.129 -04:00 [INF] Profile service returned the following claim types: sub name role preferred_username email email_verified
2020-09-11 00:09:27.129 -04:00 [DBG] End userinfo request
2020-09-11 00:09:32.285 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:09:32.300 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:09:32.300 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:09:32.300 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:09:32.300 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:09:32.300 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:09:32.300 -04:00 [DBG] Start discovery request
2020-09-11 00:09:32.332 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:09:32.346 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:09:32.347 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-11 00:09:32.347 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-11 00:09:32.347 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-11 00:09:32.347 -04:00 [DBG] Rendering check session result
2020-09-11 00:09:32.359 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:09:32.359 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:09:32.359 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:09:32.359 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:09:32.360 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:09:32.360 -04:00 [DBG] Start key discovery request
2020-09-11 00:11:20.468 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:11:20.482 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:11:20.482 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:11:20.484 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:11:20.484 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:11:20.484 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:11:20.484 -04:00 [DBG] Start discovery request
2020-09-11 00:11:20.527 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:11:20.552 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:11:20.552 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-11 00:11:20.552 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-11 00:11:20.552 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-11 00:11:20.552 -04:00 [DBG] Rendering check session result
2020-09-11 00:11:20.564 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:11:20.564 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:11:20.564 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:11:20.564 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:11:20.564 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:11:20.564 -04:00 [DBG] Start key discovery request
2020-09-11 00:11:20.595 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:11:20.614 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:11:20.614 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:11:20.614 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:11:20.614 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:11:20.614 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:11:20.614 -04:00 [DBG] Start discovery request
2020-09-11 00:11:20.644 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:11:20.673 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:11:20.684 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-11 00:11:20.684 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-11 00:11:20.684 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-11 00:11:20.684 -04:00 [DBG] Rendering check session result
2020-09-11 00:11:20.687 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:11:20.687 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:11:20.688 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:11:20.688 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:11:20.688 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:11:20.688 -04:00 [DBG] Start key discovery request
2020-09-11 00:11:22.050 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:11:22.061 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:11:22.061 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:11:22.061 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:11:22.062 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:11:22.062 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:11:22.062 -04:00 [DBG] Start discovery request
2020-09-11 00:11:22.094 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:11:22.117 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:11:22.118 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-11 00:11:22.118 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-11 00:11:22.118 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-11 00:11:22.118 -04:00 [DBG] Rendering check session result
2020-09-11 00:11:22.348 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:11:22.348 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:11:22.348 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:11:22.348 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:11:22.348 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:11:22.348 -04:00 [DBG] Start key discovery request
2020-09-11 00:11:23.266 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:11:23.281 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:11:23.281 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:11:23.281 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:11:23.281 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:11:23.281 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:11:23.281 -04:00 [DBG] Start discovery request
2020-09-11 00:11:23.309 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:11:23.335 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:11:23.335 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-11 00:11:23.335 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-11 00:11:23.335 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-11 00:11:23.335 -04:00 [DBG] Rendering check session result
2020-09-11 00:11:23.348 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:11:23.348 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:11:23.348 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:11:23.348 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:11:23.348 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:11:23.348 -04:00 [DBG] Start key discovery request
2020-09-11 00:11:24.074 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:11:24.088 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:11:24.088 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:11:24.088 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:11:24.089 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:11:24.089 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:11:24.089 -04:00 [DBG] Start discovery request
2020-09-11 00:11:24.117 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:11:24.126 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:11:24.126 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-11 00:11:24.126 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-11 00:11:24.126 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-11 00:11:24.126 -04:00 [DBG] Rendering check session result
2020-09-11 00:11:24.139 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:11:24.139 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:11:24.139 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:11:24.139 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:11:24.139 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:11:24.139 -04:00 [DBG] Start key discovery request
2020-09-11 00:11:28.131 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:11:28.145 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:11:28.145 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:11:28.145 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:11:28.145 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:11:28.145 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:11:28.145 -04:00 [DBG] Start discovery request
2020-09-11 00:11:28.178 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:11:28.218 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:11:28.231 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:11:28.231 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:11:28.232 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:11:28.232 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:11:28.232 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:11:28.232 -04:00 [DBG] Start key discovery request
2020-09-11 00:11:28.236 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-11 00:11:28.236 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-11 00:11:28.237 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-11 00:11:28.237 -04:00 [DBG] Rendering check session result
2020-09-11 00:11:28.996 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:11:29.008 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:11:29.008 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:11:29.008 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:11:29.008 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:11:29.008 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:11:29.008 -04:00 [DBG] Start discovery request
2020-09-11 00:11:29.034 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:11:29.048 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:11:29.048 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-11 00:11:29.048 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-11 00:11:29.048 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-11 00:11:29.048 -04:00 [DBG] Rendering check session result
2020-09-11 00:11:29.067 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:11:29.067 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:11:29.067 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:11:29.067 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:11:29.067 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:11:29.067 -04:00 [DBG] Start key discovery request
2020-09-11 00:16:35.038 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:16:35.051 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:16:35.051 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:16:35.051 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:16:35.051 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:16:35.051 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:16:35.051 -04:00 [DBG] Start discovery request
2020-09-11 00:16:35.079 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:16:35.081 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:16:35.094 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:16:35.094 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:16:35.094 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:16:35.094 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:16:35.095 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:16:35.095 -04:00 [DBG] Start discovery request
2020-09-11 00:16:35.101 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:16:35.124 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:16:36.676 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:16:36.676 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:16:36.676 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:16:36.676 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:16:36.676 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:16:36.676 -04:00 [DBG] Start key discovery request
2020-09-11 00:16:36.680 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:16:36.765 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:16:36.765 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:16:36.765 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:16:36.765 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:16:36.765 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:16:36.765 -04:00 [DBG] Start key discovery request
2020-09-11 00:16:59.732 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:16:59.794 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:16:59.794 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:16:59.794 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:16:59.795 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:16:59.795 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:16:59.795 -04:00 [DBG] Start discovery request
2020-09-11 00:16:59.971 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:16:59.976 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:17:00.028 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:17:00.032 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:17:00.032 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:17:00.033 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:17:00.033 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:17:00.033 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:17:00.033 -04:00 [DBG] Start key discovery request
2020-09-11 00:17:00.038 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:17:00.038 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:17:00.038 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:17:00.038 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:17:00.038 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:17:00.038 -04:00 [DBG] Start discovery request
2020-09-11 00:17:00.081 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:17:00.086 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:17:00.099 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:17:00.099 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:17:00.099 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:17:00.099 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:17:00.099 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:17:00.099 -04:00 [DBG] Start key discovery request
2020-09-11 00:17:38.796 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:17:38.809 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:17:38.809 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:17:38.809 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:17:38.809 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:17:38.809 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:17:38.809 -04:00 [DBG] Start discovery request
2020-09-11 00:17:38.842 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:17:38.854 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:17:38.871 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:17:38.871 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:17:38.872 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:17:38.872 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:17:38.872 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:17:38.872 -04:00 [DBG] Start key discovery request
2020-09-11 00:17:39.046 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:17:39.058 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:17:39.059 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:17:39.059 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:17:39.059 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:17:39.059 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:17:39.059 -04:00 [DBG] Start discovery request
2020-09-11 00:17:39.088 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:17:39.093 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:17:39.108 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:17:39.108 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:17:39.108 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:17:39.108 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:17:39.108 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:17:39.108 -04:00 [DBG] Start key discovery request
2020-09-11 00:17:48.855 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:17:48.867 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:17:48.867 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:17:48.868 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:17:48.868 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:17:48.868 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:17:48.868 -04:00 [DBG] Start discovery request
2020-09-11 00:17:48.897 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:17:48.917 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:17:48.929 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:17:48.930 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:17:48.930 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:17:48.930 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:17:48.930 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:17:48.930 -04:00 [DBG] Start key discovery request
2020-09-11 00:17:49.072 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:17:49.088 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:17:49.088 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:17:49.089 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:17:49.089 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:17:49.089 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:17:49.089 -04:00 [DBG] Start discovery request
2020-09-11 00:17:49.115 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:17:49.124 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:17:49.134 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:17:49.134 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:17:49.135 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:17:49.135 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:17:49.135 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:17:49.135 -04:00 [DBG] Start key discovery request
2020-09-11 00:18:31.981 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:18:31.991 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:18:31.991 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:18:31.991 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:18:31.991 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:18:31.991 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:18:31.991 -04:00 [DBG] Start discovery request
2020-09-11 00:18:32.024 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:18:32.040 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:18:32.052 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:18:32.052 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:18:32.052 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:18:32.052 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:18:32.052 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:18:32.052 -04:00 [DBG] Start key discovery request
2020-09-11 00:18:32.086 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:18:32.099 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:18:32.099 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:18:32.099 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:18:32.099 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:18:32.099 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:18:32.099 -04:00 [DBG] Start discovery request
2020-09-11 00:18:32.159 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:18:32.169 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:18:32.179 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:18:32.180 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:18:32.180 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:18:32.180 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:18:32.180 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:18:32.180 -04:00 [DBG] Start key discovery request
2020-09-11 00:18:35.138 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:18:35.149 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:18:35.149 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:18:35.150 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:18:35.150 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:18:35.150 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:18:35.150 -04:00 [DBG] Start discovery request
2020-09-11 00:18:35.186 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:18:35.198 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:18:35.209 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:18:35.209 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:18:35.209 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:18:35.209 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:18:35.209 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:18:35.209 -04:00 [DBG] Start key discovery request
2020-09-11 00:18:36.022 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:18:36.036 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:18:36.036 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:18:36.036 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:18:36.036 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:18:36.036 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:18:36.036 -04:00 [DBG] Start discovery request
2020-09-11 00:18:36.060 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:18:36.075 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:18:36.085 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:18:36.085 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:18:36.085 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:18:36.085 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:18:36.085 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:18:36.085 -04:00 [DBG] Start key discovery request
2020-09-11 00:19:30.930 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:19:30.939 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:19:30.939 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:19:30.939 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:19:30.939 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:19:30.939 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:19:30.939 -04:00 [DBG] Start discovery request
2020-09-11 00:19:30.969 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:19:31.002 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:19:31.034 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:19:31.034 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:19:31.034 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:19:31.034 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:19:31.034 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:19:31.034 -04:00 [DBG] Start key discovery request
2020-09-11 00:19:31.153 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:19:31.166 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:19:31.166 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:19:31.166 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:19:31.166 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:19:31.166 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:19:31.166 -04:00 [DBG] Start discovery request
2020-09-11 00:19:31.191 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:19:31.209 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:19:31.222 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:19:31.222 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:19:31.222 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:19:31.222 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:19:31.222 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:19:31.222 -04:00 [DBG] Start key discovery request
2020-09-11 00:22:29.327 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:22:29.339 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:22:29.339 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:22:29.340 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:22:29.340 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:22:29.340 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:22:29.340 -04:00 [DBG] Start discovery request
2020-09-11 00:22:29.364 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:22:29.371 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:22:29.381 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:22:29.381 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:22:29.381 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:22:29.382 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:22:29.382 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:22:29.382 -04:00 [DBG] Start discovery request
2020-09-11 00:22:29.403 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:22:29.408 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:22:29.558 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:22:29.558 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:22:29.558 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:22:29.558 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:22:29.558 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:22:29.558 -04:00 [DBG] Start key discovery request
2020-09-11 00:22:29.560 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:22:29.574 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:22:29.574 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:22:29.574 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:22:29.574 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:22:29.574 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:22:29.574 -04:00 [DBG] Start key discovery request
2020-09-11 00:22:50.576 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:22:50.588 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:22:50.588 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:22:50.589 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:22:50.589 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:22:50.589 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:22:50.589 -04:00 [DBG] Start discovery request
2020-09-11 00:22:50.621 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:22:50.623 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:22:50.637 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:22:50.637 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:22:50.637 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:22:50.637 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:22:50.637 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:22:50.637 -04:00 [DBG] Start discovery request
2020-09-11 00:22:50.681 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:22:50.686 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:22:50.698 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:22:50.698 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:22:50.698 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:22:50.698 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:22:50.698 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:22:50.698 -04:00 [DBG] Start key discovery request
2020-09-11 00:22:50.701 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:22:50.711 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:22:50.712 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:22:50.712 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:22:50.712 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:22:50.712 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:22:50.712 -04:00 [DBG] Start key discovery request
2020-09-11 00:23:10.455 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:23:10.469 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:23:10.469 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:23:10.469 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:23:10.470 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:23:10.470 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:23:10.470 -04:00 [DBG] Start discovery request
2020-09-11 00:23:10.495 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:23:10.514 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:23:10.528 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:23:10.528 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:23:10.528 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:23:10.528 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:23:10.528 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:23:10.529 -04:00 [DBG] Start key discovery request
2020-09-11 00:23:46.391 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:23:46.408 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:23:46.408 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:23:46.408 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:23:46.408 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:23:46.408 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:23:46.408 -04:00 [DBG] Start discovery request
2020-09-11 00:23:46.436 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:23:46.462 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:23:46.472 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:23:46.472 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:23:46.472 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:23:46.472 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:23:46.473 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:23:46.473 -04:00 [DBG] Start key discovery request
2020-09-11 00:23:47.011 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:23:47.025 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:23:47.025 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:23:47.025 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:23:47.025 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:23:47.025 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:23:47.025 -04:00 [DBG] Start discovery request
2020-09-11 00:23:47.051 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:23:47.070 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:23:47.084 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:23:47.084 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:23:47.084 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:23:47.084 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:23:47.084 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:23:47.084 -04:00 [DBG] Start key discovery request
2020-09-11 00:23:50.986 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:23:51.000 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:23:51.000 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:23:51.000 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:23:51.000 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:23:51.000 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:23:51.000 -04:00 [DBG] Start discovery request
2020-09-11 00:23:51.031 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:23:51.054 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:23:51.069 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:23:51.069 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:23:51.069 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:23:51.069 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:23:51.069 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:23:51.069 -04:00 [DBG] Start key discovery request
2020-09-11 00:23:51.111 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:23:51.126 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:23:51.126 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:23:51.126 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:23:51.126 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:23:51.126 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:23:51.126 -04:00 [DBG] Start discovery request
2020-09-11 00:23:51.155 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:23:51.182 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:23:51.198 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:23:51.198 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:23:51.198 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:23:51.198 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:23:51.198 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:23:51.198 -04:00 [DBG] Start key discovery request
2020-09-11 00:23:53.537 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:23:53.554 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:23:53.554 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:23:53.554 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:23:53.554 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:23:53.554 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:23:53.554 -04:00 [DBG] Start discovery request
2020-09-11 00:23:53.595 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:23:53.620 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:23:53.632 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:23:53.632 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:23:53.632 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:23:53.633 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:23:53.633 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:23:53.633 -04:00 [DBG] Start key discovery request
2020-09-11 00:23:59.967 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:23:59.982 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:23:59.982 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:23:59.982 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:23:59.983 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:23:59.983 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:23:59.983 -04:00 [DBG] Start discovery request
2020-09-11 00:24:00.010 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:24:00.040 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:24:00.053 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:24:00.053 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:24:00.053 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:24:00.053 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:24:00.053 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:24:00.053 -04:00 [DBG] Start key discovery request
2020-09-11 00:24:00.064 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:24:00.078 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:24:00.078 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:24:00.078 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:24:00.078 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:24:00.078 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:24:00.078 -04:00 [DBG] Start discovery request
2020-09-11 00:24:00.100 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:24:00.125 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:24:00.138 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:24:00.138 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:24:00.138 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:24:00.138 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:24:00.138 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:24:00.138 -04:00 [DBG] Start key discovery request
2020-09-11 00:24:05.630 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:24:05.644 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:24:05.645 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:24:05.645 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:24:05.645 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:24:05.645 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:24:05.645 -04:00 [DBG] Start discovery request
2020-09-11 00:24:05.676 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:24:05.699 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:24:05.717 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:24:05.719 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:24:05.719 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:24:05.719 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:24:05.719 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:24:05.720 -04:00 [DBG] Start key discovery request
2020-09-11 00:24:06.018 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:24:06.028 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:24:06.029 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:24:06.029 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:24:06.029 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:24:06.029 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:24:06.029 -04:00 [DBG] Start discovery request
2020-09-11 00:24:06.054 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:24:06.068 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:24:06.116 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:24:06.116 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:24:06.116 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:24:06.116 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:24:06.116 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:24:06.116 -04:00 [DBG] Start key discovery request
2020-09-11 00:24:14.606 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:24:14.620 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:24:14.620 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:24:14.620 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:24:14.620 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:24:14.620 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:24:14.620 -04:00 [DBG] Start discovery request
2020-09-11 00:24:14.650 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:24:14.664 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:24:14.676 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:24:14.676 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:24:14.676 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:24:14.676 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:24:14.676 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:24:14.677 -04:00 [DBG] Start key discovery request
2020-09-11 00:24:19.716 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:24:19.728 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:24:19.729 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:24:19.729 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:24:19.729 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:24:19.729 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:24:19.729 -04:00 [DBG] Start discovery request
2020-09-11 00:24:19.758 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:24:19.779 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:24:19.793 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:24:19.793 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:24:19.793 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:24:19.793 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:24:19.793 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:24:19.793 -04:00 [DBG] Start key discovery request
2020-09-11 00:25:45.999 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:25:46.010 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:25:46.010 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:25:46.011 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:25:46.011 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:25:46.011 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:25:46.011 -04:00 [DBG] Start discovery request
2020-09-11 00:25:46.039 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:25:46.062 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:25:46.073 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:25:46.073 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:25:46.073 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:25:46.073 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:25:46.073 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:25:46.073 -04:00 [DBG] Start key discovery request
2020-09-11 00:25:46.085 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:25:46.097 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:25:46.097 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:25:46.097 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:25:46.097 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:25:46.097 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:25:46.097 -04:00 [DBG] Start discovery request
2020-09-11 00:25:46.125 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:25:46.160 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:25:46.172 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:25:46.173 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:25:46.173 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:25:46.173 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:25:46.173 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:25:46.173 -04:00 [DBG] Start key discovery request
2020-09-11 00:26:31.473 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:26:31.485 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:26:31.485 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:26:31.485 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:26:31.485 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:26:31.485 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:26:31.485 -04:00 [DBG] Start discovery request
2020-09-11 00:26:31.510 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:26:31.520 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:26:31.535 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:26:31.535 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:26:31.535 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:26:31.536 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:26:31.536 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:26:31.536 -04:00 [DBG] Start discovery request
2020-09-11 00:26:31.562 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:26:31.576 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:26:31.608 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:26:31.609 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:26:31.609 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:26:31.609 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:26:31.609 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:26:31.609 -04:00 [DBG] Start key discovery request
2020-09-11 00:26:31.611 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:26:31.626 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:26:31.627 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:26:31.627 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:26:31.627 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:26:31.627 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:26:31.627 -04:00 [DBG] Start key discovery request
2020-09-11 00:26:41.730 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:26:41.742 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:26:41.742 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:26:41.742 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:26:41.742 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:26:41.742 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:26:41.742 -04:00 [DBG] Start discovery request
2020-09-11 00:26:41.779 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:26:41.795 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:26:41.804 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:26:41.804 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:26:41.804 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:26:41.804 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:26:41.805 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:26:41.805 -04:00 [DBG] Start key discovery request
2020-09-11 00:26:42.043 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:26:42.053 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:26:42.054 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:26:42.054 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:26:42.054 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:26:42.054 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:26:42.054 -04:00 [DBG] Start discovery request
2020-09-11 00:26:42.101 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:26:42.107 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:26:42.116 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:26:42.116 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:26:42.116 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:26:42.117 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:26:42.117 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:26:42.117 -04:00 [DBG] Start key discovery request
2020-09-11 00:26:46.533 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:26:46.546 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:26:46.546 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:26:46.546 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:26:46.546 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:26:46.546 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:26:46.546 -04:00 [DBG] Start discovery request
2020-09-11 00:26:46.569 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:26:46.597 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:26:46.610 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:26:46.610 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:26:46.610 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:26:46.610 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:26:46.610 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:26:46.610 -04:00 [DBG] Start key discovery request
2020-09-11 00:26:47.016 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:26:47.027 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:26:47.027 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:26:47.028 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:26:47.028 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:26:47.028 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:26:47.028 -04:00 [DBG] Start discovery request
2020-09-11 00:26:47.050 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:26:47.070 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:26:47.080 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:26:47.080 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:26:47.080 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:26:47.080 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:26:47.080 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:26:47.080 -04:00 [DBG] Start key discovery request
2020-09-11 00:26:55.938 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:26:55.950 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:26:55.950 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:26:55.950 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:26:55.950 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:26:55.950 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:26:55.950 -04:00 [DBG] Start discovery request
2020-09-11 00:26:55.979 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:26:56.007 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:26:56.038 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:26:56.038 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:26:56.039 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:26:56.039 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:26:56.039 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:26:56.039 -04:00 [DBG] Start key discovery request
2020-09-11 00:26:56.086 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:26:56.098 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:26:56.098 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:26:56.098 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:26:56.098 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:26:56.099 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:26:56.099 -04:00 [DBG] Start discovery request
2020-09-11 00:26:56.121 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:26:56.148 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:26:56.170 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:26:56.170 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:26:56.170 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:26:56.170 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:26:56.170 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:26:56.170 -04:00 [DBG] Start key discovery request
2020-09-11 00:27:05.495 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:27:05.509 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:27:05.509 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:27:05.509 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:27:05.509 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:27:05.509 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:27:05.509 -04:00 [DBG] Start discovery request
2020-09-11 00:27:05.563 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:27:05.565 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:27:05.577 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:27:05.577 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:27:05.577 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:27:05.577 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:27:05.578 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:27:05.578 -04:00 [DBG] Start discovery request
2020-09-11 00:27:05.600 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:27:05.604 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:27:05.618 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:27:05.618 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:27:05.618 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:27:05.618 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:27:05.618 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:27:05.618 -04:00 [DBG] Start key discovery request
2020-09-11 00:27:05.654 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:27:05.669 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:27:05.669 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:27:05.669 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:27:05.669 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:27:05.669 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:27:05.669 -04:00 [DBG] Start key discovery request
2020-09-11 00:27:08.231 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:27:08.243 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:27:08.243 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:27:08.244 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:27:08.244 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:27:08.244 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:27:08.244 -04:00 [DBG] Start discovery request
2020-09-11 00:27:08.265 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:27:08.287 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:27:08.305 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:27:08.305 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:27:08.305 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:27:08.306 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:27:08.306 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:27:08.306 -04:00 [DBG] Start key discovery request
2020-09-11 00:27:09.003 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:27:09.015 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:27:09.015 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:27:09.015 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:27:09.016 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:27:09.016 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:27:09.016 -04:00 [DBG] Start discovery request
2020-09-11 00:27:09.040 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:27:09.048 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:27:09.060 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:27:09.061 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:27:09.061 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:27:09.061 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:27:09.061 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:27:09.061 -04:00 [DBG] Start key discovery request
2020-09-11 00:27:16.072 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:27:16.088 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:27:16.088 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:27:16.088 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:27:16.088 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:27:16.088 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:27:16.088 -04:00 [DBG] Start discovery request
2020-09-11 00:27:16.116 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:27:16.130 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:27:16.142 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:27:16.142 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:27:16.142 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:27:16.143 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:27:16.143 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:27:16.143 -04:00 [DBG] Start key discovery request
2020-09-11 00:27:25.409 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:27:25.420 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:27:25.420 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:27:25.421 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:27:25.421 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:27:25.421 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:27:25.421 -04:00 [DBG] Start discovery request
2020-09-11 00:27:25.455 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:27:25.481 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:27:25.491 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:27:25.491 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:27:25.492 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:27:25.492 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:27:25.492 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:27:25.492 -04:00 [DBG] Start key discovery request
2020-09-11 00:30:22.454 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:30:22.469 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:30:22.469 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:30:22.469 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:30:22.469 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:30:22.469 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:30:22.469 -04:00 [DBG] Start discovery request
2020-09-11 00:30:22.493 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:30:22.497 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:30:22.531 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:30:22.531 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:30:22.532 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:30:22.532 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:30:22.532 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:30:22.532 -04:00 [DBG] Start discovery request
2020-09-11 00:30:22.547 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:30:22.562 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:30:22.777 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:30:22.777 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:30:22.777 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:30:22.777 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:30:22.777 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:30:22.777 -04:00 [DBG] Start key discovery request
2020-09-11 00:30:22.779 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:30:22.792 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:30:22.792 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:30:22.792 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:30:22.792 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:30:22.792 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:30:22.792 -04:00 [DBG] Start key discovery request
2020-09-11 00:30:28.017 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:30:28.030 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:30:28.030 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:30:28.030 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:30:28.031 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:30:28.031 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:30:28.031 -04:00 [DBG] Start discovery request
2020-09-11 00:30:28.062 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:30:28.071 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:30:28.084 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:30:28.084 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:30:28.084 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:30:28.084 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:30:28.084 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:30:28.084 -04:00 [DBG] Start discovery request
2020-09-11 00:30:28.096 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:30:28.107 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:30:28.107 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:30:28.107 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:30:28.107 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:30:28.107 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:30:28.107 -04:00 [DBG] Start key discovery request
2020-09-11 00:30:28.111 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:30:28.145 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:30:28.169 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:30:28.169 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:30:28.169 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:30:28.169 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:30:28.169 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:30:28.169 -04:00 [DBG] Start key discovery request
2020-09-11 00:30:55.593 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:30:55.606 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:30:55.606 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:30:55.606 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:30:55.606 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:30:55.606 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:30:55.606 -04:00 [DBG] Start discovery request
2020-09-11 00:30:55.660 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:30:55.667 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:30:55.681 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:30:55.681 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:30:55.681 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:30:55.681 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:30:55.681 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:30:55.681 -04:00 [DBG] Start key discovery request
2020-09-11 00:30:56.014 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:30:56.027 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:30:56.027 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:30:56.027 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:30:56.027 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:30:56.027 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:30:56.027 -04:00 [DBG] Start discovery request
2020-09-11 00:30:56.062 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:30:56.068 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:30:56.080 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:30:56.080 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:30:56.080 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:30:56.080 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:30:56.080 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:30:56.080 -04:00 [DBG] Start key discovery request
2020-09-11 00:32:03.875 -04:00 [INF] Removing 0 grants
2020-09-11 00:32:03.893 -04:00 [INF] Removing 0 device flow codes
2020-09-11 00:32:06.651 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:32:06.666 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:32:06.666 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:32:06.666 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:32:06.666 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:32:06.666 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:32:06.666 -04:00 [DBG] Start discovery request
2020-09-11 00:32:06.704 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:32:06.724 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:32:06.737 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:32:06.737 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:32:06.742 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:32:06.742 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:32:06.742 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:32:06.742 -04:00 [DBG] Start key discovery request
2020-09-11 00:32:07.015 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:32:07.030 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:32:07.030 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:32:07.030 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:32:07.030 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:32:07.030 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:32:07.030 -04:00 [DBG] Start discovery request
2020-09-11 00:32:07.056 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:32:07.075 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:32:07.086 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:32:07.086 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:32:07.086 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:32:07.086 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:32:07.086 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:32:07.086 -04:00 [DBG] Start key discovery request
2020-09-11 00:32:17.819 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:32:17.836 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:32:17.836 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:32:17.836 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:32:17.836 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:32:17.836 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:32:17.836 -04:00 [DBG] Start discovery request
2020-09-11 00:32:17.868 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:32:17.890 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:32:17.903 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:32:17.903 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:32:17.903 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:32:17.903 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:32:17.903 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:32:17.903 -04:00 [DBG] Start key discovery request
2020-09-11 00:32:18.051 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:32:18.069 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:32:18.069 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:32:18.069 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:32:18.069 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:32:18.069 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:32:18.069 -04:00 [DBG] Start discovery request
2020-09-11 00:32:18.101 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:32:18.114 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:32:18.126 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:32:18.126 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:32:18.126 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:32:18.126 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:32:18.127 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:32:18.127 -04:00 [DBG] Start key discovery request
2020-09-11 00:32:32.696 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:32:32.709 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:32:32.709 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:32:32.709 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:32:32.709 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:32:32.709 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:32:32.709 -04:00 [DBG] Start discovery request
2020-09-11 00:32:32.731 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:32:32.739 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:32:32.750 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:32:32.750 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:32:32.750 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:32:32.750 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:32:32.750 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:32:32.750 -04:00 [DBG] Start key discovery request
2020-09-11 00:32:33.021 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:32:33.034 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:32:33.034 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:32:33.034 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:32:33.034 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:32:33.034 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:32:33.034 -04:00 [DBG] Start discovery request
2020-09-11 00:32:33.056 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:32:33.075 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:32:33.085 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:32:33.085 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:32:33.085 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:32:33.085 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:32:33.085 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:32:33.085 -04:00 [DBG] Start key discovery request
2020-09-11 00:34:43.195 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:34:43.209 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:34:43.210 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:34:43.212 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:34:43.212 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:34:43.212 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:34:43.212 -04:00 [DBG] Start discovery request
2020-09-11 00:34:43.248 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:34:43.252 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:34:43.263 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:34:43.263 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:34:43.263 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:34:43.263 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:34:43.263 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:34:43.263 -04:00 [DBG] Start discovery request
2020-09-11 00:34:43.277 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:34:43.290 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:34:43.292 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:34:43.292 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:34:43.293 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:34:43.293 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:34:43.293 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:34:43.293 -04:00 [DBG] Start key discovery request
2020-09-11 00:34:43.309 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:34:43.321 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:34:43.321 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:34:43.321 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:34:43.321 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:34:43.321 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:34:43.321 -04:00 [DBG] Start key discovery request
2020-09-11 00:35:24.959 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:35:24.970 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:35:24.970 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:35:24.970 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:35:24.971 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:35:24.971 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:35:24.971 -04:00 [DBG] Start discovery request
2020-09-11 00:35:24.996 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:35:25.028 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:35:25.042 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:35:25.042 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:35:25.042 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:35:25.042 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:35:25.042 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:35:25.042 -04:00 [DBG] Start key discovery request
2020-09-11 00:35:25.122 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:35:25.136 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:35:25.136 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:35:25.136 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:35:25.136 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:35:25.136 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:35:25.136 -04:00 [DBG] Start discovery request
2020-09-11 00:35:25.166 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:35:25.185 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:35:25.199 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:35:25.200 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:35:25.200 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:35:25.200 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:35:25.200 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:35:25.200 -04:00 [DBG] Start key discovery request
2020-09-11 00:35:27.040 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:35:27.055 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:35:27.055 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:35:27.055 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:35:27.055 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:35:27.055 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:35:27.055 -04:00 [DBG] Start discovery request
2020-09-11 00:35:27.087 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:35:27.109 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:35:27.122 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:35:27.122 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:35:27.122 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:35:27.123 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:35:27.123 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:35:27.123 -04:00 [DBG] Start key discovery request
2020-09-11 00:35:29.124 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:35:29.138 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:35:29.138 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:35:29.138 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:35:29.138 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:35:29.138 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:35:29.138 -04:00 [DBG] Start discovery request
2020-09-11 00:35:29.169 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:35:29.198 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:35:29.212 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:35:29.212 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:35:29.212 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:35:29.212 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:35:29.212 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:35:29.212 -04:00 [DBG] Start key discovery request
2020-09-11 00:35:30.006 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:35:30.017 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:35:30.017 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:35:30.017 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:35:30.018 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:35:30.018 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:35:30.018 -04:00 [DBG] Start discovery request
2020-09-11 00:35:30.044 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:35:30.052 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:35:30.063 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:35:30.063 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:35:30.063 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:35:30.063 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:35:30.063 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:35:30.063 -04:00 [DBG] Start key discovery request
2020-09-11 00:35:32.939 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:35:32.954 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:35:32.954 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:35:32.954 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:35:32.954 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:35:32.954 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:35:32.954 -04:00 [DBG] Start discovery request
2020-09-11 00:35:32.982 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:35:33.008 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:35:33.032 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:35:33.032 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:35:33.033 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:35:33.033 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:35:33.033 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:35:33.033 -04:00 [DBG] Start key discovery request
2020-09-11 00:35:33.136 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:35:33.150 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:35:33.150 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:35:33.150 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:35:33.150 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:35:33.150 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:35:33.150 -04:00 [DBG] Start discovery request
2020-09-11 00:35:33.180 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:35:33.184 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:35:33.197 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:35:33.197 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:35:33.197 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:35:33.197 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:35:33.197 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:35:33.198 -04:00 [DBG] Start key discovery request
2020-09-11 00:35:37.588 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:35:37.601 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:35:37.601 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:35:37.601 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:35:37.601 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:35:37.601 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:35:37.601 -04:00 [DBG] Start discovery request
2020-09-11 00:35:37.626 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:35:37.652 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:35:37.664 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:35:37.664 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:35:37.664 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:35:37.664 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:35:37.664 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:35:37.664 -04:00 [DBG] Start key discovery request
2020-09-11 00:35:38.019 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:35:38.029 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:35:38.030 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:35:38.030 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:35:38.030 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:35:38.030 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:35:38.030 -04:00 [DBG] Start discovery request
2020-09-11 00:35:38.056 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:35:38.067 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:35:38.078 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:35:38.078 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:35:38.078 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:35:38.078 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:35:38.078 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:35:38.078 -04:00 [DBG] Start key discovery request
2020-09-11 00:38:08.834 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:38:08.849 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:38:08.850 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:38:08.850 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:38:08.850 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:38:08.850 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:38:08.850 -04:00 [DBG] Start discovery request
2020-09-11 00:38:08.879 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:38:08.908 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:38:08.924 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:38:08.924 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:38:08.924 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:38:08.924 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:38:08.924 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:38:08.924 -04:00 [DBG] Start key discovery request
2020-09-11 00:38:09.091 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:38:09.101 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:38:09.101 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:38:09.102 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:38:09.102 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:38:09.102 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:38:09.102 -04:00 [DBG] Start discovery request
2020-09-11 00:38:09.122 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:38:09.151 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:38:09.164 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:38:09.164 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:38:09.164 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:38:09.164 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:38:09.164 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:38:09.164 -04:00 [DBG] Start key discovery request
2020-09-11 00:39:36.507 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:39:36.548 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:39:36.548 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:39:36.548 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:39:36.548 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:39:36.548 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:39:36.548 -04:00 [DBG] Start discovery request
2020-09-11 00:39:36.573 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:39:36.578 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:39:36.597 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:39:36.597 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:39:36.597 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:39:36.598 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:39:36.598 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:39:36.598 -04:00 [DBG] Start discovery request
2020-09-11 00:39:36.619 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:39:36.628 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:39:36.637 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:39:36.637 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:39:36.638 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:39:36.638 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:39:36.638 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:39:36.638 -04:00 [DBG] Start key discovery request
2020-09-11 00:39:36.649 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:39:36.663 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:39:36.663 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:39:36.663 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:39:36.663 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:39:36.664 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:39:36.664 -04:00 [DBG] Start key discovery request
2020-09-11 00:39:41.505 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:39:41.519 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:39:41.519 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:39:41.519 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:39:41.520 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:39:41.520 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:39:41.520 -04:00 [DBG] Start discovery request
2020-09-11 00:39:41.581 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:39:41.594 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:39:41.608 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:39:41.608 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:39:41.608 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:39:41.609 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:39:41.609 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:39:41.609 -04:00 [DBG] Start key discovery request
2020-09-11 00:39:42.004 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:39:42.021 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:39:42.021 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:39:42.021 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:39:42.021 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:39:42.021 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:39:42.021 -04:00 [DBG] Start discovery request
2020-09-11 00:39:42.056 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:39:42.062 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:39:42.082 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:39:42.082 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:39:42.082 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:39:42.082 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:39:42.082 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:39:42.082 -04:00 [DBG] Start key discovery request
2020-09-11 00:40:10.546 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:40:10.557 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:40:10.557 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:40:10.558 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:40:10.558 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:40:10.558 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:40:10.558 -04:00 [DBG] Start discovery request
2020-09-11 00:40:10.582 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:40:10.585 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:40:10.595 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:40:10.595 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:40:10.595 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:40:10.596 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:40:10.596 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:40:10.596 -04:00 [DBG] Start discovery request
2020-09-11 00:40:10.623 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:40:10.654 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:40:10.666 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:40:10.666 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:40:10.666 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:40:10.666 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:40:10.666 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:40:10.666 -04:00 [DBG] Start key discovery request
2020-09-11 00:40:10.688 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:40:10.698 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:40:10.698 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:40:10.699 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:40:10.699 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:40:10.699 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:40:10.699 -04:00 [DBG] Start key discovery request
2020-09-11 00:40:13.810 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:40:13.825 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:40:13.825 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:40:13.825 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:40:13.825 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:40:13.825 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:40:13.825 -04:00 [DBG] Start discovery request
2020-09-11 00:40:13.854 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:40:13.884 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:40:13.897 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:40:13.897 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:40:13.897 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:40:13.897 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:40:13.897 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:40:13.897 -04:00 [DBG] Start key discovery request
2020-09-11 00:40:14.065 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:40:14.078 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:40:14.078 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:40:14.079 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:40:14.079 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:40:14.079 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:40:14.079 -04:00 [DBG] Start discovery request
2020-09-11 00:40:14.104 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:40:14.128 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:40:14.139 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:40:14.139 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:40:14.140 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:40:14.140 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:40:14.140 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:40:14.140 -04:00 [DBG] Start key discovery request
2020-09-11 00:40:19.822 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:40:19.841 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:40:19.841 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:40:19.841 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:40:19.841 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:40:19.841 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:40:19.841 -04:00 [DBG] Start discovery request
2020-09-11 00:40:19.867 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:40:19.904 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:40:19.917 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:40:19.918 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:40:19.918 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:40:19.918 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:40:19.918 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:40:19.918 -04:00 [DBG] Start key discovery request
2020-09-11 00:40:20.068 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:40:20.082 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:40:20.082 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:40:20.082 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:40:20.082 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:40:20.082 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:40:20.082 -04:00 [DBG] Start discovery request
2020-09-11 00:40:20.112 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:40:20.120 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:40:20.133 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:40:20.133 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:40:20.133 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:40:20.133 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:40:20.133 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:40:20.133 -04:00 [DBG] Start key discovery request
2020-09-11 00:40:57.652 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-11 00:40:57.664 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:40:57.664 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:40:57.664 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-11 00:40:57.664 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-11 00:40:57.664 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-11 00:40:57.664 -04:00 [DBG] Start discovery request
2020-09-11 00:40:57.691 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-11 00:40:57.713 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://localhost:4200
2020-09-11 00:40:57.753 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-11 00:40:57.753 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-11 00:40:57.753 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-09-11 00:40:57.754 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-09-11 00:40:57.754 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-09-11 00:40:57.754 -04:00 [DBG] Start key discovery request
2020-09-14 09:00:46.606 -04:00 [INF] Starting host...
2020-09-14 09:00:48.528 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-14 09:00:48.651 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-14 09:00:48.651 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-14 09:00:48.652 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-14 09:00:48.652 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-14 09:00:48.652 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-14 09:00:48.652 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-14 09:00:48.920 -04:00 [DBG] Login Url: /Account/Login
2020-09-14 09:00:48.922 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-14 09:00:48.922 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-14 09:00:48.922 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-14 09:00:48.922 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-14 09:00:48.922 -04:00 [DBG] Error Url: /home/error
2020-09-14 09:00:48.922 -04:00 [DBG] Error Id Parameter: errorId
2020-09-14 09:01:15.929 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-09-14 09:01:47.098 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-14 09:01:48.135 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-14 09:01:48.136 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-14 09:01:48.138 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-14 09:01:48.140 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-14 09:01:48.140 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-14 09:01:48.142 -04:00 [DBG] Start discovery request
2020-09-14 09:01:48.507 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-14 09:01:48.565 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-14 09:01:48.567 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-14 09:01:48.567 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-14 09:01:48.568 -04:00 [DBG] Start authorize request
2020-09-14 09:01:48.572 -04:00 [DBG] No user present in authorize request
2020-09-14 09:01:48.603 -04:00 [DBG] Start authorize request protocol validation
2020-09-14 09:01:48.694 -04:00 [ERR] Unknown client or not enabled: angular_spa
{"ClientId":null,"ClientName":null,"RedirectUri":null,"AllowedRedirectUris":null,"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"angular_spa","redirect_uri":"https://localhost:4200/auth-callback","response_type":"code","scope":"openid profile app.api.employeeprofile.read","state":"441213c69e4342dfbb16d5f34440c14d","code_challenge":"HecNdsle9d2tuy2_HJWpWp1nenlJa4lQhnm-7st40Ng","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-09-14 09:01:48.698 -04:00 [ERR] Request validation failed
2020-09-14 09:01:48.698 -04:00 [INF] {"ClientId":null,"ClientName":null,"RedirectUri":null,"AllowedRedirectUris":null,"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"angular_spa","redirect_uri":"https://localhost:4200/auth-callback","response_type":"code","scope":"openid profile app.api.employeeprofile.read","state":"441213c69e4342dfbb16d5f34440c14d","code_challenge":"HecNdsle9d2tuy2_HJWpWp1nenlJa4lQhnm-7st40Ng","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-09-14 09:01:48.704 -04:00 [INF] {"ClientId":"angular_spa","ClientName":null,"RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Unknown client or client not enabled","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"8000020c-0006-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-14T13:01:48.0000000Z","ProcessId":18716,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-14 09:01:54.734 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-14 09:01:54.778 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-14 09:01:54.779 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-14 09:01:54.779 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-14 09:01:54.780 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-14 09:01:54.780 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-14 09:01:54.780 -04:00 [DBG] Start discovery request
2020-09-14 09:01:54.810 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-14 09:01:54.818 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-14 09:01:54.819 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-14 09:01:54.819 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-14 09:01:54.819 -04:00 [DBG] Start authorize request
2020-09-14 09:01:54.819 -04:00 [DBG] No user present in authorize request
2020-09-14 09:01:54.819 -04:00 [DBG] Start authorize request protocol validation
2020-09-14 09:01:54.833 -04:00 [ERR] Unknown client or not enabled: angular_spa
{"ClientId":null,"ClientName":null,"RedirectUri":null,"AllowedRedirectUris":null,"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"angular_spa","redirect_uri":"https://localhost:4200/auth-callback","response_type":"code","scope":"openid profile app.api.employeeprofile.read","state":"d8ee7c6cc1b741c6ad8d4ce331ac3c7a","code_challenge":"iXXBFR_uxt30sgluMljsZsNC1ZPt21o3z28eonFQgvw","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-09-14 09:01:54.833 -04:00 [ERR] Request validation failed
2020-09-14 09:01:54.833 -04:00 [INF] {"ClientId":null,"ClientName":null,"RedirectUri":null,"AllowedRedirectUris":null,"SubjectId":"anonymous","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"angular_spa","redirect_uri":"https://localhost:4200/auth-callback","response_type":"code","scope":"openid profile app.api.employeeprofile.read","state":"d8ee7c6cc1b741c6ad8d4ce331ac3c7a","code_challenge":"iXXBFR_uxt30sgluMljsZsNC1ZPt21o3z28eonFQgvw","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-09-14 09:01:54.833 -04:00 [INF] {"ClientId":"angular_spa","ClientName":null,"RedirectUri":null,"Endpoint":"Authorize","SubjectId":null,"Scopes":"","GrantType":null,"Error":"unauthorized_client","ErrorDescription":"Unknown client or client not enabled","Category":"Token","Name":"Token Issued Failure","EventType":"Failure","Id":2001,"Message":null,"ActivityId":"800001b8-000a-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-14T13:01:54.0000000Z","ProcessId":18716,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedFailureEvent"}
2020-09-14 09:03:09.418 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-14 09:03:09.435 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-14 09:03:09.435 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-14 09:03:09.436 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-14 09:03:09.443 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-14 09:03:09.443 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-14 09:03:09.443 -04:00 [DBG] Start discovery request
2020-09-14 09:03:09.470 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-14 09:03:09.480 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-14 09:03:09.483 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-14 09:03:09.483 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-14 09:03:09.483 -04:00 [DBG] Start authorize request
2020-09-14 09:03:09.483 -04:00 [DBG] No user present in authorize request
2020-09-14 09:03:09.483 -04:00 [DBG] Start authorize request protocol validation
2020-09-14 09:03:09.733 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:03:09.739 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:03:09.744 -04:00 [DBG] Checking for PKCE parameters
2020-09-14 09:03:09.808 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-09-14 09:03:09.861 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-14 09:03:09.884 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-09-14 09:03:09.896 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-14 09:03:09.899 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-14 09:03:09.900 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"devkit-clients-spa.pkce","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile app.api.employeeprofile.read","State":"4fb9e704aaf14477bea0ac7c395d54f4","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"","Raw":{"client_id":"devkit-clients-spa.pkce","redirect_uri":"https://localhost:4200/auth-callback","response_type":"code","scope":"openid profile app.api.employeeprofile.read","state":"4fb9e704aaf14477bea0ac7c395d54f4","code_challenge":"nz30C9d70WKbllwdLCHXqrePp6HExncEqXNL_omZItE","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-09-14 09:03:09.901 -04:00 [INF] Showing login: User is not authenticated
2020-09-14 09:03:09.908 -04:00 [DBG] Start authorize request protocol validation
2020-09-14 09:03:10.039 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:03:10.039 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:03:10.039 -04:00 [DBG] Checking for PKCE parameters
2020-09-14 09:03:10.052 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-09-14 09:03:10.066 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-14 09:03:10.086 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-09-14 09:03:10.100 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-14 09:03:10.101 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-14 09:03:10.296 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:03:10.296 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:03:13.511 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-14 09:03:13.534 -04:00 [DBG] Start authorize request protocol validation
2020-09-14 09:03:13.689 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:03:13.690 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:03:13.690 -04:00 [DBG] Checking for PKCE parameters
2020-09-14 09:03:13.709 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-09-14 09:03:13.723 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-14 09:03:13.740 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-09-14 09:03:13.755 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-14 09:03:13.755 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-14 09:03:13.968 -04:00 [DBG] Augmenting SignInContext
2020-09-14 09:03:13.969 -04:00 [DBG] Adding idp claim with value: local
2020-09-14 09:03:13.969 -04:00 [DBG] Adding auth_time claim with value: 1600088593
2020-09-14 09:03:13.974 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-14 09:03:13.987 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800001bc-000a-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-14T13:03:13.0000000Z","ProcessId":18716,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-14 09:03:14.106 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:03:14.106 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:03:14.117 -04:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-09-14 09:03:14.118 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-09-14 09:03:14.118 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-09-14 09:03:14.119 -04:00 [DBG] Start authorize callback request
2020-09-14 09:03:14.121 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-14 09:03:14.121 -04:00 [DBG] Start authorize request protocol validation
2020-09-14 09:03:14.235 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:03:14.235 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:03:14.236 -04:00 [DBG] Checking for PKCE parameters
2020-09-14 09:03:14.252 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-09-14 09:03:14.285 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-14 09:03:14.302 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-09-14 09:03:14.319 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-14 09:03:14.319 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-14 09:03:14.320 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"devkit-clients-spa.pkce","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile app.api.employeeprofile.read","State":"4fb9e704aaf14477bea0ac7c395d54f4","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"BVsOygq9G6HWbdZzKNA42Q","Raw":{"client_id":"devkit-clients-spa.pkce","redirect_uri":"https://localhost:4200/auth-callback","response_type":"code","scope":"openid profile app.api.employeeprofile.read","state":"4fb9e704aaf14477bea0ac7c395d54f4","code_challenge":"nz30C9d70WKbllwdLCHXqrePp6HExncEqXNL_omZItE","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-09-14 09:03:14.405 -04:00 [DBG] do465Pe2aM3hJskGU053bpo0n4R5j9s7evyXDBu3+W0= found in database: true
2020-09-14 09:03:14.414 -04:00 [DBG] Consent found in consent store is same as current request, consent is not required
2020-09-14 09:03:14.416 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-14 09:03:14.445 -04:00 [DBG] w5LcCaXOq8QRHBgHkXQocq85qQe0e99mYCLT+aLWRkQ= not found in database
2020-09-14 09:03:14.594 -04:00 [INF] {"ClientId":"devkit-clients-spa.pkce","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****WP7w","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000210-0006-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-14T13:03:14.0000000Z","ProcessId":18716,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-14 09:03:14.594 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"devkit-clients-spa.pkce","RedirectUri":"https://localhost:4200/auth-callback","State":"4fb9e704aaf14477bea0ac7c395d54f4","Scope":"openid profile app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-14 09:03:14.598 -04:00 [DBG] Augmenting SignInContext
2020-09-14 09:03:14.599 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-14 09:03:15.334 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-14 09:03:15.348 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-14 09:03:15.348 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-14 09:03:15.349 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-14 09:03:15.349 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-14 09:03:15.349 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-14 09:03:15.349 -04:00 [DBG] Start discovery request
2020-09-14 09:03:15.374 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-14 09:03:15.378 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-14 09:03:15.393 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-14 09:03:15.393 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-14 09:03:15.393 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-14 09:03:15.396 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-14 09:03:15.396 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-14 09:03:15.398 -04:00 [DBG] Start token request.
2020-09-14 09:03:15.399 -04:00 [DBG] Start client validation
2020-09-14 09:03:15.401 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-14 09:03:15.402 -04:00 [DBG] Start parsing for secret in post body
2020-09-14 09:03:15.402 -04:00 [DBG] client id without secret found
2020-09-14 09:03:15.402 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-14 09:03:15.402 -04:00 [DBG] Secret id found: devkit-clients-spa.pkce
2020-09-14 09:03:15.548 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:03:15.549 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:03:15.549 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-14 09:03:15.549 -04:00 [DBG] Client validation success
2020-09-14 09:03:15.550 -04:00 [INF] {"ClientId":"devkit-clients-spa.pkce","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"800001be-000a-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-14T13:03:15.0000000Z","ProcessId":18716,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-14 09:03:15.552 -04:00 [DBG] Start token request validation
2020-09-14 09:03:15.554 -04:00 [DBG] Start validation of authorization code token request
2020-09-14 09:03:15.566 -04:00 [DBG] w5LcCaXOq8QRHBgHkXQocq85qQe0e99mYCLT+aLWRkQ= found in database: true
2020-09-14 09:03:15.594 -04:00 [DBG] removing w5LcCaXOq8QRHBgHkXQocq85qQe0e99mYCLT+aLWRkQ= persisted grant from database
2020-09-14 09:03:15.665 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-14 09:03:15.681 -04:00 [DBG] Validation of authorization code token request success
2020-09-14 09:03:15.683 -04:00 [INF] Token request validation success, {"ClientId":"devkit-clients-spa.pkce","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"Mflw49e4vlaln08Okmi8mkqbDkAMlnJHTXPRQQBWP7w","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"devkit-clients-spa.pkce","code":"Mflw49e4vlaln08Okmi8mkqbDkAMlnJHTXPRQQBWP7w","redirect_uri":"https://localhost:4200/auth-callback","code_verifier":"dd840a0d3f0747cba53c2646d7b3ec5ea80436a62c9742d8a7de75f9b9ce09d34fe8638f089c4d0aa73a61387b5fcb20","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-09-14 09:03:15.812 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:03:15.812 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:03:15.825 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-09-14 09:03:15.840 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-14 09:03:15.847 -04:00 [DBG] Getting claims for access token for client: devkit-clients-spa.pkce
2020-09-14 09:03:15.847 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-14 09:03:16.052 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:03:16.052 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:03:16.066 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-09-14 09:03:16.082 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-14 09:03:16.085 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: devkit-clients-spa.pkce
2020-09-14 09:03:16.085 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-14 09:03:16.087 -04:00 [INF] {"ClientId":"devkit-clients-spa.pkce","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****JWog","$type":"Token"},{"TokenType":"access_token","TokenValue":"****VWqA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800001be-000a-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-14T13:03:16.0000000Z","ProcessId":18716,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-14 09:03:16.088 -04:00 [DBG] Token request success.
2020-09-14 09:03:16.096 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-14 09:03:16.108 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-14 09:03:16.109 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-14 09:03:16.110 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-14 09:03:16.121 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-14 09:03:16.121 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-14 09:03:16.122 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-14 09:03:16.122 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-14 09:03:16.122 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-14 09:03:16.124 -04:00 [DBG] Start userinfo request
2020-09-14 09:03:16.125 -04:00 [DBG] Bearer token found in header
2020-09-14 09:03:16.269 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:03:16.269 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:03:16.410 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:03:16.410 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:03:16.423 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-14 09:03:16.423 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1600088595,"exp":1600092195,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"devkit-clients-spa.pkce","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1600088593,"idp":"local","role":"STSAdmRole","scope":["openid","profile","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-14 09:03:16.426 -04:00 [DBG] Creating userinfo response
2020-09-14 09:03:16.428 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-09-14 09:03:16.428 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-09-14 09:03:16.448 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-09-14 09:03:16.449 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile
2020-09-14 09:03:16.450 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-09-14 09:03:16.462 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-09-14 09:03:16.508 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username
2020-09-14 09:03:16.508 -04:00 [DBG] End userinfo request
2020-09-14 09:03:16.515 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-14 09:03:16.515 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-14 09:03:16.515 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-14 09:03:16.516 -04:00 [DBG] Rendering check session result
2020-09-14 09:09:32.213 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-14 09:09:32.399 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-14 09:09:32.399 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-14 09:09:32.400 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-14 09:09:32.400 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-14 09:09:32.400 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-14 09:09:32.400 -04:00 [DBG] Start discovery request
2020-09-14 09:09:32.439 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-14 09:09:32.442 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-14 09:09:32.453 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-14 09:09:32.454 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-14 09:09:32.454 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-14 09:09:32.454 -04:00 [DBG] Start authorize request
2020-09-14 09:09:32.454 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-14 09:09:32.454 -04:00 [DBG] Start authorize request protocol validation
2020-09-14 09:09:32.526 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-14 09:09:32.526 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-14 09:09:32.526 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-14 09:09:32.526 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-14 09:09:32.526 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-14 09:09:32.526 -04:00 [DBG] Start discovery request
2020-09-14 09:09:32.555 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-14 09:09:32.561 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-14 09:09:32.562 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-14 09:09:32.562 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-14 09:09:32.562 -04:00 [DBG] Rendering check session result
2020-09-14 09:09:32.711 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:09:32.711 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:09:32.712 -04:00 [DBG] Checking for PKCE parameters
2020-09-14 09:09:32.738 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-09-14 09:09:32.749 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-14 09:09:32.761 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-09-14 09:09:32.778 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-14 09:09:32.778 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-14 09:09:32.778 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"devkit-clients-spa.pkce","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile app.api.employeeprofile.read","State":"2cf8496bd9bf441483db47eb7a809d5e","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"BVsOygq9G6HWbdZzKNA42Q","Raw":{"client_id":"devkit-clients-spa.pkce","redirect_uri":"https://localhost:4200/auth-callback","response_type":"code","scope":"openid profile app.api.employeeprofile.read","state":"2cf8496bd9bf441483db47eb7a809d5e","code_challenge":"f8GSgQe51kIQFhFGXqRfYsKIvfxqUgjvj6oNdIRkyz4","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-09-14 09:09:32.805 -04:00 [DBG] do465Pe2aM3hJskGU053bpo0n4R5j9s7evyXDBu3+W0= found in database: true
2020-09-14 09:09:32.805 -04:00 [DBG] Consent found in consent store is same as current request, consent is not required
2020-09-14 09:09:32.805 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-14 09:09:32.821 -04:00 [DBG] VEobkFuzYNJTJt07FFiFhW5ivaP5w1xdgR0vJGaVbWQ= not found in database
2020-09-14 09:09:32.897 -04:00 [INF] {"ClientId":"devkit-clients-spa.pkce","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****2i_4","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000014d-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-14T13:09:32.0000000Z","ProcessId":18716,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-14 09:09:32.897 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"devkit-clients-spa.pkce","RedirectUri":"https://localhost:4200/auth-callback","State":"2cf8496bd9bf441483db47eb7a809d5e","Scope":"openid profile app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-14 09:09:33.144 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-14 09:09:33.159 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-14 09:09:33.159 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-14 09:09:33.160 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-14 09:09:33.160 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-14 09:09:33.160 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-14 09:09:33.160 -04:00 [DBG] Start discovery request
2020-09-14 09:09:33.189 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-14 09:09:33.191 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-14 09:09:33.196 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-14 09:09:33.197 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-14 09:09:33.197 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-14 09:09:33.197 -04:00 [DBG] Rendering check session result
2020-09-14 09:09:33.203 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-14 09:09:33.203 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-14 09:09:33.203 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-14 09:09:33.204 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-14 09:09:33.204 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-14 09:09:33.204 -04:00 [DBG] Start discovery request
2020-09-14 09:09:33.229 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-14 09:09:33.233 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-14 09:09:33.245 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-14 09:09:33.245 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-14 09:09:33.245 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-14 09:09:33.246 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-14 09:09:33.246 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-14 09:09:33.246 -04:00 [DBG] Start token request.
2020-09-14 09:09:33.246 -04:00 [DBG] Start client validation
2020-09-14 09:09:33.246 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-14 09:09:33.246 -04:00 [DBG] Start parsing for secret in post body
2020-09-14 09:09:33.247 -04:00 [DBG] client id without secret found
2020-09-14 09:09:33.247 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-14 09:09:33.247 -04:00 [DBG] Secret id found: devkit-clients-spa.pkce
2020-09-14 09:09:33.375 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:09:33.375 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:09:33.375 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-14 09:09:33.375 -04:00 [DBG] Client validation success
2020-09-14 09:09:33.375 -04:00 [INF] {"ClientId":"devkit-clients-spa.pkce","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000034-0009-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-14T13:09:33.0000000Z","ProcessId":18716,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-14 09:09:33.375 -04:00 [DBG] Start token request validation
2020-09-14 09:09:33.375 -04:00 [DBG] Start validation of authorization code token request
2020-09-14 09:09:33.388 -04:00 [DBG] VEobkFuzYNJTJt07FFiFhW5ivaP5w1xdgR0vJGaVbWQ= found in database: true
2020-09-14 09:09:33.403 -04:00 [DBG] removing VEobkFuzYNJTJt07FFiFhW5ivaP5w1xdgR0vJGaVbWQ= persisted grant from database
2020-09-14 09:09:33.450 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-14 09:09:33.465 -04:00 [DBG] Validation of authorization code token request success
2020-09-14 09:09:33.465 -04:00 [INF] Token request validation success, {"ClientId":"devkit-clients-spa.pkce","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"vszAKUJ7jCYWkmvH5pljmymJ3CIfFQFgqKle4UM2i_4","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"devkit-clients-spa.pkce","code":"vszAKUJ7jCYWkmvH5pljmymJ3CIfFQFgqKle4UM2i_4","redirect_uri":"https://localhost:4200/auth-callback","code_verifier":"1fd8227a449c40b08c47d3607864687fe306e6dc6a4a45db90c6874dc62bcc917822565e078d465d8244a44b18004807","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-09-14 09:09:33.618 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:09:33.619 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:09:33.634 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-09-14 09:09:33.649 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-14 09:09:33.649 -04:00 [DBG] Getting claims for access token for client: devkit-clients-spa.pkce
2020-09-14 09:09:33.649 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-14 09:09:33.847 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:09:33.847 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:09:33.860 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-09-14 09:09:33.875 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-14 09:09:33.875 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: devkit-clients-spa.pkce
2020-09-14 09:09:33.875 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-14 09:09:33.876 -04:00 [INF] {"ClientId":"devkit-clients-spa.pkce","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****aDmg","$type":"Token"},{"TokenType":"access_token","TokenValue":"****ZGBw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000034-0009-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-14T13:09:33.0000000Z","ProcessId":18716,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-14 09:09:33.877 -04:00 [DBG] Token request success.
2020-09-14 09:09:33.882 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-14 09:09:33.896 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-14 09:09:33.896 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-14 09:09:33.899 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-14 09:09:33.911 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-14 09:09:33.911 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-14 09:09:33.911 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-14 09:09:33.912 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-14 09:09:33.912 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-14 09:09:33.912 -04:00 [DBG] Start userinfo request
2020-09-14 09:09:33.912 -04:00 [DBG] Bearer token found in header
2020-09-14 09:09:34.035 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:09:34.035 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:09:34.160 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:09:34.160 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:09:34.175 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-14 09:09:34.176 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1600088973,"exp":1600092573,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"devkit-clients-spa.pkce","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1600088593,"idp":"local","role":"STSAdmRole","scope":["openid","profile","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-14 09:09:34.176 -04:00 [DBG] Creating userinfo response
2020-09-14 09:09:34.176 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-09-14 09:09:34.176 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-09-14 09:09:34.189 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-09-14 09:09:34.189 -04:00 [DBG] Requested claim types: sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile
2020-09-14 09:09:34.189 -04:00 [DBG] Scopes in access token: openid profile app.api.employeeprofile.read
2020-09-14 09:09:34.205 -04:00 [DBG] Found ["openid","profile"] identity scopes in database
2020-09-14 09:09:34.262 -04:00 [INF] Profile service returned the following claim types: sub name preferred_username
2020-09-14 09:09:34.262 -04:00 [DBG] End userinfo request
2020-09-14 09:10:23.496 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-14 09:10:23.533 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-14 09:10:23.533 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-14 09:10:23.534 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-14 09:10:23.534 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-14 09:10:23.534 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-14 09:10:23.534 -04:00 [DBG] Start discovery request
2020-09-14 09:10:23.566 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-14 09:10:23.570 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-14 09:10:23.587 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-14 09:10:23.587 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-14 09:10:23.587 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-14 09:10:23.587 -04:00 [DBG] Start authorize request
2020-09-14 09:10:23.588 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-14 09:10:23.588 -04:00 [DBG] Start authorize request protocol validation
2020-09-14 09:10:23.597 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-14 09:10:23.597 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-14 09:10:23.597 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-14 09:10:23.597 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-14 09:10:23.597 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-14 09:10:23.597 -04:00 [DBG] Start discovery request
2020-09-14 09:10:23.628 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-14 09:10:23.634 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-14 09:10:23.635 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-14 09:10:23.635 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-14 09:10:23.635 -04:00 [DBG] Rendering check session result
2020-09-14 09:10:23.785 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:10:23.785 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:10:23.785 -04:00 [DBG] Checking for PKCE parameters
2020-09-14 09:10:23.803 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-14 09:10:23.817 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-14 09:10:23.833 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-14 09:10:23.845 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-14 09:10:23.845 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-14 09:10:23.845 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"devkit-clients-spa.pkce","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"afdceaed70cd48bc87d074e6e04cca24","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"BVsOygq9G6HWbdZzKNA42Q","Raw":{"client_id":"devkit-clients-spa.pkce","redirect_uri":"https://localhost:4200/auth-callback","response_type":"code","scope":"openid profile email roles app.api.employeeprofile.read","state":"afdceaed70cd48bc87d074e6e04cca24","code_challenge":"autsJB5W-F1Pp3BFvcSl5j0JNJo4ASrbg9NY6mBmHhk","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-09-14 09:10:23.872 -04:00 [DBG] do465Pe2aM3hJskGU053bpo0n4R5j9s7evyXDBu3+W0= found in database: true
2020-09-14 09:10:23.872 -04:00 [DBG] Consent found in consent store is same as current request, consent is not required
2020-09-14 09:10:23.872 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-14 09:10:23.887 -04:00 [DBG] qMWGYVAA1vNHyoerHEXcui5/zqOcbP4K92UWPIncQSk= not found in database
2020-09-14 09:10:23.936 -04:00 [INF] {"ClientId":"devkit-clients-spa.pkce","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****eHCE","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000151-0002-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-14T13:10:23.0000000Z","ProcessId":18716,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-14 09:10:23.936 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"devkit-clients-spa.pkce","RedirectUri":"https://localhost:4200/auth-callback","State":"afdceaed70cd48bc87d074e6e04cca24","Scope":"openid profile email roles app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-14 09:10:24.128 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-14 09:10:24.144 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-14 09:10:24.144 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-14 09:10:24.145 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-14 09:10:24.145 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-14 09:10:24.146 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-14 09:10:24.146 -04:00 [DBG] Start discovery request
2020-09-14 09:10:24.177 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-14 09:10:24.181 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-14 09:10:24.188 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-14 09:10:24.188 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-14 09:10:24.188 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-14 09:10:24.188 -04:00 [DBG] Rendering check session result
2020-09-14 09:10:24.192 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-14 09:10:24.192 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-14 09:10:24.192 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-14 09:10:24.193 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-14 09:10:24.193 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-14 09:10:24.193 -04:00 [DBG] Start discovery request
2020-09-14 09:10:24.219 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-14 09:10:24.223 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-14 09:10:24.236 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-14 09:10:24.237 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-14 09:10:24.237 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-14 09:10:24.243 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-14 09:10:24.243 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-14 09:10:24.243 -04:00 [DBG] Start token request.
2020-09-14 09:10:24.243 -04:00 [DBG] Start client validation
2020-09-14 09:10:24.243 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-14 09:10:24.244 -04:00 [DBG] Start parsing for secret in post body
2020-09-14 09:10:24.244 -04:00 [DBG] client id without secret found
2020-09-14 09:10:24.244 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-14 09:10:24.244 -04:00 [DBG] Secret id found: devkit-clients-spa.pkce
2020-09-14 09:10:24.360 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:10:24.360 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:10:24.360 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-14 09:10:24.360 -04:00 [DBG] Client validation success
2020-09-14 09:10:24.360 -04:00 [INF] {"ClientId":"devkit-clients-spa.pkce","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"800000c5-0005-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-14T13:10:24.0000000Z","ProcessId":18716,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-14 09:10:24.360 -04:00 [DBG] Start token request validation
2020-09-14 09:10:24.360 -04:00 [DBG] Start validation of authorization code token request
2020-09-14 09:10:24.374 -04:00 [DBG] qMWGYVAA1vNHyoerHEXcui5/zqOcbP4K92UWPIncQSk= found in database: true
2020-09-14 09:10:24.388 -04:00 [DBG] removing qMWGYVAA1vNHyoerHEXcui5/zqOcbP4K92UWPIncQSk= persisted grant from database
2020-09-14 09:10:24.434 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-14 09:10:24.446 -04:00 [DBG] Validation of authorization code token request success
2020-09-14 09:10:24.446 -04:00 [INF] Token request validation success, {"ClientId":"devkit-clients-spa.pkce","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"DxTdG8LXB2YpZFsK-LEGG-aBrFshA9dbVbmxGvMeHCE","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"devkit-clients-spa.pkce","code":"DxTdG8LXB2YpZFsK-LEGG-aBrFshA9dbVbmxGvMeHCE","redirect_uri":"https://localhost:4200/auth-callback","code_verifier":"637b2f82cbbc4f88b757e865e8b048ff4f67a364c02a4a6380d026375862939f9436d6e561ed4532882157fad4bbe02b","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-09-14 09:10:24.576 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:10:24.576 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:10:24.589 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-14 09:10:24.608 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-14 09:10:24.608 -04:00 [DBG] Getting claims for access token for client: devkit-clients-spa.pkce
2020-09-14 09:10:24.608 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-14 09:10:24.779 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:10:24.779 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:10:24.794 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-14 09:10:24.807 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-14 09:10:24.807 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: devkit-clients-spa.pkce
2020-09-14 09:10:24.807 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-14 09:10:24.808 -04:00 [INF] {"ClientId":"devkit-clients-spa.pkce","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****nqbQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****P4CQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"800000c5-0005-ff00-b63f-84710c7967bb","TimeStamp":"2020-09-14T13:10:24.0000000Z","ProcessId":18716,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-14 09:10:24.809 -04:00 [DBG] Token request success.
2020-09-14 09:10:24.814 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-14 09:10:24.830 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-14 09:10:24.830 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-14 09:10:24.832 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-14 09:10:24.847 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-14 09:10:24.847 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-14 09:10:24.847 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-14 09:10:24.849 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-14 09:10:24.849 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-14 09:10:24.849 -04:00 [DBG] Start userinfo request
2020-09-14 09:10:24.849 -04:00 [DBG] Bearer token found in header
2020-09-14 09:10:24.985 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:10:24.985 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:10:25.122 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:10:25.122 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:10:25.137 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-14 09:10:25.137 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1600089024,"exp":1600092624,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"devkit-clients-spa.pkce","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1600088593,"idp":"local","role":"STSAdmRole","scope":["roles","openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-14 09:10:25.137 -04:00 [DBG] Creating userinfo response
2020-09-14 09:10:25.137 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-14 09:10:25.137 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-14 09:10:25.152 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-14 09:10:25.152 -04:00 [DBG] Requested claim types: role sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-14 09:10:25.152 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-14 09:10:25.165 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-14 09:10:25.209 -04:00 [INF] Profile service returned the following claim types: sub name role preferred_username email email_verified
2020-09-14 09:10:25.209 -04:00 [DBG] End userinfo request
2020-09-14 09:11:27.228 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-14 09:11:27.256 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-14 09:11:27.256 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-14 09:11:27.258 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-14 09:11:27.258 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-14 09:11:27.258 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-14 09:11:27.258 -04:00 [DBG] Start discovery request
2020-09-14 09:11:27.283 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-14 09:11:27.293 -04:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-09-14 09:11:27.293 -04:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-09-14 09:11:27.293 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-09-14 09:11:27.293 -04:00 [DBG] Start authorize request
2020-09-14 09:11:27.294 -04:00 [DBG] User in authorize request: 34903727-3397-4344-9875-47f5e36788d3
2020-09-14 09:11:27.294 -04:00 [DBG] Start authorize request protocol validation
2020-09-14 09:11:27.423 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:11:27.423 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:11:27.423 -04:00 [DBG] Checking for PKCE parameters
2020-09-14 09:11:27.463 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-14 09:11:27.478 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-14 09:11:27.489 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-14 09:11:27.502 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-14 09:11:27.502 -04:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-09-14 09:11:27.502 -04:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"devkit-clients-spa.pkce","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200/auth-callback","AllowedRedirectUris":["https://localhost:4200","https://localhost:4200/auth-callback"],"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ResponseType":"code","ResponseMode":"query","GrantType":"authorization_code","RequestedScopes":"openid profile email roles app.api.employeeprofile.read","State":"8c615a2376e9405b8a51d4585dd7c670","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"BVsOygq9G6HWbdZzKNA42Q","Raw":{"client_id":"devkit-clients-spa.pkce","redirect_uri":"https://localhost:4200/auth-callback","response_type":"code","scope":"openid profile email roles app.api.employeeprofile.read","state":"8c615a2376e9405b8a51d4585dd7c670","code_challenge":"DhJb4DMVLQAhq9WPvzZiqjcvjy6r-txz4ZCnMHLnDPU","code_challenge_method":"S256","response_mode":"query"},"$type":"AuthorizeRequestValidationLog"}
2020-09-14 09:11:27.525 -04:00 [DBG] do465Pe2aM3hJskGU053bpo0n4R5j9s7evyXDBu3+W0= found in database: true
2020-09-14 09:11:27.526 -04:00 [DBG] Consent found in consent store is same as current request, consent is not required
2020-09-14 09:11:27.526 -04:00 [DBG] Creating Authorization Code Flow response.
2020-09-14 09:11:27.536 -04:00 [DBG] 240FhrnxQPmZ8R/7b44FNYXbJ0NjFTw2Y6/fwH6oSRw= not found in database
2020-09-14 09:11:27.588 -04:00 [INF] {"ClientId":"devkit-clients-spa.pkce","ClientName":"Sample SPA.PKCE","RedirectUri":"https://localhost:4200/auth-callback","Endpoint":"Authorize","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"code","TokenValue":"****cHNA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000015a-0000-fd00-b63f-84710c7967bb","TimeStamp":"2020-09-14T13:11:27.0000000Z","ProcessId":18716,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-14 09:11:27.589 -04:00 [DBG] Authorize endpoint response
{"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","ClientId":"devkit-clients-spa.pkce","RedirectUri":"https://localhost:4200/auth-callback","State":"8c615a2376e9405b8a51d4585dd7c670","Scope":"openid profile email roles app.api.employeeprofile.read","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-09-14 09:11:27.850 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://localhost:4200
2020-09-14 09:11:27.866 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-14 09:11:27.866 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-14 09:11:27.866 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-09-14 09:11:27.867 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-09-14 09:11:27.867 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-09-14 09:11:27.867 -04:00 [DBG] Start discovery request
2020-09-14 09:11:27.899 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write"] as all scopes in database
2020-09-14 09:11:27.903 -04:00 [DBG] CORS request made for path: /connect/token from origin: https://localhost:4200
2020-09-14 09:11:27.916 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-14 09:11:27.916 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-14 09:11:27.916 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-09-14 09:11:27.917 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-09-14 09:11:27.917 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-09-14 09:11:27.917 -04:00 [DBG] Start token request.
2020-09-14 09:11:27.917 -04:00 [DBG] Start client validation
2020-09-14 09:11:27.917 -04:00 [DBG] Start parsing Basic Authentication secret
2020-09-14 09:11:27.917 -04:00 [DBG] Start parsing for secret in post body
2020-09-14 09:11:27.917 -04:00 [DBG] client id without secret found
2020-09-14 09:11:27.917 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-09-14 09:11:27.917 -04:00 [DBG] Secret id found: devkit-clients-spa.pkce
2020-09-14 09:11:28.029 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:11:28.029 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:11:28.029 -04:00 [DBG] Public Client - skipping secret validation success
2020-09-14 09:11:28.029 -04:00 [DBG] Client validation success
2020-09-14 09:11:28.030 -04:00 [INF] {"ClientId":"devkit-clients-spa.pkce","AuthenticationMethod":"NoSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000008-0009-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-14T13:11:28.0000000Z","ProcessId":18716,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-09-14 09:11:28.030 -04:00 [DBG] Start token request validation
2020-09-14 09:11:28.030 -04:00 [DBG] Start validation of authorization code token request
2020-09-14 09:11:28.042 -04:00 [DBG] 240FhrnxQPmZ8R/7b44FNYXbJ0NjFTw2Y6/fwH6oSRw= found in database: true
2020-09-14 09:11:28.056 -04:00 [DBG] removing 240FhrnxQPmZ8R/7b44FNYXbJ0NjFTw2Y6/fwH6oSRw= persisted grant from database
2020-09-14 09:11:28.101 -04:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-09-14 09:11:28.115 -04:00 [DBG] Validation of authorization code token request success
2020-09-14 09:11:28.115 -04:00 [INF] Token request validation success, {"ClientId":"devkit-clients-spa.pkce","ClientName":"Sample SPA.PKCE","GrantType":"authorization_code","Scopes":null,"AuthorizationCode":"qOPIeHZT4GwXz-BJj0xG6WO58twmxbxmoM0HCo-cHNA","RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"devkit-clients-spa.pkce","code":"qOPIeHZT4GwXz-BJj0xG6WO58twmxbxmoM0HCo-cHNA","redirect_uri":"https://localhost:4200/auth-callback","code_verifier":"1baae83848fe46fa85e7643624f89cd39cc9b564b6864b19802e55c3defcdd0e8da5a39666f64ccdbb102a9d2992386b","grant_type":"authorization_code"},"$type":"TokenRequestValidationLog"}
2020-09-14 09:11:28.231 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:11:28.231 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:11:28.252 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-14 09:11:28.269 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-14 09:11:28.269 -04:00 [DBG] Getting claims for access token for client: devkit-clients-spa.pkce
2020-09-14 09:11:28.269 -04:00 [DBG] Getting claims for access token for subject: 34903727-3397-4344-9875-47f5e36788d3
2020-09-14 09:11:28.451 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:11:28.451 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:11:28.479 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-14 09:11:28.493 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-09-14 09:11:28.494 -04:00 [DBG] Getting claims for identity token for subject: 34903727-3397-4344-9875-47f5e36788d3 and client: devkit-clients-spa.pkce
2020-09-14 09:11:28.494 -04:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-09-14 09:11:28.495 -04:00 [INF] {"ClientId":"devkit-clients-spa.pkce","ClientName":"Sample SPA.PKCE","RedirectUri":null,"Endpoint":"Token","SubjectId":"34903727-3397-4344-9875-47f5e36788d3","Scopes":"openid profile email roles app.api.employeeprofile.read","GrantType":"authorization_code","Tokens":[{"TokenType":"id_token","TokenValue":"****IuAQ","$type":"Token"},{"TokenType":"access_token","TokenValue":"****-WIg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000008-0009-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-14T13:11:28.0000000Z","ProcessId":18716,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-09-14 09:11:28.495 -04:00 [DBG] Token request success.
2020-09-14 09:11:28.501 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-14 09:11:28.511 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-14 09:11:28.511 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-14 09:11:28.513 -04:00 [DBG] CORS request made for path: /connect/userinfo from origin: https://localhost:4200
2020-09-14 09:11:28.525 -04:00 [DBG] Origin https://localhost:4200 is allowed: true
2020-09-14 09:11:28.525 -04:00 [DBG] CorsPolicyService allowed origin: https://localhost:4200
2020-09-14 09:11:28.526 -04:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-09-14 09:11:28.526 -04:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-09-14 09:11:28.526 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-09-14 09:11:28.526 -04:00 [DBG] Start userinfo request
2020-09-14 09:11:28.526 -04:00 [DBG] Bearer token found in header
2020-09-14 09:11:28.650 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:11:28.650 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:11:28.882 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-09-14 09:11:28.882 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-09-14 09:11:29.010 -04:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-09-14 09:11:29.010 -04:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1600089088,"exp":1600092688,"iss":"https://localhost:44354","aud":"app.api.employeeprofile","client_id":"devkit-clients-spa.pkce","sub":"34903727-3397-4344-9875-47f5e36788d3","auth_time":1600088593,"idp":"local","role":"STSAdmRole","scope":["roles","openid","profile","email","app.api.employeeprofile.read"],"amr":"pwd"},"$type":"TokenValidationLog"}
2020-09-14 09:11:29.010 -04:00 [DBG] Creating userinfo response
2020-09-14 09:11:29.010 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-14 09:11:29.011 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-14 09:11:29.023 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-14 09:11:29.023 -04:00 [DBG] Requested claim types: role sub updated_at locale zoneinfo birthdate gender website picture preferred_username nickname middle_name given_name family_name name profile email email_verified
2020-09-14 09:11:29.023 -04:00 [DBG] Scopes in access token: roles openid profile email app.api.employeeprofile.read
2020-09-14 09:11:29.035 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-09-14 09:11:29.298 -04:00 [INF] Profile service returned the following claim types: sub name role preferred_username email email_verified
2020-09-14 09:11:29.298 -04:00 [DBG] End userinfo request
2020-09-14 09:11:29.306 -04:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2020-09-14 09:11:29.306 -04:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2020-09-14 09:11:29.306 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2020-09-14 09:11:29.306 -04:00 [DBG] Rendering check session result
2020-09-14 09:17:31.504 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-14 10:00:48.794 -04:00 [INF] Removing 12 grants
2020-09-14 10:00:48.918 -04:00 [INF] Removing 0 device flow codes
2020-09-14 11:00:49.164 -04:00 [INF] Removing 0 grants
2020-09-14 11:00:49.178 -04:00 [INF] Removing 0 device flow codes
2020-09-14 12:00:49.425 -04:00 [INF] Removing 0 grants
2020-09-14 12:00:49.438 -04:00 [INF] Removing 0 device flow codes
2020-09-14 13:00:49.821 -04:00 [INF] Removing 0 grants
2020-09-14 13:00:49.834 -04:00 [INF] Removing 0 device flow codes
2020-09-14 14:00:50.152 -04:00 [INF] Removing 0 grants
2020-09-14 14:00:50.165 -04:00 [INF] Removing 0 device flow codes
2020-09-14 15:00:50.427 -04:00 [INF] Removing 0 grants
2020-09-14 15:00:50.437 -04:00 [INF] Removing 0 device flow codes
2020-09-14 16:06:44.681 -04:00 [INF] Removing 0 grants
2020-09-14 16:06:44.698 -04:00 [INF] Removing 0 device flow codes
2020-09-14 17:06:44.960 -04:00 [INF] Removing 0 grants
2020-09-14 17:06:44.972 -04:00 [INF] Removing 0 device flow codes
2020-09-14 18:06:45.257 -04:00 [INF] Removing 0 grants
2020-09-14 18:06:45.267 -04:00 [INF] Removing 0 device flow codes
2020-09-15 06:47:14.002 -04:00 [INF] Starting host...
2020-09-15 06:47:15.559 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-15 06:47:15.713 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-15 06:47:15.713 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-15 06:47:15.713 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-15 06:47:15.713 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-15 06:47:15.713 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-15 06:47:15.713 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-15 06:47:15.989 -04:00 [DBG] Login Url: /Account/Login
2020-09-15 06:47:15.991 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-15 06:47:15.991 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-15 06:47:15.991 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-15 06:47:15.991 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-15 06:47:15.991 -04:00 [DBG] Error Url: /home/error
2020-09-15 06:47:15.991 -04:00 [DBG] Error Id Parameter: errorId
2020-09-15 06:47:16.020 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-15 06:47:16.025 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-15 06:47:18.386 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-15 06:47:18.387 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-15 06:47:18.395 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-09-15 06:47:18.403 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-15 06:47:18.404 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-15 06:47:20.285 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-15 06:47:20.285 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-15 06:47:21.124 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-09-15 06:47:21.403 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.us but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-15 06:47:21.509 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-09-15 06:47:21.515 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-15 06:47:21.515 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-15 06:47:22.632 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"09uDmUPkefGus3r6n-IZdHey7XUhg4m7_wKHuZcn6oE","SubjectId":"20acc5a4-a531-4492-bda2-ab56a53cd065","DisplayName":"Nguyen, Fuji","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000145-0008-fc00-b63f-84710c7967bb","TimeStamp":"2020-09-15T10:47:22.0000000Z","ProcessId":31548,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-15 06:47:22.673 -04:00 [DBG] Augmenting SignInContext
2020-09-15 06:47:22.674 -04:00 [DBG] Adding amr claim with value: external
2020-09-15 06:47:22.675 -04:00 [INF] Identity.Application was not authenticated. Failure message: Unprotect ticket failed
2020-09-15 06:47:22.677 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-15 06:47:22.679 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-15 06:47:22.743 -04:00 [DBG] 1 persisted grants found for 20acc5a4-a531-4492-bda2-ab56a53cd065
2020-09-15 06:47:30.013 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-15 06:47:30.029 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-09-15 06:47:30.030 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-15 06:47:30.030 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-09-15 06:47:30.030 -04:00 [INF] {"SubjectId":"20acc5a4-a531-4492-bda2-ab56a53cd065","DisplayName":"Nguyen, Fuji","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"800000c0-0004-f900-b63f-84710c7967bb","TimeStamp":"2020-09-15T10:47:30.0000000Z","ProcessId":31548,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-09-15 06:48:52.216 -04:00 [INF] Starting host...
2020-09-15 06:48:53.084 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-15 06:48:53.162 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-15 06:48:53.162 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-15 06:48:53.162 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-15 06:48:53.162 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-15 06:48:53.163 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-15 06:48:53.163 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-15 06:48:53.319 -04:00 [DBG] Login Url: /Account/Login
2020-09-15 06:48:53.320 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-15 06:48:53.320 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-15 06:48:53.320 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-15 06:48:53.320 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-15 06:48:53.320 -04:00 [DBG] Error Url: /home/error
2020-09-15 06:48:53.321 -04:00 [DBG] Error Id Parameter: errorId
2020-09-15 06:48:55.902 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-09-15 06:49:04.768 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-09-15 06:49:17.229 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.com but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-15 06:49:17.318 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-09-15 06:50:12.926 -04:00 [WRN] User 8f4952c9-a891-49ac-95c5-6a8823b1038a validation failed: InvalidUserName.
2020-09-15 06:50:12.975 -04:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: User name '' is invalid, can only contain letters or digits.
   at IdentityServer.ExternalController.AutoProvisionUserAsync(String provider, String providerUserId, IEnumerable`1 claims) in C:\apps\devkit\TokenService\STS\src\IdentityServer\Quickstart\Account\ExternalController.cs:line 307
   at IdentityServer.ExternalController.Callback() in C:\apps\devkit\TokenService\STS\src\IdentityServer\Quickstart\Account\ExternalController.cs:line 105
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events)
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-09-15 06:53:28.959 -04:00 [INF] Starting host...
2020-09-15 06:53:29.870 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-15 06:53:29.949 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-15 06:53:29.949 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-15 06:53:29.949 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-15 06:53:29.949 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-15 06:53:29.949 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-15 06:53:29.949 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-15 06:53:30.108 -04:00 [DBG] Login Url: /Account/Login
2020-09-15 06:53:30.109 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-15 06:53:30.109 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-15 06:53:30.109 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-15 06:53:30.109 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-15 06:53:30.109 -04:00 [DBG] Error Url: /home/error
2020-09-15 06:53:30.109 -04:00 [DBG] Error Id Parameter: errorId
2020-09-15 06:53:32.602 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-09-15 06:53:34.499 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-09-15 06:53:36.996 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.com but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-15 06:53:37.087 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-09-15 06:55:54.504 -04:00 [INF] Starting host...
2020-09-15 06:55:55.390 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-09-15 06:55:55.473 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-09-15 06:55:55.473 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-09-15 06:55:55.473 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-09-15 06:55:55.473 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-09-15 06:55:55.473 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-09-15 06:55:55.473 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-09-15 06:55:55.626 -04:00 [DBG] Login Url: /Account/Login
2020-09-15 06:55:55.627 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-09-15 06:55:55.627 -04:00 [DBG] Logout Url: /Account/Logout
2020-09-15 06:55:55.627 -04:00 [DBG] ConsentUrl Url: /consent
2020-09-15 06:55:55.627 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-09-15 06:55:55.627 -04:00 [DBG] Error Url: /home/error
2020-09-15 06:55:55.627 -04:00 [DBG] Error Id Parameter: errorId
2020-09-15 06:55:57.721 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-09-15 06:56:08.894 -04:00 [INF] AuthenticationScheme: azuread was challenged.
2020-09-15 06:56:11.665 -04:00 [DBG] CORS request made for path: /signin-oidc from origin: https://login.microsoftonline.com but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-09-15 06:56:11.752 -04:00 [INF] AuthenticationScheme: Identity.External signed in.
2020-09-15 06:56:58.667 -04:00 [INF] {"Username":null,"Provider":"azuread","ProviderUserId":"XTHUABaHXHKiBI8Z59aHLqOKSfvbh35TrUteRXQDNUQ","SubjectId":"8f4952c9-a891-49ac-95c5-6a8823b1038a","DisplayName":"Fuji Nguyen","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"800000fc-0002-fb00-b63f-84710c7967bb","TimeStamp":"2020-09-15T10:56:58.0000000Z","ProcessId":13980,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-09-15 06:56:58.681 -04:00 [DBG] Augmenting SignInContext
2020-09-15 06:56:58.682 -04:00 [DBG] Adding amr claim with value: external
2020-09-15 06:56:58.685 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-09-15 06:56:58.686 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-09-15 06:56:58.748 -04:00 [DBG] 0 persisted grants found for 8f4952c9-a891-49ac-95c5-6a8823b1038a
2020-10-14 23:44:42.577 -04:00 [INF] Starting host...
2020-10-14 23:44:44.438 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-10-14 23:44:44.562 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-14 23:44:44.562 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-14 23:44:44.563 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-14 23:44:44.563 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-14 23:44:44.563 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-14 23:44:44.563 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-14 23:44:44.815 -04:00 [DBG] Login Url: /Account/Login
2020-10-14 23:44:44.816 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-14 23:44:44.816 -04:00 [DBG] Logout Url: /Account/Logout
2020-10-14 23:44:44.816 -04:00 [DBG] ConsentUrl Url: /consent
2020-10-14 23:44:44.816 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-10-14 23:44:44.816 -04:00 [DBG] Error Url: /home/error
2020-10-14 23:44:44.816 -04:00 [DBG] Error Id Parameter: errorId
2020-10-25 20:28:22.299 -04:00 [INF] Starting host...
2020-10-25 20:28:24.070 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-10-25 20:28:24.189 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-25 20:28:24.189 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-25 20:28:24.189 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-25 20:28:24.189 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-25 20:28:24.189 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-25 20:28:24.189 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-25 20:28:24.396 -04:00 [DBG] Login Url: /Account/Login
2020-10-25 20:28:24.397 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-25 20:28:24.397 -04:00 [DBG] Logout Url: /Account/Logout
2020-10-25 20:28:24.397 -04:00 [DBG] ConsentUrl Url: /consent
2020-10-25 20:28:24.397 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-10-25 20:28:24.397 -04:00 [DBG] Error Url: /home/error
2020-10-25 20:28:24.397 -04:00 [DBG] Error Id Parameter: errorId
2020-10-25 20:32:49.594 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-25 20:32:49.607 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-25 20:32:49.607 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-25 20:32:49.610 -04:00 [DBG] Start token request.
2020-10-25 20:32:49.612 -04:00 [DBG] Start client validation
2020-10-25 20:32:49.614 -04:00 [DBG] Start parsing Basic Authentication secret
2020-10-25 20:32:49.615 -04:00 [DBG] Start parsing for secret in post body
2020-10-25 20:32:49.620 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-10-25 20:32:49.620 -04:00 [DBG] Secret id found: 4X=nNv?Sgu$T
2020-10-25 20:32:50.707 -04:00 [INF] {"ClientId":"4X=nNv?Sgu$T","Category":"Authentication","Name":"Client Authentication Failure","EventType":"Failure","Id":1011,"Message":"Unknown client","ActivityId":"80000002-0007-fe00-b63f-84710c7967bb","TimeStamp":"2020-10-26T00:32:50.0000000Z","ProcessId":14660,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationFailureEvent"}
2020-10-25 20:32:50.711 -04:00 [ERR] No client with id '4X=nNv?Sgu$T' found. aborting
2020-10-25 20:35:15.435 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-25 20:35:15.444 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-25 20:35:15.444 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-25 20:35:15.444 -04:00 [DBG] Start token request.
2020-10-25 20:35:15.444 -04:00 [DBG] Start client validation
2020-10-25 20:35:15.444 -04:00 [DBG] Start parsing Basic Authentication secret
2020-10-25 20:35:15.444 -04:00 [DBG] Start parsing for secret in post body
2020-10-25 20:35:15.444 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-10-25 20:35:15.444 -04:00 [DBG] Secret id found: client
2020-10-25 20:35:15.487 -04:00 [INF] {"ClientId":"client","Category":"Authentication","Name":"Client Authentication Failure","EventType":"Failure","Id":1011,"Message":"Unknown client","ActivityId":"80000004-0007-fe00-b63f-84710c7967bb","TimeStamp":"2020-10-26T00:35:15.0000000Z","ProcessId":14660,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationFailureEvent"}
2020-10-25 20:35:15.487 -04:00 [ERR] No client with id 'client' found. aborting
2020-10-25 20:36:58.531 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-25 20:36:58.547 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-25 20:36:58.547 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-25 20:36:58.547 -04:00 [DBG] Start token request.
2020-10-25 20:36:58.547 -04:00 [DBG] Start client validation
2020-10-25 20:36:58.547 -04:00 [DBG] Start parsing Basic Authentication secret
2020-10-25 20:36:58.547 -04:00 [DBG] Start parsing for secret in post body
2020-10-25 20:36:58.548 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-10-25 20:36:58.548 -04:00 [DBG] Secret id found: devkit-clients-credential.employeeprofileapi
2020-10-25 20:36:59.186 -04:00 [DBG] devkit-clients-credential.employeeprofileapi found in database: true
2020-10-25 20:36:59.190 -04:00 [DBG] client configuration validation for client devkit-clients-credential.employeeprofileapi succeeded.
2020-10-25 20:36:59.196 -04:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-10-25 20:36:59.196 -04:00 [DBG] Client validation success
2020-10-25 20:36:59.197 -04:00 [INF] {"ClientId":"devkit-clients-credential.employeeprofileapi","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000005-0007-fe00-b63f-84710c7967bb","TimeStamp":"2020-10-26T00:36:59.0000000Z","ProcessId":14660,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-25 20:36:59.199 -04:00 [DBG] Start token request validation
2020-10-25 20:36:59.201 -04:00 [DBG] Start client credentials token request validation
2020-10-25 20:36:59.287 -04:00 [DBG] Found [] identity scopes in database
2020-10-25 20:36:59.380 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-10-25 20:36:59.412 -04:00 [DBG] Found [] identity scopes in database
2020-10-25 20:36:59.435 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-10-25 20:36:59.437 -04:00 [DBG] devkit-clients-credential.employeeprofileapi credentials token request validation success
2020-10-25 20:36:59.442 -04:00 [INF] Token request validation success, {"ClientId":"devkit-clients-credential.employeeprofileapi","ClientName":"Sample Client Credential Employee Profile API","GrantType":"client_credentials","Scopes":"app.api.employeeprofile.read app.api.employeeprofile.write","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"devkit-clients-credential.employeeprofileapi","client_secret":"***REDACTED***","grant_type":"client_credentials","scope":"app.api.employeeprofile.read app.api.employeeprofile.write"},"$type":"TokenRequestValidationLog"}
2020-10-25 20:36:59.453 -04:00 [DBG] Getting claims for access token for client: devkit-clients-credential.employeeprofileapi
2020-10-25 20:36:59.499 -04:00 [INF] {"ClientId":"devkit-clients-credential.employeeprofileapi","ClientName":"Sample Client Credential Employee Profile API","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"app.api.employeeprofile.read app.api.employeeprofile.write","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****riwQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000005-0007-fe00-b63f-84710c7967bb","TimeStamp":"2020-10-26T00:36:59.0000000Z","ProcessId":14660,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-25 20:36:59.500 -04:00 [DBG] Token request success.
2020-10-25 20:42:23.872 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-25 20:42:23.874 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-25 20:42:23.874 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-25 20:42:23.875 -04:00 [DBG] Start discovery request
2020-10-25 20:42:24.227 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write","app.api.instantpos.read","app.api.instantpos.write"] as all scopes in database
2020-10-25 20:42:56.063 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-25 20:42:56.063 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-25 20:42:56.063 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-25 20:42:56.064 -04:00 [DBG] Start token request.
2020-10-25 20:42:56.064 -04:00 [DBG] Start client validation
2020-10-25 20:42:56.064 -04:00 [DBG] Start parsing Basic Authentication secret
2020-10-25 20:42:56.064 -04:00 [DBG] Start parsing for secret in post body
2020-10-25 20:42:56.064 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-10-25 20:42:56.064 -04:00 [DBG] Secret id found: devkit-clients-credential.employeeprofileapi
2020-10-25 20:42:56.195 -04:00 [DBG] devkit-clients-credential.employeeprofileapi found in database: true
2020-10-25 20:42:56.195 -04:00 [DBG] client configuration validation for client devkit-clients-credential.employeeprofileapi succeeded.
2020-10-25 20:42:56.196 -04:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-10-25 20:42:56.196 -04:00 [DBG] Client validation success
2020-10-25 20:42:56.196 -04:00 [INF] {"ClientId":"devkit-clients-credential.employeeprofileapi","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000010-0009-ff00-b63f-84710c7967bb","TimeStamp":"2020-10-26T00:42:56.0000000Z","ProcessId":14660,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-25 20:42:56.196 -04:00 [DBG] Start token request validation
2020-10-25 20:42:56.196 -04:00 [DBG] Start client credentials token request validation
2020-10-25 20:42:56.210 -04:00 [DBG] Found [] identity scopes in database
2020-10-25 20:42:56.227 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-10-25 20:42:56.239 -04:00 [DBG] Found [] identity scopes in database
2020-10-25 20:42:56.252 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-10-25 20:42:56.252 -04:00 [DBG] devkit-clients-credential.employeeprofileapi credentials token request validation success
2020-10-25 20:42:56.252 -04:00 [INF] Token request validation success, {"ClientId":"devkit-clients-credential.employeeprofileapi","ClientName":"Sample Client Credential Employee Profile API","GrantType":"client_credentials","Scopes":"app.api.employeeprofile.read app.api.employeeprofile.write","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"devkit-clients-credential.employeeprofileapi","client_secret":"***REDACTED***","grant_type":"client_credentials","scope":"app.api.employeeprofile.read app.api.employeeprofile.write"},"$type":"TokenRequestValidationLog"}
2020-10-25 20:42:56.252 -04:00 [DBG] Getting claims for access token for client: devkit-clients-credential.employeeprofileapi
2020-10-25 20:42:56.254 -04:00 [INF] {"ClientId":"devkit-clients-credential.employeeprofileapi","ClientName":"Sample Client Credential Employee Profile API","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"app.api.employeeprofile.read app.api.employeeprofile.write","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****SdnQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000010-0009-ff00-b63f-84710c7967bb","TimeStamp":"2020-10-26T00:42:56.0000000Z","ProcessId":14660,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-25 20:42:56.254 -04:00 [DBG] Token request success.
2020-10-25 20:43:51.107 -04:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-10-25 20:43:51.130 -04:00 [DBG] Origin https://jwt.io is allowed: false
2020-10-25 20:43:51.131 -04:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-10-25 20:43:51.132 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-25 20:43:51.132 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-25 20:43:51.132 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-25 20:43:51.132 -04:00 [DBG] Start discovery request
2020-10-25 20:43:51.160 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write","app.api.instantpos.read","app.api.instantpos.write"] as all scopes in database
2020-10-25 20:49:37.652 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-25 20:49:37.653 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-25 20:49:37.654 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-25 20:49:37.654 -04:00 [DBG] Start token request.
2020-10-25 20:49:37.654 -04:00 [DBG] Start client validation
2020-10-25 20:49:37.654 -04:00 [DBG] Start parsing Basic Authentication secret
2020-10-25 20:49:37.654 -04:00 [DBG] Start parsing for secret in post body
2020-10-25 20:49:37.654 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-10-25 20:49:37.654 -04:00 [DBG] Secret id found: devkit-clients-credential.employeeprofileapi
2020-10-25 20:49:37.955 -04:00 [DBG] devkit-clients-credential.employeeprofileapi found in database: true
2020-10-25 20:49:37.956 -04:00 [DBG] client configuration validation for client devkit-clients-credential.employeeprofileapi succeeded.
2020-10-25 20:49:37.956 -04:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-10-25 20:49:37.956 -04:00 [DBG] Client validation success
2020-10-25 20:49:37.956 -04:00 [INF] {"ClientId":"devkit-clients-credential.employeeprofileapi","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000005-0001-ff00-b63f-84710c7967bb","TimeStamp":"2020-10-26T00:49:37.0000000Z","ProcessId":14660,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-25 20:49:37.956 -04:00 [DBG] Start token request validation
2020-10-25 20:49:37.956 -04:00 [DBG] Start client credentials token request validation
2020-10-25 20:49:37.976 -04:00 [DBG] Found [] identity scopes in database
2020-10-25 20:49:37.992 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-10-25 20:49:38.004 -04:00 [DBG] Found [] identity scopes in database
2020-10-25 20:49:38.025 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-10-25 20:49:38.025 -04:00 [DBG] devkit-clients-credential.employeeprofileapi credentials token request validation success
2020-10-25 20:49:38.025 -04:00 [INF] Token request validation success, {"ClientId":"devkit-clients-credential.employeeprofileapi","ClientName":"Sample Client Credential Employee Profile API","GrantType":"client_credentials","Scopes":"app.api.employeeprofile.read app.api.employeeprofile.write","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"devkit-clients-credential.employeeprofileapi","client_secret":"***REDACTED***","grant_type":"client_credentials","scope":"app.api.employeeprofile.read app.api.employeeprofile.write"},"$type":"TokenRequestValidationLog"}
2020-10-25 20:49:38.025 -04:00 [DBG] Getting claims for access token for client: devkit-clients-credential.employeeprofileapi
2020-10-25 20:49:38.027 -04:00 [INF] {"ClientId":"devkit-clients-credential.employeeprofileapi","ClientName":"Sample Client Credential Employee Profile API","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"app.api.employeeprofile.read app.api.employeeprofile.write","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****eTUA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000005-0001-ff00-b63f-84710c7967bb","TimeStamp":"2020-10-26T00:49:38.0000000Z","ProcessId":14660,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-25 20:49:38.027 -04:00 [DBG] Token request success.
2020-10-25 20:57:45.229 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-10-25 20:57:45.232 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-10-25 20:57:45.232 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-10-25 20:57:45.233 -04:00 [DBG] Start key discovery request
2020-10-25 21:12:13.190 -04:00 [INF] Starting host...
2020-10-25 21:12:14.288 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-10-25 21:12:14.372 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-25 21:12:14.372 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-25 21:12:14.372 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-25 21:12:14.372 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-25 21:12:14.372 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-25 21:12:14.372 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-25 21:12:14.531 -04:00 [DBG] Login Url: /Account/Login
2020-10-25 21:12:14.532 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-25 21:12:14.532 -04:00 [DBG] Logout Url: /Account/Logout
2020-10-25 21:12:14.532 -04:00 [DBG] ConsentUrl Url: /consent
2020-10-25 21:12:14.532 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-10-25 21:12:14.532 -04:00 [DBG] Error Url: /home/error
2020-10-25 21:12:14.533 -04:00 [DBG] Error Id Parameter: errorId
2020-10-25 21:12:21.759 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-25 21:12:21.773 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-25 21:12:21.773 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-25 21:12:21.775 -04:00 [DBG] Start token request.
2020-10-25 21:12:21.776 -04:00 [DBG] Start client validation
2020-10-25 21:12:21.779 -04:00 [DBG] Start parsing Basic Authentication secret
2020-10-25 21:12:21.780 -04:00 [DBG] Start parsing for secret in post body
2020-10-25 21:12:21.785 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-10-25 21:12:21.785 -04:00 [DBG] Secret id found: devkit-clients-credential.employeeprofileapi
2020-10-25 21:12:23.361 -04:00 [DBG] devkit-clients-credential.employeeprofileapi found in database: true
2020-10-25 21:12:23.366 -04:00 [DBG] client configuration validation for client devkit-clients-credential.employeeprofileapi succeeded.
2020-10-25 21:12:23.372 -04:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-10-25 21:12:23.372 -04:00 [DBG] Client validation success
2020-10-25 21:12:23.378 -04:00 [INF] {"ClientId":"devkit-clients-credential.employeeprofileapi","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000000b-000a-fe00-b63f-84710c7967bb","TimeStamp":"2020-10-26T01:12:23.0000000Z","ProcessId":13076,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-25 21:12:23.383 -04:00 [DBG] Start token request validation
2020-10-25 21:12:23.386 -04:00 [DBG] Start client credentials token request validation
2020-10-25 21:12:23.456 -04:00 [DBG] Found [] identity scopes in database
2020-10-25 21:12:23.533 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-10-25 21:12:23.555 -04:00 [DBG] Found [] identity scopes in database
2020-10-25 21:12:23.570 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-10-25 21:12:23.573 -04:00 [DBG] devkit-clients-credential.employeeprofileapi credentials token request validation success
2020-10-25 21:12:23.577 -04:00 [INF] Token request validation success, {"ClientId":"devkit-clients-credential.employeeprofileapi","ClientName":"Sample Client Credential Employee Profile API","GrantType":"client_credentials","Scopes":"app.api.employeeprofile.read app.api.employeeprofile.write","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"devkit-clients-credential.employeeprofileapi","client_secret":"***REDACTED***","grant_type":"client_credentials","scope":"app.api.employeeprofile.read app.api.employeeprofile.write"},"$type":"TokenRequestValidationLog"}
2020-10-25 21:12:23.588 -04:00 [DBG] Getting claims for access token for client: devkit-clients-credential.employeeprofileapi
2020-10-25 21:12:23.646 -04:00 [INF] {"ClientId":"devkit-clients-credential.employeeprofileapi","ClientName":"Sample Client Credential Employee Profile API","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"app.api.employeeprofile.read app.api.employeeprofile.write","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****QT_g","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000000b-000a-fe00-b63f-84710c7967bb","TimeStamp":"2020-10-26T01:12:23.0000000Z","ProcessId":13076,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-25 21:12:23.646 -04:00 [DBG] Token request success.
2020-10-25 21:15:49.405 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-25 21:15:49.412 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-25 21:15:49.412 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-25 21:15:49.412 -04:00 [DBG] Start token request.
2020-10-25 21:15:49.412 -04:00 [DBG] Start client validation
2020-10-25 21:15:49.412 -04:00 [DBG] Start parsing Basic Authentication secret
2020-10-25 21:15:49.412 -04:00 [DBG] Start parsing for secret in post body
2020-10-25 21:15:49.412 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-10-25 21:15:49.412 -04:00 [DBG] Secret id found: devkit-clients-credential.employeeprofileapi
2020-10-25 21:15:49.564 -04:00 [DBG] devkit-clients-credential.employeeprofileapi found in database: true
2020-10-25 21:15:49.564 -04:00 [DBG] client configuration validation for client devkit-clients-credential.employeeprofileapi succeeded.
2020-10-25 21:15:49.564 -04:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-10-25 21:15:49.564 -04:00 [DBG] Client validation success
2020-10-25 21:15:49.565 -04:00 [INF] {"ClientId":"devkit-clients-credential.employeeprofileapi","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000032-0002-ff00-b63f-84710c7967bb","TimeStamp":"2020-10-26T01:15:49.0000000Z","ProcessId":13076,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-25 21:15:49.565 -04:00 [DBG] Start token request validation
2020-10-25 21:15:49.565 -04:00 [DBG] Start client credentials token request validation
2020-10-25 21:15:49.580 -04:00 [DBG] Found [] identity scopes in database
2020-10-25 21:15:49.591 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-10-25 21:15:49.603 -04:00 [DBG] Found [] identity scopes in database
2020-10-25 21:15:49.618 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-10-25 21:15:49.619 -04:00 [DBG] devkit-clients-credential.employeeprofileapi credentials token request validation success
2020-10-25 21:15:49.619 -04:00 [INF] Token request validation success, {"ClientId":"devkit-clients-credential.employeeprofileapi","ClientName":"Sample Client Credential Employee Profile API","GrantType":"client_credentials","Scopes":"app.api.employeeprofile.read app.api.employeeprofile.write","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"devkit-clients-credential.employeeprofileapi","client_secret":"***REDACTED***","grant_type":"client_credentials","scope":"app.api.employeeprofile.read app.api.employeeprofile.write"},"$type":"TokenRequestValidationLog"}
2020-10-25 21:15:49.619 -04:00 [DBG] Getting claims for access token for client: devkit-clients-credential.employeeprofileapi
2020-10-25 21:15:49.620 -04:00 [INF] {"ClientId":"devkit-clients-credential.employeeprofileapi","ClientName":"Sample Client Credential Employee Profile API","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"app.api.employeeprofile.read app.api.employeeprofile.write","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****vNWA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000032-0002-ff00-b63f-84710c7967bb","TimeStamp":"2020-10-26T01:15:49.0000000Z","ProcessId":13076,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-25 21:15:49.620 -04:00 [DBG] Token request success.
2020-10-25 21:19:15.183 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-25 21:19:15.199 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-25 21:19:15.199 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-25 21:19:15.199 -04:00 [DBG] Start token request.
2020-10-25 21:19:15.199 -04:00 [DBG] Start client validation
2020-10-25 21:19:15.199 -04:00 [DBG] Start parsing Basic Authentication secret
2020-10-25 21:19:15.199 -04:00 [DBG] Start parsing for secret in post body
2020-10-25 21:19:15.200 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-10-25 21:19:15.200 -04:00 [DBG] Secret id found: devkit-clients-credential.employeeprofileapi
2020-10-25 21:19:15.332 -04:00 [DBG] devkit-clients-credential.employeeprofileapi found in database: true
2020-10-25 21:19:15.332 -04:00 [DBG] client configuration validation for client devkit-clients-credential.employeeprofileapi succeeded.
2020-10-25 21:19:15.332 -04:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-10-25 21:19:15.332 -04:00 [DBG] Client validation success
2020-10-25 21:19:15.332 -04:00 [INF] {"ClientId":"devkit-clients-credential.employeeprofileapi","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"8000002a-0004-fb00-b63f-84710c7967bb","TimeStamp":"2020-10-26T01:19:15.0000000Z","ProcessId":13076,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-25 21:19:15.332 -04:00 [DBG] Start token request validation
2020-10-25 21:19:15.332 -04:00 [DBG] Start client credentials token request validation
2020-10-25 21:19:15.346 -04:00 [DBG] Found [] identity scopes in database
2020-10-25 21:19:15.361 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-10-25 21:19:15.373 -04:00 [DBG] Found [] identity scopes in database
2020-10-25 21:19:15.385 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-10-25 21:19:15.385 -04:00 [DBG] devkit-clients-credential.employeeprofileapi credentials token request validation success
2020-10-25 21:19:15.385 -04:00 [INF] Token request validation success, {"ClientId":"devkit-clients-credential.employeeprofileapi","ClientName":"Sample Client Credential Employee Profile API","GrantType":"client_credentials","Scopes":"app.api.employeeprofile.read app.api.employeeprofile.write","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"devkit-clients-credential.employeeprofileapi","client_secret":"***REDACTED***","grant_type":"client_credentials","scope":"app.api.employeeprofile.read app.api.employeeprofile.write"},"$type":"TokenRequestValidationLog"}
2020-10-25 21:19:15.385 -04:00 [DBG] Getting claims for access token for client: devkit-clients-credential.employeeprofileapi
2020-10-25 21:19:15.387 -04:00 [INF] {"ClientId":"devkit-clients-credential.employeeprofileapi","ClientName":"Sample Client Credential Employee Profile API","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"app.api.employeeprofile.read app.api.employeeprofile.write","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****sHPw","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"8000002a-0004-fb00-b63f-84710c7967bb","TimeStamp":"2020-10-26T01:19:15.0000000Z","ProcessId":13076,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-25 21:19:15.387 -04:00 [DBG] Token request success.
2020-10-25 21:22:28.551 -04:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2020-10-25 21:22:35.577 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-25 21:22:35.696 -04:00 [WRN] Invalid password for user 34903727-3397-4344-9875-47f5e36788d3.
2020-10-25 21:22:35.697 -04:00 [WRN] User 34903727-3397-4344-9875-47f5e36788d3 failed to provide the correct password.
2020-10-25 21:22:35.892 -04:00 [INF] {"Username":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"80000016-0002-fe00-b63f-84710c7967bb","TimeStamp":"2020-10-26T01:22:35.0000000Z","ProcessId":13076,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2020-10-25 21:22:57.435 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-25 21:22:57.454 -04:00 [WRN] Invalid password for user 34903727-3397-4344-9875-47f5e36788d3.
2020-10-25 21:22:57.454 -04:00 [WRN] User 34903727-3397-4344-9875-47f5e36788d3 failed to provide the correct password.
2020-10-25 21:22:57.547 -04:00 [INF] {"Username":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Failure","EventType":"Failure","Id":1001,"Message":"invalid credentials","ActivityId":"80000012-0006-ff00-b63f-84710c7967bb","TimeStamp":"2020-10-26T01:22:57.0000000Z","ProcessId":13076,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginFailureEvent"}
2020-10-25 21:23:16.238 -04:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-25 21:23:16.455 -04:00 [DBG] Augmenting SignInContext
2020-10-25 21:23:16.456 -04:00 [DBG] Adding idp claim with value: local
2020-10-25 21:23:16.456 -04:00 [DBG] Adding auth_time claim with value: 1603675396
2020-10-25 21:23:16.461 -04:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-10-25 21:23:16.474 -04:00 [INF] {"Username":"admin","Provider":null,"ProviderUserId":null,"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Endpoint":"UI","ClientId":null,"Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"80000006-0000-fc00-b63f-84710c7967bb","TimeStamp":"2020-10-26T01:23:16.0000000Z","ProcessId":13076,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-10-25 21:23:16.513 -04:00 [DBG] 3 persisted grants found for 34903727-3397-4344-9875-47f5e36788d3
2020-10-25 21:23:16.659 -04:00 [DBG] STSClientId found in database: true
2020-10-25 21:23:16.659 -04:00 [DBG] client configuration validation for client STSClientId succeeded.
2020-10-25 21:23:16.674 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-10-25 21:23:16.698 -04:00 [DBG] Found [] API scopes in database
2020-10-25 21:23:16.836 -04:00 [DBG] devkit-clients-spa.pkce found in database: true
2020-10-25 21:23:16.837 -04:00 [DBG] client configuration validation for client devkit-clients-spa.pkce succeeded.
2020-10-25 21:23:16.856 -04:00 [DBG] Found ["roles","openid","profile","email"] identity scopes in database
2020-10-25 21:23:16.885 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-10-25 21:23:57.479 -04:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-10-25 21:23:57.491 -04:00 [INF] AuthenticationScheme: Identity.Application signed out.
2020-10-25 21:23:57.491 -04:00 [INF] AuthenticationScheme: Identity.External signed out.
2020-10-25 21:23:57.491 -04:00 [INF] AuthenticationScheme: Identity.TwoFactorUserId signed out.
2020-10-25 21:23:57.492 -04:00 [INF] {"SubjectId":"34903727-3397-4344-9875-47f5e36788d3","DisplayName":"admin","Category":"Authentication","Name":"User Logout Success","EventType":"Success","Id":1002,"Message":null,"ActivityId":"80000009-0004-ff00-b63f-84710c7967bb","TimeStamp":"2020-10-26T01:23:57.0000000Z","ProcessId":13076,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"UserLogoutSuccessEvent"}
2020-10-25 21:39:18.838 -04:00 [INF] Starting host...
2020-10-25 21:39:19.841 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-10-25 21:39:19.925 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-25 21:39:19.925 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-25 21:39:19.925 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-25 21:39:19.925 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-25 21:39:19.925 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-25 21:39:19.925 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-25 21:39:20.095 -04:00 [DBG] Login Url: /Account/Login
2020-10-25 21:39:20.095 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-25 21:39:20.096 -04:00 [DBG] Logout Url: /Account/Logout
2020-10-25 21:39:20.096 -04:00 [DBG] ConsentUrl Url: /consent
2020-10-25 21:39:20.096 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-10-25 21:39:20.096 -04:00 [DBG] Error Url: /home/error
2020-10-25 21:39:20.096 -04:00 [DBG] Error Id Parameter: errorId
2020-10-25 21:39:34.132 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-25 21:39:34.146 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-25 21:39:34.146 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-25 21:39:34.149 -04:00 [DBG] Start token request.
2020-10-25 21:39:34.150 -04:00 [DBG] Start client validation
2020-10-25 21:39:34.153 -04:00 [DBG] Start parsing Basic Authentication secret
2020-10-25 21:39:34.154 -04:00 [DBG] Start parsing for secret in post body
2020-10-25 21:39:34.161 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-10-25 21:39:34.161 -04:00 [DBG] Secret id found: devkit-clients-credential.employeeprofileapi
2020-10-25 21:39:35.612 -04:00 [DBG] devkit-clients-credential.employeeprofileapi found in database: true
2020-10-25 21:39:35.617 -04:00 [DBG] client configuration validation for client devkit-clients-credential.employeeprofileapi succeeded.
2020-10-25 21:39:35.622 -04:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-10-25 21:39:35.622 -04:00 [DBG] Client validation success
2020-10-25 21:39:35.629 -04:00 [INF] {"ClientId":"devkit-clients-credential.employeeprofileapi","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000024-0008-fe00-b63f-84710c7967bb","TimeStamp":"2020-10-26T01:39:35.0000000Z","ProcessId":23044,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-25 21:39:35.634 -04:00 [DBG] Start token request validation
2020-10-25 21:39:35.636 -04:00 [DBG] Start client credentials token request validation
2020-10-25 21:39:35.705 -04:00 [DBG] Found [] identity scopes in database
2020-10-25 21:39:35.789 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-10-25 21:39:35.813 -04:00 [DBG] Found [] identity scopes in database
2020-10-25 21:39:35.825 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-10-25 21:39:35.828 -04:00 [DBG] devkit-clients-credential.employeeprofileapi credentials token request validation success
2020-10-25 21:39:35.834 -04:00 [INF] Token request validation success, {"ClientId":"devkit-clients-credential.employeeprofileapi","ClientName":"Sample Client Credential Employee Profile API","GrantType":"client_credentials","Scopes":"app.api.employeeprofile.read app.api.employeeprofile.write","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"devkit-clients-credential.employeeprofileapi","client_secret":"***REDACTED***","grant_type":"client_credentials","scope":"app.api.employeeprofile.read app.api.employeeprofile.write"},"$type":"TokenRequestValidationLog"}
2020-10-25 21:39:35.847 -04:00 [DBG] Getting claims for access token for client: devkit-clients-credential.employeeprofileapi
2020-10-25 21:39:35.904 -04:00 [INF] {"ClientId":"devkit-clients-credential.employeeprofileapi","ClientName":"Sample Client Credential Employee Profile API","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"app.api.employeeprofile.read app.api.employeeprofile.write","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****rVGA","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000024-0008-fe00-b63f-84710c7967bb","TimeStamp":"2020-10-26T01:39:35.0000000Z","ProcessId":23044,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-25 21:39:35.905 -04:00 [DBG] Token request success.
2020-10-25 21:46:29.124 -04:00 [INF] Starting host...
2020-10-25 21:46:30.134 -04:00 [INF] Starting IdentityServer4 version 3.1.4.0
2020-10-25 21:46:30.217 -04:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-10-25 21:46:30.218 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-10-25 21:46:30.218 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-10-25 21:46:30.218 -04:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-10-25 21:46:30.218 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-10-25 21:46:30.218 -04:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-10-25 21:46:30.381 -04:00 [DBG] Login Url: /Account/Login
2020-10-25 21:46:30.382 -04:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-10-25 21:46:30.382 -04:00 [DBG] Logout Url: /Account/Logout
2020-10-25 21:46:30.382 -04:00 [DBG] ConsentUrl Url: /consent
2020-10-25 21:46:30.382 -04:00 [DBG] Consent Return Url Parameter: returnUrl
2020-10-25 21:46:30.382 -04:00 [DBG] Error Url: /home/error
2020-10-25 21:46:30.382 -04:00 [DBG] Error Id Parameter: errorId
2020-10-25 21:46:39.545 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-25 21:46:39.561 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-25 21:46:39.561 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-25 21:46:39.563 -04:00 [DBG] Start token request.
2020-10-25 21:46:39.564 -04:00 [DBG] Start client validation
2020-10-25 21:46:39.567 -04:00 [DBG] Start parsing Basic Authentication secret
2020-10-25 21:46:39.568 -04:00 [DBG] Start parsing for secret in post body
2020-10-25 21:46:39.575 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-10-25 21:46:39.575 -04:00 [DBG] Secret id found: devkit-clients-credential.employeeprofileapi
2020-10-25 21:46:41.063 -04:00 [DBG] devkit-clients-credential.employeeprofileapi found in database: true
2020-10-25 21:46:41.068 -04:00 [DBG] client configuration validation for client devkit-clients-credential.employeeprofileapi succeeded.
2020-10-25 21:46:41.074 -04:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-10-25 21:46:41.074 -04:00 [DBG] Client validation success
2020-10-25 21:46:41.080 -04:00 [INF] {"ClientId":"devkit-clients-credential.employeeprofileapi","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000005-0007-ff00-b63f-84710c7967bb","TimeStamp":"2020-10-26T01:46:41.0000000Z","ProcessId":21696,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-25 21:46:41.085 -04:00 [DBG] Start token request validation
2020-10-25 21:46:41.088 -04:00 [DBG] Start client credentials token request validation
2020-10-25 21:46:41.159 -04:00 [DBG] Found [] identity scopes in database
2020-10-25 21:46:41.235 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-10-25 21:46:41.257 -04:00 [DBG] Found [] identity scopes in database
2020-10-25 21:46:41.268 -04:00 [DBG] Found ["app.api.employeeprofile.read","app.api.employeeprofile.write"] API scopes in database
2020-10-25 21:46:41.271 -04:00 [DBG] devkit-clients-credential.employeeprofileapi credentials token request validation success
2020-10-25 21:46:41.276 -04:00 [INF] Token request validation success, {"ClientId":"devkit-clients-credential.employeeprofileapi","ClientName":"Sample Client Credential Employee Profile API","GrantType":"client_credentials","Scopes":"app.api.employeeprofile.read app.api.employeeprofile.write","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"devkit-clients-credential.employeeprofileapi","client_secret":"***REDACTED***","grant_type":"client_credentials","scope":"app.api.employeeprofile.read app.api.employeeprofile.write"},"$type":"TokenRequestValidationLog"}
2020-10-25 21:46:41.286 -04:00 [DBG] Getting claims for access token for client: devkit-clients-credential.employeeprofileapi
2020-10-25 21:46:41.342 -04:00 [INF] {"ClientId":"devkit-clients-credential.employeeprofileapi","ClientName":"Sample Client Credential Employee Profile API","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"app.api.employeeprofile.read app.api.employeeprofile.write","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****wDTg","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000005-0007-ff00-b63f-84710c7967bb","TimeStamp":"2020-10-26T01:46:41.0000000Z","ProcessId":21696,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-25 21:46:41.342 -04:00 [DBG] Token request success.
2020-10-25 21:53:35.085 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-25 21:53:35.089 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-25 21:53:35.089 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-25 21:53:35.090 -04:00 [DBG] Start discovery request
2020-10-25 21:53:35.374 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write","app.api.instantpos.read","app.api.instantpos.write"] as all scopes in database
2020-10-25 21:53:35.415 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-10-25 21:53:35.416 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-10-25 21:53:35.416 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-10-25 21:53:35.417 -04:00 [DBG] Start key discovery request
2020-10-25 22:02:02.287 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-25 22:02:02.292 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-25 22:02:02.293 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-25 22:02:02.293 -04:00 [DBG] Start discovery request
2020-10-25 22:02:02.512 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write","app.api.instantpos.read","app.api.instantpos.write"] as all scopes in database
2020-10-25 22:02:02.647 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-10-25 22:02:02.647 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-10-25 22:02:02.647 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-10-25 22:02:02.647 -04:00 [DBG] Start key discovery request
2020-10-25 22:02:56.058 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-25 22:02:56.068 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-25 22:02:56.068 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-25 22:02:56.068 -04:00 [DBG] Start discovery request
2020-10-25 22:02:56.097 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write","app.api.instantpos.read","app.api.instantpos.write"] as all scopes in database
2020-10-25 22:02:56.125 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-10-25 22:02:56.126 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-10-25 22:02:56.126 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-10-25 22:02:56.126 -04:00 [DBG] Start key discovery request
2020-10-25 22:03:45.987 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-10-25 22:03:45.988 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-10-25 22:03:45.988 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-10-25 22:03:45.988 -04:00 [DBG] Start key discovery request
2020-10-25 22:07:26.258 -04:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-10-25 22:07:26.258 -04:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-10-25 22:07:26.258 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-10-25 22:07:26.258 -04:00 [DBG] Start token request.
2020-10-25 22:07:26.259 -04:00 [DBG] Start client validation
2020-10-25 22:07:26.259 -04:00 [DBG] Start parsing Basic Authentication secret
2020-10-25 22:07:26.259 -04:00 [DBG] Start parsing for secret in post body
2020-10-25 22:07:26.259 -04:00 [DBG] Parser found secret: PostBodySecretParser
2020-10-25 22:07:26.260 -04:00 [DBG] Secret id found: devkit-clients-credential.instantpos
2020-10-25 22:07:26.417 -04:00 [DBG] devkit-clients-credential.instantpos found in database: true
2020-10-25 22:07:26.417 -04:00 [DBG] client configuration validation for client devkit-clients-credential.instantpos succeeded.
2020-10-25 22:07:26.417 -04:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-10-25 22:07:26.417 -04:00 [DBG] Client validation success
2020-10-25 22:07:26.418 -04:00 [INF] {"ClientId":"devkit-clients-credential.instantpos","AuthenticationMethod":"SharedSecret","Category":"Authentication","Name":"Client Authentication Success","EventType":"Success","Id":1010,"Message":null,"ActivityId":"80000002-000a-fd00-b63f-84710c7967bb","TimeStamp":"2020-10-26T02:07:26.0000000Z","ProcessId":21696,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"ClientAuthenticationSuccessEvent"}
2020-10-25 22:07:26.418 -04:00 [DBG] Start token request validation
2020-10-25 22:07:26.418 -04:00 [DBG] Start client credentials token request validation
2020-10-25 22:07:26.432 -04:00 [DBG] Found [] identity scopes in database
2020-10-25 22:07:26.445 -04:00 [DBG] Found ["app.api.instantpos.read","app.api.instantpos.write"] API scopes in database
2020-10-25 22:07:26.457 -04:00 [DBG] Found [] identity scopes in database
2020-10-25 22:07:26.477 -04:00 [DBG] Found ["app.api.instantpos.read","app.api.instantpos.write"] API scopes in database
2020-10-25 22:07:26.477 -04:00 [DBG] devkit-clients-credential.instantpos credentials token request validation success
2020-10-25 22:07:26.477 -04:00 [INF] Token request validation success, {"ClientId":"devkit-clients-credential.instantpos","ClientName":"Sample Client Credential InstantPOS","GrantType":"client_credentials","Scopes":"app.api.instantpos.read app.api.instantpos.write","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"client_id":"devkit-clients-credential.instantpos","client_secret":"***REDACTED***","grant_type":"client_credentials","scope":"app.api.instantpos.read app.api.instantpos.write"},"$type":"TokenRequestValidationLog"}
2020-10-25 22:07:26.477 -04:00 [DBG] Getting claims for access token for client: devkit-clients-credential.instantpos
2020-10-25 22:07:26.478 -04:00 [INF] {"ClientId":"devkit-clients-credential.instantpos","ClientName":"Sample Client Credential InstantPOS","RedirectUri":null,"Endpoint":"Token","SubjectId":null,"Scopes":"app.api.instantpos.read app.api.instantpos.write","GrantType":"client_credentials","Tokens":[{"TokenType":"access_token","TokenValue":"****KJbQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"80000002-000a-fd00-b63f-84710c7967bb","TimeStamp":"2020-10-26T02:07:26.0000000Z","ProcessId":21696,"LocalIpAddress":"::1:44354","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-10-25 22:07:26.479 -04:00 [DBG] Token request success.
2020-10-25 22:18:46.950 -04:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-10-25 22:18:46.950 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-10-25 22:18:46.950 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-10-25 22:18:46.950 -04:00 [DBG] Start discovery request
2020-10-25 22:18:47.178 -04:00 [DBG] Found ["roles","openid","profile","email","address","STSClientId_api","app.api.employeeprofile.read","app.api.employeeprofile.write","app.api.instantpos.read","app.api.instantpos.write"] as all scopes in database
2020-10-25 22:18:47.310 -04:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-10-25 22:18:47.310 -04:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-10-25 22:18:47.310 -04:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-10-25 22:18:47.310 -04:00 [DBG] Start key discovery request
2020-10-25 22:46:30.441 -04:00 [INF] Removing 0 grants
2020-10-25 22:46:30.458 -04:00 [INF] Removing 0 device flow codes
